/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:TypeAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_TYPEAST_AST
#define VCZH_PARSER2_PARSERGEN_TYPEAST_AST

#include "../AstBase.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			class GlrClass;
			class GlrClassProp;
			class GlrEnum;
			class GlrEnumItem;
			class GlrFile;
			class GlrType;

			enum class GlrPropType
			{
				Token = 0,
				Type = 1,
				Array = 2,
			};

			class GlrType abstract : public vl::glr::ParsingAstBase, vl::reflection::Description<GlrType>
			{
			public:
				class IVisitor : public virtual vl::reflection::IDescriptable, vl::reflection::Description<IVisitor>
				{
				public:
					virtual void Visit(GlrEnum* node) = 0;
					virtual void Visit(GlrClass* node) = 0;
				};

				virtual void Accept(GlrType::IVisitor* visitor) = 0;

				vl::glr::ParsingToken name;
			};

			class GlrEnumItem : public vl::glr::ParsingAstBase, vl::reflection::Description<GlrEnumItem>
			{
			public:
				vl::glr::ParsingToken name;
			};

			class GlrEnum : public GlrType, vl::reflection::Description<GlrEnum>
			{
			public:
				vl::collections::List<vl::Ptr<GlrEnumItem>> items;

				void Accept(GlrType::IVisitor* visitor) override;
			};

			class GlrClassProp : public vl::glr::ParsingAstBase, vl::reflection::Description<GlrClassProp>
			{
			public:
				vl::glr::ParsingToken name;
				GlrPropType propType;
				vl::glr::ParsingToken propTypeName;
			};

			class GlrClass : public GlrType, vl::reflection::Description<GlrClass>
			{
			public:
				vl::collections::List<vl::Ptr<GlrClassProp>> props;

				void Accept(GlrType::IVisitor* visitor) override;
			};

			class GlrFile : public vl::glr::ParsingAstBase, vl::reflection::Description<GlrFile>
			{
			public:
				vl::glr::ParsingToken name;
				vl::collections::List<vl::Ptr<GlrType>> types;
			};
		}
	}
}
namespace vl
{
	namespace reflection
	{
		namespace description
		{
#ifndef VCZH_DEBUG_NO_REFLECTION
			DECL_TYPE_INFO(vl::glr::parsergen::GlrType)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrType::IVisitor)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrEnumItem)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrEnum)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrPropType)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrClassProp)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrClass)
			DECL_TYPE_INFO(vl::glr::parsergen::GlrFile)

#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA

			BEGIN_INTERFACE_PROXY_NOPARENT_SHAREDPTR(vl::glr::parsergen::GlrType::IVisitor)
				void Visit(vl::glr::parsergen::GlrEnum* node) override
				{
					INVOKE_INTERFACE_PROXY(Visit, node);
				}

				void Visit(vl::glr::parsergen::GlrClass* node) override
				{
					INVOKE_INTERFACE_PROXY(Visit, node);
				}

			END_INTERFACE_PROXY(vl::glr::parsergen::GlrType::IVisitor)

#endif
#endif
			/// <summary>Load all reflectable AST types, only available when <b>VCZH_DEBUG_NO_REFLECTION</b> is off.</summary>
			/// <returns>Returns true if this operation succeeded.</returns>
			extern bool GlrTypeAstLoadTypes();
		}
	}
}
#endif