/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:TypeAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_TYPEAST_AST_COPYVISITOR
#define VCZH_PARSER2_PARSERGEN_TYPEAST_AST_COPYVISITOR

#include "../AstBase.h"
#include "ParserGenTypeAst.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			namespace copy_visitor
			{
				/// <summary>A copy visitor, overriding all abstract methods with AST copying code.</summary>
				class TypeAstVisitor
	: public virtual vl::glr::CopyVisitorBase
					, protected virtual GlrType::IVisitor
				{
				protected:
					void CopyFields(GlrClass* from, GlrClass* to);
					void CopyFields(GlrClassProp* from, GlrClassProp* to);
					void CopyFields(GlrEnum* from, GlrEnum* to);
					void CopyFields(GlrEnumItem* from, GlrEnumItem* to);
					void CopyFields(GlrFile* from, GlrFile* to);
					void CopyFields(GlrType* from, GlrType* to);

				protected:
					void Visit(GlrEnum* node) override;
					void Visit(GlrClass* node) override;

				public:
					virtual vl::Ptr<GlrType> CopyNode(GlrType* node);
					virtual vl::Ptr<GlrEnumItem> CopyNode(GlrEnumItem* node);
					virtual vl::Ptr<GlrClassProp> CopyNode(GlrClassProp* node);
					virtual vl::Ptr<GlrFile> CopyNode(GlrFile* node);
				};
			}
		}
	}
}
#endif