/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:TypeAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_TYPEAST_AST_COPYVISITOR
#define VCZH_PARSER2_PARSERGEN_TYPEAST_AST_COPYVISITOR

#include "../AstBase.h"
#include "ParserGenTypeAst.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			namespace copy_visitor
			{
				/// <summary>A copy visitor, overriding all abstract methods with AST copying code.</summary>
				class TypeVisitor : public virtual vl::glr::CopyVisitorBase, public GlrType::IVisitor
				{
				protected:
					// CopyFields ----------------------------------------
					void CopyFields(GlrType* from, GlrType* to);
					void CopyFields(GlrEnum* from, GlrEnum* to);
					void CopyFields(GlrEnumItem* from, GlrEnumItem* to);
					void CopyFields(GlrClass* from, GlrClass* to);
					void CopyFields(GlrClassProp* from, GlrClassProp* to);

					// CreateField ---------------------------------------
					vl::Ptr<GlrEnumItem> CreateField(vl::Ptr<GlrEnumItem> from);
					vl::Ptr<GlrClassProp> CreateField(vl::Ptr<GlrClassProp> from);

					// CreateField (virtual) -----------------------------

					// Dispatch (virtual) --------------------------------

				public:
					// Visitor Members -----------------------------------
					void Visit(GlrEnum* node) override;
					void Visit(GlrClass* node) override;
				};

			}
		}
	}
}
#endif