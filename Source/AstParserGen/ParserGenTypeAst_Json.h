/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:TypeAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_TYPEAST_AST_JSONVISITOR
#define VCZH_PARSER2_PARSERGEN_TYPEAST_AST_JSONVISITOR

#include "../AstBase.h"
#include "ParserGenTypeAst.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			namespace json_visitor
			{
				/// <summary>A JSON visitor, overriding all abstract methods with AST to JSON serialization code.</summary>
				class TypeAstVisitor
					: public vl::glr::JsonVisitorBase
					, protected virtual GlrType::IVisitor
				{
				protected:
					virtual void PrintFields(GlrClass* from, GlrClass* to);
					virtual void PrintFields(GlrClassProp* from, GlrClassProp* to);
					virtual void PrintFields(GlrEnum* from, GlrEnum* to);
					virtual void PrintFields(GlrEnumItem* from, GlrEnumItem* to);
					virtual void PrintFields(GlrFile* from, GlrFile* to);
					virtual void PrintFields(GlrType* from, GlrType* to);

				protected:
					void Visit(GlrEnum* node) override;
					void Visit(GlrClass* node) override;

				public:
					TypeAstVisitor(vl::stream::StreamWriter& _writer);

					void Print(GlrType* node);
					void Print(GlrEnumItem* node);
					void Print(GlrClassProp* node);
					void Print(GlrFile* node);
				};
			}
		}
	}
}
#endif