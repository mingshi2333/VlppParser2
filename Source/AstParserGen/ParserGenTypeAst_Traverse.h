/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:TypeAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_TYPEAST_AST_TRAVERSEVISITOR
#define VCZH_PARSER2_PARSERGEN_TYPEAST_AST_TRAVERSEVISITOR

#include "../AstBase.h"
#include "ParserGenTypeAst.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			namespace traverse_visitor
			{
				/// <summary>A traverse visitor, overriding all abstract methods with AST visiting code.</summary>
				class TypeAstVisitor
					: public vl::Object
					, protected virtual GlrType::IVisitor
				{
				protected:
					virtual void Traverse(vl::glr::ParsingToken& token);
					virtual void Traverse(vl::glr::ParsingAstBase* node);
					virtual void Traverse(GlrClass* from, GlrClass* to);
					virtual void Traverse(GlrClassProp* from, GlrClassProp* to);
					virtual void Traverse(GlrEnum* from, GlrEnum* to);
					virtual void Traverse(GlrEnumItem* from, GlrEnumItem* to);
					virtual void Traverse(GlrFile* from, GlrFile* to);
					virtual void Traverse(GlrType* from, GlrType* to);

				protected:
					virtual void Finishing(vl::glr::ParsingAstBase* node);
					virtual void Finishing(GlrClass* from, GlrClass* to);
					virtual void Finishing(GlrClassProp* from, GlrClassProp* to);
					virtual void Finishing(GlrEnum* from, GlrEnum* to);
					virtual void Finishing(GlrEnumItem* from, GlrEnumItem* to);
					virtual void Finishing(GlrFile* from, GlrFile* to);
					virtual void Finishing(GlrType* from, GlrType* to);

				protected:
					void Visit(GlrEnum* node) override;
					void Visit(GlrClass* node) override;

				public:
					void InspectInto(GlrType* node);
					void InspectInto(GlrEnumItem* node);
					void InspectInto(GlrClassProp* node);
					void InspectInto(GlrFile* node);
				};
			}
		}
	}
}
#endif