/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGen_RootCopy.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			namespace copy_visitor
			{

				// CopyFields ----------------------------------------

				void ParserGenRootCopyVisitor::CopyFields(vl::glr::parsergen::GlrClassProp* from, vl::glr::parsergen::GlrClassProp* to)
				{
					to->name = from->name;
					to->propType = from->propType;
					to->propTypeName = from->propTypeName;
				}

				void ParserGenRootCopyVisitor::CopyFields(vl::glr::parsergen::GlrEnumItem* from, vl::glr::parsergen::GlrEnumItem* to)
				{
					to->name = from->name;
				}

				void ParserGenRootCopyVisitor::CopyFields(vl::glr::parsergen::GlrFile* from, vl::glr::parsergen::GlrFile* to)
				{
					to->name = from->name;
					for (auto listItem : from->types)
					{
						to->types.Add(CreateField(listItem));
					}
				}

				// Dispatch (virtual) --------------------------------

				// CreateField ---------------------------------------

				vl::Ptr<vl::glr::parsergen::GlrClassProp> ParserGenRootCopyVisitor::CreateField(vl::Ptr<vl::glr::parsergen::GlrClassProp> from)
				{
					if (!from) return nullptr;
					auto to = vl::MakePtr<vl::glr::parsergen::GlrClassProp>();
					CopyFields(from.Obj(), to.Obj());
					return to;
				}

				vl::Ptr<vl::glr::parsergen::GlrEnumItem> ParserGenRootCopyVisitor::CreateField(vl::Ptr<vl::glr::parsergen::GlrEnumItem> from)
				{
					if (!from) return nullptr;
					auto to = vl::MakePtr<vl::glr::parsergen::GlrEnumItem>();
					CopyFields(from.Obj(), to.Obj());
					return to;
				}

				vl::Ptr<vl::glr::parsergen::GlrFile> ParserGenRootCopyVisitor::CreateField(vl::Ptr<vl::glr::parsergen::GlrFile> from)
				{
					if (!from) return nullptr;
					auto to = vl::MakePtr<vl::glr::parsergen::GlrFile>();
					CopyFields(from.Obj(), to.Obj());
					return to;
				}

				vl::Ptr<vl::glr::parsergen::GlrType> ParserGenRootCopyVisitor::CreateField(vl::Ptr<vl::glr::parsergen::GlrType> from)
				{
					if (!from) return nullptr;
					auto to = vl::MakePtr<vl::glr::parsergen::GlrType>();
					CopyFields(from.Obj(), to.Obj());
					return to;
				}

				// Visitor Members -----------------------------------

				void ParserGenRootCopyVisitor::Visit(vl::glr::parsergen::GlrClassProp* node)
				{
					auto newNode = vl::MakePtr<vl::glr::parsergen::GlrClassProp>();
					CopyFields(node, newNode.Obj());
					this->result = newNode;
				}

				void ParserGenRootCopyVisitor::Visit(vl::glr::parsergen::GlrEnumItem* node)
				{
					auto newNode = vl::MakePtr<vl::glr::parsergen::GlrEnumItem>();
					CopyFields(node, newNode.Obj());
					this->result = newNode;
				}

				void ParserGenRootCopyVisitor::Visit(vl::glr::parsergen::GlrFile* node)
				{
					auto newNode = vl::MakePtr<vl::glr::parsergen::GlrFile>();
					CopyFields(node, newNode.Obj());
					this->result = newNode;
				}
			}
		}
	}
}
