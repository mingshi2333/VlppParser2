/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:JsonAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "JsonJsonAst_Builder.h"

namespace vl
{
	namespace glr
	{
		namespace json
		{
			namespace builder
			{

/***********************************************************************
ArrayBuilder
***********************************************************************/

				ArrayBuilder& ArrayBuilder::items(const vl::Ptr<JsonNode>& value)
				{
					node->items.Add(value);
					return *this;
				}

/***********************************************************************
LiteralBuilder
***********************************************************************/

				LiteralBuilder& LiteralBuilder::value(JsonLiteralValue value)
				{
					node->value = value;
					return *this;
				}

/***********************************************************************
NumberBuilder
***********************************************************************/

				NumberBuilder& NumberBuilder::content(const vl::WString& value)
				{
					node->content.value = value;
					return *this;
				}

/***********************************************************************
ObjectBuilder
***********************************************************************/

				ObjectBuilder& ObjectBuilder::fields(const vl::Ptr<JsonObjectField>& value)
				{
					node->fields.Add(value);
					return *this;
				}

/***********************************************************************
ObjectFieldBuilder
***********************************************************************/

				ObjectFieldBuilder& ObjectFieldBuilder::name(const vl::WString& value)
				{
					node->name.value = value;
					return *this;
				}

				ObjectFieldBuilder& ObjectFieldBuilder::value(const vl::Ptr<JsonNode>& value)
				{
					node->value = value;
					return *this;
				}

/***********************************************************************
StringBuilder
***********************************************************************/

				StringBuilder& StringBuilder::content(const vl::WString& value)
				{
					node->content.value = value;
					return *this;
				}
			}
		}
	}
}
