/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Json
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "JsonParser.h"

namespace vl
{
	namespace glr
	{
		namespace json
		{
			void JsonParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1970; // 18241 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 178;
				static const vl::vint dataSolidRows = 7;
				static const vl::vint dataRows = 8;
				static const char* compressed[] = {
					"\x41\x47\x00\x00\xAA\x07\x00\x00\x0C\x00\x01\x82\x80\x06\x03\x82\x81\x82\x06\x89\x82\x87\x0A\x80\x81\x84\x09\x0A\x98\x0A\x9D\x0A\x86\x65\x01\x84\xFF\x19\x9A\x99\x8A\x80\x03\x8D\x8D\x1D\x9D\x97\x89\x83\x96\x81\x93\x81\x02\x0A\xA7\x82\x8F\x8A\x8D\x8F\x96\x1C\x8A\xB0\x9F\x7F\x90\x99\x9B\x96\x37\x9F\x9D\x83\x0A\x92\x84\x03\x9E\x18\xB6\xB2\x82\xA1\xA0\x9F\xA0\xA3\x45\xBA\x87\xAA\xA9\xA0\x93\xA4\xA7\x4D\xAE\x8F\xB2\xA1\xA9\x99\xAA\x9A\x53\xD6\x86\x93\x99\x98\xAA\x83\x02\x40\xDB\x84\xA2\xB8\xA4\xB0\xA6\xB3\x5E\x83\x9C\xB9\xA8\xAF\xA9\xAE\xAA\x68\xF0\xAA\xA3\xB3\xBD\xB1\xBB\xB3\x77\xE9\x87\x81\xB9\xBA\xB8\x96\xBA\x7F\xF6\x81\xD8\xB3\xC2\xBD\x81\xB5\x6E\xEC\xAF\xBA\xAD\xBC\xC5\xC2\xBF\x87\x80\xD1\xC2\xC1\x84\x84\x92\xC5\x98\x89\xDA\xD1\xBE\xC3\xC8\xC2\xCF\x86\x9E\x92\xC2\xD4\xCC\xD3\xCE\xD3\xA1\x88\xDC\xCD\xB6\x80\x04\xBF\xC7\x9D\xA8\xD0\xD2\xD1\xDA\xD5\xC6\xD6\xB7\x8B\xF8\xD0\xDB\xD8\xD3\xD8\xDB\xBC\xBA\xC2\xEA\x89\x07\xD6\xDF\xDA\xA3\xC0\xC7\xFD\xD4\xDC\xE6\xE5\xE6\xC3\x9B\xF9\xD9\xCB\xD1\xE9\xEA\xEA\xD3\xD2\xC1\xF8",
					"\xEB\xEA\xEF\xE4\xEB\xD9\xD7\xC9\x8A\x06\xE0\xE8\xEF\xEF\xE7\xE6\xDE\xEA\xF2\xF5\xF5\xF1\xF7\xDD\xEE\xF1\xF0\xF8\xF3\xF7\x05\xF2\x0E\xA6\x8A\x8D\x05\xF6\x05\xF3\xE7\x0F\x3F\x79\x73\x80\xA5\x50\x05\x79\x04\x02\xA5\x60\x47\x65\xEB\x4F\x7E\x80\x81\xA7\x4F\x85\x6A\x84\x11\x90\x89\x6A\x85\xBF\x58\x88\x73\x84\x1A\x8E\x7D\x84\x78\xF3\x61\x81\x43\x04\x09\x95\x8C\x87\x89\x26\xA9\x87\x84\x8A\xA1\x54\x05\x8B\x8A\x2A\x99\x8C\x8A\x8C\x31\x9B\x85\x8E\x87\x33\xB6\x80\x8F\x8E\x34\xBC\x8A\x8D\x8F\x40\xBF\x82\x90\x8E\x37\xA0\x85\x7E\x7C\x47\xB4\x70\x01\x05\x2F\x81\x94\x92\x8F\x4F\xB3\x66\x05\x93\x43\x86\x9C\x7A\x92\x14\x90\x96\x95\x96\x4E\x96\x97\x04\x95\xCC\x52\x4C\x80\x92\x57\xA2\x85\x99\x92\x66\x9C\x95\x95\x7A\x6A\x91\x9B\x99\x83\x1F\xAC\x93\x69\x06\x60\x96\x9A\x05\x9D\x72\xB9\x8E\x9B\x9E\x5B\xB1\x90\x9D\x69\x1B\x38\x9F\x9D\x91\x79\x84\xA3\xA2\x96\x85\x88\xA7\xA1\x97\x89\x8C\xAB\xA3\x9B\x06\x5C\x05\x78\x45\x63\x83\x4E\x05\x79\x1F\x02\xA6\x40\x08\xE5\x61\x0A\xA6\x92\x22\x25\x73\x0B\xA7\x69\xA3\x64\x09\x79\x25\x25\x76\x09\x79",
					"\x27\x24\xA1\x40\x0A\xAE\xA7\x92\xAD\x0A\xE5\x6A\x01\xAF\x0A\xB1\xAD\x9D\x9E\x9E\xBB\x86\xA4\x9A\xAE\x8D\x90\xA8\x96\x9F\xBF\x84\xB3\x40\x0B\xE5\x6D\x09\xAE\xB1\xA5\xBC\xAA\x42\x0B\xE5\x6F\x05\x78\x0C\xE5\x71\x01\xAE\x0C\xCB\x8E\xB9\x43\x0C\xE5\x74\x09\xB6\xAF\xC3\x9A\xB5\xB2\xB8\xE1\xA0\xBD\xB2\xB9\x01\x75\x0F\xB6\xA2\xE3\xA8\xB2\xAC\xB0\x8F\xBC\x99\x7A\x0D\xEB\x8E\xAD\xB8\xBB\xE5\xB8\xB7\xBA\xBE\x68\x81\x47\x0D\xBD\xC2\xBB\xB6\xBD\xBE\x03\xC2\xC1\xC1\xBF\xEF\x8C\xB8\xC3\x73\x38\x31\xA9\x0C\xC0\xF2\xB1\xBD\xAC\xBF\x09\xE4\xB6\xC1\xC4\xF7\x85\xCB\xC2\xC2\x00\x3A\x00\xC7\xC4\x1A\xD5\xCE\xB8\xBC\x19\xC7\xC0\x03\x0E\x1F\xC1\xB8\xC4\xC1\x26\xE4\xCC\xCB\xCA\x02\x7D\x1A\x41\x4A\x95\xBC\x64\xCE\x7E\x57\x77\xC3\x43\x4A\xCB\x7A\xC2\x40\x4F\xF1\xB3\x44\x79\x42\x3E\xFD\xCA\x40\x42\x25\xF3\x4F\x3F\xD0\x06\x48\xD7\x6C\xCF\x00\x10\xD2\xD0\x98\x4E\xFC\x63\x4C\xD4\x45\xCD\x7C\xD3\xCE\x6C\x55\xDB\x73\xD5\x21\x57\x5B\xD6\x40\x52\xF0\x4E\xD5\x73\x33\x67\xDA\xD2\xD9\x6C\x73\x49\xD4\x58\x41\xF0\x43\xD9\x40\x3F\x57\x55\xDF\x6A\x6E",
					"\xE0\x97\xDF\x6D\x79\xF5\xCB\x73\xDE\x56\xF0\x49\xD5\xD9\x2D\x40\xEF\xD6\xE0\x3E\x6C\x56\xE0\xDA\x88\xE1\xD7\x6F\xE2\x6B\xED\x49\xD4\xD0\x49\xD3\xD4\xD2\xE2\x6D\xCD\xED\xD2\xCA\x96\xDB\xE7\x56\xDA\x91\xDB\x49\xD4\xE4\x9A\xC3\x40\xDD\xE5\x72\xC9\xE9\xCE\x42\xA7\xEF\xCD\xE7\x40\xA4\xED\x40\xE9\xE8\x19\x59\xDA\x6D\xEC\xB4\xC3\xE8\xE7\x55\x7D\xF8\xCB\x68\xEE\xA1\xFA\xE6\xDD\xE6\x92\xEA\xEF\xEC\xF1\x1F\x76\xEB\xEC\xDE\xA5\xFF\xCC\xE5\xEA\x97\xC3\xFC\xED\xF3\x01\x73\xE7\x8F\xEB\x7B\x52\xFC\xF1\xF1\x7E\xCD\x70\xF1\xE4\xC2\xC7\xF3\xF4\xF7\xBE\xCF\xE8\xF2\xE8\xC6\xE6\xF3\xF9\xF2\x8E\xEA\xFB\xF4\xFB\x09\x54\xEE\xE8\xF4\x06\x59\xD3\x4F\xF7\x6B\xD9\xD6\xF4\x94\xD8\xD5\xFD\xD7\xF9\x1A\x38\x7E\xD2\x61\x7E\x7C\xBE\x54\x79\x6A\xCB\x66\x80\xF9\x5C\x6A\x7A\x05\xB0\x7E\x20\x02\x82\x81\xEF\x6D\x77\x7E\x00\xB5\x72\x21\xF2\x77\x61\xFF\x00\x06\x7E\x98\x12\x87\x80\xFB\x6E\x4B\x06\xA1\x89\x22\x12\x8A\x6E\x84\x69\x76\x83\x3F\x1F\x8B\x80\x81\x11\x82\x85\xCA\x7F\x72\x0A\xA8\x84\x7E\xD3\x6C\x2D\x75\x81\x6D\x24\x0E\x87\x7A\x86\x15\xB3\x68",
					"\x00\x19\x8B\x3B\x0F\xC1\x8A\x6B\xF6\x7C\x37\x87\xBA\x3B\x84\xE3\x3D\x8B\x7D\xD0\x2A\x5E\x88\x08\x90\x88\xD4\x22\x20\x8A\x0E\x95\x8C\x88\x54\x92\x89\xFA\x02\x2A\x89\xB3\x50\x6E\x8B\x47\x65\x3F\xD9\x7A\x78\x83\x30\x9D\x78\x8C\x09\x36\x31\xF9\x0B\x25\x3C\x35\x8C\x86\x20\x6E\x82\x21\xD6\x71\x81\x20\x22\xB4\x89\x8A\x70\x85\x3C\xD4\x7B\x83\x67\x32\x9D\x78\x6A\xAE\x29\x21\x71\x63\x3B\x8B\x80\x08\x8D\x8A\x73\x05\x3D\x47\x01\x50\x8A\x22\xB4\x0D\x3C\x59\x72\x51\x23\x8A\x25\x0F\xF2\x04\x8F\x4E\x93\x89\x22\x1D\x7A\x8A\x20\x04\x55\x8A\x21\x77\x1C\x91\x42\x1E\x9F\x92\x83\x38\x0D\x3C\x8B\x7F\x49\x29\x86\x29\x0E\x54\x8A\x22\x95\xAB\x82\x22\x1E\x10\x9A\x20\x4E\x59\x96\x20\x7B\x16\x92\x42\x19\x57\x97\x81\x3C\x0D\x3C\x3C\x15\x8A\x00\x9F\x9F\x39\x2C\x89\x6F\x93\x1D\x85\x36\x95\x7C\x82\x63\x2B\xA9\x3E\x4A\x04\x97\x63\x27\xCA\x85\x99\xF4\x04\x88\x6A\x8B\x69\x9B\x69\x1D\x26\x84\x62\xA3\x30\x8D\x79\x91\x78\x99\x51\x98\x60\x2B\x43\x96\x20\x44\x8E\x66\xF3\x5D\x75\x9B\xF5\x39\x3B\x20\xE9\x9C\x63\xE2\x04\x7B\x9B\xF4\x01\x41\x7E\x2A\x7D",
					"\x22\x12\xF4\x91\x34\x2B\x4B\x43\x8D\x1B\x65\x34\x38\xCA\x46\x4A\x12\x6C\x9C\x63\x77\x97\x3F\x7A\x56\x4E\x45\xEE\x4C\x4A\x9C\x4A\x47\x9C\xEC\x4F\x99\x3C\x58\xA8\x24\xA2\x10\xA2\x22\x44\xF2\x88\xA2\x32\x74\x49\xA3\x08\x79\x69\xD6\x1B\xA5\x8F\x8E\x8A\x4C\x91\xF5\x69\x3D\x36\xC4\x3A\x20\xFF\x0B\xA1\x3D\x94\x49\xA7\x7A\x63\x8C\xA5\x84\x0D\xA4\x4C\x56\x5C\x96\x4C\xE4\x41\x91\x9D\x83\x24\xA4\x00\x14\x9B\x68\x56\x4E\x52\x90\x80\x03\x54\x46\xBF\x87\x48\xE6\x88\xA7\xF4\x29\x56\xA8\xAD\x46\xAB\x3B\x9C\xA4\x91\x84\x3D\xA4\xA0\xE9\x34\x57\x41\x96\x61\x20\x85\x86\x20\xA8\xED\x87\x99\x3E\x8D\x2D\xA4\x93\xA6\x4E\x56\x5B\xAE\x5E\x4B\x86\x26\x41\x97\x8D\x9F\xAD\x06\x2B\xAF\x40\x5E\xA8\xAB\xF5\x38\x55\x7B\xC8\x46\xAA\x5C\xE4\x6A\x21\x7B\x86\x24\xAE\x66\x56\x48\xB4\x5D\x72\x5A\xA3\xBE\xAF\x8D\x03\x2D\xAE\x41\x7C\x3E\xAC\x32\x56\x59\xAD\x14\x64\x95\x62\xE6\xA1\xA1\x91\x63\x32\xB2\x02\x27\xB1\x60\xE3\xA0\xAF\x81\x3F\x9B\x20\x37\xB5\xAC\x99\x58\x50\xB3\x90\x61\xB6\x85\x94\xB2\x54\xB7\x46\xAF\x38\xC5\x97\xA6\xA6\x7D\x8D\xB2\x92\x4F",
					"\x8E\xA6\x33\x5F\xB4\xAA\x06\x27\xB5\x49\xB2\xB6\x4D\x7F\x6C\xB3\x34\xBA\xB6\x88\x6C\x89\x2B\xAF\x72\xA9\x3F\x61\xBF\xA5\x37\x94\x46\xA1\xB9\xE0\xA1\xAA\x49\x28\x69\xBB\x69\x62\x45\xB7\x80\x01\xBB\xB9\x4D\xBD\xB2\x34\x8A\x21\xB8\xA1\x8A\x99\x3D\x3D\x11\xB6\x41\x3F\x02\xBD\x81\x18\x95\xBA\x00\x01\xB9\x37\xD5\x8F\x39\x20\x25\xBA\x20\x43\x0F\xBD\x40\x12\x98\xBD\x87\x90\x81\xB5\xCF\x25\x0A\x7C\xB2\x57\x52\xA3\xB6\xBF\xB5\xD9\xA4\x4F\x11\x7B\xBF\x38\x5B\xB5\xBE\x8F\x01\xCA\x49\x12\x04\xC3\x35\x50\x7E\xBD\xAC\xBC\xA8\x63\x12\x0C\xC5\x35\x53\x4F\xC3\xB8\x09\xC6\x4D\x13\x14\xC7\x35\x55\x57\xC7\x2B\xF8\xA3\x37\x13\x7B\xB1\x0B\xFD\xB0\x57\xC3\x03\x2B\xBC\x14\xCF\x33\x0B\xFD\x95\x0B\xBF\x68\xA8\xBC\x76\x83\x26\xA1\x0C\xC8\x67\x0A\x29\x69\x22\x45\x82\x23\xC7\xCD\x9A\xBD\xB2\xA1\x3B\xC5\x40\x7F\xBE\xC6\xB1\xBF\xC0\x00\xD4\xB3\xA1\x84\xB2\x58\x0A\x0E\xE1\x31\xAF\x00\xA8\xCA\x93\xB3\x36\x4A\x2D\x13\xC9\x36\xCA\x5D\x79\x92\xEB\x96\xC6\x59\x5C\x0F\xCA\xCC\x23\xB1\x94\xDB\xC1\x21\xE2\xB2\x56\x4A\x5E\x00\xCD\x47\x05\xB3\xCC\xEE",
					"\xA1\xC5\x34\x60\x0A\xCE\x42\x54\x5A\xCA\xD6\x6F\xCF\x34\x62\x1B\xBC\x19\x7B\xBF\xB1\x36\xC9\x22\xC5\x46\x8F\x3A\x19\x7B\xB8\x0D\xFD\xA4\xB1\xCA\xE7\xA3\x23\x47\xDD\xCF\x38\x35\x39\xC6\x20\x28\xAA\xD3\x9D\xA1\x3B\x0D\x47\xC3\x24\xBE\x92\xCB\xCB\x73\x6C\x06\xD2\x81\x31\xA3\x20\x66\xCF\xBA\x99\x6D\x02\xCF\x6D\x53\x56\xCD\x9A\xC3\x37\x1B\x25\xD6\x20\x6F\x5D\x7A\xA7\x96\x53\xD3\x6C\x71\x0D\xD3\x80\x06\xC1\xD6\xA9\xC5\x36\x1C\x35\xD0\x01\xA2\x81\xD3\xA8\x4A\x7B\x27\x27\x8B\x71\x25\x18\x9D\x7B\x95\xFC\x8E\x25\xB2\x9A\x23\x8A\x63\x86\x8D\xD9\x6A\xDA\x9B\x03\xC6\x86\xD8\xF4\x85\xDF\x93\xF1\x98\x25\xB6\xAD\x28\x8A\x61\xCE\x9F\xDB\x50\x83\x9A\x04\xAB\xA5\x91\xB0\x73\x9A\x9F\x8A\x3E\xB8\x13\xD1\xC1\xA9\x58\x86\x88",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* ParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"JLiteral",
					L"JField",
					L"JObject",
					L"JArray",
					L"JValue",
					L"JRoot",
				};
				return results[index];
			}

			const wchar_t* ParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][JLiteral] BEGIN ",
					L"[1][JLiteral] END [ENDING]",
					L"[2][JLiteral]< \"false\" @ >",
					L"[3][JLiteral]< \"null\" @ >",
					L"[4][JLiteral]< \"true\" @ >",
					L"[5][JLiteral]< NUMBER @ >",
					L"[6][JLiteral]< STRING @ >",
					L"[7][JField] BEGIN ",
					L"[8][JField] END [ENDING]",
					L"[9][JField]< STRING \":\" @ JValue >",
					L"[10][JField]< STRING \":\" JValue @ >",
					L"[11][JField]< STRING @ \":\" JValue >",
					L"[12][JObject] BEGIN ",
					L"[13][JObject] END [ENDING]",
					L"[14][JObject]< \"{\" @ { JField ; \",\" } \"}\" >",
					L"[15][JObject]< \"{\" { JField ; \",\" @ } \"}\" >",
					L"[16][JObject]< \"{\" { JField ; \",\" } \"}\" @ >",
					L"[17][JObject]< \"{\" { JField @ ; \",\" } \"}\" >",
					L"[18][JArray] BEGIN ",
					L"[19][JArray] END [ENDING]",
					L"[20][JArray]< \"[\" @ { JValue ; \",\" } \"]\" >",
					L"[21][JArray]< \"[\" { JValue ; \",\" @ } \"]\" >",
					L"[22][JArray]< \"[\" { JValue ; \",\" } \"]\" @ >",
					L"[23][JArray]< \"[\" { JValue @ ; \",\" } \"]\" >",
					L"[24][JValue] BEGIN ",
					L"[25][JValue] END [ENDING]",
					L"[26][JValue]<< !JArray @ >>",
					L"[27][JValue]<< !JLiteral @ >>",
					L"[28][JValue]<< !JObject @ >>",
					L"[29][JRoot] BEGIN ",
					L"[30][JRoot] END [ENDING]",
					L"[31][JRoot]<< !JArray @ >>",
					L"[32][JRoot]<< !JObject @ >>",
				};
				return results[index];
			}

			const wchar_t* ParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			Parser::Parser()
				: vl::glr::ParserBase<JsonTokens, ParserStates, JsonAstInsReceiver>(&JsonTokenDeleter, &JsonLexerData, &JsonParserData)
			{
			};

			vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::json::JsonNode> Parser::ParseJRoot(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::json::JsonNode, ParserStates::JRoot>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::json::JsonNode> Parser::ParseJRoot(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::json::JsonNode, ParserStates::JRoot>(tokens, this, codeIndex);
			};
		}
	}
}
