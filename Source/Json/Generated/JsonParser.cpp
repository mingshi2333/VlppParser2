/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Json
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "JsonParser.h"

namespace vl
{
	namespace glr
	{
		namespace json
		{
			void JsonParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1958; // 18241 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 166;
				static const vl::vint dataSolidRows = 7;
				static const vl::vint dataRows = 8;
				static const char* compressed[] = {
					"\x41\x47\x00\x00\x9E\x07\x00\x00\x0C\x00\x01\x82\x80\x06\x03\x82\x81\x82\x06\x89\x82\x87\x0A\x80\x81\x84\x09\x0A\x98\x0A\x9D\x0A\x86\x65\x01\x84\xFF\x19\x9A\x99\x8A\x80\x03\x8D\x8D\x1D\x9D\x97\x89\x83\x96\x81\x93\x81\x02\x0A\xA7\x82\x8F\x8A\x8D\x8F\x96\x1C\x8A\xB0\x9F\x7F\x90\x99\x9B\x96\x37\x9F\x9D\x83\x0A\x92\x84\x03\x9E\x18\xB6\xB2\x82\xA1\xA0\x9F\xA0\xA3\x45\xBA\x87\xAA\xA9\xA0\x93\xA4\xA7\x4D\xAE\x8F\xB2\xA1\xA9\x99\xAA\x9A\x53\xD6\x86\x93\x99\x98\xAA\x83\x02\x40\xDB\x84\xA2\xB8\xA4\xB0\xA6\xB3\x5E\x83\x9C\xB9\xA8\xAF\xA9\xAE\xAA\x68\xF0\xAA\xA3\xB3\xBD\xB1\xBB\xB3\x77\xE9\x87\x81\xB9\xBA\xB8\x96\xBA\x7F\xF6\x81\xD8\xB3\xC2\xBD\x81\xB5\x6E\xEC\xAF\xBA\xAD\xBC\xC5\xC2\xBF\x87\x80\xD1\xC2\xC1\x84\x84\x92\xC5\x98\x89\xDA\xD1\xBE\xC3\xC8\xC2\xCF\x86\x9E\x92\xC2\xD4\xCC\xD3\xCE\xD3\xA1\x88\xDC\xCD\xB6\x80\x04\xBF\xC7\x9D\xA8\xD0\xD2\xD1\xDA\xD5\xC6\xD6\xB7\x8B\xF8\xD0\xDB\xD8\xD3\xD8\xDB\xBC\xBA\xC2\xEA\x89\x07\xD6\xDF\xDA\xA3\xC0\xC7\xFD\xD4\xDC\xE6\xE5\xE6\xC3\x9B\xF9\xD9\xCB\xD1\xE9\xEA\xEA\xD3\xD2\xC1\xF8",
					"\xEB\xEA\xEF\xE4\xEB\xD9\xD7\xC9\x8A\x06\xE0\xE8\xEF\xEF\xE7\xE6\xDE\xEA\xF2\xF5\xF5\xF1\xF7\xDD\xEE\xF1\xF0\xF8\xF3\xF7\x05\xF2\x0E\xA6\x8A\x8D\x05\xF6\x05\xF3\xE7\x0F\x3F\x79\x73\x80\xA5\x50\x05\x79\x04\x02\xA5\x60\x47\x65\xEB\x4F\x7E\x80\x81\xA7\x4F\x85\x6A\x84\x11\x90\x89\x6A\x85\xBF\x58\x88\x73\x84\x1A\x8E\x7D\x84\x78\xF3\x61\x81\x43\x04\x09\x95\x8C\x87\x89\x26\xA9\x87\x84\x8A\xA1\x54\x05\x8B\x8A\x2A\x99\x8C\x8A\x8C\x31\x9B\x85\x8E\x87\x33\xB6\x80\x8F\x8E\x34\xBC\x8A\x8D\x8F\x40\xBF\x82\x90\x8E\x37\xA0\x85\x7E\x7C\x47\xB4\x70\x01\x05\x2F\x81\x94\x92\x8F\x4F\xB3\x66\x05\x93\x43\x86\x9C\x7A\x92\x14\x90\x96\x95\x96\x4E\x96\x97\x04\x95\xCC\x52\x4C\x80\x92\x57\xA2\x85\x99\x92\x66\x9C\x95\x95\x7A\x6A\x91\x9B\x99\x83\x1F\xAC\x93\x69\x06\x60\x96\x9A\x05\x9D\x72\xB9\x8E\x9B\x9E\x5B\xB1\x90\x9D\x69\x1B\x38\x9F\x9D\x91\x79\x84\xA3\xA2\x96\x85\x88\xA7\xA1\x97\x89\x8C\xAB\xA3\x9B\x06\x5C\x05\x78\x45\x63\x83\x4E\x05\x79\x1F\x02\xA6\x40\x08\xE5\x61\x0A\xA6\x92\x22\x25\x73\x0B\xA7\x69\xA3\x64\x09\x79\x25\x25\x76\x09\x79",
					"\x27\x24\xA1\x40\x0A\xAE\xA7\x92\xAD\x0A\xE5\x6A\x01\xAF\x0A\xB1\xAD\x9D\x9E\x9E\xBB\x86\xA4\x9A\xAE\x8D\x90\xA8\x96\x9F\xBF\x84\xB3\x40\x0B\xE5\x6D\x09\xAE\xB1\xA5\xBC\xAA\x42\x0B\xE5\x6F\x05\x78\x0C\xE5\x71\x01\xAE\x0C\xCB\x8E\xB9\x43\x0C\xE5\x74\x09\xB6\xAF\xC3\x9A\xB5\xB2\xB8\xE1\xA0\xBD\xB2\xB9\x01\x75\x0F\xB6\xA2\xE3\xA8\xB2\xAC\xB0\x8F\xBC\x99\x7A\x0D\xEB\x8E\xAD\xB8\xBB\xE5\xB8\xB7\xBA\xBE\x68\x81\x47\x0D\xBD\xC2\xBB\xB6\xBD\xBE\x03\xC2\xC1\xC1\xBF\xEF\x8C\xB8\xC3\x73\x38\x31\xA9\x0C\xC0\xF2\xB1\xBD\xAC\xBF\x09\xE4\xB6\xC1\xC4\xF7\x85\xCB\xC2\xC2\x00\x3A\x00\xC7\xC4\x1A\xD5\xCE\xB8\xBC\x19\xC7\xC0\x03\x0E\x1F\xC1\xB8\xC4\xC1\x26\xE4\xCC\xCB\xCA\x02\x7D\x1A\x41\x4A\x95\xBC\x64\xCE\x7E\x57\x77\xC3\x43\x4A\xCB\x7A\xC2\x40\x4F\xF1\xB3\x44\x79\x42\x3E\xFD\xCA\x40\x42\x25\xF3\x4F\x3F\xD0\x06\x48\xD7\x6C\xCF\x00\x10\xD2\xD0\x98\x4E\xFC\x63\x4C\xD4\x45\xCD\x7C\xD3\xCE\x6C\x55\xDB\x73\xD5\x21\x57\x5B\xD6\x40\x52\xF0\x4E\xD5\x73\x33\x67\xDA\xD2\xD9\x6C\x73\x49\xD4\x58\x41\xF0\x43\xD9\x40\x3F\x57\x55\xDF\x6A\x6E",
					"\xE0\x97\xDF\x6D\x79\xF5\xCB\x73\xDE\x56\xF0\x49\xD5\xD9\x2D\x40\xEF\xD6\xE0\x3E\x6C\x56\xE0\xDA\x88\xE1\xD7\x6F\xE2\x6B\xED\x49\xD4\xD0\x49\xD3\xD4\xD2\xE2\x6D\xCD\xED\xD2\xCA\x96\xDB\xE7\x56\xDA\x91\xDB\x49\xD4\xE4\x9A\xC3\x40\xDD\xE5\x72\xC9\xE9\xCE\x42\xA7\xEF\xCD\xE7\x40\xA4\xED\x40\xE9\xE8\x19\x59\xDA\x6D\xEC\xB4\xC3\xE8\xE7\x55\x7D\xF8\xCB\x68\xEE\xA1\xFA\xE6\xDD\xE6\x92\xEA\xEF\xEC\xF1\x1F\x76\xEB\xEC\xDE\xA5\xFF\xCC\xE5\xEA\x97\xC3\xFC\xED\xF3\x01\x73\xE7\x8F\xEB\x7B\x52\xFC\xF1\xF1\x7E\xCD\x70\xF1\xE4\xC2\xC7\xF3\xF4\xF7\xBE\xCF\xE8\xF2\xE8\xC6\xE6\xF3\xF9\xF2\x8E\xEA\xFB\xF4\xFB\x09\x54\xEE\xE8\xF4\x06\x59\xD3\x4F\xF7\x6B\xD9\xD6\xF4\x94\xD8\xD5\xFD\xD7\xF9\x1A\x38\x7E\xD2\x61\x7E\x7C\xBE\x54\x79\x6A\xCB\x66\x80\xF9\x5C\x6A\x7A\x05\xB0\x7E\x20\x02\x82\x81\xEF\x6D\x77\x7E\x00\xB5\x72\x21\xF2\x77\x61\xFF\x00\x06\x7E\x98\x12\x87\x80\xFB\x6E\x4B\x06\xA1\x89\x23\xD6\x41\x72\x76\x16\x9F\x1E\x09\x87\x78\x85\xF5\x5B\x23\x85\x8C\x6D\x87\xFB\x1B\x2F\x83\x05\x82\x21\x82\x29\x8A\x7B\x55\x30\x84\x76\x8D\x24\x82",
					"\x69\x3C\x9D\x87\x3F\x3F\x8B\x83\x20\xAD\x23\x6E\x00\x19\x83\x72\x48\x8A\x88\xAD\x6D\x7C\x37\x48\x96\x4A\xBA\x4F\x88\x80\x2A\x90\x6A\x24\x54\x9C\x81\x16\xCD\x88\x8A\x2B\xA9\x7A\x20\x30\x87\x6C\xD4\x62\x87\x69\xF2\x27\x6A\x7F\x18\x85\x8D\xF7\x64\x89\x20\xCB\x25\x7B\x21\xE5\x2E\x8C\x03\x86\x22\x8E\x81\x19\x6D\x8E\x01\x2D\x88\x1E\xD5\x84\x8F\xF2\x10\x6F\x8F\x33\x69\x8D\xF7\x50\x6E\x35\x84\x05\x3B\x3C\x5F\x81\x21\x14\xD9\x88\x0F\xF2\x1D\x21\x50\x54\x8D\x8B\x73\x59\x62\x53\x48\xA9\x3D\x89\x77\x56\x93\x7A\x50\x68\x41\x2C\x8A\x21\x0F\x7E\x8A\x21\x27\x9E\x96\x20\x3D\x25\x3B\x71\x5F\x44\x96\x41\x7B\x07\x94\x85\x29\x92\x95\x02\x3C\x0D\x79\x59\x6C\x52\x4D\xA4\x4D\x89\x99\x56\x96\x92\x3C\x09\x8A\x01\x9E\x97\x39\x5D\x89\x6A\x27\x9D\x85\x34\x2B\x40\x92\x62\x5B\x89\x3E\x95\x04\x87\x62\x4F\x86\x8F\x34\x56\x4D\x88\xD4\x0B\x74\x98\x68\xAA\x8C\x4C\x56\x4C\x8D\x1F\xD1\x74\x4C\x66\x88\x66\x4A\x87\x86\x22\x24\x9C\x62\x9A\x65\xA9\x39\x3F\x03\x23\x9E\xC5\x74\x61\x56\x2B\x41\x41\x7E\x2A\x7D\x20\x0C\x84\x76\x9B\xF5\x0B\x47\x8D\x1B\x65",
					"\x36\x36\xCA\x46\x4A\x12\x5D\x7E\x65\x70\x89\x23\x7D\x6B\x36\x4A\x17\x5D\x7C\x49\xDC\x8A\x49\x38\xB0\x76\x9D\xF5\x2F\x90\x25\x0D\xB5\x7C\x71\x01\x94\xA1\xF4\x34\x49\xA1\x66\x59\x69\xD6\x0B\xAE\x79\x8A\xAB\x38\x92\x12\xAB\x3C\x35\x93\xA9\x20\xFF\x1E\xA4\x4C\x94\x41\xA4\x99\x67\x84\xA4\x83\x06\xA0\x9B\xE9\x39\x96\x4A\xCA\x45\x91\x99\x82\x24\xA3\x01\x2F\x99\x68\x56\x4E\x52\x8C\x81\x23\x54\x3E\xA0\x00\x12\x9B\xA7\x9A\x7E\xA9\x39\x55\x41\xAD\x55\x50\xE8\x96\x8E\x85\x08\x8D\xA6\x46\xAB\x3C\xAD\x7F\x9C\x63\x81\x86\x20\xA7\xB2\x40\x65\xCB\x23\x3C\xA9\x80\x26\xA0\xA6\xEB\x36\x54\x55\xEB\x90\x01\xAF\x83\x26\x40\x27\xAF\x66\x56\xCC\x36\xAC\x81\x16\xA9\xAA\x64\x58\x55\xF7\x48\x51\xA9\xB6\x81\x20\x6A\xEF\x86\x23\x5B\xE6\x46\x4A\x68\x5D\x7A\x5A\x41\xB9\xAF\x1C\xE7\xAB\x3F\x88\x8A\x4E\x5A\x63\xAE\x5F\x28\x84\xB9\xAD\x66\xB1\x9A\x94\x0A\x22\xB0\x5F\x8F\xB8\x99\x87\x0A\x27\xA5\x70\xAA\x48\xB6\x09\xB4\x62\xCC\xB7\x86\xB0\x66\x5C\x59\x50\xCF\x38\xAC\x9B\x81\x26\xB3\x01\x35\x9B\x4E\xE9\x33\x8A\xD3\xB2\x57\x9E\x10\xA9\x20\x6A\xC9",
					"\x80\xB4\x84\x7F\x5B\xB4\xA3\x33\xB5\xD6\x33\xB6\xAF\xAC\xA9\x3F\x61\xB8\xA5\x37\x94\x41\xA3\xB7\xD9\x80\x99\x3D\x28\x61\xBB\x69\x62\x4E\xB5\xD9\x83\xB8\xAC\xC2\x94\xB2\x4B\xAC\x75\xB6\x59\x7D\x04\xA2\x06\x3F\x04\x76\x83\x29\x93\xE6\x85\xAB\xB2\xEB\x21\x0B\x76\x82\x23\x09\xF1\x81\x25\x92\xAE\xA8\xA0\x04\xD5\xBF\x39\x22\x26\xBA\x56\x97\x41\xAA\x7A\xB1\xB0\xBA\x25\x47\x0F\xBD\xCF\x35\x95\x7A\x82\x95\xBE\x33\x49\x08\xBF\xA3\x21\x56\x7C\x8A\x2D\xB7\xE3\xAB\x3B\x09\x00\xC5\x37\xA9\x03\xC2\xB6\xF6\xA3\x35\x09\x09\xC7\x37\xAA\x0C\xCF\x2A\x07\xE5\x37\x09\xEF\xB1\x0B\x7B\xB0\x54\xC3\x81\x3F\x87\x97\xA3\x33\x0B\x7B\xD5\x0F\xBC\xB1\xAE\xB7\xB9\x03\x3E\x9D\x7F\x88\x67\x0B\x94\x49\x27\xA1\x02\x28\xC4\x78\xD1\xB5\xB2\x83\x30\xC1\x20\xF3\xB3\xC6\x5A\xD2\xB3\x20\xE6\x8C\xA5\xB1\x08\x78\x09\x84\xA1\x34\xAE\x7C\x80\x06\xC7\x4D\xA0\xCA\xAC\x5A\x03\xC9\xD9\x0A\x5D\x7B\x48\xD9\x8E\x85\xA7\x3C\x0B\x26\xF1\x36\xAF\x46\xD1\xC9\x59\xD3\xC1\x34\x2F\x16\xCC\x39\x80\xB9\xCB\x65\xDC\xC3\x36\x30\x1F\xCD\x23\xD4\x50\xC8\x75\xCA\xCF\x38\x31",
					"\x2F\xBC\x0C\xEF\xA8\xB2\x98\x89\x2F\xC3\x2C\x8F\x3E\x0C\xEF\xA8\x0F\x7B\x9B\xB6\xC9\xEE\x83\x27\xA2\x2B\xD2\x56\x1A\x67\xC9\x3C\x90\xBF\xCC\xCC\xB1\x2C\x0C\xA1\xEB\x38\xBD\x43\xEC\xCB\x34\x6E\x0B\xD0\x4A\x84\xC8\xD0\xE6\x30\x0A\xD2\x03\x22\xB6\x91\xA9\xA3\x20\xE3\xA3\x36\x4A\x72\x18\xD2\x40\x5E\x5D\x7A\x99\x96\x55\xD2\x1D\x34\x0E\xA8\x88\x6A\xBF\x53\xCF\xD5\x34\x76\x0B\xD6\xAC\x3D\xAF\x88\x60\x8A\x6B\x27\x9E\x8B\x71\x48\x3A\x8D\x7A\x55\xB4\x98\x24\xBF\xDB\x23\x15\xC1\x9F\x89\x61\xE7\xCA\xB5\xE8\x79\x88\xAF\xAE\xBB\xD6\x4F\xAA\x9A\x27\xCF\xDF\x20\x17\xB8\xD9\x99\x6A\xD4\x8E\x97\x12\x83\xA5\x22\xE1\x6B\x71\x2B\xBA\xA6\x25\xDF\xDA\x23\x3C\xF2\x90\x97\x27\x80",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* ParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"JLiteral",
					L"JField",
					L"JObject",
					L"JArray",
					L"JValue",
					L"JRoot",
				};
				return results[index];
			}

			const wchar_t* ParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][JLiteral] BEGIN ",
					L"[1][JLiteral] END [ENDING]",
					L"[2][JLiteral]< \"false\" @ >",
					L"[3][JLiteral]< \"null\" @ >",
					L"[4][JLiteral]< \"true\" @ >",
					L"[5][JLiteral]< NUMBER @ >",
					L"[6][JLiteral]< STRING @ >",
					L"[7][JField] BEGIN ",
					L"[8][JField] END [ENDING]",
					L"[9][JField]< STRING \":\" @ JValue >",
					L"[10][JField]< STRING \":\" JValue @ >",
					L"[11][JField]< STRING @ \":\" JValue >",
					L"[12][JObject] BEGIN ",
					L"[13][JObject] END [ENDING]",
					L"[14][JObject]< \"{\" @ { JField ; \",\" } \"}\" >",
					L"[15][JObject]< \"{\" { JField ; \",\" @ } \"}\" >",
					L"[16][JObject]< \"{\" { JField ; \",\" } \"}\" @ >",
					L"[17][JObject]< \"{\" { JField @ ; \",\" } \"}\" >",
					L"[18][JArray] BEGIN ",
					L"[19][JArray] END [ENDING]",
					L"[20][JArray]< \"[\" @ { JValue ; \",\" } \"]\" >",
					L"[21][JArray]< \"[\" { JValue ; \",\" @ } \"]\" >",
					L"[22][JArray]< \"[\" { JValue ; \",\" } \"]\" @ >",
					L"[23][JArray]< \"[\" { JValue @ ; \",\" } \"]\" >",
					L"[24][JValue] BEGIN ",
					L"[25][JValue] END [ENDING]",
					L"[26][JValue]<< !JArray @ >>",
					L"[27][JValue]<< !JLiteral @ >>",
					L"[28][JValue]<< !JObject @ >>",
					L"[29][JRoot] BEGIN ",
					L"[30][JRoot] END [ENDING]",
					L"[31][JRoot]<< !JArray @ >>",
					L"[32][JRoot]<< !JObject @ >>",
				};
				return results[index];
			}

			const wchar_t* ParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			Parser::Parser()
				: vl::glr::ParserBase<JsonTokens, ParserStates, JsonAstInsReceiver>(&JsonTokenDeleter, &JsonLexerData, &JsonParserData)
			{
			};

			vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::json::JsonNode> Parser::ParseJRoot(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::json::JsonNode, ParserStates::JRoot>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::json::JsonNode> Parser::ParseJRoot(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::json::JsonNode, ParserStates::JRoot>(tokens, this, codeIndex);
			};
		}
	}
}
