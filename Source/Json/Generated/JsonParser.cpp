/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Json
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "JsonParser.h"

namespace vl
{
	namespace glr
	{
		namespace json
		{
			void JsonParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1960; // 18153 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 168;
				static const vl::vint dataSolidRows = 7;
				static const vl::vint dataRows = 8;
				static const char* compressed[] = {
					"\xE9\x46\x00\x00\xA0\x07\x00\x00\x0C\x00\x01\x82\x80\x06\x03\x82\x81\x82\x06\x89\x82\x87\x0A\x80\x81\x84\x09\x0A\x98\x0A\x9D\x0A\x86\x65\x01\x84\xFF\x19\x9A\x99\x8A\x80\x03\x8D\x8D\x1D\x9D\x97\x89\x83\x96\x81\x93\x81\x02\x0A\xA7\x82\x8F\x8A\x8D\x8F\x96\x1C\x8A\xB0\x9F\x7F\x90\x99\x9B\x96\x37\x9F\x9D\x83\x0A\x92\x84\x03\x9E\x18\xB6\xB2\x82\xA1\xA0\x9F\xA0\xA3\x45\xBA\x87\xAA\xA9\xA0\x93\xA4\xA7\x4D\xAE\x8F\xB2\xA1\xA9\x99\xAA\x9A\x53\xD6\x86\x93\x99\x98\xAA\x83\x02\x40\xDB\x84\xA2\xB8\xA4\xB0\xA6\xB3\x5E\x83\x9C\xB9\xA8\xAF\xA9\xAE\xAA\x68\xF0\xAA\xA3\xB3\xBD\xB1\xBB\xB3\x77\xE9\x87\x81\xB9\xBA\xB8\x96\xBA\x7F\xF6\x81\xD8\xB3\xC2\xBD\x81\xB5\x6E\xEC\xAF\xBA\xAD\xBC\xC5\xC2\xBF\x87\x80\xD1\xC2\xC1\x84\x84\x92\xC5\x98\x89\xDA\xD1\xBE\xC3\xC8\xC2\xCF\x86\x9E\x92\xC2\xD4\xCC\xD3\xCE\xD3\xA1\x88\xDC\xCD\xB6\x80\x04\xBF\xC7\x9D\xA8\xD0\xD2\xD1\xDA\xD5\xC6\xD6\xB7\x8B\xF8\xD0\xDB\xD8\xD3\xD8\xDB\xBC\xBA\xC2\xEA\x89\x07\xD6\xDF\xDA\xA3\xC0\xC7\xFD\xD4\xDC\xE6\xE5\xE6\xC3\x9B\xF9\xD9\xCB\xD1\xE9\xEA\xEA\xD3\xD2\xC1\xF8",
					"\xEB\xEA\xEF\xE4\xEB\xD9\xD7\xC9\x8A\x06\xE0\xE8\xEF\xEF\xE7\xE6\xDE\xEA\xF2\xF5\xF5\xF1\xF7\xDD\xEE\xF1\xF0\xF8\xF3\xF7\x05\xF2\x0E\xA6\x8A\x8D\x05\xF6\x05\xF3\xE7\x0F\x3F\x79\x73\x80\xA5\x50\x05\x79\x04\x02\xA5\x60\x47\x65\xEB\x4F\x7E\x80\x81\xA7\x4F\x85\x6A\x84\x11\x90\x89\x6A\x85\xBF\x58\x88\x73\x84\x1A\x8E\x7D\x84\x78\xF3\x61\x81\x43\x04\x09\x95\x8C\x87\x89\x26\xA9\x87\x84\x8A\xA1\x54\x05\x8B\x8A\x2A\x99\x8C\x8A\x8C\x31\x9B\x85\x8E\x87\x33\xB6\x80\x8F\x8E\x34\xBC\x8A\x8D\x8F\x40\xBF\x82\x90\x8E\x37\xA0\x85\x7E\x7C\x47\xB4\x70\x01\x05\x2F\x81\x94\x92\x8F\x4F\xB3\x66\x05\x93\x43\x86\x9C\x7A\x92\x14\x90\x96\x95\x96\x4E\x96\x97\x04\x95\xCC\x52\x4C\x80\x92\x57\xA2\x85\x99\x92\x66\x9C\x95\x95\x7A\x6A\x91\x9B\x99\x83\x1F\xAC\x93\x69\x06\x60\x96\x9A\x05\x9D\x72\xB9\x8E\x9B\x9E\x5B\xB1\x90\x9D\x69\x1B\x38\x9F\x9D\x91\x79\x84\xA3\xA2\x96\x85\x88\xA7\xA1\x97\x89\x8C\xAB\xA3\x9B\x06\x5C\x05\x78\x45\x63\x83\x4E\x05\x79\x1F\x02\xA6\x40\x08\xE5\x61\x0A\xA6\x92\x22\x25\x73\x0B\xA7\x69\xA3\x64\x09\x79\x25\x25\x76\x09\x79",
					"\x27\x24\xA1\x40\x0A\xAE\xA7\x92\xAD\x0A\xE5\x6A\x01\xAF\x0A\xB1\xAD\x9D\x9E\x9E\xBB\x86\xA4\x9A\xAE\x8D\x90\xA8\x96\x9F\xBF\x84\xB3\x40\x0B\xE5\x6D\x09\xAE\xB1\xA5\xBC\xAA\x42\x0B\xE5\x6F\x05\x78\x0C\xE5\x71\x01\xAE\x0C\xCB\x8E\xB9\x43\x0C\xE5\x74\x09\xB6\xAF\xC3\x9A\xB5\xB2\xB8\xE1\xA0\xBD\xB2\xB9\x01\x75\x0F\xB6\xA2\xE3\xA8\xB2\xAC\xB0\x8F\xBC\x99\x7A\x0D\xEB\x8E\xAD\xB8\xBB\xE5\xB8\xB7\xBA\xBE\x68\x81\x47\x0D\xBD\xC2\xBB\xB6\xBD\xBE\x03\xC2\xC1\xC1\xBF\xEF\x8C\xB8\xC3\x73\x38\x31\xA9\x0C\xC0\xF2\xB1\xBD\xAC\xBF\x09\xE4\xB6\xC1\xC4\xF7\x85\xCB\xC2\xC2\x00\x3A\x00\xC7\xC4\x1A\xD5\xCE\xB8\xBC\x19\xC7\xC0\x03\x0E\x1F\xC1\xB8\xC4\xC1\x26\xE4\xCC\xCB\xCA\x02\x7D\x1A\x41\x4A\x95\xBC\x64\xCE\x7E\x57\x77\xC3\x43\x4A\xCB\x7A\xC2\x40\x4F\xF1\xB3\x4E\x69\x42\x3E\xFD\xCA\x40\x42\x25\xF3\x4F\x3F\xD0\x06\x48\xD7\x6C\xCF\x00\x10\xD2\xD0\x98\x4E\xFC\x63\x4C\xD4\x45\xCD\x7C\xD3\xCE\x6C\x55\xDB\x73\xD5\x21\x57\x5B\xD6\x40\x52\xF0\x4E\xD5\x73\x33\x67\xDA\xD2\xD9\x6C\x73\x49\xD4\x58\x41\xF0\x43\xD9\x40\x3F\x57\x55\xDF\x6A\x6E",
					"\xE0\x97\xDF\x6D\x79\xF5\xCB\x73\xDE\x56\xF0\x49\xD5\xD9\x2D\x40\xEF\xD6\xE0\x3E\x6C\x56\xE0\xDA\x88\xE1\xD7\x6F\xE2\x6B\xED\x49\xD4\xD0\x49\xD3\xD4\xD2\xE2\x6D\xCD\xED\xD2\xCA\x96\xDB\xE7\x56\xDA\x91\xDB\x49\xD4\xE4\x9A\xC3\x40\xDD\xE5\x72\xC9\xE9\xCE\x42\xA7\xEF\xCD\xE7\x40\xA4\xED\x40\xE9\xE8\x19\x59\xDA\x6D\xEC\xB4\xC3\xE8\xE7\x55\x7D\xF8\xCB\x68\xEE\xA1\xFA\xE6\xDD\xE6\x92\xEA\xEF\xEC\xF1\x1F\x76\xEB\xEC\xDE\xA5\xFF\xCC\xE5\xEA\x97\xC3\xFC\xED\xF3\x01\x73\xE7\x8F\xEB\x7B\x52\xFC\xF1\xF1\x7E\xCD\x70\xF1\xE4\xC2\xC7\xF3\xF4\xF7\xBE\xCF\xE8\xF2\xE8\xC6\xE6\xF3\xF9\xF2\x8E\xEA\xFB\xF4\xFB\x09\x54\xEE\xE8\xF4\x06\x59\xD3\x4F\xF7\x6B\xD9\xD6\xF4\x94\xD8\xD5\xFD\xD7\xF9\x1A\x38\x7E\xD2\x61\x7E\x7C\xBE\x54\x79\x6A\xCB\x66\x80\xF9\x5C\x6A\x7A\x05\xB0\x7E\x20\x02\x82\x81\xEF\x6D\x77\x7E\x00\xB5\x72\x21\xF2\x77\x61\xFF\x00\x06\x7E\x98\x12\x87\x80\xFB\x6E\x4B\x06\xA1\x89\x22\x12\x8A\x6E\x84\x69\x76\x83\x3F\x1F\x8B\x80\x81\x11\x82\x85\xCA\x7F\x72\x0A\xA8\x84\x7E\xD3\x6C\x2D\x75\x81\x6D\x24\x0E\x87\x7A\x86\x15\xB3\x68",
					"\x00\x19\x8B\x3B\x0F\xC1\x8A\x6B\xF6\x7C\x37\x87\xBA\x3B\x84\xE3\x3D\x8B\x7D\xD0\x2A\x5E\x88\x08\x90\x88\xD4\x22\x20\x8A\x0E\x95\x8C\x88\x54\x92\x89\xFA\x02\x2A\x89\xB3\x50\x6E\x8B\x47\x65\x3F\xD9\x7A\x78\x83\x30\x9D\x78\x8C\x09\x36\x31\xF9\x0B\x25\x3C\x35\x8C\x86\x20\x6E\x82\x21\xD6\x71\x81\x20\x22\xB4\x89\x8A\x70\x85\x3C\xD4\x7B\x83\x67\x32\x9D\x78\x6A\x3F\x85\x3B\x78\x5B\x81\x20\xF2\x10\x8B\x0E\xE5\x3D\x21\xA0\x50\x84\x0F\xF2\x19\x6A\x52\x50\x95\x0D\x79\x44\x87\x4E\x28\xB6\x0A\x8F\x0A\x28\x40\x14\xF7\x08\x93\x84\x1A\x96\x88\x78\x05\x3F\xE2\x5F\x40\x8B\x3C\x22\x92\x21\xA4\x86\x8A\x1E\x0E\x9A\x20\x4E\x50\x8B\x0F\x93\x8A\x21\xA6\x50\x8C\x0F\xF2\x3C\x05\x8A\x02\x95\x8A\xAC\x59\x89\x68\x5D\x9D\x85\x34\x56\x5C\x8E\xC4\x57\x89\x3C\x2B\x44\x87\x62\xBA\x8A\x8B\x73\x56\x44\x88\xA8\x4B\x77\x97\xA7\x3D\x22\x09\xBA\x9F\x38\x34\xB9\x89\x7A\x64\x47\x98\xC2\x56\x42\x90\x83\x04\x8E\x65\xCE\x7D\x7B\x32\xE9\x39\x3F\x81\x1F\x9C\x63\x8B\x64\x71\x34\xE9\x31\x41\xF8\x6A\x65\x23\x4A\x8A\x9D\x68\x56\x4B\x41\x35\x9B\x65\x34\xD6\x8A",
					"\x4A\x95\x24\x42\x9C\x8E\x77\x8F\x3E\xEB\x36\x4A\x8B\x5D\x7C\x48\x6C\x8A\x4D\x9B\xB0\x65\x99\x7A\x29\x98\x24\x85\x86\xA2\x20\x08\xB2\x8E\x43\xE4\x44\x4F\x87\x88\x61\x6B\x59\x71\xA1\x1D\x93\xAA\x49\x45\xB5\x79\x3D\xCF\x84\x3A\x42\x7E\x31\xA1\xF4\x14\x57\xA3\xEB\x23\x8E\x48\x89\x23\xA0\x32\x56\x4B\x96\x28\xA4\x4F\x0F\x99\xAC\x74\x8E\xA6\x4E\x53\x16\xA0\x03\xA8\x39\xA6\x91\x98\x83\x22\xA3\x04\x36\xA4\xC2\x29\x59\xA7\x56\x79\xA5\x9C\x12\xA3\x91\x42\x3F\x83\x9D\xF5\x34\x55\x9F\x16\x61\x20\x40\x86\x20\xA9\xA6\xBD\x97\x9D\x0D\x23\xA6\x50\xB2\x56\x56\xA8\xAE\x5C\xA4\x06\x26\x41\x49\xC3\x94\xAC\x83\x20\xAB\x20\x53\xBA\x9D\x7A\x38\x5D\x7A\x64\x79\xA7\xAC\x64\x6A\x21\x3B\x86\x29\xAC\x33\x56\x48\x5A\xDD\x72\x59\x4E\xF3\xAF\x8D\x81\x22\xAE\x20\xFC\x23\xAC\x99\x56\x5E\xAA\x8A\x5F\x96\xAF\x5B\xA0\x9F\x3D\xA7\x37\xB0\x81\x3C\xAE\xAE\x58\xA5\xAF\x40\x75\x93\x21\x96\xAA\xAB\x3D\xD8\x45\xB1\xC8\x16\xBE\x85\xC4\xA3\x34\x5B\x39\xAF\x3B\x5F\x8D\xAC\xA5\x3E\x82\xB2\x49\x4F\x9E\xA6\x99\x14\xB9\xA8\x83\x1C\xB3\xA3\xA7\xA6\x4F\xBF\x21",
					"\xB3\x35\xD7\x96\x8D\xB4\x09\x30\xAF\x36\xE9\x3F\x60\xDA\xA5\x33\x4A\x39\xB6\xB6\x6D\xD6\xAA\x48\x94\x7E\xB7\x34\x62\x4A\xB5\x40\x36\xB0\xB8\x97\x91\xB7\xAA\xB8\xBF\x2A\x67\xA5\x3D\x06\xD3\x86\x27\x07\xD6\xA3\x21\x25\xCA\xB0\x00\xDB\x93\x9D\x8A\xCF\x21\x09\x76\x82\x23\x09\xF1\x81\x20\x92\xDC\xA5\xA0\x04\xD3\xB7\x35\x22\x26\xBA\x56\x97\x59\xA6\x7A\xA4\xBE\xB9\xF5\x07\x0F\xBD\xCF\x2E\x95\x7A\xFE\x85\xBE\x32\x49\x08\xBF\xA3\x21\x56\x7C\xDA\xA1\xB6\x84\x4B\x08\xC0\xA5\x27\x57\x80\xD1\xB7\xB2\x32\x4D\x08\xC1\xA7\x2B\x57\x82\xD2\xB5\xC0\x59\x4F\x0F\xBD\x51\x0F\xBC\xAC\x13\xC3\x21\xEF\x90\x8F\x39\x53\x0F\xBD\x15\x6F\xBD\xAA\xEE\x8D\xBB\x20\xFC\x9D\xBE\x92\x57\x09\x65\x84\x0C\xA2\x20\x27\xD0\xB2\x64\xC8\x98\x94\x85\x33\xBA\xC6\xD0\xB9\xC7\x40\x49\xB9\xA1\x0A\xCF\x38\x0B\x10\xC1\x36\x5B\xF6\x90\x00\x1E\xED\xB5\xC1\x4A\x5A\x09\x90\xB3\x3A\x59\xEE\x46\xC8\xB6\x2A\xC6\x4C\x17\x4B\xC1\x36\xBC\x84\xCF\xC9\x00\x1A\xB7\x2E\xE9\x3E\x0A\x2A\xCC\x3A\xAF\x57\xCA\x23\x70\xA3\x36\x4A\x30\x1E\xCD\x23\xD4\x4E\xC9\x4D\xBE\xC3\x34\x31",
					"\x2F\xBC\x0C\xEF\xA4\xB1\x98\x89\x2E\xC2\x23\x8F\x3E\x0C\xEF\xA8\x0F\x7B\x99\xB4\xC9\xED\x83\x25\xA2\x51\xC8\x62\x1A\x2D\xC6\x20\x8F\xBF\xCC\xBD\xA1\x2B\x0C\xA1\x83\x28\xBD\x43\xEC\xCD\x34\x6C\x0B\xD2\x40\x27\xA3\x20\x2D\xC4\xBE\x4C\x6D\x07\xCE\x42\x20\xB4\xC8\x4A\xC2\x23\xCC\xC0\x89\x3F\x1B\x1A\xD9\x20\x6F\x5D\x78\xA6\x96\x48\xD3\x6C\x71\x02\xD3\x80\x3A\xB9\xD5\x8F\xC7\x36\x1C\x2D\xD0\x00\x9C\xB6\xCC\xCC\x4A\x7B\x26\x2E\x8B\x71\x25\x18\x9D\x7A\x97\x01\x32\x9E\x4B\x42\xDA\x23\x29\xBC\x96\x88\xC6\xC7\xCC\x34\x8F\x86\x88\x5F\xDC\xBD\xD7\xBA\x87\x9C\x4E\x52\xDD\x24\x2C\xBA\xD4\x98\xD8\xD0\x89\x2E\x92\x81\xA4\x42\xA1\x69\x9D\xF0\x8A\x32\x32\xB3\x21\x9F\x70\xC0\xD9\x21",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* ParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"JLiteral",
					L"JField",
					L"JObject",
					L"JArray",
					L"JValue",
					L"JRoot",
				};
				return results[index];
			}

			const wchar_t* ParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][JLiteral] BEGIN ",
					L"[1][JLiteral] END [ENDING]",
					L"[2][JLiteral]< \"false\" @ >",
					L"[3][JLiteral]< \"null\" @ >",
					L"[4][JLiteral]< \"true\" @ >",
					L"[5][JLiteral]< NUMBER @ >",
					L"[6][JLiteral]< STRING @ >",
					L"[7][JField] BEGIN ",
					L"[8][JField] END [ENDING]",
					L"[9][JField]< STRING \":\" @ JValue >",
					L"[10][JField]< STRING \":\" JValue @ >",
					L"[11][JField]< STRING @ \":\" JValue >",
					L"[12][JObject] BEGIN ",
					L"[13][JObject] END [ENDING]",
					L"[14][JObject]< \"{\" @ { JField ; \",\" } \"}\" >",
					L"[15][JObject]< \"{\" { JField ; \",\" @ } \"}\" >",
					L"[16][JObject]< \"{\" { JField ; \",\" } \"}\" @ >",
					L"[17][JObject]< \"{\" { JField @ ; \",\" } \"}\" >",
					L"[18][JArray] BEGIN ",
					L"[19][JArray] END [ENDING]",
					L"[20][JArray]< \"[\" @ { JValue ; \",\" } \"]\" >",
					L"[21][JArray]< \"[\" { JValue ; \",\" @ } \"]\" >",
					L"[22][JArray]< \"[\" { JValue ; \",\" } \"]\" @ >",
					L"[23][JArray]< \"[\" { JValue @ ; \",\" } \"]\" >",
					L"[24][JValue] BEGIN ",
					L"[25][JValue] END [ENDING]",
					L"[26][JValue]<< !JArray @ >>",
					L"[27][JValue]<< !JLiteral @ >>",
					L"[28][JValue]<< !JObject @ >>",
					L"[29][JRoot] BEGIN ",
					L"[30][JRoot] END [ENDING]",
					L"[31][JRoot]<< !JArray @ >>",
					L"[32][JRoot]<< !JObject @ >>",
				};
				return results[index];
			}

			const wchar_t* ParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			Parser::Parser()
				: vl::glr::ParserBase<JsonTokens, ParserStates, JsonAstInsReceiver>(&JsonTokenDeleter, &JsonLexerData, &JsonParserData)
			{
			};

			vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::json::JsonNode> Parser::ParseJRoot(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::json::JsonNode, ParserStates::JRoot>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::json::JsonNode> Parser::ParseJRoot(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::json::JsonNode, ParserStates::JRoot>(tokens, this, codeIndex);
			};
		}
	}
}
