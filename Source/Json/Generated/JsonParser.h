/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Json
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_JSON_PARSER_SYNTAX
#define VCZH_PARSER2_BUILTIN_JSON_PARSER_SYNTAX

#include "Json_Assembler.h"
#include "Json_Lexer.h"

namespace vl
{
	namespace glr
	{
		namespace json
		{
			enum class ParserStates
			{
				JLiteral = 0,
				JField = 7,
				JObject = 12,
				JArray = 18,
				JValue = 24,
				JRoot = 29,
			};

			const wchar_t* ParserRuleName(vl::vint index);
			const wchar_t* ParserStateLabel(vl::vint index);
			const wchar_t* ParserSwitchName(vl::vint index);
			extern void JsonParserData(vl::stream::IStream& outputStream);

			class Parser
				: public vl::glr::ParserBase<JsonTokens, ParserStates, JsonAstInsReceiver>				, protected vl::glr::automaton::TraceManager::ITypeCallback
			{
			protected:
				vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
			public:
				Parser();

				vl::Ptr<vl::glr::json::JsonNode> ParseJRoot(const vl::WString& input, vl::vint codeIndex = -1) const;
				vl::Ptr<vl::glr::json::JsonNode> ParseJRoot(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
			};
		}
	}
}
#endif