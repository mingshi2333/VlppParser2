/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Json
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_JSON_AST_ASSEMBLER
#define VCZH_PARSER2_BUILTIN_JSON_AST_ASSEMBLER

#include "JsonAst.h"

namespace vl
{
	namespace glr
	{
		namespace json
		{
			enum class JsonClasses : vl::vint32_t
			{
				Array = 0,
				Literal = 1,
				Node = 2,
				Number = 3,
				Object = 4,
				ObjectField = 5,
				String = 6,
			};

			enum class JsonFields : vl::vint32_t
			{
				Array_items = 0,
				Literal_value = 1,
				Number_content = 2,
				Object_fields = 3,
				ObjectField_name = 4,
				ObjectField_value = 5,
				String_content = 6,
			};

			extern const wchar_t* JsonTypeName(JsonClasses type);
			extern const wchar_t* JsonCppTypeName(JsonClasses type);
			extern const wchar_t* JsonFieldName(JsonFields field);
			extern const wchar_t* JsonCppFieldName(JsonFields field);

			class JsonAstInsReceiver : public vl::glr::AstInsReceiverBase
			{
			protected:
				vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
				void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
				void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
				void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem) override;
				vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
			};
		}
	}
}
#endif