/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_RULEPARSER_SYNTAX
#define VCZH_PARSER2_PARSERGEN_RULEPARSER_SYNTAX

#include "ParserGen_Assembler.h"
#include "ParserGen_Lexer.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			enum class RuleParserStates
			{
				OptionalBody = 0,
				Syntax0 = 5,
				Syntax1 = 28,
				Syntax2 = 33,
				Syntax = 39,
				Assignment = 42,
				Clause = 47,
				Rule = 69,
				File = 75,
			};

			const wchar_t* RuleParserRuleName(vl::vint index);
			const wchar_t* RuleParserStateLabel(vl::vint index);
			extern void ParserGenRuleParserData(vl::stream::IStream& outputStream);

			class RuleParser
				: public vl::glr::ParserBase<ParserGenTokens, RuleParserStates, ParserGenAstInsReceiver>				, protected vl::glr::automaton::TraceManager::ITypeCallback
			{
			protected:
				vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
			public:
				RuleParser();

				vl::Ptr<vl::glr::parsergen::GlrSyntaxFile> ParseFile(const vl::WString& input, vl::vint codeIndex = -1) const;
				vl::Ptr<vl::glr::parsergen::GlrSyntaxFile> ParseFile(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
			};
		}
	}
}
#endif