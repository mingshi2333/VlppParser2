/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_RULEPARSER_SYNTAX
#define VCZH_PARSER2_PARSERGEN_RULEPARSER_SYNTAX

#include "ParserGen_Assembler.h"
#include "ParserGen_Lexer.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			enum class RuleParserStates
			{
				Syntax0 = 0,
				Syntax1 = 19,
				Syntax2 = 24,
				Syntax = 30,
				Assignment = 33,
				Clause = 38,
				Rule = 57,
				File = 63,
			};

			template<RuleParserStates> struct RuleParserStateTypes;
			template<> struct RuleParserStateTypes<RuleParserStates::File> { using Type = vl::glr::parsergen::GlrSyntaxFile; };

			const wchar_t* RuleParserRuleName(vl::vint index);
			const wchar_t* RuleParserStateLabel(vl::vint index);
			extern void ParserGenRuleParserData(vl::stream::IStream& outputStream);

			class RuleParser: public vl::glr::ParserBase<ParserGenTokens, RuleParserStates, ParserGenAstInsReceiver, RuleParserStateTypes>
			{
			public:
				RuleParser();

				vl::Ptr<vl::glr::parsergen::GlrSyntaxFile> ParseFile(const vl::WString & input, vl::vint codeIndex = -1);
			};
		}
	}
}
#endif