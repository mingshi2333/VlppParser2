/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_RULEPARSER_SYNTAX
#define VCZH_PARSER2_PARSERGEN_RULEPARSER_SYNTAX

#include "ParserGen_Assembler.h"
#include "ParserGen_Lexer.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			enum class RuleParserStates
			{
				Cond0 = 0,
				Cond1 = 8,
				Cond2 = 14,
				Cond = 20,
				SwitchItem = 23,
				Switches = 28,
				OptionalBody = 34,
				TestBranch = 39,
				Token = 45,
				Syntax0 = 50,
				Syntax1 = 80,
				Syntax2 = 85,
				Syntax = 91,
				AssignmentOp = 94,
				Assignment = 98,
				Clause = 103,
				Rule = 125,
				File = 131,
			};

			const wchar_t* RuleParserRuleName(vl::vint index);
			const wchar_t* RuleParserStateLabel(vl::vint index);
			const wchar_t* RuleParserSwitchName(vl::vint index);
			extern void ParserGenRuleParserData(vl::stream::IStream& outputStream);

			class RuleParser
				: public vl::glr::ParserBase<ParserGenTokens, RuleParserStates, ParserGenAstInsReceiver>				, protected vl::glr::automaton::TraceManager::ITypeCallback
			{
			protected:
				vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
			public:
				RuleParser();

				vl::Ptr<vl::glr::parsergen::GlrSyntaxFile> ParseFile(const vl::WString& input, vl::vint codeIndex = -1) const;
				vl::Ptr<vl::glr::parsergen::GlrSyntaxFile> ParseFile(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
			};
		}
	}
}
#endif