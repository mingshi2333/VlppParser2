/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 406; // 2193 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 150;
				static const vl::vint dataSolidRows = 1;
				static const vl::vint dataRows = 2;
				static const char* compressed[] = {
					"\x91\x08\x00\x00\x8E\x01\x00\x00\xFF\x00\x81\x80\x87\x00\x05\x82\x82\x00\x04\x87\x8A\x8A\x84\x03\x84\x01\x05\x0E\x92\x0E\x98\x0E\x81\x12\x87\x12\x0E\xA9\x0E\x82\x82\x86\x84\x00\x8E\x01\x9E\x9E\x81\x0B\x88\x93\x7E\x8F\x26\xA7\xA5\x80\x98\x96\x91\x96\x96\x2B\x9C\xA3\x8E\x84\x93\x85\x95\x97\x32\xB1\x9D\x8E\x82\x04\x9A\x87\x01\x3E\xB6\xAE\x8E\x8D\x83\x85\x9A\x85\x37\xBA\xA1\x8A\xA0\x80\x9F\x9C\xA1\x30\x8B\x85\x01\xA8\xA3\xA0\xA9\x9C\x57\xCF\x95\xB1\xAB\xA8\xAD\xAE\xAD\x07\xC9\x99\xAB\xA3\xB5\xA6\x86\x03\x54\xE1\x96\xBF\xA4\xB2\x85\x84\x85\x47\x87\x88\x09\xB6\x82\xB0\xB6\xB3\x0B\x89\x34\xA5\x8A\x03\xBC\x00\x07\x0E\xD3\xA5\xA9\x9F\x7A\xC3\xBA\xC2\x71\xA2\x85\x89\x9F\xB7\x81\x01\xA2\x6A\xA0\x89\xC5\x8D\x9B\xC1\xC6\x83\x8F\x83\xD3\xC0\x0B\xCC\xC4\x9A\xC8\x75\xA6\x86\xD1\xC4\xC2\x83\xD1\xD0\xA5\xA6\xCC\xA4\xC7\xD3\xC5\xD4\xD5\x83\xA9\xAD\xDF\x8F\xD5\xB6\xC5\x82\x10\x8B\x95\xD0\xB7\xDE\xC7\xD4\xA7\xB6\x86\xBA\xB2\xAE\xBD\xCF\xB4\xD2\x60\x86\x8D\x0E\x8C\x04\x9E\xE7\xC1\xC0\xF8\x8A\x80\xCB\x85\xE7\x84\xD0\x06\xBB\xC8\xE1",
					"\xEE\xD4\xAF\x82\x08\xCC\xE7\x8F\xE7\xC1\xEA\x97\x84\x0B\x0E\x93\x0E\x93\xB6\xA7\xDE\xF7\x85\x20\x0E\x99\x0E\x83\xE4\xDC\xE9\xF7\x0A\xA3\x0E\x82\x1E\x85\xBD\xF7\xFB\x00\x8A\x44\x0B\x7E\x0E\x79\x66\x7C\x79\xF8\x47\x47\x0A\x43\x26\x21\x7F\x7C\x82\x01\x87\x48\x08\x83\x0E\x4B\x7F\x83\x76\xD2\x58\x86\x7A\x42\x1A\x7D\x67\x6F\x86\x1E\x9C\x63\x4E\x4D\x9B\x62\x8E\x5E\x89\x17\x87\x4A\x76\x8A\x1B\x6B\x89\x76\x47\x2E\x94\x60\x8E\x47\x40\x7F\x4B\x45\x8D\x0B\x78\x8A\x42\x8E\x07\x7C\x86\x40\x76\x3F\x9B\x40\x91\x41\x43\x80\x05\x93\x91\x1E\x48\x91\x62\x47\xB3\x45\x6C\x92\x47\x68\x62\x76\x4D\x94\x0B\x54\x9A\x40",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, codeIndex);
			};
		}
	}
}
