/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1798; // 21162 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 6;
				static const vl::vint dataSolidRows = 7;
				static const vl::vint dataRows = 8;
				static const char* compressed[] = {
					"\xAA\x52\x00\x00\xFE\x06\x00\x00\x15\x00\x01\x82\x80\x07\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x82\x1A\x86\x12\x84\x63\x03\x09\xBF\x7B\x8C\x8B\x8E\x84\x00\x1D\x9D\x9F\x81\x9C\x8B\x90\x93\x7F\x26\xA4\xA9\x81\x9B\x92\x92\x85\x93\x28\xAF\xA7\x8D\x95\x92\x9A\x94\x9B\x2C\xB8\xAE\x9A\x83\x9A\x9D\x9A\x9E\x37\xC0\xB9\x82\xAB\x9E\x80\x98\x9A\x1E\x9F\x8A\x81\x0E\x99\xA4\xA3\x9F\x46\xBD\x8F\xAE\xA1\xA9\xA1\xAB\xA1\x57\xC5\x83\x87\xAD\xA1\x9B\xA8\xAF\x59\xD0\x9B\xB2\xA1\xB4\xAB\xB0\xAB\x67\xD8\xA9\xBA\xA2\x84\xAF\xAE\xA4\x60\xEB\xA2\xAD\xB4\xB2\xBA\xB2\xBA\x68\xF8\xAA\xBA\xBC\xB1\x80\xA7\x84\x7F\xE5\xB1\xBC\xB3\xB9\x82\xB6\xC1\x70\x89\xDD\xAA\xCF\xB3\xC6\xC7\xC6\x90\x88\xCF\xD2\xC1\xCE\xBB\xC0\xC3\x75\x84\xF7\xB8\xC9\xBC\xCF\xBC\xCF\x7D\xA0\x99\xC0\xD5\xC2\xD1\xCE\xD3\x9F\xA8\xE1\xC7\xC6\xCC\xC4\xCB\xD7\xAD\x93\xF1\xC9\x82\x03\xA6\xD8\xCD\x97\xAA\xE5\xCC\xD8\xDE\xD7\xD8\xD8\xBD\xB7\xE4\xDB\xC0\x01\x8C\xC0\xE1\xBA\xC4\xFC\xC3\xE9\xDB\xE5\xE5\xE6\xA3\xCF\xFE\xC1\xE5\xCC\xE8\xE0\xE6\xD3\xD8\xC8\xEE",
					"\xEC\xE9\xE9\xEF\xD3\xDF\xA9\xE1\xEB\xDE\xED\xF0\xF0\xF3\xE2\xE8\xE4\xE7\xFC\xF1\xF5\xF7\xF5\xEE\xF1\xF0\xF3\xFB\xDA\xF5\xFB\xF7\xF7\xF2\xF9\xF4\xFA\xE6\xF9\xFE\xFC\xFF\x7A\x71\x80\x7F\xD0\x40\x85\x81\x6A\x0C\x47\x75\x76\x76\x0B\x92\x7B\x76\x7F\x07\x84\x89\x76\x83\x0D\xA3\x7B\x7D\x69\x05\x36\x65\x84\x84\x13\x96\x84\x72\x01\x1A\x97\x74\x86\x88\x1E\x91\x87\x87\x80\x27\xA6\x88\x8B\x8A\x2A\xAD\x83\x84\x42\x06\x41\x6F\x6F\x8C\xD6\x74\x8C\x82\x88\x08\x21\x86\x8F\x88\x03\x49\x0A\x8D\x8D\x40\xB7\x8B\x8D\x89\x1D\x9C\x8F\x82\x81\x45\x88\x97\x92\x80\x2E\x8B\x92\x86\x93\x29\x89\x9C\x92\x94\x4F\x9B\x8A\x91\x42\x0A\x3F\x82\x91\x90\x3C\x9C\x94\x90\x94\x2C\x94\x91\x94\x98\x4D\x89\x4E\x42\x82\x24\x86\x96\x97\x94\x64\xA2\x91\x99\x9B\xC8\x4C\x0A\x41\x6D\x6B\x95\x99\x9B\x95\x77\xAC\x95\x9F\x98\x7B\xAF\x9D\x9D\x99\x79\xB6\x93\x92\x9A\x22\x8E\x0A\x95\x97\x5B\x89\xA8\xA3\xA2\x5F\xBF\x9E\x98\xA0\x83\xB8\x91\xA6\x9E\x81\xBC\x92\x8B\x03\x87\x8D\xA5\xA6\x9F\x9B\x90\xAE\x94\xA1\x93\x82\xAF\xA6\xA4\xA3\x94\xA1\xAA\xA5\xA7\x9C\xA9\xAA\xA7",
					"\x8A\x9A\xAB\x8C\x04\x99\xA0\xA5\xAA\xA8\xAD\xB2\xA5\xAC\xA9\x01\x51\x01\xAC\xAE\x8C\xB6\xAD\xAC\xAF\xAE\xB3\xA8\xAA\xB0\xAA\x84\xBC\xAB\xAF\xA6\x86\xBF\xA3\xB2\x70\x8E\xAF\x43\xAE\xC9\xB7\xA1\xB4\xB2\xB4\x94\xB3\xB2\xB4\xD5\x81\xB1\x43\x04\xD0\x99\xBE\xAE\xB6\xD6\x85\xB8\xB7\xB5\xE1\x87\xB0\xBB\xB9\xDF\xA9\xB0\xB2\xBA\xD3\xA8\xBB\xBB\xBB\xED\xAC\xBE\xB4\xBC\xF3\xB1\xB4\xBC\xB9\xEE\xB6\xBA\xBD\xBD\xD5\x94\x0D\xB4\xBE\xF2\x80\xC7\x68\x40\x68\xAB\xAC\xB2\xB3\x08\xDD\xA7\xC2\xC2\x0A\x56\x03\x9D\xB3\x06\x58\x0F\xBE\xB8\xE5\x8B\xC6\xC0\xC4\x17\xC9\xC9\xC4\xC3\x1A\xCA\xB8\xC6\xC7\x1D\xE3\xB4\xC5\xBE\xFC\x82\xC9\x6A\x44\x05\xE0\xCC\xC7\xCA\x1B\xED\xCA\xCA\xCB\x22\xE6\xB1\xC0\xC5\x1A\x13\xC2\xCF\xBD\x23\xF3\xC9\x6F\x06\x36\xD6\xCF\xCB\xCF\x31\xFE\xC1\xD3\xC7\x43\xE1\xC5\xC4\xD1\x47\xC6\xD4\xCA\xC9\x25\xF9\xC8\xCF\xCD\xFB\x8C\xD2\xD6\xD3\x51\xD4\xDD\xD0\xD4\x57\xC2\xD9\xD2\x88\x1C\x3D\xC8\xD3\xD2\x56\xD3\xD8\xD6\xD8\x1F\x5D\x0E\xD5\x83\x1E\x27\xDC\xC8\xD0\x5B\xF0\xCD\xD8\xDB\x60\xE3\xD1\xDB\xDC\x72\xF5\xD3\x87\x07\x6A",
					"\xEE\xD1\xDE\xD6\x7B\xDF\xD1\x74\x08\x79\xF0\xDA\xCC\xDF\x83\xFE\xD7\x69\x08\x81\xC5\xDB\xDA\xE2\x3B\x94\x49\xC8\xE3\x82\xCF\xD4\xE2\xE4\xC8\x63\x09\xE3\xDB\x90\xD9\xEB\xA0\x09\x97\xFD\xDA\xD1\xE1\x09\x65\x0D\xE4\xE8\x8B\xD8\xE6\xEA\xE7\xA5\xE8\xEA\xDC\xE9\x3B\x96\x4F\xE0\x00\x27\x23\xE4\xE7\xE7\xB3\xE9\xEC\xE9\xE4\x55\xF6\xD6\xE1\xEE\x93\xFC\xEB\xED\xD6\xBF\xE4\xD8\x70\x0A\xB2\xFE\xE4\xEE\xF1\xB6\xF5\xEB\xEA\xF2\xB8\xE1\x69\x09\xF1\xC0\xC7\xF1\xF5\xF2\xC8\xCB\xF5\xF5\xF3\xC2\xC9\x4A\x0B\xA1\x2B\x10\xF9\xF4\xF5\xD3\xD6\xF1\xF8\xF6\x74\xFD\xE3\xFA\xE6\xAA\xE4\xFA\xEE\xF4\xDF\xE2\xF5\x68\x0B\x97\xED\x07\xA2\x0B\xDE\xE5\xF1\xF2\xFD\xEC\xF8\xF0\xF9\xFB\x02\x6F\x07\xE4\x0C\x87\x51\x05\xFD\x6B\x7B\x7E\xFD\x6E\x7E\x80\xEA\x7A\x6B\x0F\x0F\x69\x21\x1C\x7F\x48\x26\x30\x46\x22\x03\x96\x39\x43\xAF\x30\x24\x4E\x06\x31\x82\xB1\x10\x8F\x22\x88\x02\x30\x83\x03\x33\x83\xAA\x1C\x8A\x20\x11\x8C\x38\x84\x02\x26\x85\xCC\x24\x8D\x81\xAF\x15\x82\x30\x25\x4C\x87\x40\x02\x09\x41\x11\xA7\x22\x83\x01\x34\x87\x57\x32\x4A\x28\xE6\x38\x80",
					"\x00\x01\x15\x84\x6E\x3C\x89\x87\xAE\x3F\x81\x88\x3B\x96\x67\x11\xC2\x87\x84\x85\x0C\x8B\x85\x37\x9F\x23\x13\xB1\x81\x8A\xDA\x13\x88\x42\x32\x82\x22\x0E\x82\x3F\x84\xCB\x17\x82\x21\xC6\x3D\x51\x16\x82\x2E\x82\x1B\xA4\x27\x87\xC5\x3F\x28\x0A\x81\x2F\x89\xE7\x2B\x88\x00\x6D\x90\x25\x17\xB8\x3F\x8B\x84\x21\x8E\x32\x6F\x9F\x86\x1C\xDD\x2B\x8E\x0B\xA7\x27\x8D\x6F\x95\x8E\x41\x77\x88\x36\x40\x9D\x29\x8F\x5D\x33\x8C\x73\x02\x93\x20\x42\x8D\x89\x21\x7A\x87\x26\x22\xCF\x3C\x90\x81\x0E\x96\x8D\x0A\x31\x93\x19\x9F\x28\x87\x31\x81\x25\x93\x55\x91\x46\x23\x9E\x91\x01\x51\xA7\x21\x8E\x30\x27\x94\x1F\xA1\x96\x21\x35\x9E\x90\x00\xAE\x8C\x97\x0C\xDF\x24\x61\x1E\x82\x24\x88\xB0\x8C\x81\x2B\xE0\x8E\x88\x85\x13\x90\x44\x90\x9E\x95\x26\x8A\x20\x98\x09\x82\x9D\x85\x09\x25\x99\x8F\x47\x96\x20\x1F\x49\x9A\x21\x59\x56\x95\x0A\x8A\x26\x07\x43\x5F\x22\x85\x00\x17\x07\xA1\x6F\x87\x02\xE4\x17\x90\x70\x09\x38\x07\xA1\x5F\x9A\x21\x1C\x07\x55\x8D\xA2\x69\x22\x0E\x07\x58\x96\xCE\x49\x23\x07\x87\x53\x90\xF1\x09\x2C\x07\x78\x8A\x27\x79\x09\x3D",
					"\x06\x3D\x89\x28\x9E\x83\x3E\x07\x50\x32\x12\x9A\x25\x82\xAE\x2F\x6D\x88\x3F\x8D\xB8\x97\x90\x2E\xE0\x57\x93\x40\xB7\x74\x8D\xC4\x9D\x97\xEB\x60\x5A\x98\x81\x11\x9A\x44\x93\x8E\xA3\x69\x3F\x8E\x99\x02\xB9\x37\x87\x97\x87\x89\x09\xBA\x92\x9A\x5C\x98\x9D\xA3\x07\x99\x34\x36\x97\x97\xA3\x81\x38\x97\x4C\xBB\x8F\x74\x2E\xA8\xA2\x21\x49\x8D\x03\x80\x1F\x2D\xA7\x41\x77\x79\x36\x98\x83\x27\xA6\xF9\x7D\xA6\x42\x30\x5D\x40\x43\x74\x30\x39\x3E\xA2\x22\xAE\x0D\x44\xA9\x98\xA2\x40\xA8\x06\x32\x4D\x42\x65\x83\x96\xA3\x46\xA9\xAA\x0A\x3E\x5F\x51\xC6\x68\x53\x84\x17\xA9\xA5\x1F\x2D\xAB\x40\x52\xA6\x20\x87\x5B\xAD\x74\x4B\xA6\x21\x57\x9E\xAD\x83\xAC\x8A\x22\x62\x13\xBE\x56\x56\x91\x68\x38\x94\x4E\xAB\x47\xB5\x9F\xA4\xD2\x08\xAA\x21\xBC\x82\x22\xAC\x5C\x5C\x67\x59\x8D\x97\x50\xBF\xB9\x50\x39\x66\x63\xB3\x42\x07\x56\xAC\x83\x1C\x59\x21\x78\x71\xAC\xAF\x5D\x99\x21\xC6\xA0\xAF\xAD\x7D\xBC\xA7\x47\x76\xA3\x20\xC1\x86\x20\x9C\x31\x48\x6A\x67\x83\x2D\x6B\x06\x48\x72\xB1\x8A\x45\xB6\x41\x11\xBC\xAC\x85\x2A\xB3\x20\x89\xAD\xB5\x42\x31",
					"\xB3\x21\xB4\x4D\x46\x72\xA8\xAB\x52\x6D\xAB\xBA\xB2\x85\x2C\xB3\x20\x73\xA3\x21\x3A\xA1\xBD\x41\x49\xB8\x97\xB7\x02\x27\xB6\x6C\x9F\xBE\xAD\x84\x2E\x74\xB8\x22\x55\xA1\x41\x89\x20\xB5\x81\x0A\xBF\xB2\x09\x37\xBA\x40\x35\x69\x21\xD8\x52\xB3\x5A\x8E\x66\x23\x68\x82\x23\x9E\xE8\xBB\x42\xA4\x09\x21\xBF\x40\x52\xB0\x01\x7E\xAE\xA0\x39\xD8\x8D\x9E\x42\x38\xB6\x21\xED\x5F\xBD\x5A\xC3\xA3\x20\x7D\x83\x2D\x7B\xFB\xA4\x5F\xB9\x9D\xAA\x20\xFC\x39\xBE\x38\x9A\x85\x8E\xB9\x11\xA9\x20\xFD\x04\xC1\x3B\xA4\x87\xC6\x20\xE5\xA3\x22\x77\x86\x20\x80\xFF\x94\x61\xC2\x02\x23\xBD\x40\x02\x86\xC3\xDC\x10\xAD\xAA\x10\xC9\xC2\x41\x01\xAD\xC3\x8F\x2B\xA8\xC4\x03\x2E\xBE\x40\x13\xC3\x21\x19\x38\xA7\x9E\x0A\x3A\xC0\x00\x34\x07\x73\xB4\xA8\xC2\x20\x2A\xC1\x20\x7B\xB5\x07\x73\xC7\xB7\xAA\x20\xF6\xA4\xA3\x48\x42\xC7\x97\x8F\x0B\xA0\x97\x40\x86\xCA\x92\xD6\x9F\x8D\x5C\x9A\x25\xC9\x50\xDF\x21\x94\xBC\x94\xCA\xA3\x17\x91\x8D\x55\xC3\x93\x47\x57\xCD\x8C\x38\xAF\x25\xCB\x60\xD2\x8A\x98\x92\xA9\x21\x2E\xD3\x90\x00\x93\x9F\x1F\x99\xE7\xCC\xBC\x00",
					"\x2C\xBF\x1F\x6D\xCD\xCC",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, codeIndex);
			};
		}
	}
}
