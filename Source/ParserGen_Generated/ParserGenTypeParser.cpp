/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2142; // 27640 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 94;
				static const vl::vint dataSolidRows = 8;
				static const vl::vint dataRows = 9;
				static const char* compressed[] = {
					"\xF8\x6B\x00\x00\x56\x08\x00\x00\x19\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x80\x89\x81\x1A\x80\x16\x84\x16\x0A\x90\x05\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x97\x97\x92\x9A\x2C\xB8\xAE\x9A\x90\x9C\x8D\x9A\x9E\x37\xBE\xB9\x82\xAB\x9C\xA1\x9E\x83\x32\xB6\xA0\x80\xAB\xA6\xA1\xA0\xA4\x3F\xCE\x8D\xA1\x96\x81\x00\xA7\x99\x52\xD8\x90\xA3\xAB\xAD\xA1\xAF\xA3\x03\xC9\x97\xAA\xAA\xA9\xB1\xA9\xAF\x4F\xE6\x9C\xAA\xBE\xAC\xB4\xB0\x81\x62\xD9\xA4\xB3\xB3\xB5\xBA\xB8\xBB\x68\xD3\xAE\xA9\xB0\xBF\xB3\xBC\xBD\x7D\xEB\x81\xCD\xB3\xC7\xB5\x81\xB8\x55\x8A\x96\xB7\xBC\xC1\xBD\xB3\xC2\x7C\x87\xFE\xB0\xC0\xC2\xCA\xC0\xCB\x84\x98\xC6\xC2\x93\xCA\xCD\xC8\xCE\x97\xA0\xD9\xC2\xDB\xC8\xC7\xBF\xC7\x9E\x95\xE4\xDF\xC6\xD4\xC8\xD5\xD5\xAA\xAD\xE9\xCF\xD2\xD8\xD8\xDB\xCE\xB6\xF4\x8D\xC7\xDA\xDE\xC5\xDE\xDE\x78\xC0\xFB\xCE\xDF\xDC\xE1\xE0\x81\x02\x0A\xC7\xF3\xD5\xE4\xE7\xE5\xDC\xCF\xB5\xD2\xF8\xD3\xE9\xD1\xEB\xD1\xB5\x83\x0A\xE3",
					"\xEE\xE4\xEC\xE8\xEF\xD7\xA5\xD4\xE3\xF6\xEC\xF0\xEC\xF3\xE2\xE5\xEA\xE7\xFB\xF1\xF4\xF7\xF7\xEE\xF1\xEC\xC8\xF3\xFD\xF5\xFA\xF8\xF7\xF2\xF1\xD4\xFB\xFE\xF9\xFE\xFC\xFF\x7A\x77\x6E\x7F\x03\x80\x85\x82\x80\xCD\x5F\x7E\x6D\x74\xFC\x47\x89\x7F\x83\x01\x90\x8E\x81\x84\x14\x93\x86\x85\x82\xE1\x52\x88\x85\x83\x1B\x84\x89\x80\x43\x09\x4B\x6B\x80\x78\x1C\x8C\x8E\x86\x89\x06\x9D\x89\x88\x8A\x08\x8A\x4B\x45\x88\x2C\x9A\x81\x8D\x85\x2A\xAD\x89\x42\x01\xDB\x63\x8A\x8E\x70\x3B\x86\x74\x8B\x89\x3F\xAB\x81\x92\x8D\x3D\x9D\x76\x43\x01\x39\xBC\x8A\x92\x8F\x45\x8A\x8B\x92\x91\x4F\x8E\x97\x41\x92\x4C\x91\x99\x00\x95\x50\x95\x9A\x95\x96\x5C\x92\x9D\x95\x86\x34\xB3\x87\x86\x98\x35\xB2\x83\x92\x99\x4D\xA0\x93\x9B\x99\x61\xAC\x9B\x99\x9A\x25\xAE\x95\x99\x9B\x06\x4A\x08\x96\x97\x78\xAA\x93\x9F\x9B\x51\xBA\x94\x9B\x9F\x72\x80\xAD\x92\x43\x30\x81\xA6\xA0\x9C\x40\x88\xA2\x92\xA2\x44\xBD\x91\x9D\x93\x0C\x0A\x49\x73\xA1\x8E\x89\xA5\xA7\xA2\x97\x8D\xAB\x95\x9E\x8F\x99\xA8\x9A\xA7\x74\xA0\xAC\x9F\xA6\x7E\x94\xA2\x42\x03\x77\xA5\xAC\xA3\xA7",
					"\xA4\x9D\xAD\xAA\xA5\xAF\x98\xA1\xAE\xA6\x5F\xAE\xA5\xAC\xAC\xB7\xB2\xA1\x43\x03\xA9\xB6\xAC\xA4\xAE\xBF\xBA\xA1\xB0\xAD\xC3\xAC\xA9\xAC\xB1\xAA\xA2\xAB\x9F\xB2\x82\x8A\xBD\xB3\xAC\xC6\x85\xB1\xAB\xA6\x10\x3D\xA0\xB1\xB2\xD0\x93\xB7\xB1\xB4\xD8\x9B\xBA\x69\x04\xD6\x82\xBD\xB6\xB4\xA3\x9E\xB5\xB8\xB9\xCC\xA6\xA6\xB9\xBA\xAB\x9A\xB8\xBB\xB3\xEB\xB0\xBF\xBA\xBA\xF3\x86\x40\x45\xA1\xED\xA7\xB3\xBB\xBE\xBE\xBC\xB7\xB5\xBF\x00\xFF\xB1\x6B\x04\xE1\x88\xB1\xC2\xB8\x07\xC6\xC2\xC0\xC2\x0B\xCA\xCC\xC3\xC3\x0E\xD1\xCC\xB5\xC2\x13\xCD\xC5\xC4\xC4\x17\xD2\xCE\xBA\xBF\x18\xDB\xC4\xC6\xC7\x16\xE0\xCD\xC6\xBE\x1F\xE4\xC1\xCA\xC9\xC2\x94\x05\xC1\xC6\x2C\xE2\xC4\xB1\x05\x2B\xEE\xCD\xC8\xCA\x1A\xF4\xC3\xCC\xBB\xCE\x89\x46\x06\xA4\xF2\x98\x01\xCE\xCD\x32\xC1\xD0\xD3\xD0\x38\xD9\xB4\xD2\xBC\x1C\xF5\xC5\xD1\xBC\xF4\x89\xD7\xCC\xD2\x25\xCB\xD8\x9E\x44\x89\x4D\xD1\xD4\xD4\x27\xD2\xDE\xD2\xD0\x5A\xD7\xD6\xD5\x68\x1A\x3F\xCD\xD5\xD6\x58\xE3\xC3\xDA\xD9\x65\xCA\xD9\xDB\xD3\x5F\xE8\xDD\xDB\x66\x1B\x22\xDB\xD8\xD7\x73\xC7\xDF\xD8\xDB\xF9",
					"\xA7\xDA\xDB\xDD\x74\xFC\xD6\xDD\xDE\x75\xFA\xD1\xB4\x07\x72\xDE\x7D\x05\xE1\x80\xFE\xD2\xE1\xDF\x89\xCD\xE9\xCE\xE3\x46\xCB\xEF\xDF\xE3\x94\xD1\xE2\xBE\x07\x88\xD5\xEC\xD0\xE4\x9B\xDA\xE5\xBE\xE7\x1F\x19\xE6\xE6\xE2\x81\xE5\xE4\xEB\xE9\x06\x60\x02\xE9\xE7\xA3\xDC\xE8\x9C\x45\xF8\x9E\xEB\xD7\xE4\xAD\xF2\xEE\xD6\xEB\xB5\x62\x0B\xEB\xE7\xB5\xFD\xED\x97\x08\xBB\xF3\xE2\xE7\xF0\xF2\xA4\x01\xF3\xED\xB6\xE4\xD8\xE9\xF2\x6E\xF8\xE8\xF2\xEF\xBC\xEC\xE1\x41\x09\x77\xA6\x07\xF2\xF2\xCE\xD8\xFC\xF3\xDE\xD9\xCD\xFB\xF4\xDE\xDF\xCC\xE1\xF8\xED\xD2\xD1\xF6\xFA\xF0\xA6\xDD\xFC\xF7\xF8\xC4\xCB\xF0\xF4\xFA\xEE\xE5\xF0\xFD\x93\x27\x17\xF3\x6A\x45\xB1\xEF\xFF\xF2\xFC\xFB\xE7\xFD\xFF\xFC\xEC\x69\x7D\x00\xF4\x59\x04\xFB\x6B\x7A\x7F\xDA\x68\x82\xF7\x0A\x87\x80\xFE\x49\x86\x81\x0B\x90\x81\x03\xFE\x7F\x80\x0A\x91\x86\x82\x9B\x2A\x06\x01\x9F\x3B\x05\x0D\xA2\x7C\x81\xE0\x60\x87\x07\x92\x81\x84\x12\xA3\x80\x83\xD1\x58\x21\xFE\x01\x2D\x05\x3B\x6E\x06\x83\xE4\x68\x87\x09\x80\x82\x85\x18\xB4\x86\x84\x36\x9F\x7E\x0E\x95\x87\x86\x19\xB9\x84",
					"\x87\x3B\x83\x37\x0B\x30\x8D\x7C\xF5\x65\x86\x87\x45\x83\x82\x11\xB3\x8E\x56\x18\x04\x8A\x80\x35\x89\x89\x14\xD0\x88\x86\x29\x95\x8A\x5E\x31\x17\x4E\x0C\x77\x43\x07\x27\xB1\x78\x89\x54\x80\x8F\x17\xBD\x84\x8D\x20\x93\x85\x8C\x40\x89\x8F\x05\xE8\x8B\x8C\x5F\x74\x03\x77\x35\x17\x4E\x0D\x77\x47\x06\x2F\x8B\x8F\x87\x6D\x8A\x8F\x19\xE6\x87\x88\x1C\x3B\x71\x07\x77\x5A\x07\x9D\x3B\x06\x8E\x25\x86\x93\x8A\x63\x9C\x8C\x13\xC0\x5E\x08\x9E\x49\x20\x21\xF9\x52\x24\x92\x0A\x20\x92\xD7\x2F\x46\x31\x32\x33\x53\x91\x62\x42\x93\x90\x04\x66\x31\x9A\x83\x21\x25\xC6\x6D\x92\x4A\x99\x29\x94\x53\x4E\x4D\x29\x8F\x99\x2B\x4B\xA7\x32\x4D\xAB\x83\x22\x00\x20\x42\x55\x58\x88\x3C\x96\xAE\x22\x44\x55\x2E\x33\x93\xAA\x38\x93\x36\xBA\x88\x3B\x55\x3D\x93\x21\x00\x3F\x96\x36\xC1\x81\x21\x32\xB6\x34\x98\x81\x06\x9F\x94\x0A\x27\x98\xB9\x36\x9B\x20\x55\xA9\x25\x99\x01\x33\x96\x35\xA6\x28\x9A\x00\x1A\x9E\x31\xAE\x8E\x34\x2C\xD7\x9E\x93\x6D\xA3\x25\x9B\x01\x1A\x38\x28\xD1\x97\x2A\x54\x81\x22\x9A\x99\x8A\x22\x3A\xEB\x99\x21\x79\xB5\x94\x9C\x0A\x3F",
					"\x93\x69\x4B\x9B\x98\x6A\x81\x26\x9E\xB3\x21\x9F\x6C\x63\x9C\x9B\x72\x8E\x33\x99\x64\x3D\x98\x00\x00\xA6\x36\x81\xB6\x31\x9E\xF5\x8D\x9E\x3C\x92\xA9\x21\x6E\xB2\x26\xA1\x32\x37\xA3\x55\x10\xA6\x20\x77\xB6\x36\xA3\x0C\xBF\xA2\x23\xF4\x96\x21\x90\x9C\xA2\x96\x14\xBB\x91\x2B\x9B\xA9\x24\x90\xA9\xA3\x20\x26\xAD\xA6\x42\x16\xA9\x24\x8C\x99\xA6\x24\x2E\xB0\x99\x44\xBA\xAA\xA4\xC7\x0A\xA0\x9B\xFE\x80\x00\x50\xF8\x9D\xA2\x86\xBE\x9A\x00\x46\xA9\x24\x3C\xB7\xA3\x25\xA5\x8C\xAE\x23\x0A\xAE\x9D\x50\xD2\xA4\xA9\x8E\x99\x28\x73\xBB\x85\x9B\x48\xA8\xA9\x21\x9C\x86\x22\x9A\x0E\xB8\x45\x45\xB3\xA6\x95\x84\x17\x4B\xAC\x66\xA4\xAD\x5A\xAC\x99\x20\x3B\x68\xAD\x4E\x6A\xB0\xAC\x5B\x86\x24\x51\x9E\x83\x25\xAE\x03\x3D\x98\x5E\xA9\x96\x21\x48\x59\xAC\xAF\x03\x25\x0B\x9D\x21\x23\x95\x80\x06\x0F\x4E\x1E\xB7\x03\x73\x21\xA1\x75\x84\x07\x0F\x4E\x8C\xAA\x20\x12\x77\x42\x9A\xE3\x5E\x3A\x9A\xF5\x7E\x3A\x43\x9D\x89\x21\x24\x37\x4B\x99\x1A\x89\x22\x12\x77\x42\xAC\x83\x2F\x81\x21\x4B\x04\xB6\x42\x43\x89\x20\x26\x2A\xB1\x21\xAC\xA6\x21\x13\x77",
					"\x4C\x07\xBF\x82\x21\xA4\x21\x3C\x9F\x56\x9B\x5E\xA3\x65\xA1\xA5\x9F\xBE\x41\xA6\x47\xBD\x82\x9B\xD2\x83\x22\x9A\xC0\xA0\x5A\x71\x82\x2E\xAD\x26\x4E\xA3\xB8\xB8\x3D\x9B\x59\xF7\x81\x25\x6E\xA1\xA0\x9D\x65\xB6\xAA\x6D\x80\x0B\x99\xC2\x80\x03\xBA\x87\x81\x22\x77\xA1\xAD\xB8\xAD\x89\x23\xAF\xD9\x9F\xB2\x42\x60\xB2\x20\x87\x8D\x05\x90\xCC\xB1\xAD\x78\x80\x08\xBC\x00\x2F\xBF\x8B\xF5\xB5\x5A\x77\x28\x5D\xAB\xE7\x35\xB8\x5C\xDE\x3A\xBE\x76\xCD\x47\xBF\xBE\x8F\x23\xB7\xE5\x7C\xBE\x81\x89\x2A\x65\xFE\xB4\x5C\x57\x09\x2A\xC3\x7C\x82\xC3\x20\xBF\x86\x23\x67\x0E\xCE\x74\x80\x86\x20\xC2\xEA\x87\xC4\xC1\x0A\x3E\x67\x0A\xE6\x7D\xC0\x83\x22\xC5\x49\x54\x7C\xA9\x93\x30\x69\x21\x02\xDE\x75\xB7\x0A\x2C\xC6\x41\x14\xCB\x53\xB8\x59\xC0\xA6\x77\x52\xC7\x40\x1B\xC1\x4B\xC3\x77\xC5\x9A\x23\xD8\xC2\x41\x7A\x93\x21\xC6\x95\x6E\x75\x8A\xBA\x65\x18\xA7\xC3\x20\x1D\xC8\x96\x20\x29\xC2\x22\x8D\xCD\x4A\x75\x1F\xDD\x4B\xCA\x03\x38\xAA\x87\x89\x28\xCA\x81\x04\x77\x8B\x5F\xC6\x22\x8F\xCD\x4A\x76\x2B\xF8\x4B\xCC\x59\xC1\x8E\x96\x83\x25\xC5\x81",
					"\x16\xB7\xC8\x51\x4E\xA3\x32\xEB\xC2\x21\x2A\xDB\xCE\x20\x46\xCC\xCE\x42\x54\x73\xC5\xDA\x0B\xBA\x99\x0A\x39\xCD\x9D\xE1\x86\xCF\x81\x21\x6F\x8B\xB0\x66\x20\x9F\x86\x26\x7B\x3E\xFE\x51\xD1\x03\x2D\xD2\x41\x19\xB0\xCE\xE8\x40\x7C\xCB\xCF\x38\x7F\x80\xF9\xA7\x4F\x37\xC3\x25\xCC\x06\x21\xB5\x49\xF2\x5B\xD1\x81\x17\xD7\xCE\x91\xCA\x21\x97\xDD\x4D\x84\x33\xDE\xBB\x99\x94\xDF\xD3\x6A\x93\xA4\x5E\x4D\xC3\x25\xD4\x02\x3B\x8A\xA3\xA1\x3C\xBC\x40\xC9\x26\xD6\x02\x32\xD3\x40\x5D\x8B\xD7\xD1\x25\xBE\x99\x15\x2A\x23\x9F\x80\x0F\x8D\x62\xDB\x35\xBE\xA0\xAA\x21\x01\x89\x21\x8E\x67\xD1\x5C\xB3\x06\x33\xDA\x41\x73\x86\xDA\x77\x6A\x82\xD1\x0A\x35\x8E\x99\xB5\x36\xC2\x15\xC3\x27\xDB\xA9\xC9\x20\x20\xE3\xD8\x36\x09\xC2\x99\x21\xE8\xC2\x23\xB2\x84\x9C\xDD\xD0\x34\xC1\xBD\x09\x27\xB6\x41\x2D\xD6\x21\x1E\x30\xB9\x20\xFA\xD7\xD6\x42\x3E\x0B\x77\x7B\x5B\xD2\x20\x01\xE1\xDA\x42\x3F\x0B\x77\x36\xEF\xDE\xB4\xCA\xCA\x20\x10\x3B\x72\xC8\x73\xC2\x21\xB6\x03\x3C\xDF\x40\x41\x0F\xDE\x00\x18\xE2\x20\xB8\xC1\x22\x10\x3B\x7C\xC9\x87\xC3\x27\xE3",
					"\x01\x22\xDA\x40\x43\x0B\x77\x43\xC7\xE1\x20\x28\xE0\x03\xB2\xC4\x0B\x77\x30\xD6\xE1\x20\x4E\x9B\xB8\x55\x2F\x3B\x96\x84\xBD\x9E\xE7\xB9\xA1\xEB\x60\x9E\xAE\x9B\x98\x04\xEF\xE8\x21\x28\xE8\xAD\xBB\xA8\x28\xDC\x8E\xE9\x24\x4F\xEC\x9E\xD4\xC8\x22\x9A\x00\x15\xEF\xEA\x21\x38\xEA\x8B\x21\x28\xA2\x87\x80\x06\xEB\x60\xFC\xE9\x48\x4B\xD2\xE7\x98\x24\xEC\xEC\x3F\xB1\x25\xDA\x8A\x20",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"ClassBody",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][ClassBody] BEGIN ",
					L"[26][ClassBody] END [ENDING]",
					L"[27][ClassBody]ID @ [ \":\" ID ] \"{\" { classProp } \"}\"",
					L"[28][ClassBody]ID [ \":\" @ ID ] \"{\" { classProp } \"}\"",
					L"[29][ClassBody]ID [ \":\" ID @ ] \"{\" { classProp } \"}\"",
					L"[30][ClassBody]ID [ \":\" ID ] \"{\" @ { classProp } \"}\"",
					L"[31][ClassBody]ID [ \":\" ID ] \"{\" { classProp @ } \"}\"",
					L"[32][ClassBody]ID [ \":\" ID ] \"{\" { classProp } \"}\" @",
					L"[33][Class] BEGIN ",
					L"[34][Class] END [ENDING]",
					L"[35][Class]< \"ambiguous\" \"class\" @ ClassBody >",
					L"[36][Class]< \"ambiguous\" \"class\" ClassBody @ >",
					L"[37][Class]< \"ambiguous\" @ \"class\" ClassBody >",
					L"[38][Class]< \"class\" @ ClassBody >",
					L"[39][Class]< \"class\" ClassBody @ >",
					L"[40][Type] BEGIN ",
					L"[41][Type] END [ENDING]",
					L"[42][Type]<< ( !Enum @ | !Class ) >>",
					L"[43][Type]<< ( !Enum | !Class @ ) >>",
					L"[44][File] BEGIN ",
					L"[45][File] END [ENDING]",
					L"[46][File]< Type @ { Type } >",
					L"[47][File]< Type { Type @ } >",
				};
				return results[index];
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, codeIndex);
			};
		}
	}
}
