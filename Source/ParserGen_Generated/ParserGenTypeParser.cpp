/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2306; // 30424 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 2;
				static const vl::vint dataSolidRows = 9;
				static const vl::vint dataRows = 10;
				static const char* compressed[] = {
					"\xD8\x76\x00\x00\xFA\x08\x00\x00\x1B\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x81\x1A\x80\x16\x84\x16\x0A\xF0\x05\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x97\x97\x92\x9A\x2C\xB8\xAE\x9A\x90\x9C\x8D\x9A\x9E\x37\xBE\xB9\x82\xAB\x9C\xA1\x9E\x83\x32\xB6\xA0\x80\xAB\xA6\xA1\xA0\xA4\x3F\xCE\x8D\xA1\x96\x81\x00\xA7\x99\x52\xD8\x90\xA3\xAB\xAD\xA1\xAF\xA3\x03\xC9\x97\xAA\xAA\xA9\xB1\xA9\xAF\x4F\xE6\x9C\xAA\xBE\xAC\xB4\xB0\x81\x62\xD9\xA4\xB3\xB3\xB5\xBA\xB8\xBB\x68\xD3\xAE\xA9\xB0\xBF\xB3\xBC\xBD\x7D\xEB\x81\xCD\xB3\xC7\xB5\x81\xB8\x79\xE5\x85\xDC\xB7\xC6\xBF\xC4\xC0\x01\xD6\x89\x92\xC9\xC4\xBB\xBB\xCB\x95\xF8\xBF\xAA\xCD\xC2\xC1\xCE\xC2\x9F\x86\xE2\x8E\xC1\xD4\xC7\xD0\xCF\xA7\xA0\xE9\xC2\xD8\xC3\xCE\xCB\xCC\x98\xAE\xDA\xCF\xCC\xCB\xD6\xD3\xD6\xB4\xAF\xF2\xD1\xD9\xDB\xD9\xD2\xC8\xB6\xC0\xF8\xDF\xD5\xDB\xE1\xE1\xE2\xA4\xC7\xFA\xDD\xDC\xDC\xE1\x90\x01\x0A\x94\xFB\xD0\xD4\xEB\xEA\xEA\xE6\xD5\xD8\xD7\xEE",
					"\xEE\xDA\xE5\xEE\xE3\xE0\xC9\xC6\xE3\x01\xEF\xEE\xF1\xF3\xA8\xE1\xE9\xE8\xFA\xD2\xF5\xF6\xF6\xAC\xF0\xF7\xD2\xF2\xE4\xF8\xE5\xF5\xF8\xEF\xF9\xF1\xFB\xFB\xF9\xFF\xFA\xFF\x77\x7A\x7F\x80\xFC\x44\x8E\x7E\x81\x00\x88\x82\x81\x81\x0C\x87\x8D\x81\x82\x0F\x8B\x8E\x83\x84\x10\x94\x82\x85\x85\x18\x97\x8A\x87\x72\xDC\x4D\x7E\x76\x87\xEE\x51\x8C\x87\x87\xD9\x5D\x85\x88\x89\xDB\x68\x8A\x77\x8A\x26\xA9\x81\x8A\x69\x0C\x53\x66\x79\x80\x23\xAF\x89\x85\x8D\xF6\x78\x84\x8F\x8C\x0A\xBA\x8A\x6B\x46\x32\xA0\x89\x8C\x8F\x22\x84\x96\x85\x48\x06\x25\x72\x93\x8E\x4B\xBD\x86\x93\x8D\x4F\x9B\x81\x96\x8F\x45\x9E\x87\x02\x92\x27\xB6\x82\x95\x93\x55\x99\x99\x70\x42\x55\x53\x92\x99\x42\x09\x18\x9E\x8B\x90\x5C\x87\x93\x9A\x97\x4C\xAC\x9E\x91\x9A\x50\xB0\x9B\x96\x9B\x5D\xA7\x9D\x9A\x9D\x6F\xB4\x9A\x9A\x9C\x54\xBB\x9A\x9D\x9C\x27\x8A\x06\x98\x8B\x2A\xAD\x84\xA2\x96\x7D\x80\xA8\x9D\x9D\x87\xA8\x9F\x9F\x9C\x8B\xBE\x93\x42\x43\x41\x8F\xA9\xA0\xA4\x8D\xB7\x99\xA5\x9E\x91\x8A\xAB\xA4\xA3\x01\x4C\x0A\x40\x74\x7C\xAB\x9D\xA4\xA6\x86\xA9\xA5\xA3\xAA",
					"\x88\xA6\xAF\xA6\xA4\xAF\x9E\xAA\xA9\xAB\xA5\xB5\xA6\xA6\xAB\xAA\x8E\x03\xA3\xAC\x8E\xA7\xA7\xA7\xAF\xB8\xAC\xAD\xAD\xAC\xA8\x82\xBA\xA4\xAF\xC7\x86\xBC\xA4\xB1\x21\x4F\x0B\xAE\xB2\xA0\x90\xB0\xAC\xB2\xCB\x94\xB1\xB4\xAD\xB7\xB6\xAE\xAD\xB0\xD8\x9B\xBA\xB4\xB3\xDC\x83\xB6\xB7\xB4\xD2\xB2\xA0\x00\x04\xCF\x9D\xB0\xBB\xB7\xE3\xA6\xBA\xB9\xBB\xC5\xAF\xB0\x01\x04\xE9\xA2\xB5\xB9\xBC\xF6\xB2\xBA\xBD\xBE\xFC\x89\xBB\xBE\xBF\xFD\x95\xB7\xBC\xB0\xEC\x83\xC1\xB8\xC0\xC9\x90\x45\xA6\xB7\xD9\x8D\xCC\xC3\xC3\xEB\x8E\xC1\xC4\xC4\xF0\x84\xC6\x43\x04\xF5\x88\xC2\xC3\xBF\x1B\xC1\xC7\xB6\xC7\xE4\x9C\xCF\xC6\xC6\x23\xDD\xC4\xC9\xC8\x20\xEE\xB9\xC8\xBE\x27\xEA\xCD\xC8\xCB\x26\xF1\xC5\xCB\xCC\x28\xEF\xC6\xC4\xC5\x06\xC5\xC2\xC9\xCD\x32\xFC\xC2\x68\x05\x19\xFD\xCE\xCA\xD0\x30\xD1\xB5\x05\xD0\x34\xC3\xD9\xD1\xD1\x3E\xCD\xDA\xD2\xD3\xB5\x56\x03\xAB\xC1\x02\xD8\x08\xD0\xD4\x37\xD3\xCA\xD5\xC5\x54\xCB\xD9\xD4\xD7\x3A\xEB\xCF\xD5\xCE\x12\xE0\xD5\xD8\xD9\x38\xFB\xCF\xD2\xB9\x12\x4B\xCB\xD4\xDA\x6F\xEA\xDC\xD3\xDA\x73\xF5\xD3\xDA\xDC\x77",
					"\xE2\xDA\x42\x06\x57\xF4\xD9\xDE\xCD\x5D\xD8\xD1\xE2\xDF\x83\xF6\xD5\xE3\xDF\x44\xC8\xEE\xD6\x42\x00\x6E\xD6\xD9\xDA\x7A\xE1\xD0\xE2\xE4\x89\xC7\xE6\xE4\xE5\x8B\xD8\xE2\xE2\xE6\x84\xDC\xE6\xE2\xE7\x21\x5C\x0D\xDD\xB1\x1D\x23\xEA\xE3\xE6\x67\xF8\xD7\xE5\xEA\x91\xEC\xE3\xE6\xEB\x95\xE0\xEB\xE9\x8A\x1E\x26\xE3\xED\xDC\xAD\xD0\xEF\xEA\xEE\xAA\x5F\x06\xEE\xEC\xC0\xF0\xE9\xE6\xF0\xA8\xFC\xE2\x68\x08\xBF\xC4\xFD\xE7\xD9\x14\x4E\xE0\xDF\xE3\xB8\xFB\xE1\xF5\xEC\xCA\xDF\xE6\x42\x08\xC9\xC6\xF5\xF3\xDB\x23\x19\xF3\xF7\xF0\xDA\xCB\xF1\xF9\x6D\x24\x1E\xF0\xF7\xF9\xCF\xE9\xFA\xE9\xF0\xE3\xE7\xE2\xFB\xF7\xDB\xE8\xF5\x0B\xB3\x26\x26\xFA\xF9\xEE\xF0\xEF\xF8\xFB\xFA\xD5\xEE\xF6\xF5\xFB\xB7\x7B\x7C\xFE\x02\x82\x7A\x02\x94\x78\x80\xEC\x79\x7F\xFF\x0A\x8E\x7F\x06\x81\x87\x7E\x05\x90\x83\x01\x82\x27\x04\xFB\x7C\x7B\x20\x16\x2E\x7B\x05\x8C\x8F\x81\x0D\x86\x80\x7C\x1C\x89\x83\x07\xF1\x72\x82\xD1\x29\x06\x82\x03\x85\x84\x09\x9E\x8A\x84\xFD\x6D\x83\x81\x23\x8E\x84\x0B\xB3\x89\x84\x1A\x91\x86\x86\x13\x8A\x56\x0A\x28\x81\x83\x15\x3C\x81",
					"\x87\x2F\x8E\x82\x08\xC1\x8D\x83\x1A\x86\x8F\x86\xF6\x58\x22\xF3\x2D\x0F\x58\x17\x3F\x80\x84\x31\x90\x84\x11\xC3\x88\x86\x28\x93\x8D\x7F\x45\x88\x8A\x16\xC0\x85\x8B\x15\x87\x8C\x8B\xF6\x4F\x07\x13\xDE\x8B\x8A\x2B\x9D\x8A\x86\x5F\x86\x8D\x1A\xA4\x80\x07\x31\xA8\x8D\x8C\x64\x80\x8C\x1C\xEF\x82\x8F\x3A\xAA\x89\x59\x31\x0F\x5A\x0C\x4F\x53\x06\x37\x92\x8F\x8C\x7F\x8B\x8C\x1D\xF7\x86\x8F\x38\x84\x97\x90\x86\x89\x93\x20\x8A\x91\x91\x39\x8D\x92\x35\x34\x16\x7D\x0D\x4F\x56\x07\x67\x77\x06\x8F\x42\x98\x88\x15\x82\x9F\x90\x44\x8B\x90\x38\x38\x16\x7D\x0E\x4F\x5A\x07\x67\x7B\x00\x93\x59\x85\x93\x27\x9D\x9C\x91\x4C\x88\x86\x20\x5A\x13\x69\x42\x60\x47\x54\x99\x34\x92\x20\xCE\x59\x29\x92\x59\x22\x26\x52\x46\x27\x4A\x72\x56\x97\x44\x57\x2E\x97\x81\x37\x90\x5E\xC2\x89\x21\x2E\x89\x35\x99\x83\x11\x49\x99\x06\x2B\x9B\x66\x3B\x99\x30\x2D\x50\x9B\x20\x82\x41\x99\x4A\x47\x90\x01\x6C\x89\x32\x3A\x54\x24\x38\x37\xE5\x49\x2A\x70\x81\x25\x99\xE2\x8A\x20\x39\xDF\x93\x75\x71\x84\x9A\x21\x31\x4F\x53\x35\xCE\x9A\x9A\x93\x1C\x9E\x9B\xB5\x9B",
					"\x9A\x42\x78\x94\x36\x6A\x9B\x36\x9A\xFA\x89\x21\xF3\x72\x91\xA0\x83\x3E\x9C\x36\xE8\x80\x01\x3C\x9B\x39\xA1\x85\x88\xA2\x21\xE4\x39\x29\x42\x91\xA4\xA0\x7B\x83\x9D\x9C\xED\x8A\x20\x90\x09\x37\xA0\xE2\x00\xA6\xA2\x02\xB7\x2A\x39\xD4\x23\x9F\x80\x1B\xA3\x9A\x57\x32\x26\x43\x9E\xA9\x25\x89\x97\x2B\xA5\xC7\x3D\x94\x44\xAF\xA9\xA5\x96\x8A\x20\x98\x1C\xB5\xA6\x49\x1D\xA1\xA6\x9B\x89\x21\xA1\x2A\xBA\xA7\x48\x2E\xA2\xA2\x59\x89\x30\xA6\x32\x32\xA5\x42\x14\xAC\xA0\xA3\x9B\x30\xA9\x49\xA6\x25\x42\xB8\xA8\xA4\x5E\xA9\x20\xAA\x51\xBF\x20\x51\xC7\xA2\xA8\xAD\xB3\xA1\x2B\x58\xB9\xA9\x47\x53\xA7\x2A\x9E\xA2\xAF\x23\x61\xA2\xAF\x56\xCF\xAD\xAA\x8F\x2B\xAC\x36\x69\xB9\xA8\x59\xD9\x2C\x9A\x5D\x74\xAA\x21\x76\xA9\x30\x37\xD4\xA4\x37\xBD\x97\x2F\xA4\xB4\x32\x24\x60\xAC\xA0\xA4\x83\x31\xAD\x23\xDC\x87\xB3\x3F\x09\xB7\x2B\xDA\x61\x9B\x20\x23\xA9\xA2\x64\xDF\xA6\xB0\x8D\x8A\x24\xA7\x7C\xA1\x21\x66\x84\x2A\x9D\x9B\x9D\xB1\x21\x9B\xAB\x9E\x31\xFB\x9E\xB3\x84\x3C\x9A\xB3\xA4\xB3\x95\x43\x25\xB6\x20\x4A\x7F\x93\xB5\xAA\xA9\x22\xA8\x0F",
					"\xB4\x9E\xDA\x80\x01\x0A\xCF\x41\x24\x37\xA1\x22\x0B\x67\x49\xA7\x02\xB6\xAA\x54\x53\x82\x2E\x77\xE0\x93\x0F\x59\xC3\xA1\x21\x71\xB6\xB4\x0B\x67\x70\xA5\x7C\xC1\xA6\x38\x4C\x95\x81\xBB\xE4\x03\xB0\x00\x3E\x81\xB9\x15\x4F\x53\xA5\x1D\x81\xBE\x0A\xCF\x5C\xA6\x13\xC1\xB7\x0B\xF0\x8A\x22\x8C\xC1\xB8\x0A\x79\x89\x28\xBC\xDB\x99\x0F\x59\x3C\x01\xB8\x00\x49\xB2\xBF\xC8\x3E\xB5\x3B\x09\xA3\xA5\x48\x74\xB3\xA4\x79\x74\xB9\xA1\xAE\x8B\x23\x65\xF2\xB0\xA7\xFE\xB6\x5C\xA7\xA7\xA4\xA6\x75\xCE\xA4\x51\xD0\xB2\xBC\x85\x9B\xB4\xBD\x48\x1B\xB3\xA4\x6E\x80\xC7\x59\xEE\x95\xB9\x04\xDC\x92\xC3\xD4\xA1\x49\x21\xAE\xA3\x21\x7E\xCF\x52\xB4\x81\x17\xB9\x24\x0D\x08\x96\x69\xAC\xB4\xB6\x16\xA1\xC2\x20\x29\xDA\xC0\x10\xAF\xC1\x20\x74\x72\xC2\x34\x79\xA2\xC5\x77\x34\xC3\x5F\x07\xC9\x3E\xC6\x06\x20\xA9\x72\x31\xC6\x21\xD9\xB6\xB2\x61\x41\xC1\x59\x8E\x82\x26\xC8\xDA\x80\x6F\xA7\xC1\x52\x9A\x40\x4B\xC1\x9C\x16\x80\xCB\x20\x4D\xCF\xB2\xD4\x50\xC5\x60\x7A\x4A\x9E\xC7\x11\x88\xCB\x40\x4F\xC6\xB6\xAB\x5A\x86\x5E\x64\xC3\x22\x99\xB6\xB6\x39\xB6",
					"\x49\xCE\x43\x47\x69\x20\x91\xAD\xC6\x5F\x11\xC9\x21\xCE\x06\x37\xCB\x63\xC6\x3D\x71\x37\xC6\x24\xBF\x0A\x38\xCF\x40\x5E\xCC\xCD\xE4\x25\x74\xCB\x95\xAE\x7B\x96\x97\x62\xBF\xE5\x90\xB1\x58\xC0\xA9\x23\xA2\xF4\xC1\x83\x35\xC3\x22\xD0\x7B\xC9\x86\x9B\x83\x2D\xCE\x4A\xEA\x30\x79\x88\xC9\x45\xA7\x82\x2E\xB1\x42\xD1\x83\xD4\x01\x22\x77\x8D\xA4\x8A\xD4\x83\x07\xD6\xD4\xAA\x38\x79\xA8\x84\x5F\xD5\x81\x25\xD6\xD3\x56\x97\xD6\x40\x69\xCF\xB0\xE8\x9F\xC7\x44\xD7\xA3\xA6\xAE\x81\x20\xD4\x58\xD6\x8E\xD1\xBB\xD2\xBF\xFC\x67\xC8\x34\x9E\xA3\xA0\xD9\xC4\xC0\xCC\x10\xC5\xD3\x20\xBE\x6B\xD6\x85\x03\xA3\x23\xB2\xB6\xB5\x7E\x66\xC2\x61\xDB\x02\x3D\xDA\x6D\xD4\xBF\xD6\x9C\x5D\x79\x21\xA8\xCA\xC0\x6A\x19\x8E\xCF\x81\x14\xC2\x21\xBE\xC3\x22\xAC\xB6\xBE\xBB\x3F\xC1\x5B\xDB\x03\x27\xDE\xB1\xA4\x82\xDC\x4E\xD2\xDA\x34\x4C\x93\xD5\x40\x5C\x93\xA4\x72\xF2\xDA\xBE\xED\xA3\x20\x7D\xF2\x5C\xDC\x6D\xF2\xBB\x8F\x02\xEB\x55\x89\xF6\xB9\x21\x86\xE1\xDA\xBE\x91\x91\xE2\x71\x09\xC3\xA4\x8B\xC1\x24\xA7\x21\x35\x92\xC6\xC9\x3C\xC7\xEE\x8A\x27\x84",
					"\xC1\xA1\x96\xB7\xD1\x59\xBA\x83\x28\xE6\xB6\xA3\x8B\xE4\xB9\x4A\x86\x20\x7C\xCF\xB5\x94\x4B\xBD\x39\x96\xE7\x97\x22\x85\x3D\xDF\xB1\x3D\x14\xB1\x8A\x54\xC0\x01\x84\xB4\xE3\x20\x20\xEA\x20\x10\x42\xE4\x50\x3D\xFC\xE1\x21\xE3\xA6\x21\xC0\xB6\xB3\x08\x15\xC6\x21\xEA\x0E\xE1\xB8\x11\x0C\xCA\x54\x31\xC2\x21\xA1\x58\xF7\xE1\x70\xC6\x0C\xEB\x55\x7C\xD7\xE9\x57\xE3\xC1\x70\xC8\x05\xEC\xE3\x13\xD7\xEB\xE7\xAA\x23\xD4\xB4\xBA\x08\xAB\xC3\x21\xE1\x02\x36\xE5\x38\xCB\x0D\xED\xE4\x16\xD0\xEE\xEC\xBE\xE6\x7C\xCD\x0D\xEE\xD4\x16\xDD\xDD\x02\x38\xEF\xC7\xF2\xBF\x09\xC2\xEA\x35\xD5\x3A\xC9\x21\x1B\xD7\xD5\x37\x98\xB5\xBF\xF2\x00\x06\xC0\x4B\x1A\xF6\x24\xFD\xA1\x26\xF3\xB9\xBF\xF1\x7D\xA0\xF3\xE4\x96\x02\xCE\xA7\xC1\xB3\xB1\xD9\x80\xC6\xCF\x88\xC0\xC3\xE1\x35\x30\xF5\x4A\x1D\xCC\xE9\xC7\xB4\xF1\xE7\xF2\xB7\xF5\xA2\x95\x3A\xB1\x7F\x30\xA4\x2A\xBF\xE1\x25\xF0\xF0\x95\xBF\xE1\xC9\x26\xF8\x06\x37\xB9\x52\x4A\xF2\xB1\xDC\x81\xD9\x24\xCF\xF6\xB2\x7C\xA7\xC8\x49\xB1\x26\xAA\x26\x49\xEA\xED\x70\x9B\xB9\x28\xEE\xF2\x23\xB3\x54\x20\xFD",
					"\x48\x00",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"ClassBody",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][ClassBody] BEGIN ",
					L"[26][ClassBody] END [ENDING]",
					L"[27][ClassBody]ID @ [ \":\" ID ] \"{\" { classProp } \"}\"",
					L"[28][ClassBody]ID [ \":\" @ ID ] \"{\" { classProp } \"}\"",
					L"[29][ClassBody]ID [ \":\" ID @ ] \"{\" { classProp } \"}\"",
					L"[30][ClassBody]ID [ \":\" ID ] \"{\" @ { classProp } \"}\"",
					L"[31][ClassBody]ID [ \":\" ID ] \"{\" { classProp @ } \"}\"",
					L"[32][ClassBody]ID [ \":\" ID ] \"{\" { classProp } \"}\" @",
					L"[33][Class] BEGIN ",
					L"[34][Class] END [ENDING]",
					L"[35][Class]< \"ambiguous\" \"class\" @ ClassBody >",
					L"[36][Class]< \"ambiguous\" \"class\" ClassBody @ >",
					L"[37][Class]< \"ambiguous\" @ \"class\" ClassBody >",
					L"[38][Class]< \"class\" @ ClassBody >",
					L"[39][Class]< \"class\" ClassBody @ >",
					L"[40][Type] BEGIN ",
					L"[41][Type] END [ENDING]",
					L"[42][Type]<< ( !Enum @ | !Class ) >>",
					L"[43][Type]<< ( !Enum | !Class @ ) >>",
					L"[44][File] BEGIN ",
					L"[45][File] END [ENDING]",
					L"[46][File]< Type @ { Type } >",
					L"[47][File]< Type { Type @ } >",
				};
				return results[index];
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::vint32_t TypeParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(tokens, this, codeIndex);
			};
		}
	}
}
