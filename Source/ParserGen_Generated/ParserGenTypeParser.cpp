/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1824; // 21834 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 32;
				static const vl::vint dataSolidRows = 7;
				static const vl::vint dataRows = 8;
				static const char* compressed[] = {
					"\x4A\x55\x00\x00\x18\x07\x00\x00\x16\x00\x01\x82\x80\x07\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x82\x1A\x86\x12\x84\x78\x03\x09\xBF\x7B\x8C\x8B\x8E\x84\x00\x1D\x9D\x9F\x81\x9C\x8B\x90\x93\x7F\x26\xA4\xA9\x81\x9B\x92\x92\x85\x93\x28\xAF\xA7\x8D\x95\x92\x9A\x94\x9B\x2C\xB8\xAE\x9A\x83\x9A\x9D\x9A\x9E\x37\xC0\xB9\x82\xAB\x9E\x80\x98\x9A\x1E\xBE\x89\xBF\x89\x81\x02\xA5\x98\x44\xBF\x86\xBD\x91\xAB\xA7\xA9\xA0\x57\xC3\x99\xA5\xA3\x87\xA3\xA6\xA4\x50\xDB\x92\xBD\xA4\xAA\xB2\xAA\xB2\x58\xE8\x9A\xAA\xBC\xAA\x82\xAF\xAA\x61\xEC\xA3\xAE\xB5\xB2\xBB\xB2\xBA\x69\xF8\xAB\xBA\xBD\xB1\x83\xB6\xB3\x71\x82\x8E\xAD\xAF\xAD\xC0\xB8\xB0\x88\x86\xC0\xC9\xC7\xC2\xC6\xBB\xC0\x7E\xF5\xBC\xB3\xB1\xC9\xBD\xCB\xBD\x97\xFD\xA0\x92\xC9\xCC\xCB\xCC\xCB\x9F\x98\xE1\xDA\xCF\xBF\xC4\xC7\xC5\x8E\x93\xF7\xBD\xCB\xD3\xD2\xCF\xD2\xAA\x90\xEE\xCD\xD0\xDC\xD6\xD9\xDA\xB3\xB7\xDC\xC0\x02\x02\x87\xC0\xD4\x8D\xC1\xC0\xE3\xE6\xD1\xD6\xDB\xD3\xC5\xC2\xC9\xE6\x89\x8C\xC2\xE5\xD8\xC8\xD0\xC6\xF9\xD1\xEF\xE3\xE8\xDC\xD8\xBB\xD9\xE0",
					"\xDB\xEA\xD1\xEE\xD2\xDA\xE1\xDC\xE2\xFE\xEC\xF0\xF1\xF1\xE8\xE5\xE9\xE7\xFA\xF5\xF4\xF7\xF7\xAF\xE6\xF1\xEB\xF3\xFE\xF5\xFA\xF8\xB4\xF2\xF9\xF4\xFB\xFE\xF9\xFE\xFC\xBA\x7C\x71\x82\x7F\x03\x80\x85\x74\x75\xD7\x7A\x75\x83\x7D\x0C\xAD\x6C\x42\x73\xC4\x52\x7F\x72\x75\x13\x88\x85\x87\x77\x0D\x8B\x8F\x7D\x86\x07\xB8\x65\x02\x6F\x09\x82\x8D\x86\x82\x07\x86\x00\x8B\x85\x24\xA1\x84\x83\x88\x22\xAA\x86\x82\x8B\x1C\x8A\x48\x42\x41\xBF\x4B\x76\x8E\x84\x11\x94\x89\x8E\x85\x06\x48\x07\x8B\x8E\xB8\x49\x0F\x8F\x8D\x3A\x84\x9C\x8E\x91\x18\x9B\x8A\x92\x86\x4C\xAC\x8B\x88\x8C\x4B\x8E\x9F\x88\x8A\x2D\x94\x9F\x92\x95\x53\x80\x99\x88\x96\x31\x89\x4A\x03\x90\x38\x88\x9B\x96\x96\x55\xA4\x97\x96\x99\x59\xA2\x95\x9B\x40\x0E\x50\x8A\x9B\x99\x6F\xA9\x91\x9B\x9C\x45\xB4\x97\x92\x9D\x49\x8D\x9A\x40\x03\x0A\x7D\x6C\x95\x94\x50\xBA\x9F\x9E\xA0\x68\x9D\x95\xA0\xA0\x83\x92\x96\xA1\x9C\x8B\xB8\x93\x9B\x40\x0E\x20\x95\x9F\xA4\x77\x94\xA9\x9E\xA2\x88\x87\xA4\xA0\xA3\x99\x9C\xAB\xA6\xA3\x6B\xA0\xA2\x6B\x03\x92\x95\xA6\xAB\xA5\x81\x98\xAF\xA6\xA5",
					"\x8F\xA2\xA2\x9C\xAB\xA1\xB0\xA0\x9E\xAB\x8D\xB2\xAF\xAB\xA9\xAD\xB6\xA5\xAE\xA9\x10\x25\xA8\xA9\xA2\xA9\x81\xB0\xB3\xB0\x06\x51\x0E\xAD\xAE\xB8\xB1\xA9\xB3\xAC\xBA\x9D\xA4\xAE\xB3\xCD\xAB\xAB\xB3\xAD\xBF\x9A\xAA\xAB\xB5\xC2\x96\xB3\x74\x44\x6E\x8F\xB2\xB5\xB5\x9E\x98\xB4\xB1\xB8\xD9\xA4\xB9\x43\x04\xC7\x8A\xB0\xBA\xB7\xE2\x9A\xB3\xB8\xBB\xE5\xB0\xBF\xB9\xB4\xED\xA6\xBE\xBB\xBD\xF6\xB9\xB2\xBC\xBE\xFB\xBA\xB4\xBD\xBC\xFF\xB3\xB3\xB7\xAE\xEB\x81\xCC\xBE\xC1\xFE\xA6\xA4\x05\xBA\xCC\x83\xC0\xB6\xC3\xB2\x55\x0C\xC0\xB5\xC8\x85\xC0\xC5\xBD\xFD\x99\xC4\xA4\x40\x09\x7E\x97\xC0\x00\x18\x13\xC4\xC1\xC5\x24\xEA\xB5\xC9\xC3\x16\xE9\xC7\xC8\xC5\x26\xED\xC8\xCB\xCA\x23\xEE\xCC\xCB\xCB\x32\xDE\x62\x45\xB7\x08\xDA\xC7\xC4\xC0\x3B\xC2\xCA\xC9\xCD\x0F\xFF\xCD\xC2\x06\x22\xC1\xD0\xCE\xD1\x40\xD2\xBB\x05\xD1\xDF\x87\xDD\xD1\xD2\x18\xF9\xC2\xD5\xCF\x1F\xC2\xD3\xCF\xD5\x31\xF4\xCA\xD4\xD6\x48\xDB\xD9\xD4\xD7\x4F\xDE\xDD\xD4\xD8\x51\xD4\xD9\xC2\xD5\x5F\xE9\xD3\xDB\xAE\x1C\x0C\xD5\xD8\xDA\x6B\xF1\xD1\xD8\xD9\x0A\x5D\x0E\xDB\x74\x1E",
					"\x37\xDE\xCE\xD3\x6F\xFC\xDC\xCC\xDC\x73\xEA\xD1\xE2\xDC\x7D\xD0\xDA\x43\x07\x7A\xD5\xDE\xDF\xDE\x86\xCC\xE2\x68\x08\x89\xE7\xDB\xE2\xE2\x8D\xD4\xED\xC1\x08\x91\xFA\xC0\xE1\xD9\x14\x78\xC6\xDA\xE6\x93\xD2\xE5\xE5\xC2\x23\x19\xE3\xD7\xE6\x3C\xE4\x06\xEB\xE7\xA7\xE1\xEA\xCD\x09\xAB\xE8\xEE\xE0\xDD\xB3\xC2\xE5\xE2\xD8\x83\xF9\xE5\xDA\x45\x9E\xE7\x01\xEE\xEB\xAD\xE3\xE0\xEA\xF0\xC1\xF8\xE7\xEC\xED\x96\xC8\xF2\xEA\xF1\x7F\xC0\xFC\xEB\xF3\xB8\x68\x0F\xEC\xF1\xD0\xCE\xF2\xED\xF2\xB6\xCD\xF4\xF4\x6E\x29\x13\xFC\xF1\xED\x84\xDA\xFF\xF4\xF6\xE1\xE0\xFA\xEF\x74\x2A\x25\xAB\x0A\xF7\xCA\xC3\xF3\xFB\xF2\xED\xC5\xF1\xFD\xF5\xDB\xD6\xF6\xFD\xFD\xF8\xEF\xFE\xFB\xFC\x2C\x2B\xED\x09\xA9\x2E\x0C\x7D\xF6\x66\x77\x79\x01\xA4\x7F\x7C\x04\x8A\x23\x0B\x2B\x70\x07\x52\x71\x02\x80\xE5\x67\x81\x01\x91\x80\x7E\x03\x95\x85\x35\x3F\x1D\x4E\x42\x3E\x43\x50\x98\x33\x45\x47\x70\x3F\x40\x5C\x30\x2E\x63\x81\x1F\x86\x5B\x1E\x9F\x20\xB7\x0F\x35\x84\x81\x1C\x82\x53\x29\x9B\x80\x5C\x2D\x81\x21\x17\x9E\x51\x86\x09\x36\x86\x6D\x22\x80\x31\x3C\x78\x83",
					"\x20\x02\x0F\x43\x0D\xA7\x27\x85\x80\x01\x88\x2E\x35\x4C\x2A\x6D\x45\x80\x01\x00\x02\x89\x36\x49\x86\x8B\x53\x4C\x8E\x88\x24\x8C\x6C\x8A\x4F\x96\x34\x0D\x80\x09\x8B\x68\x7F\x83\x20\x5D\x9E\x84\x11\xFD\x41\x8C\x05\x5F\x8E\x88\x65\x84\x24\x0F\x8F\x34\x84\x85\x0D\x38\x86\x63\x8F\x21\x07\xF1\x89\x21\x37\xB1\x33\x8B\x5D\x99\x34\x1E\xCF\x2B\x8D\xD8\x2D\x8D\x8E\x4F\x3B\x88\x13\xB0\x2D\x8E\xDB\x04\x97\x29\x7F\x86\x23\x16\x89\x93\x20\x3B\xB7\x8A\x83\x33\x92\x44\x1F\x88\x97\x25\x2D\x8E\x92\x8B\x92\x81\x84\x25\xA4\x26\x93\x40\x99\x90\x30\x4C\x84\x20\x5C\x21\x95\x89\x33\x8D\x8F\x92\xA6\x81\x00\x2A\xA7\x29\x8E\x98\x30\x25\x95\xAE\x84\x25\x28\xB4\x86\x94\xDE\x23\x97\x23\xB4\x87\x26\xC4\x4A\x83\x21\x28\xB6\x95\x63\x90\x8C\x3A\x42\x79\x85\x90\x00\x26\x41\x21\x4C\x85\x98\x13\xC7\x90\x85\x84\x05\x9A\x87\x01\x2C\x9B\x40\x42\x4E\x98\x85\x14\x9E\x20\xD2\x82\x23\x97\x3C\x9E\x84\x85\x36\x05\x54\x1F\x30\x98\x00\x37\x05\x55\x2D\x97\x03\x3A\x97\x80\x00\xE4\x09\x28\x07\x52\x69\x9B\x9D\x06\x39\x05\xA9\x79\x80\x77\x84\x3A\x05\x54\xBE\x8A",
					"\x75\x42\x3B\x05\x55\x62\x92\x79\x21\x3C\x1D\x9E\x42\x5D\x79\x21\x1E\x02\xA1\x21\x04\xA6\x22\x0F\x25\x52\x06\x6E\x82\x21\x9D\x1F\x3E\x96\x2F\x8B\x9B\x37\x2D\xBE\x91\x9D\xBE\x96\x61\x3A\x94\xA4\x7B\x3C\x99\x99\x20\x79\x99\xA0\xB2\x1F\xA0\x01\x6D\xBB\x45\x98\x1C\xA2\x34\x13\xD7\x97\x82\xD9\x0C\x89\x9D\x54\x92\x84\x30\x8E\xAD\x88\x99\x86\x24\xA5\xFB\x7E\x32\x38\xE9\x96\xA5\x5E\x8D\x21\x98\x3E\xBE\x70\x4E\x81\x25\x99\x06\x10\x82\x36\x3D\xA7\x22\xF8\x1A\x3D\x4C\x83\x06\xA9\x81\x09\x2D\xAB\x40\x3D\x55\x43\x48\x73\xA3\x47\x52\xA2\x22\xB1\x15\x44\xAA\x45\x93\x3F\xA9\x06\x3C\x4D\x42\x2B\x80\x88\x9E\x56\xA9\xAC\x0A\x2B\x63\x55\x89\x64\x55\x84\x27\xAD\xA5\x1F\x3D\xAB\x40\x62\xA6\x20\x8E\x5E\xAA\x60\x5B\xA6\x21\x5B\x92\x82\x8F\x84\x2A\xAE\x20\x21\x7E\x72\xC5\x7F\xA3\x21\xC0\xBB\x47\x66\x77\xBB\x47\x2E\xCE\xAC\x66\x8B\x8A\x23\xB1\x53\xB3\x3B\xD2\x6B\xAF\xA1\x52\x50\xB2\xAB\xD3\x36\x6C\x65\xA0\xA5\x54\xBB\x83\x20\x5D\x09\x28\x72\x60\xC8\x57\x9D\x84\x1E\xB1\xA7\xAD\x26\xB3\x40\x17\xB2\x7E\x9B\x4A\x23\xB2\x06\x30\x9D\x50\x9F",
					"\x60\xB7\x81\x2D\x6D\x42\x98\x7B\xB2\xA9\x37\xB6\x20\xD1\xBC\xA9\x21\xBC\xA3\x22\x66\xBF\xB6\x21\xE1\x83\x21\x6F\x15\x45\x76\x6E\xB8\x38\xB9\xDE\x8B\xAE\x33\xBE\xA3\x20\x61\x82\x25\x9E\x1A\x53\x3D\x98\xBE\x91\xBA\x40\x39\xB4\xB9\x81\x32\xB2\x20\xD3\xA1\x20\xEF\x56\xB5\x42\x92\xBE\x97\xBB\x01\x3C\xB8\x5C\x8A\x2A\xBC\x81\x04\x69\x21\xBE\x63\xB6\xB2\x1D\x76\x21\xDA\x82\x27\x9F\xE4\xBB\x45\x4C\x89\x24\xBF\x81\x24\xA1\xA1\xB3\xA6\x4A\x38\xF9\x9A\x20\xE5\x86\x21\x7D\xF2\xAD\x61\x75\x83\x26\xC1\x81\x2B\x79\xC1\xB7\x43\xBF\x40\x76\xB1\x21\xFE\x4B\xBB\x37\x43\xBF\x96\x41\x12\xC2\x20\x92\x81\x87\xC2\xA0\x39\xAA\x14\x89\x28\xBF\x81\x31\xBE\x20\x0D\x90\xC3\xAE\x25\xC2\x20\x0A\xC0\x07\x81\x2A\xCD\x34\x58\xE5\xA4\xC4\x85\x24\xA5\xA1\x31\xD2\x37\x5E\xB4\xC6\x20\x00\xC2\x27\xC4\x03\x33\x07\x51\x9F\x2E\xC7\x80\x2E\xC4\x06\xAB\x79\xAC\x8F\x83\x25\xC8\x63\x8A\x25\x06\xAB\x60\xB5\x62\x83\x28\xC0\x9A\xA3\x26\xCA\x82\x31\xA3\x4B\x3E\x95\xA6\x70\x9C\xCC\xCB\x5B\x9A\xC1\x57\x61\xC4\xCC\x5C\xA6\xCE\x8D\x1F\x29\x9F\x3F\x10\xAC\xCD\x34",
					"\xEE\xCB\x98\x1F\x2D\x95\x1E\xDC\x81\xCF\x3A\xF0\xCF\xCE\x09\x33\xCD\x31\x80\x05\x99\x7F\x3B\xCB\xCF\x24\xAE\xCA\x46\x01\xD1\xD0",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, codeIndex);
			};
		}
	}
}
