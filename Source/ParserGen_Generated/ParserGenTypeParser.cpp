/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2575; // 38608 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 15;
				static const vl::vint dataSolidRows = 10;
				static const vl::vint dataRows = 11;
				static const char* compressed[] = {
					"\xD0\x96\x00\x00\x07\x0A\x00\x00\x23\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x81\x1A\x80\x16\x84\x16\x0A\xF0\x46\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x97\x97\x92\x9A\x2C\xB8\xAE\x9A\x90\x9C\x8D\x9A\x9E\x37\xBE\xB9\x82\xAB\x9C\xA1\x9E\x83\x32\xB6\xA0\x80\xAB\xA6\xA1\xA0\xA4\x3F\xCE\x8D\xB0\xA3\xA4\xA9\xA2\xAB\x47\x83\x89\xAC\xA3\x9A\xA9\xAE\xAC\x4F\xDA\x91\xA1\x96\x81\x00\xAE\xA5\x5F\xE2\x95\xAA\xB7\xAC\xB5\xAC\x81\x5B\xDE\xA8\xB3\xB7\xB5\xBA\xB8\xBB\x60\xD3\xAE\xA1\xB0\xBB\xB3\xBC\xBD\x7D\xEB\x81\xCD\xB3\xC7\xB5\x81\xB8\x79\xE9\x85\xDC\xB7\xC6\xBF\xC4\xC0\x8D\x82\xD1\xC4\xC3\xCE\xC2\x90\xC7\x95\x8C\xD7\xD2\xCB\xCC\xC9\xCE\xCB\x88\xFF\x8A\xD9\xC0\xCF\xCE\xCD\xD0\x8F\xA3\xE6\xC5\xD8\xD1\x82\xB3\x84\xAF\x89\xF4\xB7\xB4\xDA\xD8\xBC\xD1\xB3\xB6\xF5\xD8\xD7\xD9\xD5\xDC\xDE\xBB\xBE\xFD\xC4\xDA\xD5\xD7\xD5\xE2\x98\xC7\xFF\xC2\xE1\xE4\xE3\xE4\xE7\xC3\xCA\xD1\xE6\xE4\xE9\xE5\xEA\xCE\xD7\x9E\xD9\xE0",
					"\xD6\xED\xEC\xEC\xEF\xDA\xE0\xDC\xFF\xE4\xF1\xF1\xF3\xF1\xE6\xE9\xD6\xC2\x0A\x81\xD8\xE0\xDD\xF0\xEF\xF2\xEC\xE1\xFC\xFB\xF8\xE8\xCD\xD2\xF9\xFB\xE7\xD2\xF1\xFF\xF3\xFF\x5E\x63\x01\x7B\xD3\x7E\x7C\x6A\x81\xC8\x40\x87\x82\x82\x09\xAA\x71\x80\x7A\x10\x8F\x82\x87\x82\x0E\x94\x81\x86\x85\x13\x8D\x87\x86\x86\x19\x8F\x7A\x7D\x7D\xF8\x60\x8F\x87\x7D\x23\xB6\x76\x89\x88\x24\xBC\x78\x87\x8A\x1C\xAC\x8E\x86\x8A\x2D\xB1\x8F\x88\x82\x33\x8C\x85\x8D\x85\x32\x85\x86\x8E\x8E\x38\xB7\x8B\x86\x8F\x1D\xBC\x8F\x8E\x90\x41\xBB\x74\x8C\x91\x2E\x88\x99\x8E\x91\x3B\x8C\x9D\x8E\x92\x40\x89\x9E\x93\x90\xF9\x4C\x40\x6C\x94\x58\x93\x95\x92\x88\x30\x91\x9B\x90\x97\x47\x9A\x92\x96\x41\x05\x04\x82\x9B\x97\x29\xA1\x90\x99\x93\x6B\x8F\x97\x9A\x97\x21\x5B\x47\x97\x9B\x59\xAD\x94\x96\x9D\x5B\xA9\x9C\x9A\x9E\x6E\xB8\x93\x9B\x40\x07\x26\x9E\x9C\x9A\x27\xA5\x88\x89\xA1\x5D\xB5\x9C\x9F\x9D\x8B\x9A\x68\x41\x59\x8A\x88\xA9\x71\x02\x82\x8D\xAF\x9E\xA4\x7B\x98\xAD\x9E\xA5\x84\x87\xAE\xA6\xA1\xA0\x89\xA4\x9F\xA8\x83\xB0\x91\xA7\xA7\xA2\xA5\xA7\xA9\xA8",
					"\x6A\x9C\xA6\xA8\xA9\xAE\xAB\xA9\xAB\x40\x0A\x15\xAA\xA4\xA3\xB7\xB9\x99\xAF\xA5\xA8\xAD\xAB\xAD\xA7\xAC\x99\xAD\xAE\xB0\xC1\x9B\xAF\xAF\xAB\x22\x8E\x43\x9E\xAA\xB0\x87\xB2\xAE\xAF\xC3\x86\xB1\xB4\xAE\xD3\xBA\xA5\xB4\xAF\xC5\x96\x6C\x02\x42\xEC\x4D\xB7\xB4\xB0\xB3\x8E\xBE\xB5\xB6\xD6\xA4\xB8\xB5\xB8\xDF\x88\xB1\xAF\xB8\xE8\xA6\xB0\xB8\xB4\xEE\xAA\xB2\xBA\x88\x0E\x36\xA9\xBB\xB3\xC4\xAD\xBA\xBC\xBC\xFB\xB9\xBC\xBF\xBF\xFE\x81\xC2\xB5\xBC\xF8\x83\xCD\xBF\xC0\x0F\x36\xB4\xC0\xBB\x00\xC6\xCD\xC0\xB5\x0B\xCC\xB2\xC7\xBA\x13\xF3\xB4\xC7\xC5\x16\xD9\xC7\xBC\xC3\x02\xD0\xC7\xC2\xC7\x0F\xE5\xB6\x70\x04\x0A\xDF\xC2\xC9\xC8\xE7\xA8\xCF\xB9\xC7\x27\xEC\xC9\xCA\xCB\xAA\x51\x05\xCA\xCA\xF2\x9B\xC5\xC6\xCD\x18\xF8\xCA\xC5\xC4\x39\xFC\xCB\xCE\xC9\x2F\xCE\xC0\xCD\xCD\x3E\xFA\xC6\xD1\xD1\x48\xED\xB0\x47\xB2\x3D\xC0\xDB\xCA\xD0\x50\xE0\xC3\xD1\xC1\x52\xD1\xDD\xCA\xD5\x41\xD0\xC3\x07\xCC\x53\xDC\xC8\xD7\xD3\x55\xE1\xD7\xD6\xD8\x59\xE3\xD6\xD9\xD9\x68\xE0\xD7\xDA\xDA\x69\xC4\xDE\xD2\xDB\x34\xD4\xDB\xD8\xDC\x5D\xF7\xC9\xD1\xDC\x5E",
					"\xE4\xDC\xDB\xDE\x74\xDF\xDD\xDE\xDE\x7F\xF3\xD2\xDD\xDB\x83\xFC\xD5\xE1\x48\x14\x1C\xDE\xDF\xE1\x8C\xE3\xB5\x06\xE2\x80\xCD\xE6\xDF\xDB\x92\xCD\xD8\xDF\xE4\x97\xC3\x46\x04\xB7\x95\xC5\xA8\x04\xE4\x82\xF9\xD1\xE8\xE6\x75\xD6\xE5\xEB\xCF\x99\xE8\xE7\xEB\xD1\x94\xE2\xE4\xE2\xEB\x86\xF0\xE1\xE3\xEB\xA4\xCB\xE3\xBA\x44\x4C\xEA\xE6\xED\xED\x91\xF2\xED\xE4\xEB\xA9\xC0\xFB\xEB\xDD\xC3\xED\xE2\x8A\x06\xA0\xF4\xE6\xEB\xEE\xCB\xFD\xEC\xEF\xE8\xCD\xD0\xFA\xEE\xF3\xD1\xCA\xF3\xF6\xF4\xC2\xCC\xF7\xF4\xB6\x1B\x09\xF1\xEF\xF3\xD6\xD9\xF4\xF7\xF6\xDF\xD5\xF5\xF8\xF9\xB3\xE7\xF2\xF8\xF6\xC4\xDA\xFB\xF9\xF8\xED\xE3\xFF\xF8\xB0\x1C\x1E\xF9\xF8\xD1\x1D\x36\xFF\xED\xFC\xEC\xC6\xF6\xFB\xFD\xFB\x7E\x7C\xFA\x01\x81\x78\xFE\x70\x7A\x80\xF3\x60\x81\x42\x1E\x0A\x7E\xDF\x4E\x80\x7C\xEA\x66\x81\x04\xC6\x3F\x03\x06\x90\x82\x81\x17\x84\x81\xF1\x05\x88\x80\x09\x84\x68\x04\x16\x9F\x7E\x06\x83\x64\x23\xDC\x49\x83\x84\xF2\x7E\x80\x0A\xFD\x7C\x83\x16\x84\x5A\x04\x21\x83\x83\x03\xBD\x60\x20\x13\xAA\x83\x86\x32\x99\x80\x0E\xA7\x8B\x86\x00\x24\x01",
					"\x86\x3C\x9A\x86\x10\xA2\x8D\x87\x0E\x86\x8E\x85\xEE\x77\x87\x10\xB9\x84\x45\x12\x0A\x66\x04\x40\x8A\x88\x11\xCB\x81\x89\x29\x96\x8C\x89\x58\x95\x89\x16\xD2\x8B\x8B\x23\x9B\x87\x8B\x49\x9E\x89\x18\xC8\x89\x84\x31\xA5\x8C\x8C\x2C\x80\x8F\x19\xEA\x89\x8D\x31\xAC\x8F\x80\x68\x90\x8C\xB1\x27\x01\x8B\x0E\x96\x26\x86\x66\x8D\x8F\x1A\xEE\x8C\x8F\x3D\xBE\x8A\x8F\x80\x92\x8D\x1F\x81\x91\x83\x14\x35\x89\x8E\x13\x88\x90\x06\xD7\x8A\x8B\x46\x9C\x8E\x91\x79\x82\x93\x1F\x92\x94\x91\x45\x9D\x8A\x91\x2B\x94\x92\x26\xAA\x3A\x05\x43\x83\x7B\x05\x9E\x83\x93\x26\x96\x90\x92\x4C\x85\x8E\x94\x54\x8F\x92\x2A\x91\x9A\x34\x8C\x36\x85\x05\x0A\x6E\x05\x28\x93\x99\x91\x37\xB5\x92\x94\xB7\x94\x94\x29\xAB\x98\x94\x46\xBC\x96\x96\xBB\x8C\x95\x30\xBD\x97\x92\x60\x99\x90\x58\x2F\x13\x95\x25\xC7\x93\x98\x63\xA7\x96\x99\xA9\x82\x98\x33\xAB\x50\x06\x65\xA3\x93\x9A\xCF\x98\x95\x33\xDA\x98\x9B\x68\x84\x9D\x94\x9C\x31\x06\xC2\x32\x0A\x61\x19\x16\x99\x97\xCB\x99\x9A\x2E\xDD\x9E\x96\x69\xAA\x99\x9D\xDE\x90\x99\x3B\xDF\x9F\x96\x6E\xAF\x9F\x9A\xF7\x88",
					"\x9C\xB6\x34\x01\x8B\x1A\x0A\x66\x06\x0A\x77\x07\x39\xDB\x9B\x9D\x7C\x84\xA0\x9E\xF3\x92\x9D\x31\x83\x68\x07\x28\xB9\x02\x61\x3A\x0A\x63\x0E\x03\xAC\x9D\x85\x85\xA1\x9E\xF6\x98\xA3\x45\x89\xA3\x60\x2D\x1C\x71\x21\xB5\x47\x4E\x4C\x0F\x53\x21\xA5\x49\x32\x4E\x89\x32\x25\xB7\x06\x24\x52\x91\xA9\x24\xA4\x02\x35\x9A\x57\x2B\xA4\x56\x25\x63\xA7\x21\x5C\x34\xA6\x40\x21\xA3\x51\x9B\x89\x26\xA4\xA2\x28\xA6\x68\x30\x4E\xA6\x83\x0D\x06\xA6\x2F\xAA\x23\x51\xDE\x2E\x3C\xB2\x04\x38\xA6\x01\x3B\x58\x53\x9F\xA9\x30\xA8\x80\x02\xAA\x89\x2D\xAA\x6B\x5C\x26\xAA\xAC\xA2\x32\xA7\x01\x25\x4E\x4B\xA6\x26\xAA\x65\x7D\xA1\xA9\x09\x2B\xAB\x59\xE4\xAA\xA8\xAE\x02\xA9\x35\x44\xA8\xAE\x41\x32\xAB\xAD\x91\x16\xAD\xA5\x89\x20\xAC\x00\x62\xA9\xAE\x85\x3C\xAF\xAB\x0A\x36\x49\x5F\x89\x22\xB0\x4E\x45\xAB\x20\x74\xA2\x36\x56\x80\x0B\xB1\xC3\x87\x26\xAD\x5C\x31\xAC\x5B\x89\x29\xB1\xD4\x0B\xB0\x2D\x56\xB6\xAA\x4C\x6F\xA4\x38\x99\x05\xB0\xAE\x29\x3A\xAF\x67\xC4\x33\xB5\xE3\x2A\xA1\xB0\x5C\x25\xB6\x4C\x27\xB9\x20\xBC\x81\xA9\xB2\x29\x3C\xB2\x69\xA1",
					"\xBA\x21\x01\x5E\x2A\xB5\xAB\xA6\x26\x68\xB9\xA5\xB7\xD4\xB0\xB2\xB7\xA8\xB3\xA5\x6F\xB7\xBF\xB7\x91\x3A\xAE\xB5\xA9\x32\xB5\x6E\xA6\x28\xB7\xE5\x9E\x23\xB7\xC4\xBE\x28\x6B\x86\x2D\xB9\x91\x15\xBE\xB9\xC7\xB0\xB2\x74\xA9\x27\xBB\xE5\x90\xB9\x31\xDD\xB9\xB7\x77\xA2\x31\xBD\xD5\x99\xBE\x2B\x56\xB2\x64\x7A\x8A\x2A\xBD\xAA\x8A\x24\xA7\xA2\x36\xA8\x7C\xA9\x3F\xAE\xD0\xA6\x25\xBE\x9D\xB2\xAC\xA0\x5C\xAA\x21\x40\x6B\xB9\x21\xFE\xA2\x44\x03\xCE\xA3\x21\xC5\xBA\xAF\xC0\xC3\xB4\xBA\x5F\x8A\x22\xB7\x00\xFB\xB9\x21\x77\xBD\xBE\x42\x48\xB1\x20\x07\xC2\x24\xC2\x04\x2F\xBE\x84\xA0\xAB\xC2\x83\x33\xB9\x20\x65\xBD\xC3\x40\x66\xAF\xC0\x83\x24\xC7\xB1\x09\x3E\xA8\x81\xD6\xA4\xC0\x83\x11\x0A\x61\x21\x2C\xC5\x8B\x82\x22\x0A\x85\x7A\xAF\x02\x33\xDB\xA9\x7E\x36\xB6\x21\x0A\xB9\xC1\x24\x53\x0A\x60\x8F\x83\x2E\xC7\x1F\xC9\x24\x0A\x0A\x65\xB7\x0F\xB9\xCD\xB1\xE4\x25\xB4\x8E\x4C\xD1\x38\x7E\x80\x00\x95\x1C\xC3\xCA\x20\x55\x0A\x63\x62\x9D\x96\xCA\x85\x16\x0A\x61\xB2\xB2\x96\x91\x89\x27\x0A\x30\xCA\x21\x99\x63\xC6\x20\x16\x66\xC9\x20\x34",
					"\xE9\xCA\x20\x59\x0A\x60\x0F\x3F\xC7\xCB\x4F\x5E\x41\x24\x8B\xA6\xC1\x74\x7A\xAD\xC8\xCE\x1E\x45\xCE\x8C\xAB\x54\xA0\xFA\xA6\x39\x83\xA5\x35\xB4\xCA\xA9\x3A\x87\x25\xBD\xCF\x81\x72\xB7\xC3\xA0\x44\x6B\x94\x84\xD9\x38\x0B\xC1\x20\xC3\x85\xD5\xA1\x85\x89\xC4\x44\x0F\x56\xD1\xD0\x10\xD4\xA9\x8B\x8B\xB1\xC3\xFC\x06\xD2\x35\x56\xA0\xD1\xA6\xF9\x30\xD3\xC5\xA7\xC1\x20\x7C\xCA\x60\x86\xD3\xCB\xD4\x11\x6A\xAD\xC0\xAB\x50\xD3\xA7\xB5\xDC\xA2\xCB\x2F\xD0\x00\xB7\xC5\x53\xA9\xA1\x2F\xD6\x92\x66\xD3\x55\xF5\x49\x20\xA5\x9C\x3F\xD7\xF6\x9D\xD3\x55\xC6\xC6\x23\xB2\x9E\x31\xD9\xA8\x91\x3E\x43\x40\xA2\x23\xB4\x90\x69\xD8\x83\x2A\xC6\xCE\xD1\x29\x72\xB2\xAB\x59\x61\x84\x1D\xDF\xD9\x06\xAA\x21\xB4\x83\x2F\xDB\x48\xD1\x3B\x73\xE3\xC3\x5E\xB3\x82\x25\xDC\x11\x43\xD8\xA7\x09\x22\xDE\xBD\xD1\x3F\x72\x3C\xB0\x5A\xDF\x03\x3D\xDF\xBE\xB7\x72\xD5\x42\x4F\x71\xAD\xD7\xDB\x7D\xAC\x89\x27\xE0\x83\x2B\xDA\xD8\xAB\x5D\x79\xBC\x86\x20\xD1\xC5\x8D\xE3\x20\xF3\xC0\xDF\xB8\x79\x73\xE3\x81\x0C\xD2\x21\xF0\xC6\x23\xD6\x47\xD9\x3F\x22\xF8\xD3\x5C",
					"\x38\xC9\x21\xC8\xE8\xDA\xA2\xCD\x02\xE3\x20\x17\xF0\xE1\xBA\x89\x28\x76\x83\x12\xE3\xE0\x76\x60\x85\xC7\x85\x57\xE7\x81\x03\xC0\xE7\xBD\xDA\x31\xCF\x82\x25\x7E\x92\xED\xE5\x34\x45\xE6\x20\xC7\xC0\xEB\x66\x18\xBB\xE7\x53\x4B\xFE\xE5\xC2\xB3\xE6\x21\x9F\xC3\x20\xE0\x32\xE2\x47\x92\x90\x59\x3F\x29\xCB\xB6\xEA\x02\x3A\xE4\xD3\xE0\x9E\x32\x93\xC2\x20\xEB\x1A\xE2\x46\x13\xFE\xDC\x32\xD9\x8B\xB6\xEC\x01\x22\xEC\xCB\xC1\xE5\x34\xB9\xC2\x20\x79\x46\xF4\xEE\x6A\x25\x86\x21\xB5\xE3\xE8\x54\x50\x8C\xEC\x09\x8A\x21\xF1\xBF\xC6\x38\xCA\x5C\xF6\x6D\x0D\xB6\xE3\xEA\xBB\x77\x8A\xDA\x22\xC2\x23\x62\xDB\xE3\x20\xA7\xC6\xF1\x39\x5C\xD4\xE3\xAA\x7E\xE3\x21\xC5\xF3\xEE\xA2\x9A\x25\xF3\x40\x43\xE9\xED\x9E\x70\x97\xE9\x19\xD6\x84\xE2\x95\xFD\xF0\x12\x6E\xCB\x20\xAA\xD0\x5F\xE3\x83\x2C\xF3\xAC\xE4\x44\x9C\xA8\xE6\x38\x86\x8B\xB3\xF6\x81\x22\xF6\xF6\x85\x5C\x9D\xEE\xC9\x3D\xD5\x8A\x0C\xC5\xF5\x85\x40\xA3\xF0\xCC\xDA\x61\xCC\xC3\x26\x90\x79\xE5\x51\x43\x82\xF0\x63\x2A\xC6\x20\xFA\x97\xFC\x33\x43\xD4\xF5\x5C\x57\xBD\xE8\xF9\x9F\x51\xA1",
					"\x42\x31\xFC\x33\x76\xFA\xAE\xFB\x03\x3F\xF5\xE9\x85\x5D\x06\x4E\xC5\x57\xDC\xDA\xD7\x23\xF1\xD1\xFF\x52\x20\x2E\xFF\x53\x0F\xF0\xD6\x42\x62\xC6\x21\xD3\xD9\xFE\x33\x43\x04\x51\x09\x1C\x7F\xB4\x70\x7E\xA0\x24\x04\x05\x7F\x29\xD9\x6A\x7F\x03\x84\x78\x06\x86\x1C\x46\x09\x80\xA0\x28\x76\x00\x0A\x57\x04\x82\x10\x89\x6E\x67\xD1\x18\x04\x12\x86\x1C\x2B\x71\x7F\x6D\x6A\x10\xFE\x7F\x79\x9F\x2A\x04\x02\x86\x10\xAF\x72\x10\xB5\x7B\x7E\x9F\x2B\x04\x1D\x89\x1C\x2F\x70\x82\x28\x8E\x80\xF4\x70\x2A\x4D\x0F\x82\x9C\x18\x77\x90\x71\x82\x09\x19\x81\x9E\x1E\x21\x4F\x08\x83\x9E\x19\x74\x03\x1A\x57\x95\x5E\x54\x85\x6B\x5A\x6F\x6F\x63\x8D\x64\x12\x4D\x8F\x11\x97\x58\x67\x46\x61\x85\x30\x62\x85\x3F\x6B\x6D\x27\x18\x85\xCF\x56\x64\x08\x62\x81\x7A\x55\x81\x30\x6D\x85\xE3\x77\x16\xE4\x76\x12\x80\x64\x16\x67\x81\x12\x69\x87\x7F\x4E\x5B\x86\x84\x57\x16\xE5\x5F\x0F\xA5\x54\x16\x73\x81\x12\x75\x81\x5C\x39\x67\x87\x6F\x8F\x63\xB4\x65\x13\x7D\x89\x12\x5E\x71\x12\x81\x8B\x60\x36\x4B\x57\x46\x63\x65\x64\x1E\x83\x24\x1A\x88\x1F\x12\x5B\x89\x86",
					"\x64\xBB\x65\x13\x91\x89\x12\x9F\x64\x16\x95\x8B\x84\x03\x10",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"ClassBody",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][ClassBody] BEGIN ",
					L"[26][ClassBody] END [ENDING]",
					L"[27][ClassBody]ID @ [ \":\" ID ] \"{\" { classProp } \"}\"",
					L"[28][ClassBody]ID [ \":\" @ ID ] \"{\" { classProp } \"}\"",
					L"[29][ClassBody]ID [ \":\" ID @ ] \"{\" { classProp } \"}\"",
					L"[30][ClassBody]ID [ \":\" ID ] \"{\" @ { classProp } \"}\"",
					L"[31][ClassBody]ID [ \":\" ID ] \"{\" { classProp @ } \"}\"",
					L"[32][ClassBody]ID [ \":\" ID ] \"{\" { classProp } \"}\" @",
					L"[33][Class] BEGIN ",
					L"[34][Class] END [ENDING]",
					L"[35][Class]< \"ambiguous\" \"class\" @ ClassBody >",
					L"[36][Class]< \"ambiguous\" \"class\" ClassBody @ >",
					L"[37][Class]< \"ambiguous\" @ \"class\" ClassBody >",
					L"[38][Class]< \"class\" @ ClassBody >",
					L"[39][Class]< \"class\" ClassBody @ >",
					L"[40][Type] BEGIN ",
					L"[41][Type] END [ENDING]",
					L"[42][Type]<< ( !Enum @ | !Class ) >>",
					L"[43][Type]<< ( !Enum | !Class @ ) >>",
					L"[44][File] BEGIN ",
					L"[45][File] END [ENDING]",
					L"[46][File]< Type @ { Type } >",
					L"[47][File]< Type { Type @ } >",
				};
				return results[index];
			}

			const wchar_t* TypeParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::vint32_t TypeParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(tokens, this, codeIndex);
			};
		}
	}
}
