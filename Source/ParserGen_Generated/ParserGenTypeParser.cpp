/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1815; // 21834 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 23;
				static const vl::vint dataSolidRows = 7;
				static const vl::vint dataRows = 8;
				static const char* compressed[] = {
					"\x4A\x55\x00\x00\x0F\x07\x00\x00\x16\x00\x01\x82\x80\x07\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x82\x1A\x86\x12\x84\x78\x03\x09\xBF\x7B\x8C\x8B\x8E\x84\x00\x1D\x9D\x9F\x81\x9C\x8B\x90\x93\x7F\x26\xA4\xA9\x81\x9B\x92\x92\x85\x93\x28\xAF\xA7\x8D\x95\x92\x9A\x94\x9B\x2C\xB8\xAE\x9A\x83\x9A\x9D\x9A\x9E\x37\xC0\xB9\x82\xAB\x9E\x80\x98\x9A\x1E\xBE\x89\xBF\x89\x81\x02\xA5\x98\x44\xBF\x86\xBD\x91\xAB\xA7\xA9\xA0\x57\xC3\x99\xA5\xA3\x87\xA3\xA6\xA4\x50\xDB\x92\xBD\xA4\xAA\xB2\xAA\xB2\x58\xE8\x9A\xAA\xBC\xAA\x82\xAF\xAA\x61\xEC\xA3\xAE\xB5\xB2\xBB\xB2\xBA\x69\xF8\xAB\xBA\xBD\xB1\x83\xB6\xB3\x71\x82\x8E\xAD\xAF\xAD\xC0\xB8\xB0\x88\x86\xC0\xC9\xC7\xC2\xC6\xBB\xC0\x7E\xF5\xBC\xB3\xB1\xC9\xBD\xCB\xBD\x97\xFD\xA0\x92\xC9\xCC\xCB\xCC\xCB\x9F\x98\xE1\xDA\xCF\xBF\xC4\xC7\xC5\x8E\x93\xF7\xBD\xCB\xD3\xD2\xCF\xD2\xAA\x90\xEE\xCD\xD0\xDC\xD6\xD9\xDA\xB3\xB7\xDC\xC0\x02\x02\x87\xC0\xD4\x8D\xC1\xC0\xE3\xE6\xD1\xD6\xDB\xD3\xC5\xC2\xC9\xE6\x89\x8C\xC2\xE5\xD8\xC8\xD0\xC6\xF9\xD1\xEF\xE3\xE8\xDC\xD8\xBB\xD9\xE0",
					"\xDB\xEA\xD1\xEE\xD2\xDA\xE1\xDC\xE2\xFE\xEC\xF0\xF1\xF1\xE8\xE5\xE9\xE7\xFA\xF5\xF4\xF7\xF7\xAF\xE6\xF1\xEB\xF3\xFE\xF5\xFA\xF8\xB4\xF2\xF9\xF4\xFB\xFE\xF9\xFE\xFC\xBA\x7C\x71\x82\x7F\x03\x80\x85\x74\x75\xD7\x7A\x75\x83\x7D\x0C\xAD\x6C\x42\x73\xC4\x52\x7F\x72\x75\x13\x88\x85\x87\x77\x0D\x8B\x8F\x7D\x86\x07\xB8\x65\x02\x6F\x09\x82\x8D\x86\x82\x07\x86\x00\x8B\x85\x24\xA1\x84\x83\x88\x22\xAA\x86\x82\x8B\x1C\x8A\x48\x42\x41\xBF\x4B\x76\x8E\x84\x11\x94\x89\x8E\x85\x06\x48\x07\x8B\x8E\xB8\x49\x0F\x8F\x8D\x3A\x84\x9C\x8E\x91\x18\x9B\x8A\x92\x86\x4C\xAC\x8B\x88\x8C\x4B\x8E\x9F\x88\x8A\x2D\x94\x9F\x92\x95\x53\x80\x99\x88\x96\x31\x89\x4A\x03\x90\x38\x88\x9B\x96\x96\x55\xA4\x97\x96\x99\x59\xA2\x95\x9B\x40\x0E\x50\x8A\x9B\x99\x6F\xA9\x91\x9B\x9C\x45\xB4\x97\x92\x9D\x49\x8D\x9A\x40\x03\x0A\x7D\x6C\x95\x94\x50\xBA\x9F\x9E\xA0\x68\x9D\x95\xA0\xA0\x83\x92\x96\xA1\x9C\x8B\xB8\x93\x9B\x40\x0E\x20\x95\x9F\xA4\x77\x94\xA9\x9E\xA2\x88\x87\xA4\xA0\xA3\x99\x9C\xAB\xA6\xA3\x6B\xA0\xA2\x6B\x03\x92\x95\xA6\xAB\xA5\x81\x98\xAF\xA6\xA5",
					"\x8F\xA2\xA2\x9C\xAB\xA1\xB0\xA0\x9E\xAB\x8D\xB2\xAF\xAB\xA9\xAD\xB6\xA5\xAE\xA9\x10\x25\xA8\xA9\xA2\xA9\x81\xB0\xB3\xB0\x06\x51\x0E\xAD\xAE\xB8\xB1\xA9\xB3\xAC\xBA\x9D\xA4\xAE\xB3\xCD\xAB\xAB\xB3\xAD\xBF\x9A\xAA\xAB\xB5\xC2\x96\xB3\x74\x44\x6E\x8F\xB2\xB5\xB5\x9E\x98\xB4\xB1\xB8\xD9\xA4\xB9\x43\x04\xC7\x8A\xB0\xBA\xB7\xE2\x9A\xB3\xB8\xBB\xE5\xB0\xBF\xB9\xB4\xED\xA6\xBE\xBB\xBD\xF6\xB9\xB2\xBC\xBE\xFB\xBA\xB4\xBD\xBC\xFF\xB3\xB3\xB7\xAE\xEB\x81\xCC\xBE\xC1\xFE\xA6\xA4\x05\xBA\xCC\x83\xC0\xB6\xC3\xB2\x55\x0C\xC0\xB5\xC8\x85\xC0\xC5\xBD\xFD\x99\xC4\xA4\x40\x09\x7E\x97\xC0\x00\x18\x13\xC4\xC1\xC5\x24\xEA\xB5\xC9\xC3\x16\xE9\xC7\xC8\xC5\x26\xED\xC8\xCB\xCA\x23\xEE\xCC\xCB\xCB\x32\xDE\x62\x45\xB7\x08\xDA\xC7\xC4\xC0\x3B\xC2\xCA\xC9\xCD\x0F\xFF\xCD\xC2\x06\x22\xC1\xD0\xCE\xD1\x40\xD2\xBB\x05\xD1\xDF\x87\xDD\xD1\xD2\x18\xF9\xC2\xD5\xCF\x1F\xC2\xD3\xCF\xD5\x31\xF4\xCA\xD4\xD6\x48\xDB\xD9\xD4\xD7\x4F\xDE\xDD\xD4\xD8\x51\xD4\xD9\xC2\xD5\x5F\xE9\xD3\xDB\xAE\x1C\x0C\xD5\xD8\xDA\x6B\xF1\xD1\xD8\xD9\x0A\x5D\x0E\xDB\x74\x1E",
					"\x37\xDE\xCE\xD3\x6F\xFC\xDC\xCC\xDC\x73\xEA\xD1\xE2\xDC\x7D\xD0\xDA\x43\x07\x7A\xD5\xDE\xDF\xDE\x86\xCC\xE2\x68\x08\x89\xE7\xDB\xE2\xE2\x8D\xD4\xED\xC1\x08\x91\xFA\xC0\xE1\xD9\x14\x78\xC6\xDA\xE6\x93\xD2\xE5\xE5\xC2\x23\x19\xE3\xD7\xE6\x3C\xE4\x06\xEB\xE7\xA7\xE1\xEA\xCD\x09\xAB\xE8\xEE\xE0\xDD\xB3\xC2\xE5\xE2\xD8\x83\xF9\xE5\xDA\x45\x9E\xE7\x01\xEE\xEB\xAD\xE3\xE0\xEA\xF0\xC1\xF8\xE7\xEC\xED\x96\xC8\xF2\xEA\xF1\x7F\xC0\xFC\xEB\xF3\xB8\x68\x0F\xEC\xF1\xD0\xCE\xF2\xED\xF2\xB6\xCD\xF4\xF4\x6E\x29\x13\xFC\xF1\xED\x84\xDA\xFF\xF4\xF6\xE1\xE0\xFA\xEF\x74\x2A\x25\xAB\x0A\xF7\xCA\xC3\xF3\xFB\xF2\xED\xC5\xF1\xFD\xF5\xDB\xD6\xF6\xFD\xFD\xF8\xEF\xFE\xFB\xFC\x2C\x2B\xED\x09\xA9\x2E\x0C\x7D\xF6\x66\x77\x79\x01\xA4\x7F\x7C\x04\x8A\x23\x0B\x2B\x70\x07\x52\x71\x02\x80\xE5\x67\x81\x01\x91\x80\x7E\x03\x95\x85\x35\x3F\x1D\x4E\x42\x3E\x43\x50\x98\x33\x45\x47\x70\x3F\x40\x5C\x30\x2E\x63\x81\x1F\x86\x5B\x1E\x9F\x20\xBA\x00\x35\x84\x81\x1C\x82\x53\x29\x9B\x80\x5C\x2D\x81\x21\x17\x9E\x51\x86\x09\x36\x86\x6D\x22\x80\x31\x3C\x78\x83",
					"\x20\x02\x0F\x43\x0D\xA7\x27\x85\x80\x01\x88\x2E\x35\x4C\x2A\x6D\x45\x80\x01\x00\x02\x89\x36\x49\x86\x8B\x53\x4C\x8E\x88\x24\x8C\x6C\x8A\x4F\x96\x34\x0D\x80\x09\x8B\x68\x7F\x83\x20\x5D\x9E\x84\x11\xFD\x41\x8C\x05\x5F\x8E\x88\x65\x84\x24\x0F\x8F\x34\x84\x85\x0D\x38\x86\x63\x8A\x23\x0A\xC3\x84\x24\x26\x80\x07\x8D\xB1\x3B\x89\x17\xB9\x3A\x8F\xA7\x2B\x89\x36\x6D\x89\x20\x1E\xF9\x82\x46\x3F\x8F\x28\x26\x7F\x96\x35\x20\x86\x2B\x8B\x45\x83\x23\x90\x5A\x9A\x83\x0C\x85\x91\x85\x43\xA7\x23\x8B\x90\x9C\x8C\x25\x80\x39\x91\xDC\x0E\x92\x20\x99\x9F\x91\x40\x4C\x87\x8D\x51\xB0\x2E\x8E\x45\x85\x95\x00\x10\x9A\x94\x56\xA7\x23\x8F\x30\x30\x24\x2C\xB1\x95\x8F\x8F\x34\x85\x94\xBC\x27\x96\x2D\xF0\x22\x62\x25\x83\x21\x8A\xB9\x9D\x62\x24\xCC\x3A\x21\x3D\x9D\x96\x44\x09\x2C\x89\x27\xCC\x88\x98\x10\x89\x25\x93\x3A\x81\x21\x33\x83\x22\x49\x67\x8A\x25\x9A\x06\x33\x9A\x40\x5F\x4E\x96\x17\x8A\x26\x06\xA5\x5F\x21\x34\x80\x07\x07\x52\x5B\x8F\x02\xD3\x39\x90\xE4\x09\x28\x07\x52\x6A\x9A\x21\x39\x05\x57\x1E\xB0\x79\x20\x1D\x25\x50\x98\xAA\x69",
					"\x23\x0E\x25\x5D\x92\xE9\x49\x24\x07\xFC\x8A\x21\xF7\x09\x2D\x07\x80\x89\x23\xA0\x06\x3E\x05\xA9\x32\x0D\x9A\x50\x8D\xA1\x20\xC0\x80\x99\x23\xBB\x3B\x8A\x60\x99\x90\x98\x16\x79\x93\x44\xD4\x7B\x8E\x6D\x81\x23\x8F\x18\xA8\x5A\x47\x80\x0C\x9B\x1D\x5D\x93\xA3\xA2\x2C\x88\x36\x97\x82\x36\x26\x99\x94\x8A\x32\x82\x9B\x43\xC0\x93\x9D\x95\xBB\x7E\x33\xE3\x99\x91\x49\xBF\x9D\x21\x61\xBC\xA6\x73\x36\xA1\x21\x27\x8D\x00\x82\xD9\x3B\xA7\x20\xE2\x7A\x31\x9B\x06\x24\xA9\x04\x89\x23\xA9\x03\x3D\x55\x85\x11\x52\xA7\x1D\x50\xAA\x20\xC6\x55\x42\x54\x8C\x93\x3B\xA6\x86\x24\x4F\x09\x3C\x58\x57\x82\x64\xAB\xAF\x8A\x23\x61\x55\xA9\x60\xA9\x09\x25\xAC\x96\x9F\x23\xAB\x03\x20\xAE\x41\x1C\x63\xAD\x8F\x59\xAE\x20\x6B\xB2\x83\x43\x67\xAA\x21\x90\x5E\x76\x62\x68\xA6\x22\x5F\xBB\x47\x67\xBA\x86\x4D\x97\x4C\xBC\x65\x45\x8A\x28\xB1\xA8\x93\x3B\x69\x69\xAE\xA2\xE7\x0D\xB8\xAB\xE9\x36\x69\xB2\x1F\xA5\x54\x5D\x83\x23\x8F\x81\x08\x77\xAF\xC8\x48\x9D\x42\x1B\xB7\xA7\xD6\x03\xB3\x20\x94\xB2\x7E\xCD\x0A\x20\xB2\x83\x2B\x9C\x46\x3C\x6D\xB7\x40\x6D",
					"\x65\x42\xCC\x58\xB6\x54\xB4\xA6\x23\x67\xFA\xA9\x21\xDC\x83\x27\xB2\xBC\xA6\x20\x70\x83\x29\x6F\x0A\x65\x77\xB6\xB8\x25\xBA\x6E\xC9\xAE\x33\xDD\x83\x21\xB0\x03\x34\x9C\x6C\x95\x4D\x92\x60\x8E\xBA\x20\xB6\xA1\xBB\x40\x2F\xBF\xB9\x8A\x2B\x73\xA4\xC0\x9C\xB8\x76\xCC\xBD\x35\xEC\x83\x24\x68\x09\x3E\x74\x68\xCA\x5D\x72\x83\x32\xB2\x20\xFE\x93\xBB\x8E\x30\xA9\x21\xF6\x83\x23\xA4\x08\xBF\xA7\x8E\x63\x98\x9E\x85\x07\xBE\x20\xE9\x6B\xBD\xC3\x52\xB3\x21\xFF\x83\x23\x7D\x02\xD7\x54\xEF\x6E\xBA\x21\xFE\x48\xBB\x37\x41\xA1\x9A\x41\x0B\xC7\xBE\x85\x01\x87\xC1\xA0\x37\xAA\x14\x89\x21\xBF\x81\x2A\xBE\x20\x0D\x89\xC3\xAE\x1D\xC2\x21\xF7\x81\x27\x81\x22\xCD\x36\x57\xC0\x8A\x20\x12\xD2\x9A\x21\x0C\xA9\xC6\x6C\x79\xAC\xC5\x83\x8A\x27\xC3\x03\x33\x05\x51\x9F\x29\xBF\x12\xCA\x24\x06\xAB\x77\xAD\x8D\x86\x2D\xC7\x17\xC9\x25\x06\xAB\x7D\xB2\x40\x5B\x81\xC1\x87\xA3\x26\xC9\x82\x3F\x20\x46\xC0\x9D\x88\x29\xD6\xC9\x9C\x5B\x92\xC1\x57\x59\xCC\xCB\x5D\xBE\xA7\x91\x1F\x21\x95\x26\xF7\x81\xCD\x32\xEE\x8F\x23\x7B\x9C\x8B\x4B\x69\xCC\xCC\x34",
					"\xEE\xCD\x98\x6F\xD6\x9A\x42\x1D\x9F\x1F\x4E\x80\x06\xCE\x23\xA0\x03\x48\xFF\x19\xCF\x3C\xC0",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][Class] BEGIN ",
					L"[26][Class] END [ENDING]",
					L"[27][Class]< \"class\" @ ID [ \":\" ID ] \"{\" { classProp } \"}\" >",
					L"[28][Class]< \"class\" ID @ [ \":\" ID ] \"{\" { classProp } \"}\" >",
					L"[29][Class]< \"class\" ID [ \":\" @ ID ] \"{\" { classProp } \"}\" >",
					L"[30][Class]< \"class\" ID [ \":\" ID @ ] \"{\" { classProp } \"}\" >",
					L"[31][Class]< \"class\" ID [ \":\" ID ] \"{\" @ { classProp } \"}\" >",
					L"[32][Class]< \"class\" ID [ \":\" ID ] \"{\" { classProp @ } \"}\" >",
					L"[33][Class]< \"class\" ID [ \":\" ID ] \"{\" { classProp } \"}\" @ >",
					L"[34][Type] BEGIN ",
					L"[35][Type] END [ENDING]",
					L"[36][Type]<< ( !Enum @ | !Class ) >>",
					L"[37][Type]<< ( !Enum | !Class @ ) >>",
					L"[38][File] BEGIN ",
					L"[39][File] END [ENDING]",
					L"[40][File]< Type @ { Type } >",
					L"[41][File]< Type { Type @ } >",
				};
				return results[index];
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, codeIndex);
			};
		}
	}
}
