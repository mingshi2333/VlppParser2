/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2366; // 32160 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 62;
				static const vl::vint dataSolidRows = 9;
				static const vl::vint dataRows = 10;
				static const char* compressed[] = {
					"\xA0\x7D\x00\x00\x36\x09\x00\x00\x1C\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x81\x1A\x80\x16\x84\x16\x0A\xA0\x45\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x97\x97\x92\x9A\x2C\xB8\xAE\x9A\x90\x9C\x8D\x9A\x9E\x37\xBE\xB9\x82\xAB\x9C\xA1\x9E\x83\x32\xB6\xA0\x80\xAB\xA6\xA1\xA0\xA4\x3F\xCE\x8D\xB0\xA3\xA1\x92\x83\x00\x4C\xB3\x92\xBA\xA4\xAD\xA1\xAF\xA3\x03\xC9\x99\xAA\xAC\xA9\xB1\xA9\xAF\x4F\xE6\x95\xAA\xBE\xAC\xB4\xB0\x81\x62\xDB\xA4\xB3\xB3\xB5\xBA\xB8\xBB\x68\xD3\xAE\xA9\xB0\xBF\xB3\xBC\xBD\x7D\xEB\x81\xCD\xB3\xC7\xB5\x81\xB8\x79\xE5\x85\xDC\xB7\xC6\xBF\xC4\xC0\x8D\x82\xD1\xC4\xC1\x80\xAD\x84\xCB\x89\xF4\xB7\xBB\xC9\xC8\xBF\xBE\xC5\x93\x86\xE2\x8E\xC1\xD4\xC7\xD0\xC9\xA7\x94\xE9\xC2\xD8\xC7\xCE\xCD\xCE\x9C\xAE\xDE\xCF\xC0\xD3\xD6\xD3\xD6\xB4\xAF\xF2\xD1\xD9\xDB\xD9\xD2\xC8\xB6\xC0\xF8\xDF\xD5\xDB\xE1\xE1\xE2\xA4\xC7\xFA\xDD\xDC\xDC\xE3\xE4\xE7\xBE\x80\x02\x0A\x88\xCB\xDC\xD9\xEB\xD6\xD9\xCC\xF8",
					"\xEB\xEA\xEC\xE9\xE6\xCA\xD1\xC6\xE3\xF9\xE4\xF0\xD5\x01\xD4\xE2\xE5\xEB\xF8\xD6\xF2\xD4\xF7\xAC\xEC\xEF\xF2\xF1\xFD\xF4\xFB\xDB\xF7\xC2\xF9\xE8\xE6\xFD\xFF\xF8\xFF\xF5\x7F\x72\x81\x80\x04\xB8\x70\x82\x81\x03\x88\x85\x82\x7E\x07\x8C\x89\x82\x83\x0B\xBC\x7F\x82\x84\x11\x8F\x71\x78\x78\xF0\x4A\x8A\x84\x84\x1B\x94\x8D\x86\x85\x19\x9C\x82\x8A\x87\x23\xA0\x8B\x7E\x89\x0D\xA4\x8A\x88\x8A\x13\xAC\x85\x86\x7A\x29\xA1\x4C\x43\x65\x30\xAD\x85\x8F\x8B\x18\xA7\x87\x8F\x87\x3B\xA5\x8D\x8F\x8A\x0A\x5B\x44\x8D\x8E\x31\xBF\x8E\x88\x8F\x44\xAA\x66\x01\x7A\x49\xB8\x8C\x77\x77\x4F\x97\x81\x95\x88\x40\x8D\x98\x93\x94\x3A\xA0\x77\x00\x93\x58\x85\x96\x96\x8F\x5F\x95\x91\x94\x42\x57\x46\x96\x99\x42\x09\x1C\x9E\x76\x94\x6B\x94\x97\x90\x98\x5D\xB6\x81\x9B\x9B\x62\xAD\x99\x95\x9C\x4E\xB6\x9E\x94\x9E\x57\xBA\x92\x9C\x9F\x70\xBE\x99\x9D\x77\x84\x90\x92\xA2\x69\x0A\x2A\x95\xA0\x9B\x8B\xAE\x97\x98\xA0\x75\x8D\xA7\x9F\xA1\x81\x92\xAB\x9C\xA5\x91\x81\x4E\x43\x90\x90\xB4\x9E\xA7\xA3\x98\x9F\xA3\x9C\xA8\x96\xAA\x6C\x02\x42\xD3\x63\xAA\xA9\xA7",
					"\xA4\x86\xA5\xAB\xA0\xAE\xB1\xAC\xA2\xAC\x8E\xAB\xA1\xA9\xAB\xB3\xB9\xA5\xAC\xAB\xB6\xAF\xA6\x6A\x03\x8A\xB4\xA3\xA6\xAF\x95\x82\xB7\xA4\xB1\x99\xBA\xA3\xB2\xB1\x7F\xB7\xAD\xAC\xB3\xB0\x8A\xB7\xB2\xAC\x0F\x01\xB2\xB5\xB3\xC8\xA2\xAC\xAF\xB6\xCE\x9C\xB9\xB4\xAE\xBB\x9D\xB2\xBB\xB7\xCF\x97\xB1\xB5\xB8\xE4\x9E\xB0\xB5\x9F\x02\x50\x06\xB4\xBA\xEB\x85\xB6\xB8\xBB\xF1\x89\xB0\xBF\xBC\xF2\x86\x71\x07\xBB\xCB\xB8\xB6\xBD\xBF\xF7\x81\xC0\xC3\xC0\xD3\xBE\xBA\xB7\xB8\xF5\x87\xC9\xB8\xC2\x06\xE0\xB4\xC0\xB6\xB2\x90\x4C\xA4\xC3\x02\xC5\xC5\xC4\xC4\x0D\xE5\xB7\xC7\xB9\x0F\xDC\xC8\x6B\x04\xFC\x96\xCD\xC4\xBD\x19\xEA\xB5\xC8\xC5\x23\xF9\xB9\xCB\xBF\x22\xED\xC8\xC7\xC6\x24\xF0\xCA\xCA\xCB\x1E\xEF\xCB\xCA\xC2\x09\xCE\xC4\xCD\xCC\x37\xFA\xC6\xCF\xCE\x33\xFF\xC2\xD1\xCD\x44\xFC\xC0\xD1\x6D\x14\x21\xC3\xD2\xD1\x4B\xC1\xD1\xB5\x05\x4A\xC5\xDE\xD0\xD3\x52\xEC\xCD\xD2\xD5\x55\xD6\x86\x04\xAA\x3E\xD1\xB8\x05\xD4\x54\xE1\xD3\xD7\xD8\x58\xE2\xD5\xD8\xD9\x38\xE7\xCB\xC3\xDA\x39\xDA\xCD\xCE\xDB\x47\xE9\xD2\xCF\xD9\x74\xE1\x42\x47\xC4\x6C",
					"\xEA\xDD\xDA\xC9\x73\xF2\xDF\xD8\xDF\x7F\xE8\xC1\xDC\xAE\x1A\x20\xD8\xD9\xD7\x66\xFE\xD3\xE0\xDC\x57\xCA\xED\xE0\xE2\x87\xCC\xE9\xD4\xE4\x75\xCA\x4B\x06\xE1\x95\xD2\xE9\xE0\xE5\x8E\xD3\xEA\xE5\xE4\x80\xCB\xE1\xEB\xE3\x9F\xD9\xE3\xEA\xE7\xA7\xDB\xE0\x78\x40\x78\xFB\xD3\x41\x07\x98\xDD\xEA\xE9\xEA\xA0\xC2\xE4\xE8\xED\xA6\xF6\xE8\xEA\xEE\xB3\xFC\xE5\xED\xDE\x1E\x31\xEC\xE7\xF0\xA5\xF2\xEF\xEE\xEB\x02\x5F\x02\xF1\xF1\xC4\xF8\xE6\xF1\xEE\x79\xFD\xD1\x74\x08\xCB\xCE\xFD\xF3\x9A\x14\x6D\xEA\xDF\xF6\xD2\xCC\xFE\xF6\xF5\xDF\xEB\x92\x09\xF5\xBE\xD0\xF8\xF1\x40\x23\x24\xF1\xF5\xE0\xEB\xE2\xE5\xFA\x85\x24\x2A\xF7\xF8\xF7\xEC\xF3\xFD\xF4\xF8\xF8\xEF\xF7\xF5\xFB\xB7\xEB\x95\x0A\xB5\x26\x12\x7C\xFD\x6E\x7C\x7F\xDD\x45\x85\x77\x07\x87\x7B\x00\xFD\x79\x80\xF3\x4B\x86\x80\xF6\x75\x7F\x03\x88\x81\x82\x02\x95\x84\x81\x17\x90\x83\x04\x8A\x87\x7E\xFD\x61\x7D\x81\xCF\x61\x27\x09\x02\x8D\x82\x81\x16\x22\x7B\x25\x99\x80\x05\x9B\x8E\x81\x14\xAC\x81\x84\xFB\x6A\x84\x07\xFD\x59\x04\x12\x92\x86\x85\x38\x97\x86\x0E\x96\x8F\x85\x18\xBD\x87",
					"\x83\x32\x8D\x87\x0E\x98\x8F\x87\xFC\x60\x82\x21\x2A\x16\x84\x0F\xAB\x0A\x88\x22\xB9\x84\x87\x4F\x8E\x8B\x10\x9A\x81\x8A\x2A\x92\x80\x23\xDA\x6D\x06\xB5\x2E\x0D\x88\x2B\x90\x8B\x8A\x2B\x95\x89\x18\xE0\x83\x87\x2F\xA6\x8A\x8A\x67\x9E\x88\x1A\xEB\x8A\x8D\x36\xAB\x87\x05\x5D\x83\x8D\x1A\xF2\x8C\x8C\x3A\xAE\x8D\x8C\x75\x98\x8E\x68\x30\x01\x8E\x3D\xB6\x8F\x8F\x7E\x81\x92\x10\xF3\x82\x90\x18\xA5\x59\x06\xD6\x52\x06\xB5\x33\x0D\x8F\x41\xB9\x8E\x91\x77\x90\x90\x20\x92\x95\x90\x1F\xA2\x8D\x92\x40\x85\x8A\x07\xC6\x81\x88\x43\x91\x4C\x06\x02\x95\x06\xB5\x36\x06\x5B\x1B\x0D\x96\x93\x9B\x89\x97\x11\x99\x97\x92\x4A\x89\x58\x07\x02\x99\x06\xB5\x3A\x06\x5B\x1D\x27\x96\x92\x64\x8E\x94\x2A\xAB\x9C\x92\x4D\x8B\x52\x0B\x5C\x69\x20\x99\x18\x52\x27\x61\xAD\x59\x2B\x4B\x5B\x2A\x4C\x29\x56\x21\x2D\x61\x4D\x98\x0A\x23\x7F\x56\x4C\x93\x20\x63\xB5\x58\x9A\x09\x2E\x5F\x34\x8A\x26\x9A\x7F\x58\x9E\x20\xDA\x89\x31\x32\x89\x34\x4B\x6F\x83\x23\x53\x90\x46\x9E\x40\x68\x9F\x33\xEA\x16\x2C\x38\xDD\x89\x53\x56\x6E\x91\x20\x6A\xB4\x31\x9E\x59\x34",
					"\x9C\x00\x7A\x9A\x9D\x80\x32\x99\x31\xF6\x81\x23\x8C\x69\x99\x25\x6E\xA9\x4F\x99\x05\xAD\x23\x8F\x7D\x90\x00\x76\xB4\x33\x9C\x9F\x25\x9D\x42\x89\x22\x9A\x82\xA6\x25\x9B\xCE\x80\xA2\x42\x03\xAF\x33\x80\x80\x04\xA3\xB4\x3E\xA0\x7A\x5B\x99\x21\x91\x96\xA3\x24\xDD\x95\xA1\x3B\x98\x7D\x9A\x88\x8F\xA1\x2B\x12\xB7\xA1\x34\xF9\x9F\x9D\xC4\x2D\xA0\x99\x30\xA9\x24\x48\xC4\x3B\x98\x85\x26\xA7\x33\x3B\xA7\x39\x4F\xA5\xA9\x2B\xA0\xB2\x23\xA8\xCD\x98\xA6\x32\xA9\x2E\xA4\x9E\xA9\x26\xA3\x1E\xB2\x26\x51\xC7\xA6\x24\x91\x99\x28\xAA\x45\xB9\xA5\x55\xBE\xA7\xAB\x60\x89\x33\xAA\x54\xBF\x22\x47\x99\xAF\x33\xA6\x82\xAA\xA7\x5A\xA3\x26\x55\xDB\x20\xAD\xB0\x9D\x23\xAD\x5F\xA9\xAE\x58\x8A\x24\xAD\x97\x8B\xAE\x24\x6D\xAE\xAC\x5C\xC0\xA2\xAE\x8F\x3B\xAC\x36\x79\xA1\xAF\x58\xD9\x2D\x9B\x6A\x5B\x2D\xB0\x84\xBC\x99\x62\xC2\x99\x2A\x21\x64\x99\x25\x8E\xB1\xA3\x44\x86\x21\xB3\x7B\x81\x4B\xB1\x94\xB9\x29\xF0\x35\xA2\x20\x7D\x98\xA9\x21\x7F\xA2\xA3\x65\x89\x26\xAD\xBA\x81\x26\xB4\x04\x2A\x23\x41\xC9\xA8\x4C\xBA\xAA\xB2\xB1\x09\x3F\x9F\x40\x28",
					"\xB2\xB6\x81\x34\xB0\xB6\x06\x2E\xA3\x69\x8A\xA9\x20\xD4\xBA\xB1\xB5\x09\x27\x54\x67\x81\x2D\x9B\x90\x11\x0E\x5A\x21\x25\xBA\x42\x52\x06\x5A\x8F\x97\x03\xB8\xB2\x5F\xA5\xF2\x50\xB0\x01\x29\x16\x5A\xBA\x01\x2A\x78\x74\xD4\x06\x5B\xA0\xB1\x78\xBA\xC6\x21\xAB\x08\xE0\xB9\x39\xCA\x81\x24\x89\xD0\xB5\x0A\xB5\x7A\x99\x88\xE8\x96\x0E\x5A\x66\xBC\x88\x74\xD7\x00\xBE\x85\x30\x88\xBA\x58\x15\xBD\x42\x77\xB3\xB9\x2C\x16\x5C\x07\xD4\xB8\xB9\xAE\x54\xBB\x9F\xE6\x91\x3E\xA3\xFC\x89\x39\x48\x02\xC9\xC1\x82\x42\xC1\xAA\x0A\xDE\x85\x50\xE6\xA6\x38\x19\x77\x94\xB4\x0A\x35\xB6\xAC\x16\x46\xBC\xE9\x11\x38\xB5\xAB\xAB\x4F\x2E\xBB\xB4\xA8\xF0\x21\x20\xB5\xFA\x9D\x9A\x47\xA1\x29\xC5\xD7\xA6\xC6\x87\xDD\x82\xC1\x85\x99\xC6\x5B\xDF\x88\xC6\x5A\x21\xC2\x21\x87\xB3\xC9\x21\x06\x17\xC6\x20\x1A\xC0\x00\x6A\xBC\xCD\x97\xDF\xBE\xC7\xC5\x99\x9F\xB5\x38\xA2\xC1\x3A\x60\x60\xB1\x3A\xBF\xBB\x5C\x92\xD1\x4B\xC8\x81\x10\xC0\x35\x47\xC6\x22\x70\xD1\x41\x24\x89\x46\x27\xCA\x18\x6E\xCA\x96\xD1\x31\x25\xA4\x4F\xCD\x5C\x86\xA6\x22\x98\xCC\xC9\x93\x2A",
					"\xC1\x23\xCB\x6C\xC6\x23\xD6\x67\xC6\x64\x29\xC6\x21\xCD\x71\xCA\x95\x40\x5E\xC3\x20\x33\xDC\xCA\x21\x5F\x68\x85\xBF\x7E\xC3\x21\x40\xFF\xC8\x3C\x77\x7F\xC9\x74\x50\x6D\xC6\x32\xF8\x57\xC6\x09\x2C\xD0\x38\x8E\xD0\x3D\xCB\x74\xCB\x20\x0C\xCA\x22\xA4\x83\x26\xCF\x3C\xCB\x50\x76\x97\xCB\x22\xB5\x73\xC6\x20\x90\x53\xCB\x20\xDA\xA5\x4D\xB9\x4F\xB9\x20\x52\xDE\xD5\x93\x80\xDA\xD0\xA5\xBD\x99\xD1\x81\x16\xD7\xD0\x51\x54\x79\xA8\xB2\x57\xD7\x81\x1B\xB0\xD7\x7A\xC0\x01\xAF\x82\x2C\x74\x60\xFC\x93\x20\xC5\xCF\x77\xAC\xE2\x7E\xAB\x35\x60\xD6\x20\xBF\xCF\xD6\x2F\x81\x21\xDA\x81\x04\xD3\x51\x21\x3F\xBA\xAA\xD1\x4D\xC2\x7D\x95\xD9\x20\xBA\xC6\xD8\xAC\x89\x29\xD5\x3E\xCB\xDA\x20\xFF\x62\xD0\x6A\x66\xAA\x9F\x72\xC2\x21\xDC\xD2\xCE\x84\xBC\x82\x25\x71\x53\xC7\xDA\x20\xD9\x66\x21\xBA\xE2\xD0\x01\x00\xAA\xD8\x63\xF9\xC3\x22\xBF\xFC\xD3\xBD\x6D\xCC\x61\x7D\x09\x23\xDB\x86\xD1\x37\x84\x45\xFD\xB6\x5A\xDA\xC3\x22\x4A\xD8\xD8\x88\xAE\xA5\x5B\xDF\x03\x28\xE0\xBF\xAE\x83\xE0\x5B\xE7\xDA\x56\x5A\x9B\xD4\x70\x86\xE2\x21\x82\xD2\xE7\xE3",
					"\x00\x1C\xBC\xA6\xB8\x5D\xE1\x81\x18\xE4\xE2\x09\x2A\x92\xC8\xC6\x39\xC7\xCA\x15\x22\x21\x1D\xF0\xE6\x41\x20\x93\xE7\xE4\x01\xCA\x9F\x2D\xE2\x20\x85\x91\xC9\x20\x52\xBD\xE0\x35\xBF\xAC\xBE\x42\x35\x86\xDF\x80\x30\x97\xDF\xD1\x48\xBE\x41\x4C\xEC\xDE\x59\x90\xEC\x64\x58\x9A\xDC\xCA\xB4\x95\xC5\x28\x70\xCE\xCA\x17\x38\xE4\xCA\xBD\x06\xE3\x28\x6B\xC8\xEC\x09\x39\xEB\x40\x43\xE8\x35\x90\x00\x0D\xEC\x6B\x4E\xCE\x87\x89\x22\xBE\x83\x21\xE4\xDF\x43\x1F\xC7\x40\x75\xEE\xE4\x94\xC4\x0D\xD9\x8B\x5C\xCC\xDA\x86\x2C\xEE\x81\x39\xE3\xE1\x09\x26\x08\xE0\xB2\x57\xDB\x7A\x8A\x25\xF0\x01\x2C\xEE\x6A\x21\x28\x09\xC5\xF9\x56\xD5\x83\xE3\x22\xCA\x82\x27\xEE\x69\xCA\x0A\xEF\x02\x3B\xF1\x40\x2F\xE8\xF0\x83\x0B\x0E\xF2\xC6\x26\xD3\x40\x1E\xA2\xF5\x7E\xE8\xE5\x09\xA8\xE9\x39\xBD\x8E\xE6\x21\xD6\xD2\xF2\x34\x21\x2F\x09\xEC\xA8\x39\xD9\xCC\xC2\x24\x8F\xE4\xAD\xEF\x51\x84\xC4\xF9\x02\xF2\x2D\xC1\x26\x3A\x9E\x55\x4A\xFC\xC4\x02\xCC\xF8\xB9\x21\x20\xCC\x49\x52\xF3\xAE\xEA\x9F\xB2\xE4\x2B\xD0\xD0\xF6\x8B\xC3\x2C\x19\xF2\x22\xC0\x56\x20\xFC",
					"\xF7\x81\xC4\xC0\xF1\xDB\xA3\x2C\x81\xBE\x21\x50\xD6\x2B\xFC\x0B\xD4\xBD\xFD\xE7\xEF\xFC\x81\xBB\xC5\x26\xFA\xD0\xB0\xB9\xDD\xC1\x25\xFE\xA3\xB0\xBB\x0E\xD6\x2F\xF6\x27\x10\x80\x1E\x16\x56\xFF\x74\x60\x43\x65\x13\x07\x89\x12\xA8\x56\x15\x0B\x84\x60",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"ClassBody",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][ClassBody] BEGIN ",
					L"[26][ClassBody] END [ENDING]",
					L"[27][ClassBody]ID @ [ \":\" ID ] \"{\" { classProp } \"}\"",
					L"[28][ClassBody]ID [ \":\" @ ID ] \"{\" { classProp } \"}\"",
					L"[29][ClassBody]ID [ \":\" ID @ ] \"{\" { classProp } \"}\"",
					L"[30][ClassBody]ID [ \":\" ID ] \"{\" @ { classProp } \"}\"",
					L"[31][ClassBody]ID [ \":\" ID ] \"{\" { classProp @ } \"}\"",
					L"[32][ClassBody]ID [ \":\" ID ] \"{\" { classProp } \"}\" @",
					L"[33][Class] BEGIN ",
					L"[34][Class] END [ENDING]",
					L"[35][Class]< \"ambiguous\" \"class\" @ ClassBody >",
					L"[36][Class]< \"ambiguous\" \"class\" ClassBody @ >",
					L"[37][Class]< \"ambiguous\" @ \"class\" ClassBody >",
					L"[38][Class]< \"class\" @ ClassBody >",
					L"[39][Class]< \"class\" ClassBody @ >",
					L"[40][Type] BEGIN ",
					L"[41][Type] END [ENDING]",
					L"[42][Type]<< ( !Enum @ | !Class ) >>",
					L"[43][Type]<< ( !Enum | !Class @ ) >>",
					L"[44][File] BEGIN ",
					L"[45][File] END [ENDING]",
					L"[46][File]< Type @ { Type } >",
					L"[47][File]< Type { Type @ } >",
				};
				return results[index];
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::vint32_t TypeParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(tokens, this, codeIndex);
			};
		}
	}
}
