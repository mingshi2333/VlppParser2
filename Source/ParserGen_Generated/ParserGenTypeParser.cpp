/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 1771; // 20745 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 235;
				static const vl::vint dataSolidRows = 6;
				static const vl::vint dataRows = 7;
				static const char* compressed[] = {
					"\x09\x51\x00\x00\xE3\x06\x00\x00\x15\x00\x01\x82\x80\x07\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x98\x0A\x81\x1A\x85\x12\x85\x57\x03\x09\xBF\x7B\x8C\x8B\x8E\x84\x00\x1D\x9D\x9F\x81\x9C\x8B\x90\x93\x7F\x26\xA4\xA9\x81\x9B\x92\x92\x85\x93\x28\xAF\xA7\x8D\x95\x92\x9A\x94\x9B\x2C\xB8\xAE\x9A\x83\x9A\x9D\x9A\x9E\x37\xC0\xB9\x82\xAB\x9E\x80\x98\x9A\x1E\x9F\x8A\x81\x0E\x99\xA4\xA3\x9F\x46\xBD\x8F\xAE\xA1\xA9\xA1\xAB\xA1\x57\xC5\x83\x87\xAD\xA1\x9B\xA8\xAF\x59\xD0\x9B\xB2\xA1\xB4\xAB\xB0\xAB\x67\xD8\xA9\xBA\xA2\x84\xAF\xAE\xA4\x60\xEB\xA2\xAD\xB4\xB2\xBA\xB2\xBA\x68\xF8\xAA\xBA\xBC\xB1\x80\xA7\x84\x7F\xE5\xB1\xBC\xB3\xB9\x82\xB6\xC1\x70\x89\xDD\xAA\xCF\xB3\xC6\xC7\xC6\x90\x88\xCF\xD2\xC1\xCE\xBB\xC0\xC3\x75\x84\xF7\xB8\xC9\xBC\xCF\xBC\xCF\x7D\xA0\x99\xC0\xD5\xC2\xD1\xCE\xD3\x9F\xA8\xE1\xC7\xC6\xCC\xC4\xCB\xD7\xAD\x93\xF1\xC9\x82\x03\xA6\xD8\xCD\x97\xAA\xE5\xCC\xD8\xDE\xD7\xD8\xD8\xBD\xB7\xE4\xDB\xC0\x01\x8C\xC0\xE1\xBA\xC4\xFC\xC3\xE9\xDB\xE5\xE5\xE6\xA3\xCF\xFE\xC1\xE5\xCC\xE8\xE0\xE6\xD3\xD8\xC8\xEE",
					"\xEC\xE9\xE9\xEF\xD3\xDF\xA9\xE1\xEB\xDE\xED\xF0\xF0\xF3\xE2\xE8\xE4\xE7\xFC\xF1\xF5\xF7\xF5\xEE\xF1\xF0\xF3\xFB\xDA\xF5\xFB\xF7\xF7\xF2\xF9\xF4\xFA\xE6\xF9\xFE\xFC\xFF\x7A\x71\x80\x7F\xD0\x40\x85\x81\x6A\x0C\x47\x75\x76\x76\x0B\x92\x7B\x76\x7F\x07\x84\x89\x76\x83\x0D\xA3\x7B\x7D\x69\x05\x36\x65\x84\x84\x13\x96\x84\x72\x01\x1A\x97\x74\x86\x88\x1E\x91\x87\x87\x80\x27\xA6\x88\x8B\x8A\x2A\xAD\x83\x84\x42\x06\x41\x6F\x6F\x8C\xD6\x74\x8C\x82\x88\x08\x21\x86\x8F\x88\x03\x49\x0A\x8D\x8D\x40\xB7\x8B\x8D\x89\x1D\x9C\x8F\x82\x81\x45\x88\x97\x92\x80\x2E\x8B\x92\x86\x93\x29\x89\x9C\x92\x94\x4F\x9B\x8A\x91\x42\x0A\x3F\x82\x91\x90\x3C\x9C\x94\x90\x94\x2C\x94\x91\x94\x98\x4D\x89\x4E\x42\x82\x24\x86\x96\x97\x94\x64\xA2\x91\x99\x9B\xC8\x4C\x0A\x41\x6D\x6B\x95\x99\x9B\x95\x77\xAC\x95\x9F\x98\x7B\xAF\x9D\x9D\x99\x79\xB6\x93\x92\x9A\x22\x8E\x0A\x95\x97\x5B\x89\xA8\xA3\xA2\x5F\xBF\x9E\x98\xA0\x83\xB8\x91\xA6\x9E\x81\xBC\x92\x8B\x03\x87\x8D\xA5\xA6\x9F\x9B\x90\xAE\x94\xA1\x93\x82\xAF\xA6\xA4\xA3\x94\xA1\xAA\xA5\xA7\x9C\xA9\xAA\xA7",
					"\x8A\x9A\xAB\x8C\x04\x99\xA0\xA5\xAA\xA8\xAD\xB2\xA5\xAC\xA9\x01\x51\x01\xAC\xAE\x8C\xB6\xAD\xAC\xAF\xAE\xB3\xA8\xAA\xB0\xAA\x84\xBC\xAB\xAF\xA6\x86\xBF\xA3\xB2\x70\x8E\xAF\x43\xAE\xC9\xB7\xA1\xB4\xB2\xB4\x94\xB3\xB2\xB4\xD5\x81\xB1\x43\x04\xD0\x99\xBE\xAE\xB6\xD6\x85\xB8\xB7\xB5\xE1\x87\xB0\xBB\xB9\xDF\xA9\xB0\xB2\xBA\xD3\xA8\xBB\xBB\xBB\xED\xAC\xBE\xB4\xBC\xF3\xB1\xB4\xBC\xB9\xEE\xB6\xBA\xBD\xBD\xD5\x94\x0D\xB4\xBE\xF2\x80\xC7\x68\x40\x68\xAB\xAC\xB2\xB3\x08\xDD\xA7\xC2\xC2\x0A\x56\x03\x9D\xB3\x06\x52\x45\xC2\xB2\x10\xC6\xC5\xC4\xC5\x09\xD6\xC9\xC4\xC6\x0C\xDB\xC3\xBA\xB8\xE5\x8B\xCA\xC5\xC7\x24\xE3\xC3\x41\x06\xFF\xA0\xC9\xBC\xBF\x02\xE9\x6A\x05\xCA\xE6\x81\xCA\xCA\xCC\x31\xF7\xB3\xCE\xCD\x35\xFB\xBD\xC8\xCB\x37\xFA\xCD\xCC\xCF\x39\xC0\xD2\xC8\xC7\x26\xC4\xD6\xD3\xC7\x41\xFB\xCA\xD3\xCF\x4B\xC9\xDC\xD0\x71\x1B\x30\xC3\xD0\xD2\x53\xE1\xC7\xC4\xD5\xC8\x5C\x02\xD4\x72\x1D\x1B\xDE\xC6\xD5\x5F\xEB\xCD\xD1\xD5\x62\xCF\xDE\xD3\xD9\x64\xFE\xAE\x06\xD7\x25\xC7\xD0\xD9\xDB\x58\xE1\xD1\x77\x07\x6C\xC5\xD1\xDC\xDC\x6F",
					"\xF6\xD9\xDC\x97\x20\x35\xDE\xD9\xD9\x68\xD3\x4E\xDF\xDD\x7A\xC0\xE9\xD8\xCE\x1F\x62\x03\xE3\xDE\x84\xFF\xD1\x77\x08\x8B\xC6\xE7\xD4\xE3\x8B\xA4\x01\xE4\xCD\x87\xFE\xC1\xE2\xDC\x88\xD3\xE2\xE4\xE7\xA9\x56\x43\xC5\x40\x26\x17\xED\xE4\xE8\x42\xDE\xE8\xE6\xEA\xA7\xF8\xDF\xE6\xEB\xAB\xE8\xE3\xD8\xEB\x9A\xD9\xE1\x6B\x09\xA6\xF5\xE4\xED\xEA\xB2\xE6\xD6\xEF\xEC\xBD\xF9\x68\x09\xEE\xBC\xF0\xED\xE9\xE1\xB1\xC6\xFA\xED\xF0\x55\xE9\x07\xA2\x0A\xC4\xC0\xFA\xF1\xF1\xC8\xC7\xFE\xE2\xF5\x8D\xD9\xF4\xE7\xEB\xD5\xCB\xF3\xF6\xF4\xDD\xD5\xBB\x0B\xE2\x2C\x07\xAD\x09\xF4\xBE\xFB\xE0\xFB\xF5\xDE\xE1\xFB\xF9\x40\x2E\x0B\xEF\x0B\xA1\x30\x28\xFB\xE7\xF7\xE9\xCC\xFA\xF9\xFE\x78\xC0\x1F\xC1\x42\x39\x5F\x4C\x4C\x30\x46\x21\x00\x96\x31\x43\x5F\x30\x24\x9D\x06\x24\x80\x63\x43\x87\x23\x10\x22\x33\x02\x83\x26\x81\x55\x4F\x82\x21\x15\x8C\x3B\x04\x82\x29\x82\xA4\x57\x80\x80\x5F\x28\x82\x60\x25\x4F\x83\x81\x02\x01\x41\x16\x87\x25\x03\x81\x27\x85\xAF\x32\x42\x29\xCC\x2B\x84\x00\x01\x08\x84\xDC\x2F\x84\x85\x5D\x32\x84\x0D\xAE\x80\x66\x1D\xB5\x82",
					"\x83\x0A\x3F\x86\x07\xAA\x8F\x22\x21\xA4\x84\x88\xB4\x26\x88\x84\x25\x82\x21\x16\x82\x32\x84\x96\x2A\x82\x42\x46\x3D\x52\x26\x82\x21\x82\x29\x84\x26\x0C\xC5\x3F\x2B\x0D\x81\x22\x88\xCF\x3E\x88\x00\x60\x80\x26\x28\xB8\x32\x8A\x09\x34\x8A\x65\x62\x82\x87\x32\x9D\x2E\x8D\x09\x87\x26\x18\xE2\x88\x8C\x83\x2A\x88\x37\x73\x9D\x28\x1B\xDD\x26\x8C\xE6\x35\x8B\x20\x77\x80\x89\x42\x6D\x87\x25\x3E\x8F\x3F\x8F\x02\x21\x91\x18\x8A\x24\x90\x2D\x9F\x23\x85\x56\x81\x20\x24\xC8\x80\x86\xDC\x1B\x89\x87\x95\x96\x30\x19\xB0\x27\x25\x4D\x9C\x91\x24\x5B\x9E\x89\x24\x80\x02\x94\x4A\x86\x25\x94\x24\x24\x61\x26\xB3\x8F\x7F\x53\xAD\x90\x90\x41\x8A\x22\x21\xA0\x43\x90\x59\x8C\x92\x21\xB4\x85\x82\x2D\xA0\x89\x21\x5C\xBD\x43\x97\x06\x3E\x45\x2F\x8A\x29\x4B\x55\x80\x05\x83\x00\x16\x07\xA1\x1F\x28\x99\x1B\x07\x52\x8C\x0E\x69\x20\x0E\x07\x5A\x90\xBA\x49\x21\x07\xD4\x8A\x22\x35\x86\x2A\x07\x43\x60\x8E\x72\x09\x3B\x07\xA1\x37\x80\x00\xC8\x49\x24\x07\x87\x46\x90\xEE\x09\x2D\x07\x74\x8A\x23\x78\x09\x3E\x06\x3B\x89\x20\x9E\x83\x3F\x07\x50\x31\x06",
					"\x98\x17\xC6\x94\x9C\x72\xB4\x89\x3A\x62\x84\x9E\x22\xE4\x90\x5C\x45\xBF\x98\x7B\x63\x98\x95\x2C\xA3\x74\x72\x5F\x82\x25\x98\x22\x46\x93\x41\xA9\x32\x86\x61\xB8\x79\x37\x32\x8A\x92\x0E\x98\x8F\x95\x4A\xA4\x98\x99\x16\xAE\x7C\x71\x48\x9A\x90\x88\x83\x24\x9C\x67\x4E\x94\x43\xE4\x91\xA4\x81\x06\x95\x01\xF6\x7F\x22\x49\x87\x2B\x7F\xDC\x29\xA3\x20\x30\xBA\x7E\x99\x0A\x20\x57\x06\x46\x54\x36\xC8\x37\xA6\x40\x3A\x5D\x41\x9E\xAA\xA2\x44\x39\xA6\x22\x9C\x09\x28\x8A\x13\x93\x77\xA7\x4A\xAA\x22\xBF\x40\xAF\x6A\x4C\x49\x20\xAA\x22\xB9\x36\x51\x83\x2B\xA8\x83\x11\x9F\xA8\x7A\x64\xAA\x41\x56\xA7\xA2\x08\x92\xA9\x22\x31\xA7\xAD\x42\x17\x08\x38\x94\x54\xAA\x44\xAA\x98\xA7\xE4\x01\xAA\x21\xB8\x82\x23\xAB\x5C\x51\x6B\x5B\xB0\x9C\xA0\xBB\xB9\x54\x6B\x1D\xBF\x8B\xA1\x5F\xA3\x20\x6E\x49\x23\x9B\x27\xB3\x70\x5B\x89\x2E\xAF\xED\x51\x3A\x62\x06\x2F\x65\x42\x7D\x6C\xA0\x70\x52\xB6\x20\x7A\xA2\x44\x45\x7B\xA9\xAE\x85\x2B\x6A\xA7\x98\xAA\x22\xD6\x20\xB3\x21\xD1\x86\x25\x6B\x0D\x46\x9C\x58\xDC\x48\xB4\x83\x1F\xB5\xAC\x9E\xAA\xAE\x41\x22",
					"\x71\x46\xE4\x06\x94\x9C\xAF\xA3\x20\x65\xB0\xB7\xB0\xD9\x83\x25\x74\x95\xB1\x3A\x43\xFE\x2A\x9A\x85\x3B\xB1\xAB\x1F\x27\xBA\x40\x6E\xA6\x21\x75\xB5\xB7\x6B\x9B\xB1\xB3\x3B\x8B\x7B\xA3\x84\x11\xBB\x20\xC3\xA0\x02\xF3\x41\xB7\x34\x64\xA4\x9A\xB5\x03\x2A\x71\x42\x50\x7C\xBB\x69\x60\x9E\x20\xE2\xA6\x23\xF8\x65\xB5\x5A\xDA\x83\x27\xB2\x03\x25\x7C\x67\x8A\x5D\xA4\x1C\x89\x26\xBD\x02\x39\xB9\xFC\x73\xBB\x50\xA1\xB6\xBD\xB9\x0A\x20\xBA\x41\x75\x7C\xBC\x72\x4E\xBF\xBD\x0A\x39\x9D\x81\xC4\x39\xA8\xA7\x89\x27\xC0\xF9\xAA\x22\x0C\x0B\x74\xAC\x07\xC6\x25\x9E\xBF\xAA\x23\x0C\x69\xA4\x9E\x85\x30\xBA\x20\x34\x0B\x72\x58\x96\xC3\x20\x0C\xD1\xC1\x21\x35\x0B\x72\x61\xAB\xB1\x21\xED\xBA\x9F\x25\x2F\xC4\xB9\xA6\x64\x9C\x95\x65\xB4\xC4\xC6\x62\x84\x97\x4B\x39\xCC\xC7\x8F\x3D\xC3\x8A\x1F\x2A\x93\x3F\x0A\x9B\x9F\x34\x81\xCD\x88\x48\xDA\x20\x18\x89\xAB\xA1\x84\x0B\xCF\xC9\x49\xC9\x22\x21\x80\x06\x91\x7F\x13\xCB\xCA\xD9\xA0\x01\x76\xFF\x19\xCB\x2C\xC0",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, codeIndex);
			};
		}
	}
}
