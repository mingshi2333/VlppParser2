/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2245; // 29368 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 197;
				static const vl::vint dataSolidRows = 8;
				static const vl::vint dataRows = 9;
				static const char* compressed[] = {
					"\xB8\x72\x00\x00\xBD\x08\x00\x00\x1A\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x81\x1A\x80\x16\x84\x16\x0A\xC0\x05\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x97\x97\x92\x9A\x2C\xB8\xAE\x9A\x90\x9C\x8D\x9A\x9E\x37\xBE\xB9\x82\xAB\x9C\xA1\x9E\x83\x32\xB6\xA0\x80\xAB\xA6\xA1\xA0\xA4\x3F\xCE\x8D\xA1\x96\x81\x00\xA7\x99\x52\xD8\x90\xA3\xAB\xAD\xA1\xAF\xA3\x03\xC9\x97\xAA\xAA\xA9\xB1\xA9\xAF\x4F\xE6\x9C\xAA\xBE\xAC\xB4\xB0\x81\x62\xD9\xA4\xB3\xB3\xB5\xBA\xB8\xBB\x68\xD3\xAE\xA9\xB0\xBF\xB3\xBC\xBD\x7D\xEB\x81\xCD\xB3\xC7\xB5\x81\xB8\x79\xE5\x85\xDC\xB1\x86\xA9\x84\xC7\x89\xF4\xB7\xB3\xC1\xC8\xBF\xBE\xC5\x87\xFE\x8B\xC0\xC9\xCA\xC1\xCE\xC2\x9F\x86\xE2\x9A\xC1\xD4\xC7\xD0\xCF\xA7\xA0\xE9\xC2\xD8\xC7\xCA\xC9\xCA\x94\xAE\xD6\xDB\xC8\xCB\xD6\xD3\xD6\xB4\xAF\xF2\xD1\xD9\xDB\xD9\xD2\xCE\xB6\xC0\xF8\xDF\xD5\xDB\xE1\xE1\xE2\xA4\xC7\xFA\xC2\x82\x02\x84\xC9\xDD\xB0\xD1\xD0\xF3\xED\xDC\xDC\xE3\xE5\xD7\xBE\xCA\xFA",
					"\xE6\xE5\xED\xE5\x01\xCE\xDC\xC9\xFE\xE8\xD4\xF2\xD4\xF3\xAC\xE3\xEA\xE5\xFB\xF7\xF1\xF7\xF4\xEC\xF1\xEE\xF2\xF0\xFB\xFA\xFB\xFA\xF8\xB7\xEF\xFA\xF4\xFC\xFF\xFA\xFF\xF9\x42\x7B\x7E\x80\xFD\x44\x8F\x7E\x81\x01\x88\x75\x82\x82\x07\x8C\x89\x80\x76\xDB\x56\x71\x86\x74\xD5\x54\x89\x76\x84\xE8\x40\x8A\x84\x82\x1B\x8E\x8D\x84\x84\x19\x9C\x82\x8A\x87\x23\xA0\x83\x80\x89\xB5\x4C\x4F\x62\x78\x0B\xA6\x8D\x88\x8B\x0D\xAE\x81\x8C\x8C\x0F\xB4\x86\x6B\x46\x2B\x98\x87\x8A\x8C\x35\xBA\x8F\x89\x42\x06\x21\x7E\x8F\x8C\x43\xBD\x86\x87\x84\xD4\x57\x87\x91\x88\x28\xBC\x8F\x86\x42\x07\x02\x9B\x93\x8E\x36\xA5\x85\x95\x93\x0A\x48\x45\x57\x95\x10\x89\x02\x95\x92\x48\x95\x80\x98\x93\x4E\x96\x95\x93\x93\x67\xA6\x93\x97\x8F\x6B\x84\x9D\x9A\x91\x63\x94\x99\x98\x96\x73\xA5\x94\x9F\x9B\x68\xB8\x90\x72\x02\x5F\xA2\x9E\x9E\x92\x71\xAC\x91\xA2\x9B\x83\xB0\x9F\x9D\x98\x80\x87\xA4\x98\x97\x0D\x7D\x99\xA3\xA3\x88\x91\xAB\xA1\x9D\x8C\x94\xA6\xA6\x9E\x77\x83\x4C\x02\x42\xCD\x57\xA5\xA1\x9E\x9F\xAA\x91\xA9\xA6\x8A\xB2\x98\xA6\x9D\xA8\x95\xA7\xAA\xAA",
					"\xA3\xA9\xA2\x86\x03\x8E\x92\xA6\xA9\xAB\xAC\xA5\xA2\xA2\xAD\x84\xB8\xA6\xA0\xA4\x93\xAB\xAE\xA6\xAE\xA0\x87\xAF\x01\xAC\xBD\xB4\xAF\xAC\xAF\xB3\x80\xB2\xAA\xB2\xA4\x88\xB7\xAE\xB3\xB9\x90\xBB\xAE\xAC\xCF\x94\xB1\xB6\xB5\xD3\x85\xBC\xB2\xAB\x06\x50\x04\xB1\xB2\xD2\x81\xB1\xBB\xB2\xE3\x8D\xB8\xB6\xB8\x91\x91\x0F\xB5\xB5\xDA\xA5\xBC\xB6\xB1\xBE\xB1\xB0\xBF\xBC\xDB\xB5\xAE\xBA\xBD\xE7\xA4\xB9\xBE\xB9\xED\xBB\xBF\xBA\x40\x10\x79\x82\xBD\xBD\xC7\xBE\xB8\xBD\xBF\x08\xE0\xB6\xC1\xC1\xC6\x53\x0B\xBB\xB5\x09\xEC\xBA\xC1\xC4\x10\xD3\xC6\xC6\xC4\x18\xD5\xC9\xC5\xB6\x17\xDA\xCE\xC4\xC7\x1B\xE8\xB4\xC4\xC8\x1F\xE2\xCD\xC4\xC9\x28\xE6\xC1\xCA\xBE\x23\xEA\xC5\xC8\xCB\x27\xEE\xC9\xCA\xBE\x14\x0F\xC3\xCC\xBF\x31\xF0\xC8\x69\x05\x36\xF2\xCE\xCE\xCE\x2F\xF8\xCB\xCA\xD0\x41\xE1\x46\x04\xA7\x07\xC9\x78\x05\xCF\x40\xF7\xCF\xBF\xBD\x0C\xF9\xC4\xD2\xD3\x49\xC3\xDF\xD3\xC2\x03\xD0\xD9\xD4\xD6\xF4\x9A\xDD\xD4\xD7\x87\x92\x42\xC3\xD7\x2D\xCD\xDF\xCF\xD4\x67\xD7\xD5\xD8\xDA\x66\xED\xDC\xD9\x6D\x00\x63\xD4\xC3\xD6\x6B\xEA\xD2\xD6\xDD\x56",
					"\xD5\xD5\xD2\xDE\x54\xD1\xD9\xDE\xDF\xAA\x5B\x0C\xD3\xDB\x78\xFB\xD0\xE1\xDF\x74\xF7\xDC\xDD\xDA\x8B\xEE\xD5\xE0\xE2\x64\xCA\xE7\xE0\xE3\x12\x9C\x03\xE0\x84\x1D\x17\xED\xE0\xE1\x9B\xCF\xE4\xE5\xE2\x7F\xE0\xE6\xE2\xE8\x90\xF3\xD1\xE5\xB5\x1E\x1A\xE3\xE6\xE3\x9D\xED\xEB\xEA\xB9\x1F\x2A\xE4\xEB\xE7\xA7\xE3\xE5\xED\xE9\x5E\xC7\xA0\x0A\xEC\xB7\xF4\xE6\xEA\x40\x14\x72\xD9\xEF\xF0\x60\xC4\xF5\xDE\xEB\xB3\xFA\xB2\x08\xEF\xBF\xC6\xF2\xE6\x41\x23\x0C\xFE\xF1\xE8\xBD\xEC\xE5\xC0\x09\xD2\xC5\xFA\xF7\xF1\xAF\xDE\xE6\xF5\xF2\x9C\xDD\xF8\xF3\xD7\x25\x31\xA6\x09\xF6\xDC\xE0\xFE\xF5\xF8\xEA\xE3\xFD\xF3\xF6\xCF\xD5\xFC\xFA\xFC\xEB\xF5\xFE\xFB\xF4\xB6\xEF\xF9\xF8\xFD\xF7\xF0\xF4\xF6\xFE\xF1\x60\x83\xFF\x78\x72\x35\x13\x28\x7A\x61\x16\x22\x7A\xFF\x79\x74\x80\xDF\x4D\x87\x7B\xFC\x62\x7E\x04\xED\x73\x83\x81\x29\x07\x80\x03\x8B\x80\xEE\x1A\x8E\x80\x0E\x90\x82\x80\x0C\x9E\x83\xFC\x20\x8B\x83\xFD\x64\x85\x83\x26\x8F\x81\x6D\x2A\x08\x83\x6B\x6B\x05\x85\x25\x81\x82\x0A\xF6\x75\x83\x13\x9F\x83\x86\xFD\x7D\x5C\x46\x0A\x8D\x05\x58\x6E\x00",
					"\x86\x28\x92\x86\x08\xB4\x84\x83\x22\x91\x86\x88\x36\x83\x84\x0E\xB5\x8B\x88\x24\x8D\x8F\x88\x50\x82\x23\x0B\x40\x87\x87\x21\xB9\x82\x88\x29\x96\x88\x13\xDA\x8B\x6A\x18\x14\x8A\x89\x5C\x91\x8B\x13\xC9\x84\x88\x31\xA1\x8C\x8C\xDA\x31\x05\xAC\x32\x01\x57\x19\x1F\x8D\x8C\x68\x9B\x89\x16\xF3\x88\x8B\x3A\x99\x84\x8E\x77\x96\x8D\x08\xF8\x8B\x8E\x3D\xB1\x80\x35\x34\x19\x79\x0D\x31\x56\x07\x58\x77\x07\x8D\x57\x99\x8E\x22\xFD\x8B\x91\x3F\xA1\x80\x07\xD9\x79\x05\xAC\x3A\x01\x57\x1D\x08\x92\x8E\x7E\x81\x89\x23\x9A\x9C\x91\x10\x8E\x08\x69\x09\x3A\x4B\xA8\x32\x21\x4B\x84\x03\x59\x2B\x38\x49\x32\x4C\x1D\x56\x21\x52\x98\x54\x94\x13\x37\x28\x2B\x83\x22\x94\x66\x70\x96\x94\xB2\x99\x4B\x95\x37\x96\x21\x53\x89\x31\x95\x97\x2C\x48\x2F\x83\x2C\x4F\x39\x43\x9A\x20\xC5\x89\x33\x73\x54\x24\x38\x57\x83\x26\x4B\x59\x2B\x99\x40\x33\x94\x36\x67\x82\x20\x9A\xCA\x83\x72\x35\x81\x28\x9B\xCB\x14\x99\x20\x2A\x4F\x95\x4A\x5B\x94\x21\x5D\xA3\x9A\x21\xC9\x83\x97\x39\x89\x29\x9C\xDA\x00\x9C\x36\xC2\x8B\x9E\x41\x41\x72\x9C\x93\x24\x99\x48\x59\x3F",
					"\x98\x00\x61\x9E\x9A\x85\x3C\x9C\x36\xFA\x80\x3D\x3E\x8A\x22\xA1\x7A\xA3\x24\x9C\xF4\x97\x32\x34\x80\x0B\xA1\x63\x81\x27\x9D\xC4\x30\xA3\x71\x71\x96\x9F\x58\x91\x9C\x99\x89\x24\x9E\x44\xB2\x2B\xA2\x99\x29\x21\xA0\xB9\x89\x21\x41\xFD\x99\x20\x72\x9C\xA7\x2A\x27\xB9\x2B\x2A\xA0\x99\x30\x90\x83\xA1\x21\xFA\x8B\xA6\x48\xA1\xA6\x21\x98\x9F\xA0\x4A\x57\x3D\xA2\x47\xA3\x2E\xA5\x96\x84\xA4\xA6\x03\x26\xA5\x4A\x3A\xAB\xA6\x8F\x3D\xA4\xA4\x06\x23\xA4\x40\xB8\xA9\x2A\x72\xB0\x55\xA9\x0A\x2F\xA9\x46\xCC\xA3\xAB\x92\x97\x2F\x9F\xC4\x32\x24\x56\x93\xA2\x9F\x81\x1B\xAE\xA1\xFB\x97\x28\x39\xDF\xA9\x25\xD4\x58\xA2\x20\x0B\xBA\x9E\x5A\xBF\xA9\x21\xAD\x92\xA0\x9F\xAD\x94\xA8\x2D\x8A\x2D\x9A\x81\x24\x9D\xAE\x01\x37\xAE\x2E\xEC\x92\xAE\x64\xBD\xA9\x20\xED\x81\x21\x2D\x81\x2E\x20\xAB\x89\x25\xB0\x71\xA7\xB3\x5E\x86\x2B\x53\xB3\x82\xB6\xB1\x01\x25\x09\xAC\x21\x23\xB0\xAA\x06\x09\x56\xFA\x97\x00\x64\x91\x5A\xA9\x80\x31\x70\xB2\x47\x11\x55\x67\x80\x0F\xB2\xC7\x88\x09\x56\x5B\xB8\x78\x64\xC6\x3B\xAA\x03\xAB\xB1\x39\x12\xAF\x84\x64\xC9",
					"\x01\x57\x85\xAC\x80\xB2\x4A\x11\x54\x5C\x83\x2F\x86\xC8\x8B\x0A\xB7\x0A\x33\x88\x64\xCC\x00\xB9\x84\x02\xBE\xB1\x4D\x11\x54\x0F\x1B\xB3\xB5\xCD\x8C\xA0\xB3\xDA\x3A\x9F\x42\xA1\x23\xB5\x86\x8A\x63\xB4\xFA\x90\x8C\x38\x8A\x2B\xB6\x8C\x9B\xAE\xBA\xD5\x5D\xB8\x60\x9B\xB6\x38\x89\xB6\xA0\x35\x7A\xAF\xB5\x06\xE4\x9D\xB9\xBF\x8F\xB9\x94\x2C\xA7\xAF\x42\x95\xB8\xAE\xAA\x19\x8D\xB2\xED\xBC\xAE\x02\x88\xB3\x20\xE9\xB1\x55\xBE\x12\xA1\x25\x03\x17\x96\x21\xC0\x80\x04\x9C\xDA\xA0\x00\x7F\x82\x23\xC0\xF5\xA1\x83\xC1\x01\x3E\x5A\x83\xA2\x32\xAB\xFE\x9A\x38\xC2\x00\x0A\x5F\x84\xA6\x32\xC3\x9A\x9A\x3D\xC1\x8C\xBB\xB1\xC0\x1E\xC5\x61\x0A\xC2\x25\xB1\x8E\xB5\x64\x4C\xF8\x5E\x97\x81\x26\xC4\x99\x59\x9D\xC2\xA6\x1B\xB7\x69\x15\xC5\x62\xC3\xBD\x84\xBE\x10\xA3\xC3\x20\x15\xCE\xB3\x69\x0A\x9D\x5E\x8F\x83\x20\xC8\xC7\x86\x3A\x6C\x24\xC7\x48\xCF\x09\x20\xC5\xB3\xBD\x5E\xBF\x09\x2B\xC9\xB7\x3A\xC8\x34\xC1\x76\xC1\xA9\xB1\x52\xCB\x40\x38\xCE\xC9\xE4\x19\x77\xCA\x5E\xB1\x55\x8D\x86\x2E\x60\xC8\xA5\xB3\x20\xE0\xB7\x5A\x66\x89\x23\xCD\x2E",
					"\xD9\x85\xC8\x03\x3A\xC8\x46\xD9\x88\xC9\x81\x16\xCE\xC8\xC9\x3B\x74\x98\x87\x57\xCF\x81\x26\xA8\xCF\x19\x9D\xCE\x40\x16\x7B\xC3\x2A\x84\xD6\x20\x5F\xC0\xD2\x6A\x4B\x7B\xCE\x48\x49\xD6\xCF\x54\xC1\x87\x9F\xBD\xCB\xB2\xD5\x9B\x4A\x42\x12\xAB\xA3\xA4\x82\x2A\xCE\x45\xDB\x87\xCC\x02\x23\xC8\x46\xE5\x71\xC9\xE4\x22\xBF\xBD\x06\x20\xD5\x40\x1D\xDE\xCD\x10\xAC\xD2\x20\x71\x7E\xD1\x07\x89\xA2\x20\x52\xCE\xB7\x7C\xA5\xD5\x58\xAD\x81\x28\xD6\xC7\xAE\xB7\xD2\x5B\x71\x79\x42\x02\xD0\xC7\xE4\x09\x81\xC9\x41\xB1\x56\xA5\x83\x2C\xD0\xC7\xB7\xB0\xCB\x05\x76\xD7\x40\x42\xD2\xD7\x2A\xBD\xD6\xCE\x91\xC2\x35\x0F\x8D\xD5\x9C\x05\xBF\xD4\xD9\x9B\xA7\xBB\x40\x23\xBD\x5F\x63\xC3\x22\xDA\x18\xAC\x8D\xAE\xAA\x35\xBF\x85\xA6\xDA\x20\xD7\xD8\xA2\x1B\xEB\xD2\x34\x03\xEE\xDC\xBB\x9B\xA1\x90\xBD\xA6\x38\xC2\xDB\x8A\x27\x82\x90\xA3\x93\xBE\xFA\x52\xB6\x83\x00\xE6\xB1\x85\x83\xE2\xB9\x3B\x86\x20\x74\xCC\x9F\x90\xDC\xC6\x38\x8A\x96\xC9\x20\x86\xC3\x21\xDE\xCC\x92\x91\xC4\xC9\x3F\xC4\x00\x3A\x9E\xE2\x02\x27\xD5\x48\x16\x9B\xE2\xD4\x32\xC4\x39",
					"\x0A\x3D\xB6\x41\x5B\xDE\xB1\x1E\x04\xC4\xB7\x0A\x2E\xE0\x55\x3E\x09\x7A\x1E\xE8\xE1\x21\x2A\xF7\xE3\x66\xBF\x09\x7A\x51\xD3\x99\xE5\xF8\xD0\xB0\x10\x59\x7D\xCD\x9B\xC6\x22\xDC\x02\x2C\xE7\x59\xC1\x0F\xE4\x29\xB1\xE3\xB3\x42\x19\x78\x9C\xC6\xE3\x20\xA4\xFC\xD3\xB3\x43\x19\x79\xAC\x94\xE7\xE9\xA0\xCE\xB4\x08\xD9\x67\xD0\xD7\x83\x2E\x8B\x42\xF5\x33\xA2\xCE\xA9\xEC\xAA\xAE\x39\xCD\x91\x13\xB9\x24\x6F\xF3\xB0\xDC\xCE\xB1\xEF\x92\xEE\x27\xBC\x26\x39\xB9\x48\x6B\xA1\xBE\xAA\xE3\xE8\xAD\x7B\xFD\xEE\x40\x64\xD5\x26\xC2\xE9\x21\xBF\x33\xAC\xBA\x73\x88\xF0\xDA\xC8\xA4\xAC\x25\x8F\xE6\x27\x56\xD4\x23\xF3\x90\x15\xF6\x9F\xCE\xB7\xF1\x5B\xCE\xB4\xA8\x92\x1D\xF7\x23\x99\xC1\x25\xE8\x8A\x23\xF5\x84\x01\xC2\xF4\xCE\xA7\xD5\x52\x2A\xF2\x26\x91\xE1\x26\xF5\xEE\xA9\x2A\x50\xDD\xA7\xAC\x04\xE1\x20",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"ClassBody",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][ClassBody] BEGIN ",
					L"[26][ClassBody] END [ENDING]",
					L"[27][ClassBody]ID @ [ \":\" ID ] \"{\" { classProp } \"}\"",
					L"[28][ClassBody]ID [ \":\" @ ID ] \"{\" { classProp } \"}\"",
					L"[29][ClassBody]ID [ \":\" ID @ ] \"{\" { classProp } \"}\"",
					L"[30][ClassBody]ID [ \":\" ID ] \"{\" @ { classProp } \"}\"",
					L"[31][ClassBody]ID [ \":\" ID ] \"{\" { classProp @ } \"}\"",
					L"[32][ClassBody]ID [ \":\" ID ] \"{\" { classProp } \"}\" @",
					L"[33][Class] BEGIN ",
					L"[34][Class] END [ENDING]",
					L"[35][Class]< \"ambiguous\" \"class\" @ ClassBody >",
					L"[36][Class]< \"ambiguous\" \"class\" ClassBody @ >",
					L"[37][Class]< \"ambiguous\" @ \"class\" ClassBody >",
					L"[38][Class]< \"class\" @ ClassBody >",
					L"[39][Class]< \"class\" ClassBody @ >",
					L"[40][Type] BEGIN ",
					L"[41][Type] END [ENDING]",
					L"[42][Type]<< ( !Enum @ | !Class ) >>",
					L"[43][Type]<< ( !Enum | !Class @ ) >>",
					L"[44][File] BEGIN ",
					L"[45][File] END [ENDING]",
					L"[46][File]< Type @ { Type } >",
					L"[47][File]< Type { Type @ } >",
				};
				return results[index];
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver, TypeParserStateTypes>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::vint32_t TypeParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2)
			{
				return -1;
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<TypeParserStates::File>(input, this, codeIndex);
			};
		}
	}
}
