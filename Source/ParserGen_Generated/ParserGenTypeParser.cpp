/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "ParserGenTypeParser.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			void ParserGenTypeParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2578; // 38608 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 18;
				static const vl::vint dataSolidRows = 10;
				static const vl::vint dataRows = 11;
				static const char* compressed[] = {
					"\xD0\x96\x00\x00\x0A\x0A\x00\x00\x23\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x83\x06\x84\x09\x0A\x99\x0A\x81\x1A\x80\x16\x84\x16\x0A\xF0\x46\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x97\x97\x92\x9A\x2C\xB8\xAE\x9A\x90\x9C\x8D\x9A\x9E\x37\xBE\xB9\x82\xAB\x9C\xA1\x9E\x83\x32\xB6\xA0\x80\xAB\xA6\xA1\xA0\xA4\x3F\xCE\x8D\xB0\xA3\xA4\xA9\xA2\xAB\x47\x83\x89\xAC\xA3\x9A\xA9\xAE\xAC\x4F\xDA\x91\xA1\x96\x81\x00\xAE\xA5\x5F\xE2\x95\xAA\xB7\xAC\xB5\xAC\x81\x5B\xDE\xA8\xB3\xB7\xB5\xBA\xB8\xBB\x60\xD3\xAE\xA1\xB0\xBB\xB3\xBC\xBD\x7D\xEB\x81\xCD\xB3\xC7\xB5\x81\xB8\x79\xE9\x85\xDC\xB7\xC6\xBF\xC4\xC0\x8D\x82\xD1\xC4\xC3\xCE\xC2\x90\xC7\x95\x8C\xD7\xD2\xCB\xCC\xC9\xCE\xCB\x88\xFF\x8A\xD9\xC0\xCF\xCE\xCD\xD0\x8F\xA3\xE6\xC5\xD8\xD1\x82\xB3\x84\xAF\x89\xF4\xB7\xB4\xDA\xD8\xBC\xD1\xB3\xB6\xF5\xD8\xD7\xD9\xD5\xDC\xDE\xBB\xBE\xFD\xC4\xDA\xD5\xD7\xD5\xE2\x98\xC7\xFF\xC2\xE1\xE4\xE3\xE4\xE7\xC3\xCA\xD1\xE6\xE4\xE9\xE5\xEA\xCE\xD7\x9E\xD9\xE0",
					"\xD6\xED\xEC\xEC\xEF\xDA\xE0\xDC\xFF\xE4\xF1\xF1\xF3\xF1\xE6\xE9\xD6\xC2\x0A\x81\xD8\xE0\xDD\xF0\xEF\xF2\xEC\xE1\xFC\xFB\xF8\xE8\xCD\xD2\xF9\xFB\xE7\xD2\xF1\xFF\xF3\xFF\x5E\x63\x01\x7B\xD3\x7E\x7C\x6A\x81\xC8\x40\x87\x82\x82\x09\xAA\x71\x80\x7A\x10\x8F\x82\x87\x82\x0E\x94\x81\x86\x85\x13\x8D\x87\x86\x86\x19\x8F\x7A\x7D\x7D\xF8\x60\x8F\x87\x7D\x23\xB6\x76\x89\x88\x24\xBC\x78\x87\x8A\x1C\xAC\x8E\x86\x8A\x2D\xB1\x8F\x88\x82\x33\x8C\x85\x8D\x85\x32\x85\x86\x8E\x8E\x38\xB7\x8B\x86\x8F\x1D\xBC\x8F\x8E\x90\x41\xBB\x74\x8C\x91\x2E\x88\x99\x8E\x91\x3B\x8C\x9D\x8E\x92\x40\x89\x9E\x93\x90\xF9\x4C\x40\x6C\x94\x58\x93\x95\x92\x88\x30\x91\x9B\x90\x97\x47\x9A\x92\x96\x41\x05\x04\x82\x9B\x97\x29\xA1\x90\x99\x93\x6B\x8F\x97\x9A\x97\x21\x5B\x47\x97\x9B\x59\xAD\x94\x96\x9D\x5B\xA9\x9C\x9A\x9E\x6E\xB8\x93\x9B\x40\x07\x26\x9E\x9C\x9A\x27\xA5\x88\x89\xA1\x5D\xB5\x9C\x9F\x9D\x8B\x9A\x68\x41\x59\x8A\x88\xA9\x71\x02\x82\x8D\xAF\x9E\xA4\x7B\x98\xAD\x9E\xA5\x84\x87\xAE\xA6\xA1\xA0\x89\xA4\x9F\xA8\x83\xB0\x91\xA7\xA7\xA2\xA5\xA7\xA9\xA8",
					"\x6A\x9C\xA6\xA8\xA9\xAE\xAB\xA9\xAB\x40\x0A\x15\xAA\xA4\xA3\xB7\xB9\x99\xAF\xA5\xA8\xAD\xAB\xAD\xA7\xAC\x99\xAD\xAE\xB0\xC1\x9B\xAF\xAF\xAB\x22\x8E\x43\x9E\xAA\xB0\x87\xB2\xAE\xAF\xC3\x86\xB1\xB4\xAE\xD3\xBA\xA5\xB4\xAF\xC5\x96\x6C\x02\x42\xEC\x4D\xB7\xB4\xB0\xB3\x8E\xBE\xB5\xB6\xD6\xA4\xB8\xB5\xB8\xDF\x88\xB1\xAF\xB8\xE8\xA6\xB0\xB8\xB4\xEE\xAA\xB2\xBA\x88\x0E\x36\xA9\xBB\xB3\xC4\xAD\xBA\xBC\xBC\xFB\xB9\xBC\xBF\xBF\xFE\x81\xC2\xB5\xBC\xF8\x83\xCD\xBF\xC0\x0F\x36\xB4\xC0\xBB\x00\xC6\xCD\xC0\xB5\x0B\xCC\xB2\xC7\xBA\x13\xF3\xB4\xC7\xC5\x16\xD9\xC7\xBC\xC3\x02\xD0\xC7\xC2\xC7\x0F\xE5\xB6\x70\x04\x0A\xDF\xC2\xC9\xC8\xE7\xA8\xCF\xB9\xC7\x27\xEC\xC9\xCA\xCB\xAA\x51\x05\xCA\xCA\xF2\x9B\xC5\xC6\xCD\x18\xF8\xCA\xC5\xC4\x39\xFC\xCB\xCE\xC9\x2F\xCE\xC0\xCD\xCD\x3E\xFA\xC6\xD1\xD1\x48\xED\xB0\x47\xB2\x3D\xC0\xDB\xCA\xD0\x50\xE0\xC3\xD1\xC1\x52\xD1\xDD\xCA\xD5\x41\xD0\xC3\x07\xCC\x53\xDC\xC8\xD7\xD3\x55\xE1\xD7\xD6\xD8\x59\xE3\xD6\xD9\xD9\x68\xE0\xD7\xDA\xDA\x69\xC4\xDE\xD2\xDB\x34\xD4\xDB\xD8\xDC\x5D\xF7\xC9\xD1\xDC\x5E",
					"\xE4\xDC\xDB\xDE\x74\xDF\xDD\xDE\xDE\x7F\xF3\xD2\xDD\xDB\x83\xFC\xD5\xE1\x48\x14\x1C\xDE\xDF\xE1\x8C\xE3\xB5\x06\xE2\x80\xCD\xE6\xDF\xDB\x92\xCD\xD8\xDF\xE4\x97\xC3\x46\x04\xB7\x95\xC5\xA8\x04\xE4\x82\xF9\xD1\xE8\xE6\x75\xD6\xE5\xEB\xCF\x99\xE8\xE7\xEB\xD1\x94\xE2\xE4\xE2\xEB\x86\xF0\xE1\xE3\xEB\xA4\xCB\xE3\xBA\x44\x4C\xEA\xE6\xED\xED\x91\xF2\xED\xE4\xEB\xA9\xC0\xFB\xEB\xDD\xC3\xED\xE2\x8A\x06\xA0\xF4\xE6\xEB\xEE\xCB\xFD\xEC\xEF\xE8\xCD\xD0\xFA\xEE\xF3\xD1\xCA\xF3\xF6\xF4\xC2\xCC\xF7\xF4\xB6\x1B\x09\xF1\xEF\xF3\xD6\xD9\xF4\xF7\xF6\xDF\xD5\xF5\xF8\xF9\xB3\xE7\xF2\xF8\xF6\xC4\xDA\xFB\xF9\xF8\xED\xE3\xFF\xF8\xB0\x1C\x1E\xF9\xF8\xD1\x1D\x36\xFF\xED\xFC\xEC\xC6\xF6\xFB\xFD\xFB\x7E\x7C\xFA\x01\x81\x78\xFE\x70\x7A\x80\xF3\x60\x81\x42\x1E\x0A\x7E\xDF\x4E\x80\x7C\xEA\x66\x81\x04\xC6\x3F\x03\x06\x90\x82\x81\x17\x84\x81\xF1\x05\x88\x80\x09\x84\x68\x04\x16\x9F\x7E\x06\x83\x64\x23\xDC\x49\x83\x84\xF2\x7E\x80\x0A\xFD\x7C\x83\x16\x84\x5A\x04\x21\x83\x83\x03\xBD\x60\x20\x13\xAA\x83\x86\x32\x99\x80\x0E\xA7\x8B\x86\x00\x24\x01",
					"\x86\x3C\x9A\x86\x10\xA2\x8D\x87\x0E\x86\x8E\x85\xEE\x77\x87\x10\xB9\x84\x45\x12\x0A\x66\x04\x40\x8A\x88\x11\xCB\x81\x89\x29\x96\x8C\x89\x58\x95\x89\x16\xD2\x8B\x8B\x23\x9B\x87\x8B\x49\x9E\x89\x18\xC8\x89\x84\x31\xA5\x8C\x8C\x2C\x80\x8F\x19\xEA\x89\x8D\x31\xAC\x8F\x80\x68\x90\x8C\xB1\x27\x01\x8B\x0E\x96\x26\x86\x66\x8D\x8F\x1A\xEE\x8C\x8F\x3D\xBE\x8A\x8F\x80\x92\x8D\x1F\x81\x91\x83\x14\x35\x89\x8E\x13\x88\x90\x06\xD7\x8A\x8B\x46\x9C\x8E\x91\x79\x82\x93\x1F\x92\x94\x91\x45\x9D\x8A\x91\x2B\x94\x92\x26\xAA\x3A\x05\x43\x83\x7B\x05\x9E\x83\x93\x26\x96\x90\x92\x4C\x85\x8E\x94\x54\x8F\x92\x2A\x91\x9A\x34\x8C\x36\x85\x05\x0A\x6E\x05\x28\x93\x99\x91\x37\xB5\x92\x94\xB7\x94\x94\x29\xAB\x98\x94\x46\xBC\x96\x96\xBB\x8C\x95\x30\xBD\x97\x92\x60\x99\x90\x58\x2F\x13\x95\x25\xC7\x93\x98\x63\xA7\x96\x99\xA9\x82\x98\x33\xAB\x50\x06\x65\xA3\x93\x9A\xCF\x98\x95\x33\xDA\x98\x9B\x68\x84\x9D\x94\x9C\x31\x06\xC2\x32\x0A\x61\x19\x16\x99\x97\xCB\x99\x9A\x2E\xDD\x9E\x96\x69\xAA\x99\x9D\xDE\x90\x99\x3B\xDF\x9F\x96\x6E\xAF\x9F\x9A\xF7\x88",
					"\x9C\xB6\x34\x01\x8B\x1A\x0A\x66\x06\x0A\x77\x07\x39\xDB\x9B\x9D\x7C\x84\xA0\x9E\xF3\x92\x9D\x31\x83\x68\x07\x28\xB9\x02\x61\x3A\x0A\x63\x0E\x03\xAC\x9D\x85\x85\xA1\x9E\xF6\x98\xA3\x45\x89\xA3\x60\x2D\x1C\x71\x21\xB5\x47\x4E\x4C\x21\xA6\x21\xA5\x49\x32\x4E\x89\x32\x25\xB7\x06\x24\x52\x91\xA9\x24\xA4\x03\x3E\x9E\x57\x2B\xA4\x56\x25\x63\xA7\x21\x5C\x34\xA6\x40\x30\xAF\x57\x9B\x89\x26\xA4\xA2\x28\xA6\x68\x30\x4E\xA6\x83\x0D\x06\xA6\x2F\xAA\x23\x51\xDE\x2E\x3C\xB2\x04\x3C\xA7\x01\x3B\x58\x53\x9F\xA9\x30\xA8\x80\x02\xAA\x89\x2D\xAA\x6B\x5C\x26\xAA\xAC\xA2\x32\xA7\x01\x25\x4E\x4B\xA6\x26\xAA\x65\x43\x55\xA8\x03\x2B\xAB\x59\xC9\xA9\x20\xB5\x81\xAC\x2B\x44\xAC\xAE\x41\x32\xAB\xAC\xB2\x8A\x25\xA5\x89\x20\xAC\x00\x62\xA9\xAE\x85\x3C\xAF\xAB\x0A\x36\x49\x5F\x89\x22\xB0\x4E\x68\xAA\x20\x74\xA2\x36\x56\x80\x0B\xB1\xC3\x81\x27\x51\x6F\xBE\x29\x5C\xF6\xA9\x21\xC4\xA9\x33\xB1\x68\x36\xA8\x64\xA9\x32\xA9\xD4\x32\x25\xB0\x9E\xA9\x26\x5E\xA0\xB4\x38\xD2\x87\x3A\xA5\x81\xBC\x2A\x69\xB2\x28\xB5\x84\x38\xA9\xB2\x29\xA9\x25\x67\xC4",
					"\x3D\xB4\x83\x03\x46\x2B\xAB\xAC\xB6\x49\x23\xB9\xA6\x85\x37\xB1\x31\xB9\xBA\xB7\x47\x3C\xB3\xA6\xDF\xAA\xB0\xAE\xA2\xB7\xAC\x57\x33\xB7\xB5\x94\x01\xBA\xB8\x1D\x24\xB8\x70\xC8\xBB\xB7\xD4\xB8\xB4\xBA\x23\x3A\xAF\x6B\x9C\xB8\xBB\x8F\x0F\xB8\xBA\xD2\xA2\x37\x77\xC2\xB1\xBD\xD4\x23\xBA\xB7\xDA\xBC\xAA\x42\x32\x6E\x2A\xAB\xAC\xBD\xAA\x0A\x36\xAA\x63\x80\x02\xBF\x94\x3F\xA9\xB4\x26\x37\xBC\x6D\xF2\xA0\x50\xF5\x89\x21\x50\xED\xAA\x20\x80\xA2\x4C\x80\xA7\x83\x23\xB1\x7A\xA9\xC2\x71\x84\xBE\xAE\x85\x0C\xBB\xC0\xFD\xA9\x23\x66\x81\x2B\xBB\x80\x10\xC2\x20\x15\xC0\x03\x85\x94\xCA\x21\x09\xF4\xBA\xC0\xF1\xA0\xC4\x48\x9D\xCD\x20\x11\xC6\x26\xAC\x11\xC7\xC4\x89\x89\x2E\xAA\x03\xDE\xC6\xC0\x06\x31\x0A\xC2\x21\x2F\xC4\x18\xC2\x22\x0A\x0A\x7A\xAF\x05\x36\xCB\xAB\xFC\x3F\xB3\x20\x15\x9C\xC5\x48\x53\x0A\x61\x1F\xC2\x21\xC8\x42\xC9\x20\x15\x0A\x66\xB5\x1F\xBC\xC5\xB1\xC9\x26\xB4\x1D\xCF\xC1\x3A\xFD\x80\x00\x94\x3C\xC6\xC9\x40\x55\x0A\x61\xC5\x9D\x91\xCB\x0A\x36\x0A\xC2\x4C\xB2\x97\x24\xC9\x27\x0A\x63\xCA\x21\x32\xE6\xC6\x20\x2C",
					"\x29\xC9\x21\x6B\xCC\xCE\x40\x59\x0A\x60\x1E\x02\xCA\xCB\xA0\x5E\x41\x48\x0B\xB8\xC1\xE8\x3A\xA8\xCA\x9C\x3E\x40\x9E\x80\xD3\x60\x3C\xFA\xAE\x38\x07\xA5\x36\x69\xCC\xB8\xD1\xE8\x26\xB4\xD0\x10\x6C\xB9\x7D\x81\xDB\x54\x2B\xC7\xD1\x39\x1B\xC0\x01\x86\x8D\xD6\xA0\x13\xC3\x20\xCF\x9C\xC2\x45\xA6\x8B\xBE\xC2\xBD\xBB\xCB\xC5\x2C\xB1\x39\xA2\xAA\x3E\xC2\x50\xC9\x3E\x43\x56\xAB\xB0\x8A\x82\x2F\xCE\x85\x59\xC6\xCA\xA1\xC4\x46\x5B\x82\x20\xD3\x72\x56\xA9\xD3\xB9\xD6\xA2\x66\x33\xD1\x21\x5D\xDF\x53\xD5\x21\x24\xD8\x00\x24\x69\x3E\xA2\x75\x59\x21\x97\xDC\x32\xB2\xEF\xB4\x44\xA2\x4C\xDE\x20\xD1\xDE\x32\xB1\xD7\xAA\xD5\xE8\x00\xAC\xD6\xAB\x4F\xDA\x41\x2D\xC7\xD9\xE8\x09\x70\xDA\xAB\x49\x61\x42\x62\xD5\xDB\x8A\x81\x27\xDA\x03\x24\xDD\x9E\xD1\x3B\x72\x74\xE3\x5C\xDA\x02\x2A\xDE\x88\x48\xD8\xA7\x84\x27\xDB\xDF\xD1\x3F\x70\x1E\xF0\x5F\xDF\x81\x02\xE0\xE0\xB7\x74\xA8\x89\x0F\x7D\xAD\x6E\xFD\x85\xD6\x09\x2C\xE2\x41\x70\xD5\x50\xA2\x5D\x7E\xDE\xB6\xAA\x62\xC4\x83\x28\xDF\x72\xE3\x59\x7F\x18\xE3\x23\xA3\x8A\x25\xDE\x83\x1B\x6D\xD9",
					"\xD1\x28\xCB\x81\xAB\x5B\xC7\x84\x25\xE5\xDD\x9D\xC9\x23\xC1\x83\x2B\xE3\x8A\xEE\xD8\x00\xB8\x66\x23\xC5\x88\xE6\x6E\x10\xA1\xE5\x50\x3B\xE3\x21\x81\xBC\xEC\xA2\xCB\x01\xEA\x20\xF5\x68\xE5\xCC\x86\x29\xE8\x83\x20\xE4\xE8\x3B\x70\x87\xCF\x9F\x5F\xE8\xA1\xCE\xE2\xA3\x9A\x23\xEB\x40\x05\xE6\xE7\xFC\x0E\xC8\x52\xF9\x36\xCB\x62\xDA\xE2\x20\x9F\xD0\xE8\x9C\x9E\x2A\xE6\x40\x5C\xEE\xE2\x11\x4E\x8B\xE0\x9C\x2C\xBB\x62\xEA\xE1\x20\xB3\xF0\xE0\xEB\xA5\x36\xEE\x40\x48\x7A\xE8\xBC\xEA\x35\x84\x06\x2F\xEF\xD9\xA0\x50\x8A\xB8\xE4\x82\x21\x85\xE3\xF2\x71\x53\xC0\xEC\xBB\x75\x82\xE7\x57\xFD\x67\x1D\xD8\xDE\xD2\x5E\xCA\x27\xEB\x03\x32\xEA\xE2\xC9\x3F\xCB\x8C\xE3\x5A\xF0\x03\x2F\xF3\xDD\xC5\xEA\x33\xC4\xC3\x27\xE8\x6D\xFD\x64\x2C\xD3\xE4\x20\x85\x4C\xF1\xF3\x91\xE5\x51\x9C\x9F\xDB\x55\xC9\xC3\x20\xF4\x5D\xE2\x44\x39\xAC\xF6\x39\x0C\xCB\xB6\xF6\x02\x26\xF5\xEE\xA4\x4C\x9E\xDE\xC9\x39\xD6\x15\x2E\xC1\xEC\x9F\x50\xA0\xE3\xD2\xDA\x61\x9D\xE3\x22\x21\xFD\xE4\x45\x86\x86\xF0\x62\x58\xC6\x23\xF4\x9B\xFC\x33\x87\x97\xFD\x5C\xAE\x81\xF3",
					"\xF2\xA0\x51\xA3\x84\x2E\xD4\x33\xF2\xDA\xAD\xF8\x83\x22\xF9\xD4\xC5\x55\x07\x0B\xD4\x5E\xC2\x82\x2B\xFC\x81\x0C\xD7\xD5\xD1\x20\x09\xFC\xA4\x44\xE3\x80\x3A\xAD\xCC\x06\x1B\x7A\xDC\x7E\x19\x43\x04\x51\x09\x10\x80\xB7\x73\x7E\xC6\x14\x04\xF3\x7F\x29\xDF\x6E\x7F\x0A\x18\x80\xC1\x7A\x80\xC9\x16\x04\x0D\x80\x2A\x6C\x70\x00\xFF\x7A\x7C\xD4\x75\x28\x48\x07\x81\xC6\x1F\x72\xE0\x60\x67\x0A\x12\x80\xA3\x75\x28\x4A\x06\x80\x06\x13\x7B\x02\x18\x7B\xEE\x7F\x29\x4B\x00\x82\xC9\x13\x73\x23\x8B\x82\x88\x74\x81\x9C\x1D\x04\x32\x8C\x19\x7C\x74\x79\x24\x89\x10\xF7\x74\x69\xF9\x1F\x04\x3B\x8E\x19\x4D\x73\x10\x7A\x55\x4D\x3C\x68\x68\xAC\x52\x67\x42\x6D\x6B\x20\x10\x85\x1D\x18\x59\xA7\x6F\x84\x49\x64\x85\x33\x61\x12\xD9\x64\x12\x5B\x83\x5C\x49\x6A\x60\x17\x86\x6A\x10\x7C\x7A\xA6\x67\x7E\x2E\x16\x86\x23\x18\x67\x64\x1A\x86\x21\x1C\x86\xFB\x70\x63\x6E\x8C\x60\x72\x17\x5E\x1D\x16\x5A\x64\x16\x87\x21\x18\x87\xD6\x5C\x63\x7A\x82\x87\x3C\x68\x6B\x35\x10\x88\xF6\x53\x63\x62\x71\x12\x85\x8D\x60\x42\x66\x65\x64\x11\x84\x2E\x1C\x88\x23\x1C",
					"\x5C\x8B\x89\x64\xC0\x65\x13\x93\x89\x12\x99\x64\x16\x97\x8E\x84\x03\x10",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* TypeParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"EnumItem",
					L"Enum",
					L"ClassPropType",
					L"classProp",
					L"ClassBody",
					L"Class",
					L"Type",
					L"File",
				};
				return results[index];
			}

			const wchar_t* TypeParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][EnumItem] BEGIN ",
					L"[1][EnumItem] END [ENDING]",
					L"[2][EnumItem]< ID \",\" @ >",
					L"[3][EnumItem]< ID @ \",\" >",
					L"[4][Enum] BEGIN ",
					L"[5][Enum] END [ENDING]",
					L"[6][Enum]< \"enum\" @ ID \"{\" { EnumItem } \"}\" >",
					L"[7][Enum]< \"enum\" ID \"{\" @ { EnumItem } \"}\" >",
					L"[8][Enum]< \"enum\" ID \"{\" { EnumItem @ } \"}\" >",
					L"[9][Enum]< \"enum\" ID \"{\" { EnumItem } \"}\" @ >",
					L"[10][Enum]< \"enum\" ID @ \"{\" { EnumItem } \"}\" >",
					L"[11][ClassPropType] BEGIN ",
					L"[12][ClassPropType] END [ENDING]",
					L"[13][ClassPropType]\"token\" @",
					L"[14][ClassPropType]ID \"[\" \"]\" @",
					L"[15][ClassPropType]ID \"[\" @ \"]\"",
					L"[16][ClassPropType]ID @",
					L"[17][ClassPropType]ID @ \"[\" \"]\"",
					L"[18][classProp] BEGIN ",
					L"[19][classProp] END [ENDING]",
					L"[20][classProp]< \"var\" @ ID \":\" ClassPropType \";\" >",
					L"[21][classProp]< \"var\" ID \":\" @ ClassPropType \";\" >",
					L"[22][classProp]< \"var\" ID \":\" ClassPropType \";\" @ >",
					L"[23][classProp]< \"var\" ID \":\" ClassPropType @ \";\" >",
					L"[24][classProp]< \"var\" ID @ \":\" ClassPropType \";\" >",
					L"[25][ClassBody] BEGIN ",
					L"[26][ClassBody] END [ENDING]",
					L"[27][ClassBody]ID @ [ \":\" ID ] \"{\" { classProp } \"}\"",
					L"[28][ClassBody]ID [ \":\" @ ID ] \"{\" { classProp } \"}\"",
					L"[29][ClassBody]ID [ \":\" ID @ ] \"{\" { classProp } \"}\"",
					L"[30][ClassBody]ID [ \":\" ID ] \"{\" @ { classProp } \"}\"",
					L"[31][ClassBody]ID [ \":\" ID ] \"{\" { classProp @ } \"}\"",
					L"[32][ClassBody]ID [ \":\" ID ] \"{\" { classProp } \"}\" @",
					L"[33][Class] BEGIN ",
					L"[34][Class] END [ENDING]",
					L"[35][Class]< \"ambiguous\" \"class\" @ ClassBody >",
					L"[36][Class]< \"ambiguous\" \"class\" ClassBody @ >",
					L"[37][Class]< \"ambiguous\" @ \"class\" ClassBody >",
					L"[38][Class]< \"class\" @ ClassBody >",
					L"[39][Class]< \"class\" ClassBody @ >",
					L"[40][Type] BEGIN ",
					L"[41][Type] END [ENDING]",
					L"[42][Type]<< ( !Enum @ | !Class ) >>",
					L"[43][Type]<< ( !Enum | !Class @ ) >>",
					L"[44][File] BEGIN ",
					L"[45][File] END [ENDING]",
					L"[46][File]< Type @ { Type } >",
					L"[47][File]< Type { Type @ } >",
				};
				return results[index];
			}

			const wchar_t* TypeParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			TypeParser::TypeParser()
				: vl::glr::ParserBase<ParserGenTokens, TypeParserStates, ParserGenAstInsReceiver>(&ParserGenTokenDeleter, &ParserGenLexerData, &ParserGenTypeParserData)
			{
			};

			vl::vint32_t TypeParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::parsergen::GlrAstFile> TypeParser::ParseFile(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::parsergen::GlrAstFile, TypeParserStates::File>(tokens, this, codeIndex);
			};
		}
	}
}
