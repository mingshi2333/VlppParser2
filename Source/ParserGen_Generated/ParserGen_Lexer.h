/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ParserGen
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_PARSERGEN_LEXER
#define VCZH_PARSER2_PARSERGEN_LEXER

#include "../AstBase.h"
#include "../SyntaxBase.h"

namespace vl
{
	namespace glr
	{
		namespace parsergen
		{
			enum class ParserGenTokens : vl::vint32_t
			{
				AMBIGUOUS = 0,
				CLASS = 1,
				ENUM = 2,
				VAR = 3,
				SWITCH = 4,
				TOKEN = 5,
				AS = 6,
				PARTIAL = 7,
				OPEN_ROUND = 8,
				CLOSE_ROUND = 9,
				OPEN_SQUARE = 10,
				CLOSE_SQUARE = 11,
				OPEN_CURLY = 12,
				CLOSE_CURLY = 13,
				OPEN_PUSH = 14,
				OPEN_TEST = 15,
				AND = 16,
				OR = 17,
				COMMA = 18,
				COLON = 19,
				SEMICOLON = 20,
				INFER = 21,
				ALTERNATIVE = 22,
				USE = 23,
				ASSIGN = 24,
				WEAK_ASSIGN = 25,
				POSITIVE = 26,
				NEGATIVE = 27,
				LS_PH = 28,
				LS_I = 29,
				LS_IM = 30,
				LS_PM = 31,
				ID = 32,
				STRING = 33,
				CONDITIONAL_LITERAL = 34,
				SPACE = 35,
				COMMENT = 36,
			};

			constexpr vl::vint ParserGenTokenCount = 37;
			extern bool ParserGenTokenDeleter(vl::vint token);
			extern const wchar_t* ParserGenTokenId(ParserGenTokens token);
			extern const wchar_t* ParserGenTokenDisplayText(ParserGenTokens token);
			extern const wchar_t* ParserGenTokenRegex(ParserGenTokens token);
			extern void ParserGenLexerData(vl::stream::IStream& outputStream);
		}
	}
}
#endif