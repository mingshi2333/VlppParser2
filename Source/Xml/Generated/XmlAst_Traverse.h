/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Ast
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_XML_AST_AST_TRAVERSE_VISITOR
#define VCZH_PARSER2_BUILTIN_XML_AST_AST_TRAVERSE_VISITOR

#include "XmlAst.h"

namespace vl
{
	namespace glr
	{
		namespace xml
		{
			namespace traverse_visitor
			{
				/// <summary>A traverse visitor, overriding all abstract methods with AST visiting code.</summary>
				class AstVisitor
					: public vl::Object
					, protected virtual XmlNode::IVisitor
				{
				protected:
					virtual void Traverse(vl::glr::ParsingToken& token);
					virtual void Traverse(vl::glr::ParsingAstBase* node);
					virtual void Traverse(XmlAttribute* node);
					virtual void Traverse(XmlCData* node);
					virtual void Traverse(XmlComment* node);
					virtual void Traverse(XmlDocument* node);
					virtual void Traverse(XmlElement* node);
					virtual void Traverse(XmlInstruction* node);
					virtual void Traverse(XmlNode* node);
					virtual void Traverse(XmlText* node);

				protected:
					virtual void Finishing(vl::glr::ParsingAstBase* node);
					virtual void Finishing(XmlAttribute* node);
					virtual void Finishing(XmlCData* node);
					virtual void Finishing(XmlComment* node);
					virtual void Finishing(XmlDocument* node);
					virtual void Finishing(XmlElement* node);
					virtual void Finishing(XmlInstruction* node);
					virtual void Finishing(XmlNode* node);
					virtual void Finishing(XmlText* node);

				protected:
					void Visit(XmlText* node) override;
					void Visit(XmlCData* node) override;
					void Visit(XmlComment* node) override;
					void Visit(XmlElement* node) override;
					void Visit(XmlInstruction* node) override;
					void Visit(XmlDocument* node) override;

				public:
					void InspectInto(XmlNode* node);
					void InspectInto(XmlAttribute* node);
				};
			}
		}
	}
}
#endif