/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Xml
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "XmlParser.h"

namespace vl
{
	namespace glr
	{
		namespace xml
		{
			void XmlParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2384; // 21677 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 80;
				static const vl::vint dataSolidRows = 9;
				static const vl::vint dataRows = 10;
				static const char* compressed[] = {
					"\xAD\x54\x00\x00\x48\x09\x00\x00\x0D\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x85\x0A\x83\x06\x84\x07\x0A\x91\x0A\x9C\x0A\x82\x12\x84\x14\x0A\xA3\x42\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x91\x91\x91\x00\x34\xAC\xB9\x8E\x9B\x98\x98\x8F\x9A\x3D\xA7\x81\xA0\x93\xA3\x9B\x9E\x9D\x47\xBC\x89\xBE\x96\x82\x9B\x96\xA1\x4B\xD0\x8D\xA0\xA1\xAC\xA1\xAA\xA3\x53\xC8\x99\xAA\xAB\xAC\xA7\x80\xA7\x45\xCF\x96\xBD\xA2\xAF\xAC\xAA\xB2\x63\xE6\x9A\xAA\xBC\xAC\xB6\xAE\x81\x60\xD7\xB7\x8A\x88\x9A\xB9\xB1\xBB\x76\x89\x9B\x89\x85\xB8\xB4\xAC\xB7\x65\xF0\xA7\xA0\xC9\xB2\xC3\xB4\xC3\x6D\x88\xEF\xA1\x81\xBE\xBE\xB1\xBF\x8A\x81\xCC\xC3\xC1\xCD\xC3\xC9\xC3\x97\x89\xD9\xCB\xC2\x94\xCB\xCC\xC9\x9D\x98\xE1\xDA\xC3\xD4\xCD\xC7\x81\x03\x74\xB8\xAE\xCB\xD4\xC0\xC9\xCF\x96\xA5\xE0\xC7\xD5\xCF\xD6\xD9\xD8\xB4\xB0\xF6\xD9\xD7\xDB\xDE\xCE\x00\x04\x2A\xC9\x8C\x8C\xBA\x86\x02\xE1\xAC\xF9\x86\x87\x08\xE6\xD7\xC7\xE7\xAD\xB5\xD0\xEA\xEE\xE1\xEA\xDD\xE9\xC9\xD9\xD5\xF4",
					"\xE2\xEA\x84\x84\x83\x7D\xDB\xDA\xFD\xEC\xEF\xEA\xEB\xDE\xD8\xE2\xEA\xE4\xF3\xF6\xF1\xF2\x00\x09\x4D\xEC\xEB\xFE\xF5\xF4\xF5\xF3\xBC\xF9\xFF\xDA\xF2\xD4\xFC\xD2\xDE\x0A\x32\x75\x7C\x7D\xF7\x6F\x7E\x7E\x69\xFB\x49\x8D\x7E\x82\xFF\x4C\x88\x82\x68\x0E\x45\x76\x82\x83\xB3\x54\x88\x6E\x85\xBE\x4B\x8A\x85\x83\x1B\x8F\x8C\x87\x87\x1E\xA1\x85\x85\x87\x23\xA0\x85\x8A\x88\x17\xA4\x89\x88\x69\x0C\x02\x85\x82\x7D\x07\xA7\x82\x8F\x8A\x28\x99\x86\x88\x8D\x33\xB6\x85\x8D\x7A\xF3\x7D\x81\x40\x40\x12\xB0\x88\x84\x8F\x03\xBE\x8F\x88\x81\x31\xB8\x8A\x92\x8E\x39\x84\x97\x92\x91\x49\x8C\x9B\x92\x93\x51\x8E\x90\x45\x90\x48\x83\x98\x7E\x96\x13\xAA\x82\x97\x97\x54\x9C\x92\x92\x97\x4E\x8F\x0E\x89\x95\x5B\xA4\x99\x9B\x8D\x60\xAB\x9B\x8E\x9B\x4D\xB0\x93\x96\x9C\xB6\x50\x07\x9A\x98\x59\xAA\x9D\x94\x9B\x61\xBA\x93\x98\x9F\x74\xBD\x90\xA3\x9E\x6F\x84\xA1\x9E\xA1\x73\x88\xAD\x9B\x7B\x12\x58\x90\x94\x9E\x8F\xBE\x99\x9F\xA0\xF6\x52\x07\x9E\x68\x13\x17\xA4\x68\x05\x9A\x85\xAF\x9E\xA7\x93\xA0\xA1\xA4\x69\x15\x1D\xA0\x6A\x05\xA6\xB1\x67\x05\xAA",
					"\x8B\x9F\xA7\xA2\x41\x18\x2C\xA2\xA2\xA8\x45\xB5\xAF\x92\xAD\x68\x8A\xA3\xAF\xAB\xA1\xBC\xA2\x41\x06\xB2\x8A\x4A\x05\xB0\x09\x5B\x0E\x88\x45\x8E\x81\x4D\x06\x8B\x1E\x2E\x8F\x06\x8B\x20\x04\xBE\xA9\xA2\xF6\x61\x02\xB7\x40\x16\x49\xB7\xAC\x00\x23\x2E\x84\x0A\x8B\x25\x2E\x86\x0A\x8B\x27\x2E\x88\x46\xB6\xB9\x93\xBD\xA9\xAF\xD4\xAC\xB6\x6D\x0A\xD7\xA3\xA4\xAF\xB6\x2A\x31\xB8\xAC\xA4\xF7\x92\xA2\xBE\xAF\xF9\x94\xAE\xBB\xAE\xED\xBB\xB1\xC1\x40\x2B\x36\xBB\xB5\xBA\xFF\x81\xAA\xC2\xAE\xE7\x6C\x06\xC1\x0B\x2E\xAE\x0E\x8B\x0B\x2E\xB0\x0E\x89\x0C\x2E\xB2\x06\xC0\xC2\x02\xEB\xBD\xC4\xC0\x1E\xFD\xB3\xBC\xC7\x01\x73\x0B\xC4\xBE\x07\xE8\xC4\xC9\xCA\xFA\xA2\xCC\xBC\x00\x34\x27\xCD\xC8\xCB\xFE\x9F\xCB\xC2\xBA\x20\xE1\x45\x0E\xCC\x35\xEE\xC3\xC0\xCD\x23\xEA\xC2\xD2\x68\x36\x3C\xC1\xD3\xCC\x2B\xC9\xD3\xD1\xCF\x40\xEF\xC7\x0E\xD1\x2F\xCA\xD8\xD3\xD2\x47\xCC\xD2\xD6\xD5\x54\xD1\xD9\xD7\xCF\x57\xD5\xDE\xD6\xD6\x53\xE2\x68\x0C\xD4\x5C\xDB\xD1\xCB\xB6\x39\x24\xD7\xDB\xCA\x3A\x2A\xD9\xCF\xCD\x09\xC9\x4B\x0E\xDB\x70\xC6\x9C\x0C\xDD\x0C",
					"\xEF\x7D\x0C\xDE\x38\xF5\xDE\xCF\xDA\x66\xEF\xD9\xDE\x41\x3E\x3C\xD4\x83\x0F\x86\xF6\xC9\x40\x10\x89\xFF\xD2\xE1\xDF\x83\xF1\xD0\xE7\xE4\x92\xD5\xE2\x41\x10\x8D\xDB\xB2\x11\xE6\x2B\xC3\x1C\xE7\x6F\x44\x1F\xE1\xD8\xD6\xA3\xDF\xD5\xD9\xE9\x2F\xC5\x12\xE8\x69\x46\x2B\xE3\xBF\x11\xAE\xE0\x68\x26\x42\x7B\x76\x4E\xBA\x4C\xCC\x76\xE7\xED\x4A\xB9\xE0\x75\x50\x71\x7E\x72\x45\xEF\x40\xBD\xFB\xE6\x49\xF1\x02\x6D\x87\x57\xF0\x02\x48\xFF\xDC\xEE\x0A\x4A\xFE\x5C\xF3\x01\x4E\xFD\xD2\x4C\x1D\x56\xF2\xF6\x6B\xD4\xC0\x06\xF5\x94\xD0\xC9\x4B\xF5\x6D\xC0\xEE\x62\x4D\xF9\xB5\x67\xF5\x52\xFA\x57\x42\xFA\xD9\xF8\x06\x5D\xFC\xF9\xF0\x29\x5D\xF2\xFC\x86\xF0\xE8\x6F\xEF\xFA\xF5\xCA\x41\x72\xA2\xF9\x67\x21\x51\x5D\x70\x65\x00\xB6\x76\x7D\xBA\x7D\x62\x01\xB6\x23\x7E\xF3\x7D\x79\x21\xFF\x73\x7A\x42\x5F\x78\x7E\xDE\x51\x7B\x80\x13\x94\x4F\x02\xE3\x7A\x37\xEE\x54\x86\x4B\x1B\x98\x82\x5E\x1A\x86\x83\x84\x29\x33\x79\xEF\x65\x85\xFC\x22\x8B\x38\x12\x87\x7F\x82\x28\x90\x80\x0B\xC4\x7E\x85\x91\x1A\x7B\x86\xCD\x75\x87\x47\x37\x81\x87\x16\x80\x82",
					"\x85\x03\x3C\x81\x6F\x76\x7A\x86\x8F\x16\x7F\x84\x12\x88\x5D\x05\xAF\x83\x85\x1E\xB4\x87\x87\x4C\x86\x22\x10\xE0\x70\x89\x1C\x97\x28\x7D\xBA\x28\x82\x41\x11\x8C\x7B\x0C\x90\x8E\x86\x30\x89\x8A\x0F\xEA\x51\x84\x27\x96\x8C\x8C\x55\x81\x23\x14\x8F\x8B\x85\x2F\xBB\x82\x21\x48\x9D\x8A\x12\xA0\x89\x8C\x00\x37\x7E\x24\x1E\x85\x89\xF6\x61\x8E\x34\x2C\xBD\x35\x81\xE9\x69\x26\x1F\xD8\x72\x90\xFE\x78\x8A\x21\x83\x8B\x88\x18\x89\x21\x42\x31\x89\x84\x8A\x51\x8F\x90\x1B\x92\x94\x8F\x48\xBA\x70\x90\x59\x93\x92\x40\x71\x85\x37\xEE\x49\x97\x90\x26\x98\x85\x40\x5C\x8D\x92\x38\xA2\x96\x8E\x7A\x9F\x1F\x11\xA7\x9F\x93\x91\x1D\x7C\x94\x1D\x94\x75\x2A\xAB\x97\x8A\x43\xAE\x90\x91\xA7\x90\x97\x10\xB2\x9E\x8C\x23\xA6\x97\x2A\xD6\x67\x38\x30\xC6\x35\x28\xEB\x71\x3F\x2A\xBA\x84\x92\x49\x49\x9A\x99\x8F\x0C\x9D\x99\x1D\x2F\x98\x34\xC6\x95\x98\x85\x01\x43\x98\x09\x37\x9A\x5F\x56\x72\x9B\x37\x83\x3D\x9A\x32\x98\x9B\x16\xE0\x96\x21\x56\x9E\x9B\x9C\xE2\x83\x21\x37\xBE\x9F\x9B\x74\x82\x23\x9D\x1D\x36\x61\x02\x81\x21\x3C\x81\x1D\x7C\x93\x01\x2F",
					"\x94\x2F\xE8\x9D\x8C\x7E\x83\x26\x93\xFB\x83\x22\x30\xFD\x9A\x9C\x2F\x86\x20\x9F\xDE\x7E\x7E\x41\x85\xA9\x20\x6E\x8B\xA3\x21\x0F\xA1\x23\x40\xCF\x8E\x9F\x4D\x8A\xA1\x9C\x15\xA1\x22\x1F\x93\xAF\x9C\xEF\x0A\x27\x98\x06\x3A\x9B\x40\x0D\x91\x88\x85\x00\x4E\x20\x57\x46\x22\x99\x09\x26\x4F\x84\x0D\x56\x20\x96\x49\x21\xA6\x73\x90\x01\x52\x74\xA5\x10\x2E\x41\x26\x4D\xF3\x96\x10\x17\x7E\x89\x56\x34\xA7\x12\x8B\x3A\x9F\x58\x9A\x88\x16\x45\xF5\x81\x21\xB3\x34\xA9\x10\x17\x48\xA1\x5A\x34\xAA\x12\x8B\x5D\x76\x5A\x9A\x8B\x16\xA7\x0A\x20\xAB\x3C\x8C\x19\xA6\x85\x23\x5C\xA6\x8D\x1D\xA9\x42\x5F\xA3\x9E\x47\x2E\x44\xA3\x01\x35\x5C\x4D\x8F\x13\xA8\x85\x05\x64\xA6\x90\x0E\xAA\x42\x0E\x64\xA7\x48\x27\xAA\x21\x6A\xB3\x9E\x24\x6D\xA9\x21\xB7\xB3\x9B\x12\x72\xA9\x20\x5D\xF3\x94\x13\xBB\x89\x21\xAF\x09\x95\x10\x5F\x86\x2E\xAF\x04\x96\x11\xB0\x06\x23\xB1\x02\x97\x1E\x44\x24\x34\xA0\x38\x97\xB3\x2E\xB6\x77\x84\x35\x7B\x97\xB4\x37\x08\xBC\xB0\x67\x08\xA9\xA8\x9B\x3E\x8D\xB4\x2B\x7A\x94\x01\xFE\x6B\x5A\x3F\x96\x79\x24\x68\xA0\x01\x69\xD6",
					"\x72\xB4\xD0\x3E\x88\xA4\x09\x98\xB6\x40\x25\xB2\xA4\x7B\xA7\x3E\x8F\xDF\x29\x82\x10\xA5\xB7\xA5\x7F\xBF\xB6\x9A\x97\xAB\xA6\xEF\x2C\xA1\xA0\x23\x41\x9F\xB2\x31\xAB\xB8\xE5\x02\x89\x21\xD8\xA1\x23\xA6\xD2\xB6\x71\x40\x3A\xB2\xA3\xCB\x9C\x53\x8E\x4C\x7D\xB5\x77\xB4\xAB\xA7\x81\x28\xB0\x65\x24\xA2\x21\x71\xBA\x78\x54\x6D\x6B\x55\x89\xF6\x2B\xBE\x1A\x97\xB0\x58\xF0\xB3\x59\xA5\x03\x2D\xA7\x3C\xC3\x5A\x5A\x63\x70\xBC\x40\xFA\xA3\x22\x72\x89\x8B\x58\xFB\xAF\x67\xA5\x03\x38\xB9\x02\xCB\xA9\xBA\xC5\x46\x22\xC1\x02\x3F\xBB\x3C\xBC\x35\xA8\x82\x86\x4A\xC2\x03\x2D\xBF\x84\x81\x7A\x20\x0C\xC2\x27\xBD\x1B\xC8\x75\x6C\x1E\xC3\x95\xCB\x95\xAD\xC1\x01\x39\x5A\x85\xB6\x75\xB5\xF2\x82\x22\xC3\x94\x84\x74\xA9\x0A\x20\xC5\x18\xE6\x76\x36\x2E\xC5\xC4\x4D\xDF\x5A\x5B\x70\x7F\xBB\xB7\x2E\x50\xC6\x40\x51\xB9\x81\x72\x46\xC7\x67\x35\xDF\x57\x67\x9C\xC9\x21\x24\xC1\x20\xC2\xB6\x67\x5C\x8A\xDB\x54\x89\x26\xD1\xA6\x26\xF0\x5A\x58\x62\xBE\xB8\xA2\xE3\x96\xC9\x21\xDC\xB6\x26\x64\xC0\xC9\x20\x88\x7F\xC3\xBC\x2B\xC0\x02\x93\x84\x27\xB2\x8A",
					"\x5A\x5A\x9E\x69\xC1\xB8\x97\x86\x2B\xCD\x00\xFA\x72\x63\xDA\x46\x67\x99\x80\x02\xBC\x54\x9F\xCE\x20\xF2\xB6\x27\xCE\x5A\x55\x69\x3D\xC2\x8D\x7B\x6B\xDD\xCD\x48\x63\x6A\x5B\xB4\x7B\xC8\xBF\x73\xC3\x22\x56\x83\x25\xBF\x10\xF2\xC4\x33\x93\xC2\x20\x94\xB6\x23\x6F\x23\xF5\x4D\xB9\x01\x39\xD1\xF5\x17\xB7\x6E\x6D\x7B\x6B\xCF\x44\xD1\xD2\x40\x22\xD0\x3F\xCB\x88\x72\x5B\x8C\x7B\xCC\x89\xFE\xC0\x56\x8F\xB4\xA3\x73\xDA\x5E\x73\x9E\xC2\xC9\x9F\xAC\x8A\x26\xCE\xB6\x6A\x76\xB6\x2D\x7B\xCE\x56\xDD\x7C\xD5\x81\xC1\x26\x65\xDA\x59\x08\x50\xC0\x04\xBF\x69\xCC\xD6\xA2\x8A\x2B\x08\x17\x4C\x0E\xD9\xC8\x49\xCD\xA5\x83\x2E\xBE\x4B\xDC\x36\x09\xCE\xDC\x34\xB4\x83\x29\xD4\xDB\x50\x09\x73\xDD\xC3\x23\xB8\x97\x9C\xC8\x83\x19\xD9\xC1\x97\xB1\x0A\xC1\x0C\xC6\xBD\x89\x17\xC9\x24\x52\x0E\x47\x14\x4E\xD5\xC3\x7A\xC9\x27\xDD\x02\x21\xCD\x48\x55\x0E\x44\x2B\x0E\xD8\xAA\x53\xC0\xE1\x40\x72\xC6\x76\x2C\x2E\x41\x0B\xCE\xC7\xC6\xBF\xEE\xDF\xD7\xCB\x9B\x0E\x45\x5C\x0E\xDA\x8A\x93\xE3\x20\x85\xC0\x01\xD9\x0A\x3E\x0A\x8B\x5F\x0E\xD9\x6E\x5A\x5E\xE3",
					"\xD3\xC9\x21\x18\x2E\x42\x0C\x67\xFC\xC3\xCA\xF4\xC2\x21\x81\xF3\x94\x0D\xCC\x7D\xDA\xE6\x97\xA5\x0D\xE6\x08\xE3\x21\x99\xC9\x86\x0C\x99\x72\xE0\xCE\xB4\xA7\x0D\xCC\x5B\xE2\x20\x2F\xE9\x80\x1A\x19\x79\xE8\x81\x3E\xC6\xDB\xA0\x29\x0D\xB8\xBF\x3F\xE9\x81\x06\xC8\xEA\xA7\x64\x35\xD5\x9D\xA4\xA7\x35\x2E\x44\x0D\xCE\xDB\xE8\x3D\xDE\xAA\x21\xAB\xF6\xC0\x6C\xA4\x24\xAC\x43\xF3\x9E\x0C\x17\x6F\x0E\xD9\x6A\xE4\xCE\x41\x66\xE2\x20\x93\xF3\x99\x0E\x99\x72\xCB\x40\x4D\xE6\x76\x39\x13\xEA\x34\x74\xE3\xED\x42\x7A\xEA\xD3\xCB\xB4\x0F\xEF\xA4\x24\xF2\xE0\x86\x2A\xF0\x00\x00\xDE\x26\x76\x0E\xD8\x1E\x4E\xD9\xCB\x29\xDB\xC9\x20\x7C\xF6\x26\x1E\x06\x67\xF2\xD9\xB8\xAA\x21\x9B\xC1\x27\x1E\x06\x6D\xB0\xB9\xC3\x25\xF3\x8F\xE1\x24\x1F\x2E\x4D\x0E\x67\xE3\xCB\xF1\x03\x25\xF5\x40\x15\xF9\x81\x3F\x19\x77\xF5\x00\x19\xF1\x48\x00\x1F\x60\x17\x78\xF1\xF4\x0A\x21\x12\xC1\x12\x6A\x5A\xDC\xE9\xF2\x21\x82\x0E\x47\x20\x4E\xDE\xCD\x29\xE6\xC8\xEB\xB6\x3F\x8D\x66\xD3\xF4\xFB\xF3\xAC\x26\xFA\x26\x25\xB5\x69\x9E\xFB\xCE\xEE\xF4\xA5\xB4\x08\xB4\xD6",
					"\x73\x35\xBE\x23\xD5\xBF\x96\x31\x08\xB8\x79\xF8\xA1\x20\x9E\x95\x2D\xFF\x1F\xBA\x96\x25\xFC\xEC\xF9\xB3\xF9\xD7\xA4\xA6\xF6\xFD\xC9\x02\xF9\xF9\xA2\xDB\x66\x9F\x24\xFF\x7E\x11\x7E\x46\x5A\x99\x53\x80\x21\x16\x80\xC4\x42\x17\xB1\x58\x3D\xD6\x50\x5B\x99\x5D\x80\x09\x84\x53\x1F\x4E\x12\x13\x8B\x48\x12\x89\x59\xAF\x51\x12",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* ParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"XAttribute",
					L"XText",
					L"XCData",
					L"XComment",
					L"XElement",
					L"XSubNode",
					L"XInstruction",
					L"XDocument",
				};
				return results[index];
			}

			const wchar_t* ParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][XAttribute] BEGIN ",
					L"[1][XAttribute] END [ENDING]",
					L"[2][XAttribute]< NAME \"=\" @ ATTVALUE >",
					L"[3][XAttribute]< NAME \"=\" ATTVALUE @ >",
					L"[4][XAttribute]< NAME @ \"=\" ATTVALUE >",
					L"[5][XText] BEGIN ",
					L"[6][XText] END [ENDING]",
					L"[7][XText]< \"=\" @ >",
					L"[8][XText]< ATTVALUE @ >",
					L"[9][XText]< NAME @ >",
					L"[10][XText]< TEXT @ >",
					L"[11][XCData] BEGIN ",
					L"[12][XCData] END [ENDING]",
					L"[13][XCData]< CDATA @ >",
					L"[14][XComment] BEGIN ",
					L"[15][XComment] END [ENDING]",
					L"[16][XComment]< COMMENT @ >",
					L"[17][XElement] BEGIN ",
					L"[18][XElement] END [ENDING]",
					L"[19][XElement]< \"<\" @ NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[20][XElement]< \"<\" NAME @ { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[21][XElement]< \"<\" NAME { XAttribute @ } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[22][XElement]< \"<\" NAME { XAttribute } ( \"/>\" @ | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[23][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" @ { XSubNode } \"</\" NAME \">\" ) >",
					L"[24][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode @ } \"</\" NAME \">\" ) >",
					L"[25][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" @ NAME \">\" ) >",
					L"[26][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" @ ) >",
					L"[27][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME @ \">\" ) >",
					L"[28][XSubNode] BEGIN ",
					L"[29][XSubNode] END [ENDING]",
					L"[30][XSubNode]<< ( ( ( !XText @ | !XCData ) | !XComment ) | !XElement ) >>",
					L"[31][XSubNode]<< ( ( ( !XText | !XCData ) | !XComment ) | !XElement @ ) >>",
					L"[32][XSubNode]<< ( ( ( !XText | !XCData ) | !XComment @ ) | !XElement ) >>",
					L"[33][XSubNode]<< ( ( ( !XText | !XCData @ ) | !XComment ) | !XElement ) >>",
					L"[34][XInstruction] BEGIN ",
					L"[35][XInstruction] END [ENDING]",
					L"[36][XInstruction]< \"<?\" @ NAME { XAttribute } \"?>\" >",
					L"[37][XInstruction]< \"<?\" NAME @ { XAttribute } \"?>\" >",
					L"[38][XInstruction]< \"<?\" NAME { XAttribute @ } \"?>\" >",
					L"[39][XInstruction]< \"<?\" NAME { XAttribute } \"?>\" @ >",
					L"[40][XDocument] BEGIN ",
					L"[41][XDocument] END [ENDING]",
					L"[42][XDocument]< { ( XInstruction @ | XComment ) } XElement >",
					L"[43][XDocument]< { ( XInstruction | XComment ) } XElement @ >",
					L"[44][XDocument]< { ( XInstruction | XComment @ ) } XElement >",
				};
				return results[index];
			}

			Parser::Parser()
				: vl::glr::ParserBase<XmlTokens, ParserStates, XmlAstInsReceiver, ParserStateTypes>(&XmlTokenDeleter, &XmlLexerData, &XmlParserData)
			{
			};

			vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2)
			{
				return -1;
			};

			vl::Ptr<vl::glr::xml::XmlElement> Parser::ParseXElement(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<ParserStates::XElement>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlDocument> Parser::ParseXDocument(const vl::WString & input, vl::vint codeIndex)
			{
				 return Parse<ParserStates::XDocument>(input, this, codeIndex);
			};
		}
	}
}
