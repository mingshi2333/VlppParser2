/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Xml
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "XmlParser.h"

namespace vl
{
	namespace glr
	{
		namespace xml
		{
			void XmlParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2558; // 24661 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 254;
				static const vl::vint dataSolidRows = 9;
				static const vl::vint dataRows = 10;
				static const char* compressed[] = {
					"\x55\x60\x00\x00\xF6\x09\x00\x00\x0D\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x85\x0A\x83\x06\x84\x07\x0A\x91\x0A\x9C\x0A\x82\x12\x84\x14\x0A\xA3\x42\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x91\x91\x91\x00\x34\xAC\xB9\x8E\x9B\x98\x98\x8F\x9A\x3D\xA7\x81\xA0\x93\xA3\x9B\x9E\x9D\x47\xBC\x89\xBE\x96\x82\x9B\x96\xA1\x4B\xD0\x8D\xA0\xA1\xAC\xA1\xAA\xA3\x53\xC8\x99\xAA\xAB\xAC\xA7\x80\xA7\x45\xCF\x96\xBD\xA2\xAF\xAC\xAA\xB2\x63\xE6\x9A\xAA\xBC\xAC\xB6\xAE\x81\x60\xD7\xB7\x8A\x88\x9A\xB9\xB1\xBB\x76\x89\x9B\x89\x85\xB8\xB4\xAC\xB7\x65\xF0\xA7\xA0\xC9\xB2\xC3\xB4\xC3\x6D\x88\xEF\xA1\x81\xBE\xBE\xB1\xBF\x8A\x81\xCC\xC3\xC1\xCD\xC3\xC9\xC3\x97\x89\xD9\xCB\xC2\x94\xCB\xCC\xC9\x9D\x98\xE1\xDA\xC3\xD4\xCD\xC7\x81\x03\x74\xB8\xAE\xCB\xD4\xC0\xC9\xCF\x96\xA5\xE0\xC7\xD5\xCF\xD6\xD9\xD8\xB4\xB0\xF6\xD9\xD7\xDB\xDE\xCE\x00\x04\x2A\xC9\x8C\x8C\xBA\x86\x02\xE1\xAC\xF9\x86\x87\x08\xE6\xD7\xC7\xE7\xAD\xB5\xD0\xEA\xEE\xE1\xEA\xDD\xE9\xC9\xD9\xD5\xF4",
					"\xE2\xEA\x84\x84\x83\x7D\xDB\xDA\xFD\xEC\xEF\xEA\xEB\xDE\xD8\xE2\xEA\xE4\xF3\xF6\xF1\xF2\x00\x09\x4D\xEC\xEB\xFE\xF5\xF4\xF5\xF3\xBC\xF9\xFF\xDA\xF2\xD4\xFC\xD2\xDE\x0A\x32\x75\x7C\x7D\xF7\x6F\x7E\x7E\x69\xFB\x49\x8D\x7E\x82\xFF\x4C\x88\x82\x68\x0E\x45\x76\x82\x83\xB3\x54\x88\x6E\x85\xBE\x4B\x8A\x85\x83\x1B\x8F\x8C\x87\x87\x1E\xA1\x85\x85\x87\x23\xA0\x85\x8A\x88\x17\xA4\x89\x88\x69\x0C\x02\x85\x82\x7D\x07\xA7\x82\x8F\x8A\x28\x99\x86\x88\x8D\x33\xB6\x85\x8D\x7A\xF3\x7D\x81\x40\x40\x12\xB0\x88\x84\x8F\x03\xBE\x8F\x88\x81\x31\xB8\x8A\x92\x8E\x39\x84\x97\x92\x91\x49\x8C\x9B\x92\x93\x51\x8E\x90\x45\x90\x48\x83\x98\x7E\x96\x13\xAA\x82\x97\x97\x54\x9C\x92\x92\x97\x4E\x8F\x0E\x89\x95\x5B\xA4\x99\x9B\x8D\x60\xAB\x9B\x8E\x9B\x4D\xB0\x93\x96\x9C\xB6\x50\x07\x9A\x98\x59\xAA\x9D\x94\x9B\x61\xBA\x93\x98\x9F\x74\xBD\x90\xA3\x9E\x6F\x84\xA1\x9E\xA1\x73\x88\xAD\x9B\x7B\x12\x58\x90\x94\x9E\x8F\xBE\x99\x9F\xA0\xF6\x52\x07\x9E\x68\x13\x17\xA4\x68\x05\x9A\x85\xAF\x9E\xA7\x93\xA0\xA1\xA4\x69\x15\x1D\xA0\x6A\x05\xA6\xB1\x67\x05\xAA",
					"\x8B\x9F\xA7\xA2\x41\x18\x2C\xA2\xA2\xA8\x45\xB5\xAF\x92\xAD\x68\x8A\xA3\xAF\xAB\xA1\xBC\xA2\x41\x06\xB2\x8A\x4A\x05\xB0\x09\x5B\x0E\x88\x45\x8E\x81\x4D\x06\x8B\x1E\x2E\x8F\x06\x8B\x20\x04\xBE\xA9\xA2\xF6\x61\x02\xB7\x40\x16\x49\xB7\xAC\x00\x23\x2E\x84\x0A\x8B\x25\x2E\x86\x0A\x8B\x27\x2E\x88\x46\xB6\xB9\x93\xBD\xA9\xAF\xD4\xAC\xB6\x6D\x0A\xD7\xA3\xA4\xAF\xB6\x2A\x31\xB8\xAC\xA4\xF7\x92\xA2\xBE\xAF\xF9\x94\xAE\xBB\xAE\xED\xBB\xB1\xC1\x40\x2B\x36\xBB\xB5\xBA\xFF\x81\xAA\xC2\xAE\xE7\x6C\x06\xC1\x0B\x2E\xAE\x0E\x8B\x0B\x2E\xB0\x0E\x89\x0C\x2E\xB2\x06\xC0\xC2\x02\xEB\xBD\xC4\xC0\x1E\xFD\xB3\xBC\xC7\x01\x73\x0B\xC4\xBE\x07\xE8\xC4\xC9\xCA\xFA\xA2\xCC\xBC\x00\x34\x27\xCD\xC8\xCB\xFE\x9F\xCB\xC2\xBA\x20\xE1\x45\x0E\xCC\x35\xEE\xC3\xC0\xCD\x23\xEA\xC2\xD2\x68\x36\x3C\xC1\xD3\xCC\x2B\xC9\xD3\xD1\xCF\x40\xEF\xC7\x0E\xD1\x2F\xCA\xD8\xD3\xD2\x47\xCC\xD2\xD6\xD5\x54\xD1\xD9\xD7\xCF\x57\xD5\xDE\xD6\xD6\x53\xE2\x68\x0C\xD4\x5C\xDB\xD1\xCB\xB6\x39\x24\xD7\xDB\xCA\x3A\x2A\xD9\xCF\xCD\x09\xC9\x4B\x0E\xDB\x70\xC6\x9C\x0C\xDD\x0C",
					"\xEF\x7D\x0C\xDE\x38\xF5\xDE\xCF\xDA\x66\xEF\xD9\xDE\x41\x3E\x3C\xD4\x83\x0F\x86\xF6\xC9\x40\x10\x89\xFF\xD2\xE1\xDF\x83\xF1\xD0\xE7\xE4\x92\xD5\xE2\x41\x10\x8D\xDB\xB2\x11\xE6\x2B\xC3\x1C\xE7\x6F\x44\x1F\xE1\xD8\xD6\xA3\xDF\xD5\xD9\xE9\x2F\xC5\x12\xE8\x69\x46\x2B\xE3\xBF\x11\xAE\xE0\x6D\x2A\x42\x7B\x76\x4E\xBA\x4C\x01\xB6\xE7\xED\x4A\xB9\xE0\x75\x53\x71\x57\x72\x45\xEF\x40\xCC\x4A\xA8\xEE\x42\x2D\x97\x53\xF2\x40\xC5\xEA\xB7\xF1\x42\xC9\xFE\x5B\xF1\x40\xCD\xFB\xE6\x49\xEF\x03\x51\xFE\x6B\xF4\x00\x15\xFD\xC7\xF3\x06\x5A\xF5\x6C\xF0\x7E\x72\x44\xFA\x6B\xE6\xC5\x59\xF9\xF0\x29\x5C\xF1\x7B\xF7\xBC\xF4\xEF\xEE\xFA\xED\xF2\xF6\xF1\xFC\x09\x69\x67\x57\xF9\xB5\x42\xFA\x41\x70\xF7\x77\x7A\x77\x45\x2C\x7A\x90\x60\x7A\x77\xBD\x25\x80\x9D\x07\x8A\x77\xF5\x65\x79\x25\x00\x8F\x82\x49\x5C\x71\x82\xD7\x15\x85\x7F\xF5\x69\x22\xF7\x7F\x6C\x81\x80\x22\x7A\x37\x17\x9A\x36\xFF\x1A\x8B\x80\xFC\x61\x7D\x28\x21\x9D\x37\x08\xCB\x35\x84\x01\x90\x78\x85\xF4\x73\x82\xFD\x4E\x76\x84\xD4\x30\x84\x7D\x32\x88\x5C\x86\x1D\x80\x00\xEE\x72\x21",
					"\x85\x32\x2B\x84\xF1\x2D\x83\x24\xEC\x42\x27\x83\xBD\x20\x89\x10\xB9\x86\x20\x25\xA6\x26\x89\x4B\x9E\x20\xF7\x1B\x8D\x69\x25\x86\x8E\x83\x37\x92\x83\x48\x53\x84\x89\x8F\x17\x88\x00\x48\x9F\x85\x0C\xDB\x8A\x20\x2A\x91\x4C\x87\x61\x90\x83\x18\x9F\x2C\x7A\x1F\xBB\x85\x86\x02\x3A\x7E\x5F\x50\x81\x8B\x7F\x2E\x7D\x8B\x1E\x3F\x8A\x1B\xCF\x8B\x8C\x29\xA5\x88\x8F\x1D\x3F\x89\x1A\xDE\x4C\x86\x33\xA9\x24\x7F\x22\x8A\x8C\x0E\xE4\x89\x20\x3A\x9E\x26\x91\x4B\x9C\x89\x00\xC5\x88\x79\x2C\xA8\x79\x83\x2C\x93\x92\x17\x95\x97\x2A\x48\x81\x8A\x92\x34\x8E\x87\x09\x9D\x9D\x8F\x8E\x2D\x88\x90\xFF\x1F\x8A\x1C\x96\x85\x94\x3B\xAA\x6C\x87\x7B\x83\x26\x27\xC2\x8C\x78\x54\x82\x93\x7E\x8B\x9F\x20\x22\xAA\x87\x91\x56\xBB\x95\x8E\x6C\x8A\x20\x71\x21\x94\x93\x84\x11\x42\x7A\x08\x90\x7E\x28\x88\x84\x96\xDB\x67\x88\x8E\xCE\x9D\x95\x2E\xFE\x89\x7E\x02\x82\x9E\x9A\xD5\x8A\x7B\xFF\x58\x96\x21\x55\xB5\x37\x94\x9A\x99\x8E\x42\x5E\x9A\x36\xEE\x43\x9B\x7B\xDB\x9A\x9A\x5E\x36\x93\x9C\x5C\x9A\x89\x98\xC3\x3C\x9B\x40\x1E\x90\x9C\x62\x9B\x91\x9B\x7E\x3F",
					"\x8B\x2F\xD0\x90\x01\x7D\x8B\x9A\x20\xF1\x37\x2B\x39\x98\x86\x25\x81\x89\x95\xA0\xAD\x86\xA0\x2F\xFF\x91\x21\x80\xB9\x9A\x21\x5F\x9C\x85\x44\xFC\x9E\x93\x2F\x8A\xA4\x87\x15\xA9\x9F\x43\xF1\x97\x2B\x2F\x99\xA5\x91\x45\x36\xA1\x48\x9A\xA4\x40\x8B\x49\x98\x00\xEF\x61\x20\xF7\x64\x9D\x86\x92\x82\x24\x82\x33\x93\x9D\x4C\x8B\x23\xA7\x80\x3B\x90\xA6\x24\x98\x9F\x10\xA0\xA9\xA7\x26\xBF\x8C\xA7\x99\x86\x22\x42\xD4\x8B\x96\x2A\xA9\x84\xA5\x29\x89\xAB\x35\x89\x2B\x97\x14\x9F\x3B\x20\x0E\xA3\x23\x17\xC7\x99\x7A\x85\x00\x4E\x20\x57\x46\x22\x99\x09\x26\x4F\x84\x0D\x56\x20\x96\x49\x21\xA6\x27\xA5\x55\x93\xA1\x22\x13\x2E\x41\x25\x59\xE6\xA9\x21\x4D\x2E\x42\xA1\xB1\x4C\xAD\x42\x1C\x1E\x45\x14\x96\x5F\xA4\x2C\xBD\x12\x8B\x29\xA0\x01\x66\x78\xAA\x21\x9E\x0E\x44\x4B\xD1\x5F\xAF\x84\x1F\x16\x45\xDC\x6F\x59\x61\x86\x20\x15\xB7\x8A\x21\xAE\x72\xA3\x21\x28\x69\xAA\x21\x71\x51\xB3\x20\xA2\x14\xB1\x42\x16\xB7\xB3\x80\x23\x16\x45\xBB\x95\x5D\x67\x81\x24\x15\xBA\x8A\x25\x60\xA3\xA0\x01\x29\x02\xBA\x20\x87\x69\xB6\x14\xA0\xAA\x22\x68\xA3",
					"\xB7\x14\xD3\x89\x20\xB5\xA3\xA8\x14\x6B\x89\x2E\xB5\xD1\xA9\x11\xB6\x09\x33\xB5\x67\xAA\x16\xB6\x83\x38\xB5\xB3\xAB\x1B\xB6\x41\x3D\xBD\xB2\x56\x2E\x40\x09\x66\xBE\x90\x5B\xBC\x33\x2E\x6D\x71\x94\x33\x2B\xA7\x3F\xE3\x36\x8B\x9D\xF7\x2C\xA4\xAF\xD4\xA7\x3E\x42\xE0\xB8\x65\x14\x97\xB8\x34\xDB\xAA\x72\x50\xBF\xA6\x3E\x27\x7B\x94\xAF\x54\x87\xBD\x6C\x0A\xA1\xAA\x23\x4E\x4D\xBE\x01\x3C\xAE\x1E\xE2\xB3\x81\xF7\x0E\x48\x89\x7C\xB7\xAB\x40\x72\xB6\x36\x85\x93\xA2\x34\x65\x4E\x45\x57\x86\x24\xC1\x90\x04\xAA\xBB\xE7\x21\xAE\xEF\x11\x77\x20\xE3\x10\xC7\x3D\x63\xB3\xC0\xE5\x00\xA6\xC2\xFF\xA7\x3C\x53\x3A\x93\x66\x3E\x97\xC6\x3F\xB5\x83\x24\xBC\x33\x74\xAA\x40\x02\xC6\xBF\xF3\x28\x52\x5B\xAB\x5D\xBA\x7D\x2C\xC8\x8A\x0F\xEF\x38\x58\x21\xCC\x69\x56\x83\x2B\xC0\x02\x4E\x4B\x58\xDA\x46\x5A\x8C\x84\x4D\xC6\x81\x1B\xAD\xBD\xE7\x2B\x59\x8E\xF3\x5F\xAB\x81\x19\xC6\xC7\xE7\x3E\xAE\x86\x96\x71\x21\x27\xC2\x20\xC4\x48\xD4\xC1\x40\x0A\xBC\xC1\x0F\xCA\x27\xC5\x59\xDB\xC2\xE3\x0A\x28\xCB\x81\x31\xC1\xCC\x54\xD5\x8A\x6D\x65\xC2\x20\xE9",
					"\xA6\xAC\x37\x77\xB3\xCA\x40\x59\x5D\xCB\x93\xBC\xAE\xC4\x02\x20\xCC\x94\xDA\xCA\xCC\xB5\x8A\x27\xCC\x7B\xC2\xCD\x9F\x8A\x28\xCF\x80\x2E\xCF\xA4\xBC\x3F\x5A\xB6\x61\x53\xC8\x81\x3C\xAC\xAF\x7A\xC2\x22\x84\x81\xD4\x41\x72\x4B\xCF\x65\x80\xDF\x54\x89\xE9\xCB\x65\x4C\xD5\xCB\xD3\x46\x47\x5D\x9D\xF6\x35\x9E\x33\xEC\xBC\xD2\x46\x42\xBB\x4B\xAD\xB5\xA6\xE0\x2D\xD6\xD3\xF0\x20\xD6\xAD\x12\x6D\xD1\x80\x26\xA3\xD4\x03\x37\xA7\x9F\xFD\xB8\xCC\x23\x5A\x65\xD6\x30\x6D\xD7\x53\xAB\xD9\x20\x58\xC5\xCE\x56\x4E\x45\x68\xB0\xE3\x60\xD9\xFD\x85\xDE\xAA\xB2\xDB\x59\xDB\x40\xD7\x6E\x60\xC8\x8C\x7B\xB0\xC7\xC0\x69\x4E\x45\x70\x60\xCC\x70\xD8\x3B\xC4\xD8\xAC\x0A\x28\xC7\x5E\xE3\xCC\xCF\x90\xAE\xC9\xB4\xBC\x3B\x72\x60\xFC\x37\xD8\x2D\xA9\x21\xBA\xB5\x96\xC6\xFB\x21\x70\xD8\xAD\x60\xDB\xA4\xE2\xD3\x21\x79\xCD\xA3\xDD\xBF\x30\xB8\xB0\xCA\x0D\xD4\x36\xEA\xA7\xB1\xBC\xC8\xD6\xAD\x4C\x0D\xD4\x27\x2D\xD1\xD2\x07\xF2\xDE\x42\x70\xD1\xBD\xF7\x10\x0D\xD5\x52\x0D\xD6\xBF\xF1\xD3\xDD\x84\x34\xC3\x5B\x4E\x54\x09\xAB\xD6\x0D\xD4\x20\xF8\xD2\x20",
					"\x1B\xFA\xD8\x67\x4E\x48\x0B\x56\xDA\x0D\xD5\xC8\x47\xE5\x40\x65\xD3\x20\x21\xE6\xDB\xD0\x09\x3C\x09\xAB\xBC\x36\xE5\x81\x3B\xD8\xD9\xE7\x3E\x09\xE6\x36\xE3\x21\x9E\xED\xC4\xCF\x2B\x71\xE6\xBA\xF5\xD4\x41\x2F\x3B\xE7\x37\x52\xC7\xC7\x44\x27\xD7\xE8\xFB\x21\x0D\xD5\x63\x0D\xD4\x97\xD2\xE9\x20\xA5\xDC\xC4\xE9\x46\x45\x0D\xAB\xE7\x0D\xD4\xC2\xB2\xC9\x20\x5E\xE1\x23\xB0\xC0\xEF\x3D\x34\x2D\xD3\x0D\xAD\xD1\xCC\xD7\x86\x29\xEC\x00\x14\xE7\x37\x4E\x4D\x0D\xAB\xEF\x0D\xD4\x3A\xF3\xEB\x20\x75\xFF\xE1\xC5\xF6\x31\x0F\x56\xF3\x0D\xD5\xDD\x5A\x59\xDD\xAA\xE8\xBD\xF3\x35\x0D\xD5\x77\x0D\xD6\xA2\xE7\xED\xAE\x85\x0A\xCF\xE6\xBC\x39\x0D\xE6\x5B\xE2\x21\xCB\xCA\xE3\x5B\x7A\x19\x72\xD9\x83\x2E\xF3\xAA\xC4\x43\x0F\x99\x72\xED\xE7\x80\xE2\x34\x3E\x19\x76\xEF\x02\x33\xF3\xE7\xBC\x3D\x0F\xCC\x72\xF2\x20\x8C\xD8\xF0\xCA\x7E\x0F\xE8\xD1\x39\xF3\x20\x96\xDA\xF4\xEA\x3F\x6F\xF7\x36\xEC\xF4\x34\x80\x0E\x45\x20\x2D\xD5\xF9\xFC\x95\xB2\x21\xC1\xF3\xF5\xE0\x67\x3C\xB2\x99\xA0\xEE\x56\x83\x0E\x44\x21\x2D\xD5\xFA\x47\xD0\xFA\x21\x89\xE2\xF8",
					"\x69\x06\x19\x72\x51\xC3\x27\xF6\x6C\xF6\x3F\x21\x3D\xF4\x35\xE8\xDE\xF9\x21\xE6\xE2\x22\x95\xE9\xF4\x41\x44\x2C\xFC\x33\xF1\xEE\xF8\xFC\x93\xE7\xF8\xCE\x0B\x15\xD5\x8D\x0D\x6A\xF0\x2A\x2D\xAA\x61\x10\xE8\x70\x72\xE7\x1F\x08\x06\x35\x80\x28\x52\x5B\x0A\x13\x7F\x08\x8F\x1E\x90\x06\x30\xC7\x5F\x7E\x06\x1C\x80\x77\x78\x60\xE7\x11\x09\x2E\x22\x09\xAD\x6C\x5C\x16\x83\x10\x15\x81\x10\x03\x82\x7E\x9C\x14\x09\x99\x30\x82\x06\x8D\x7F\xA0\x15\x09\x0F\x3E\x22\x2A\x80\x00\x10\x83\x78\x04\x26\x09\x06\x34\x6B\x94\x71\x83\x19\x8B\x6D\xE7\x17\x09\x2E\x28\x09\xAD\x64\x31\xDA\x20\x31\x88\x68\x77\x41\x49\x5A\x48\x87\x69\x20\x18\x62\x26\x1F\x68\xD5\x52\x73\xFA\x76\x67\xED\x47\x7F\x27\x14\x60\xAE\x46\x56\x2C\x5E\x14\x59\x82\x13\x2C\x56\x13\xD2\x53\x4B\x29\x4E\x85\x6C\x51\x86\x21\x14\x86\x2E\x5A\x3B\x66\x80\x54\xC9\x49\x86\x3E\x56\x56\x17\x55\x13\x6F\x89\x12\x0A\x56\x13\x73\x81\x12\x75\x8B\x54\x27\x5E\x4F\x2E\x1A\x87\x23\x1B\x4B\x36\x1E\x87\x21\x10\x88\x1D\x67\x52\x86\x4C\x12\x85\x86\x12\x54\x46\x13\x89\x8E\x60\x49\x81\x12",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* ParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"XAttribute",
					L"XText",
					L"XCData",
					L"XComment",
					L"XElement",
					L"XSubNode",
					L"XInstruction",
					L"XDocument",
				};
				return results[index];
			}

			const wchar_t* ParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][XAttribute] BEGIN ",
					L"[1][XAttribute] END [ENDING]",
					L"[2][XAttribute]< NAME \"=\" @ ATTVALUE >",
					L"[3][XAttribute]< NAME \"=\" ATTVALUE @ >",
					L"[4][XAttribute]< NAME @ \"=\" ATTVALUE >",
					L"[5][XText] BEGIN ",
					L"[6][XText] END [ENDING]",
					L"[7][XText]< \"=\" @ >",
					L"[8][XText]< ATTVALUE @ >",
					L"[9][XText]< NAME @ >",
					L"[10][XText]< TEXT @ >",
					L"[11][XCData] BEGIN ",
					L"[12][XCData] END [ENDING]",
					L"[13][XCData]< CDATA @ >",
					L"[14][XComment] BEGIN ",
					L"[15][XComment] END [ENDING]",
					L"[16][XComment]< COMMENT @ >",
					L"[17][XElement] BEGIN ",
					L"[18][XElement] END [ENDING]",
					L"[19][XElement]< \"<\" @ NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[20][XElement]< \"<\" NAME @ { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[21][XElement]< \"<\" NAME { XAttribute @ } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[22][XElement]< \"<\" NAME { XAttribute } ( \"/>\" @ | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[23][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" @ { XSubNode } \"</\" NAME \">\" ) >",
					L"[24][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode @ } \"</\" NAME \">\" ) >",
					L"[25][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" @ NAME \">\" ) >",
					L"[26][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" @ ) >",
					L"[27][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME @ \">\" ) >",
					L"[28][XSubNode] BEGIN ",
					L"[29][XSubNode] END [ENDING]",
					L"[30][XSubNode]<< ( !XText @ | !XCData | !XComment | !XElement ) >>",
					L"[31][XSubNode]<< ( !XText | !XCData @ | !XComment | !XElement ) >>",
					L"[32][XSubNode]<< ( !XText | !XCData | !XComment @ | !XElement ) >>",
					L"[33][XSubNode]<< ( !XText | !XCData | !XComment | !XElement @ ) >>",
					L"[34][XInstruction] BEGIN ",
					L"[35][XInstruction] END [ENDING]",
					L"[36][XInstruction]< \"<?\" @ NAME { XAttribute } \"?>\" >",
					L"[37][XInstruction]< \"<?\" NAME @ { XAttribute } \"?>\" >",
					L"[38][XInstruction]< \"<?\" NAME { XAttribute @ } \"?>\" >",
					L"[39][XInstruction]< \"<?\" NAME { XAttribute } \"?>\" @ >",
					L"[40][XDocument] BEGIN ",
					L"[41][XDocument] END [ENDING]",
					L"[42][XDocument]< { ( XInstruction @ | XComment ) } XElement >",
					L"[43][XDocument]< { ( XInstruction | XComment ) } XElement @ >",
					L"[44][XDocument]< { ( XInstruction | XComment @ ) } XElement >",
				};
				return results[index];
			}

			const wchar_t* ParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			Parser::Parser()
				: vl::glr::ParserBase<XmlTokens, ParserStates, XmlAstInsReceiver>(&XmlTokenDeleter, &XmlLexerData, &XmlParserData)
			{
			};

			vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::xml::XmlElement> Parser::ParseXElement(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::xml::XmlElement, ParserStates::XElement>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlElement> Parser::ParseXElement(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::xml::XmlElement, ParserStates::XElement>(tokens, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlDocument> Parser::ParseXDocument(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::xml::XmlDocument, ParserStates::XDocument>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlDocument> Parser::ParseXDocument(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::xml::XmlDocument, ParserStates::XDocument>(tokens, this, codeIndex);
			};
		}
	}
}
