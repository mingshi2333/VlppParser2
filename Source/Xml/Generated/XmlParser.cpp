/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Xml
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "XmlParser.h"

namespace vl
{
	namespace glr
	{
		namespace xml
		{
			void XmlParserData(vl::stream::IStream& outputStream)
			{
				static const vl::vint dataLength = 2555; // 24661 bytes before compressing
				static const vl::vint dataBlock = 256;
				static const vl::vint dataRemain = 251;
				static const vl::vint dataSolidRows = 9;
				static const vl::vint dataRows = 10;
				static const char* compressed[] = {
					"\x55\x60\x00\x00\xF3\x09\x00\x00\x0D\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x85\x0A\x83\x06\x84\x07\x0A\x91\x0A\x9C\x0A\x82\x12\x84\x14\x0A\xA3\x42\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x92\x26\xFF\x68\x86\x9B\x93\x91\x96\x92\x0A\xA9\xAA\x91\x99\x91\x91\x91\x00\x34\xAC\xB9\x8E\x9B\x98\x98\x8F\x9A\x3D\xA7\x81\xA0\x93\xA3\x9B\x9E\x9D\x47\xBC\x89\xBE\x96\x82\x9B\x96\xA1\x4B\xD0\x8D\xA0\xA1\xAC\xA1\xAA\xA3\x53\xC8\x99\xAA\xAB\xAC\xA7\x80\xA7\x45\xCF\x96\xBD\xA2\xAF\xAC\xAA\xB2\x63\xE6\x9A\xAA\xBC\xAC\xB6\xAE\x81\x60\xD7\xB7\x8A\x88\x9A\xB9\xB1\xBB\x76\x89\x9B\x89\x85\xB8\xB4\xAC\xB7\x65\xF0\xA7\xA0\xC9\xB2\xC3\xB4\xC3\x6D\x88\xEF\xA1\x81\xBE\xBE\xB1\xBF\x8A\x81\xCC\xC3\xC1\xCD\xC3\xC9\xC3\x97\x89\xD9\xCB\xC2\x94\xCB\xCC\xC9\x9D\x98\xE1\xDA\xC3\xD4\xCD\xC7\x81\x03\x74\xB8\xAE\xCB\xD4\xC0\xC9\xCF\x96\xA5\xE0\xC7\xD5\xCF\xD6\xD9\xD8\xB4\xB0\xF6\xD9\xD7\xDB\xDE\xCE\x00\x04\x2A\xC9\x8C\x8C\xBA\x86\x02\xE1\xAC\xF9\x86\x87\x08\xE6\xD7\xC7\xE7\xAD\xB5\xD0\xEA\xEE\xE1\xEA\xDD\xE9\xC9\xD9\xD5\xF4",
					"\xE2\xEA\x84\x84\x83\x7D\xDB\xDA\xFD\xEC\xEF\xEA\xEB\xDE\xD8\xE2\xEA\xE4\xF3\xF6\xF1\xF2\x00\x09\x4D\xEC\xEB\xFE\xF5\xF4\xF5\xF3\xBC\xF9\xFF\xDA\xF2\xD4\xFC\xD2\xDE\x0A\x32\x75\x7C\x7D\xF7\x6F\x7E\x7E\x69\xFB\x49\x8D\x7E\x82\xFF\x4C\x88\x82\x68\x0E\x45\x76\x82\x83\xB3\x54\x88\x6E\x85\xBE\x4B\x8A\x85\x83\x1B\x8F\x8C\x87\x87\x1E\xA1\x85\x85\x87\x23\xA0\x85\x8A\x88\x17\xA4\x89\x88\x69\x0C\x02\x85\x82\x7D\x07\xA7\x82\x8F\x8A\x28\x99\x86\x88\x8D\x33\xB6\x85\x8D\x7A\xF3\x7D\x81\x40\x40\x12\xB0\x88\x84\x8F\x03\xBE\x8F\x88\x81\x31\xB8\x8A\x92\x8E\x39\x84\x97\x92\x91\x49\x8C\x9B\x92\x93\x51\x8E\x90\x45\x90\x48\x83\x98\x7E\x96\x13\xAA\x82\x97\x97\x54\x9C\x92\x92\x97\x4E\x8F\x0E\x89\x95\x5B\xA4\x99\x9B\x8D\x60\xAB\x9B\x8E\x9B\x4D\xB0\x93\x96\x9C\xB6\x50\x07\x9A\x98\x59\xAA\x9D\x94\x9B\x61\xBA\x93\x98\x9F\x74\xBD\x90\xA3\x9E\x6F\x84\xA1\x9E\xA1\x73\x88\xAD\x9B\x7B\x12\x58\x90\x94\x9E\x8F\xBE\x99\x9F\xA0\xF6\x52\x07\x9E\x68\x13\x17\xA4\x68\x05\x9A\x85\xAF\x9E\xA7\x93\xA0\xA1\xA4\x69\x15\x1D\xA0\x6A\x05\xA6\xB1\x67\x05\xAA",
					"\x8B\x9F\xA7\xA2\x41\x18\x2C\xA2\xA2\xA8\x45\xB5\xAF\x92\xAD\x68\x8A\xA3\xAF\xAB\xA1\xBC\xA2\x41\x06\xB2\x8A\x4A\x05\xB0\x09\x5B\x0E\x88\x45\x8E\x81\x4D\x06\x8B\x1E\x2E\x8F\x06\x8B\x20\x04\xBE\xA9\xA2\xF6\x61\x02\xB7\x40\x16\x49\xB7\xAC\x00\x23\x2E\x84\x0A\x8B\x25\x2E\x86\x0A\x8B\x27\x2E\x88\x46\xB6\xB9\x93\xBD\xA9\xAF\xD4\xAC\xB6\x6D\x0A\xD7\xA3\xA4\xAF\xB6\x2A\x31\xB8\xAC\xA4\xF7\x92\xA2\xBE\xAF\xF9\x94\xAE\xBB\xAE\xED\xBB\xB1\xC1\x40\x2B\x36\xBB\xB5\xBA\xFF\x81\xAA\xC2\xAE\xE7\x6C\x06\xC1\x0B\x2E\xAE\x0E\x8B\x0B\x2E\xB0\x0E\x89\x0C\x2E\xB2\x06\xC0\xC2\x02\xEB\xBD\xC4\xC0\x1E\xFD\xB3\xBC\xC7\x01\x73\x0B\xC4\xBE\x07\xE8\xC4\xC9\xCA\xFA\xA2\xCC\xBC\x00\x34\x27\xCD\xC8\xCB\xFE\x9F\xCB\xC2\xBA\x20\xE1\x45\x0E\xCC\x35\xEE\xC3\xC0\xCD\x23\xEA\xC2\xD2\x68\x36\x3C\xC1\xD3\xCC\x2B\xC9\xD3\xD1\xCF\x40\xEF\xC7\x0E\xD1\x2F\xCA\xD8\xD3\xD2\x47\xCC\xD2\xD6\xD5\x54\xD1\xD9\xD7\xCF\x57\xD5\xDE\xD6\xD6\x53\xE2\x68\x0C\xD4\x5C\xDB\xD1\xCB\xB6\x39\x24\xD7\xDB\xCA\x3A\x2A\xD9\xCF\xCD\x09\xC9\x4B\x0E\xDB\x70\xC6\x9C\x0C\xDD\x0C",
					"\xEF\x7D\x0C\xDE\x38\xF5\xDE\xCF\xDA\x66\xEF\xD9\xDE\x41\x3E\x3C\xD4\x83\x0F\x86\xF6\xC9\x40\x10\x89\xFF\xD2\xE1\xDF\x83\xF1\xD0\xE7\xE4\x92\xD5\xE2\x41\x10\x8D\xDB\xB2\x11\xE6\x2B\xC3\x1C\xE7\x6F\x44\x1F\xE1\xD8\xD6\xA3\xDF\xD5\xD9\xE9\x2F\xC5\x12\xE8\x69\x46\x2B\xE3\xBF\x11\xAE\xE0\x6D\x2A\x42\x7B\x76\x4E\xBA\x4C\x01\xB6\xE7\xED\x4A\xB9\xE0\x75\x53\x71\x57\x72\x45\xEF\x40\xCC\x4A\xA8\xEE\x42\x2D\x97\x53\xF2\x40\xC5\xEA\xB7\xF1\x42\xC9\xFE\x5B\xF1\x40\xCD\xFB\xE6\x49\xEF\x03\x51\xFE\x6B\xF4\x00\x15\xFD\xC7\xF3\x06\x5A\xF5\x6C\xF0\x7E\x72\x44\xFA\x6B\xE6\xC5\x59\xF9\xF0\x29\x5C\xF1\x7B\xF7\xBC\xF4\xEF\xEE\xFA\xED\xF2\xF6\xF1\xFC\x09\x69\x67\x57\xF9\xB5\x42\xFA\x41\x70\xF7\x77\x7A\x77\x45\x2C\x7A\x90\x60\x7A\x77\xBD\x25\x80\x9D\x07\x8A\x77\xF5\x65\x79\x25\x00\x8F\x82\x49\x5C\x71\x82\xD7\x15\x85\x7F\xF5\x69\x22\xF7\x7F\x6C\x81\x80\x22\x7A\x37\x17\x9A\x36\xFF\x1A\x8B\x80\xFC\x61\x7D\x28\x21\x9D\x37\x08\xCB\x35\x84\x01\x90\x78\x85\xF4\x73\x82\xFD\x4E\x76\x84\xD4\x30\x84\x7D\x32\x88\x5C\x86\x1D\x80\x00\xEE\x72\x21",
					"\x85\x32\x2B\x84\xF1\x2D\x83\x24\xEC\x42\x27\x83\xBD\x20\x89\x10\xB9\x86\x20\x25\xA6\x26\x89\x4B\x9E\x20\xF7\x1B\x8D\x69\x25\x86\x8E\x83\x37\x92\x83\x48\x53\x84\x89\x8F\x17\x88\x00\x48\x9F\x85\x0C\xDB\x8A\x20\x2A\x91\x4C\x87\x61\x90\x83\x18\x9F\x2C\x7A\x1F\xBB\x85\x86\x02\x3A\x7E\x5F\x50\x81\x8B\x7F\x2E\x7D\x8B\x1E\x3F\x8A\x1B\xCF\x8B\x8C\x29\xA5\x88\x8F\x1D\x3F\x89\x1A\xDE\x4C\x86\x33\xA9\x24\x7F\x22\x8A\x8C\x0E\xE4\x89\x20\x3A\x9E\x26\x91\x4B\x9C\x89\x00\xC5\x88\x79\x2C\xA8\x79\x83\x2C\x93\x92\x17\x95\x97\x2A\x48\x81\x8A\x92\x34\x8E\x87\x09\x9D\x9D\x8F\x8E\x2D\x88\x90\xFF\x1F\x8A\x1C\x96\x85\x94\x3B\xAA\x6C\x87\x7B\x83\x26\x27\xC2\x8C\x78\x54\x82\x95\x28\xC4\x3A\x8B\x47\x08\x9A\x85\x94\x39\x97\x92\x26\x3C\x95\x1D\x9F\x2F\x96\x0C\x81\x9D\x95\xC5\x89\x93\x31\x8B\x9C\x8C\x85\x09\x9D\x8A\x41\x9F\x89\x84\x52\x78\x80\xF8\x62\x90\x81\xB4\x96\x77\x19\xF0\x8A\x9B\x43\xAD\x94\x7B\xAB\x95\x34\xF7\x4F\x99\x9A\x00\x21\x9A\x37\x14\x84\x82\x42\x67\x99\x81\x19\x96\x7C\x92\xF9\x6A\x9F\x70\x72\x9D\x88\x7A\x83\x21\x96\x35\x5C",
					"\x84\x3B\x8E\x80\x98\x46\x86\x24\x9C\x98\x83\x22\x27\xA7\x9A\x93\x3C\xAB\x9D\x28\x5F\x82\x98\x37\x80\x0A\xA1\x6B\x82\x21\x3E\x57\x3F\x88\x44\xFE\x2F\x8B\x2F\xBC\x86\xA2\x0B\xBE\x93\x17\x80\xAE\xA1\x80\x1A\xA7\x7F\x08\xAE\x99\x48\x8D\x93\xA5\x7A\x91\xA2\xA4\x27\xA4\xA7\x7B\x16\x65\x9A\x00\x2F\x79\x20\xE0\x8E\x9E\x40\x29\x89\x9C\xBD\x20\xA6\xA6\xF3\x98\xA6\x41\x3C\x95\xA7\x4C\x86\x24\x9D\x54\x89\x85\x50\xFF\x8A\xA4\x9F\x83\x27\x99\x54\x9C\x97\x50\xF1\x95\xA8\x81\xB7\xA7\x9F\xC6\x2F\xAB\x40\x5F\x33\x21\x89\x83\x22\x9A\x9C\x86\x20\x90\x06\x27\x4A\x83\x26\x49\x21\x76\x49\x21\xA3\x06\x26\x53\x84\x19\x55\xA5\xA5\x4D\xA5\x48\x1E\x1E\x45\x90\x29\xAA\xAD\x09\x3F\x12\x8B\x4F\x91\x56\xB8\x89\x20\x14\x2E\x49\x86\xB5\x2D\xAB\x9F\xDF\x2F\xA0\x00\xCD\x5C\xAF\x79\x6C\x91\x5A\xC1\xAF\x3C\x7B\xCF\x46\xB2\x7D\x74\xA6\xAF\x84\x21\x15\xAD\x0A\x23\x5D\x63\x83\x22\x14\xC8\x89\x22\xB2\x93\xA1\x23\x28\x2E\x4C\x97\x7A\x59\xB1\x20\xA4\x19\xAE\x42\x05\x6F\xB2\x00\x25\x16\x45\xEC\x8E\x61\x69\xA6\x1C\xB2\x85\x1E\xB7\xB3\xA7\x02\xB5\x42\x24",
					"\xBF\xB2\x54\x28\xB2\x21\xAA\xBF\xB1\x2A\x2D\xB9\x21\xD7\x99\xB2\x15\xB2\xA6\x20\x6D\x99\xBB\x15\xDB\x89\x21\xB7\x99\xAC\x16\x8B\x48\x0A\xAC\x4F\xB0\xAC\x37\x73\x3A\x58\x3E\xA0\x31\xA7\xF7\x0F\x76\x86\x3A\xA4\x40\x3B\xFF\xA0\xBB\xF3\x0F\x9C\xBB\x28\x74\xA7\x79\x57\xBA\x70\xA8\xA4\x86\xBA\xE7\x3C\x97\x5F\xD4\x83\xBB\xD8\x0F\x9E\xAA\x46\x4E\x48\x7C\x81\x2F\xAE\x3D\x9E\xBB\x80\xE8\xAF\x3C\x12\xFF\xAB\xAB\x7B\xB7\xB9\x21\x18\xA2\x35\x99\x2E\x41\xAC\x83\x2D\xBE\x36\x49\xA3\xBF\x79\x65\xAE\x77\xC8\x47\x21\xAA\xF9\xB6\x3F\x59\x8D\xC4\x73\x87\x90\xC6\x3E\x4E\x5C\x52\x0E\xB3\x69\xA0\x05\xEF\x3F\xAD\x03\x20\xBF\xCC\x53\x93\x21\xFE\xB1\xBF\x3C\xA8\x5A\x5B\xAA\x59\xB6\x48\x13\xD8\x89\xC2\x04\x40\x5B\x86\xCC\x6D\xAB\x81\x05\xC4\x40\x4E\x43\x5A\xB6\x46\x5C\xC4\x5B\x77\xC2\x20\x5F\xB8\xC3\x79\x4B\x53\xC7\x79\x63\xAB\x20\x13\xD8\xC7\x79\x01\xB4\xC2\xCB\x41\x21\xC9\x02\x3A\xC2\x90\x8E\xC1\x21\xC4\x86\xC7\x3C\x52\xC3\x21\x8A\xD3\xC5\xC2\xC7\x4A\x21\xCB\x02\x2B\xC4\x97\xCE\xC0\x9B\x90\x20\xCE\xA3\x1E\xD5\x5A\x8B\x59\x57\xCB\x96",
					"\xBF\xA8\xC4\x02\x3B\xCA\x92\xD4\xC5\xCC\x85\x30\xC9\x20\x62\xD3\xCD\x97\xF5\xC9\x21\x3B\xC0\x39\xCD\x04\x5F\x5A\xB6\x61\x5D\xC6\x97\xAE\x42\xCE\x02\x2C\xC2\x9E\x84\x45\x5D\x22\xEF\x61\xCF\xBF\x40\xD1\x79\xE4\xC0\xD3\x27\xD2\xD6\x56\xE7\x4D\xCE\x7D\x04\xA6\x21\x4A\xDD\x7F\xD2\xF4\x52\xA5\x40\x48\xB2\x21\x9E\xBE\xB9\x21\x9E\xD3\xBF\xB6\x4E\x42\x63\x42\xEC\xA2\xD3\x03\x3C\xA6\x42\x1E\xD4\xAB\x13\xEF\x3A\x63\x85\xD1\x65\xA1\xB5\xD0\xA7\x59\xCA\x27\xC7\xB6\x4E\x49\xD1\x05\xD3\x6D\x42\xF6\xB8\xD5\x0A\x2E\xC7\xAA\xE7\x3D\x6D\x42\xF7\x6D\xD0\x48\x9C\x7A\xA7\x81\xC4\x34\x27\x45\x75\xD0\x8C\x65\xD1\x8D\xA5\xDA\x21\xBA\x86\x22\xC6\x63\xD3\xD2\xB8\x81\x2E\xDA\x24\xE0\xD4\x37\x9B\x65\xD0\x6F\x40\xDD\x87\x6E\xC4\xA9\xDC\xB6\x41\x75\xA1\xAD\x75\xD0\x45\xDC\xD9\x21\xE5\xD6\xC0\x8C\xC6\x4C\xB9\x42\xCA\x0A\xD4\x00\x07\xCD\xBB\xF8\xD8\xBE\x78\xDB\x5C\x09\x00\xEE\x08\xC0\x88\xDD\xD6\x82\xE0\xAF\xDC\xBF\x30\x08\xC0\xD2\x00\xE1\x7C\xCD\xE0\x56\xC9\xD0\xE2\x68\x54\x00\xE0\x2B\x00\xE2\xC7\xB0\xC2\x22\xC5\x80\x04\xDA\xCE\x0E\x48\x0B",
					"\x00\xFA\x08\xC0\xC8\x51\xE5\x80\x20\xDB\x20\x3C\xC6\xE3\xCA\x5C\x00\xE0\xDE\x20\xE3\x20\xF6\xC1\xDB\x79\x5E\x09\x73\x98\xC3\x27\xE6\xB6\xDB\xCF\xCA\x2C\xE6\xDD\x7D\xF6\x57\x0B\x35\xFF\x34\x93\xA1\xC3\x23\x77\xCB\xD6\x48\x61\x00\xE3\x18\x00\xE6\xCA\xA6\xC9\x24\xE8\xFA\xD2\xE7\x6F\x65\x00\xE1\x33\x00\xE5\xB0\x4D\xC2\x20\xD6\x81\x2C\xD7\x65\xEF\x39\x0D\x00\xEB\x0C\xC0\xFB\xA1\xED\x80\x23\xE8\x00\xEC\xDD\xBB\x7B\x6D\x00\xE1\x37\x00\xE4\xCD\x56\xE6\x23\xDB\xCA\xD2\xEE\xFB\x31\x08\xE0\x73\x00\xE1\xB7\x5A\x5F\xED\x92\xE0\x36\x49\x75\x00\xE3\x1D\x00\xE2\xD1\xB6\xC0\xB2\x21\x44\xDA\xEA\x68\x79\x09\xE9\x99\x55\xEA\x20\x91\xEF\xEA\xAD\x7B\x05\xF2\xA6\x60\xEB\x20\x99\xE1\xE8\x81\x7D\x0D\xF3\x79\x6C\xE8\xF4\x1A\xE4\x37\x1F\x25\xFF\x64\xBC\xC2\x25\xF1\x9A\xFB\x59\x20\x19\x70\xF6\x81\x04\xD2\xF2\x4C\x62\x10\xEB\xB1\x37\xF7\x81\x0D\xD0\xF7\xA6\x67\x6D\xEF\xB3\xA9\xF4\xCE\x04\x16\x45\x85\x00\xE3\xF0\xF4\xB1\xB2\x85\x3F\xF1\xF6\x5D\x6F\x64\x66\xCE\xA6\xE9\x6D\x47\x16\x45\x88\x00\xE3\xF4\x82\x2F\xAF\xE7\xC2\x23\xF0\xC0\xE0\x36",
					"\x22\x19\x79\xD3\x81\x35\xF2\xE7\xEF\x2B\x13\xEE\xB6\x3E\xFA\xE6\xC9\x25\xFC\x02\x30\xC8\xFA\xF6\x3D\x11\xF5\xE1\x20\xFE\xEE\xE6\x20\xFE\xF0\xE5\xF8\xD0\x0F\x10\xE0\x91\x00\x70\xF0\x2A\x2D\xBE\x5F\x7A\xFD\x71\x1B\x93\x06\x30\x05\x89\x7F\x03\x1B\x80\x00\x02\x7F\x66\x76\x1F\x94\x06\x30\xC3\x5C\x7D\xAE\x5F\x6B\x07\x86\x1B\x95\x0E\x22\x96\x00\x70\xA4\x6C\x80\x02\x15\x81\x01\x13\x80\xE1\x71\x1B\x98\x09\x39\x1F\x80\x00\xE7\x71\x81\x04\x29\x09\x0F\x3E\x22\x29\x80\x81\x7D\x74\x20\x9A\x06\x30\xAD\x6E\x78\x29\x81\x77\xBF\x1E\x24\x9B\x0E\x22\x9C\x00\x70\x14\x3A\x2D\x10\x3D\x52\xD0\x51\x44\xA5\x57\x84\x8E\x60\x12\x22\x66\x12\x7F\x5F\x57\x86\x65\x68\x4F\x8E\x66\x07\x56\x7F\x07\x6E\x4A\x6A\x5D\x57\x2C\x18\x85\x26\x1C\x4E\x36\x1E\x5C\xB3\x49\x42\x5D\x80\x57\x60\x81\x12\x63\x82\x55\x08\x45\x86\x4D\x57\x86\x62\x80\x57\x1C\x5E\x12\x6D\x83\x12\xCF\x46\x13\x71\x81\x12\x73\x88\x52\x2D\x5D\x50\x2E\x18\x87\x23\x1C\x4B\x36\x1C\x87\x21\x1E\x87\x17\x65\x4D\x86\x4C\x12\x83\x86\x12\x54\x46\x13\x87\x81\x12\x89\x87\x84",
				};
				vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
			}

			const wchar_t* ParserRuleName(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"XAttribute",
					L"XText",
					L"XCData",
					L"XComment",
					L"XElement",
					L"XSubNode",
					L"XInstruction",
					L"XDocument",
				};
				return results[index];
			}

			const wchar_t* ParserStateLabel(vl::vint index)
			{
				static const wchar_t* results[] = {
					L"[0][XAttribute] BEGIN ",
					L"[1][XAttribute] END [ENDING]",
					L"[2][XAttribute]< NAME \"=\" @ ATTVALUE >",
					L"[3][XAttribute]< NAME \"=\" ATTVALUE @ >",
					L"[4][XAttribute]< NAME @ \"=\" ATTVALUE >",
					L"[5][XText] BEGIN ",
					L"[6][XText] END [ENDING]",
					L"[7][XText]< \"=\" @ >",
					L"[8][XText]< ATTVALUE @ >",
					L"[9][XText]< NAME @ >",
					L"[10][XText]< TEXT @ >",
					L"[11][XCData] BEGIN ",
					L"[12][XCData] END [ENDING]",
					L"[13][XCData]< CDATA @ >",
					L"[14][XComment] BEGIN ",
					L"[15][XComment] END [ENDING]",
					L"[16][XComment]< COMMENT @ >",
					L"[17][XElement] BEGIN ",
					L"[18][XElement] END [ENDING]",
					L"[19][XElement]< \"<\" @ NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[20][XElement]< \"<\" NAME @ { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[21][XElement]< \"<\" NAME { XAttribute @ } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[22][XElement]< \"<\" NAME { XAttribute } ( \"/>\" @ | \">\" { XSubNode } \"</\" NAME \">\" ) >",
					L"[23][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" @ { XSubNode } \"</\" NAME \">\" ) >",
					L"[24][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode @ } \"</\" NAME \">\" ) >",
					L"[25][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" @ NAME \">\" ) >",
					L"[26][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME \">\" @ ) >",
					L"[27][XElement]< \"<\" NAME { XAttribute } ( \"/>\" | \">\" { XSubNode } \"</\" NAME @ \">\" ) >",
					L"[28][XSubNode] BEGIN ",
					L"[29][XSubNode] END [ENDING]",
					L"[30][XSubNode]<< ( !XText @ | !XCData | !XComment | !XElement ) >>",
					L"[31][XSubNode]<< ( !XText | !XCData @ | !XComment | !XElement ) >>",
					L"[32][XSubNode]<< ( !XText | !XCData | !XComment @ | !XElement ) >>",
					L"[33][XSubNode]<< ( !XText | !XCData | !XComment | !XElement @ ) >>",
					L"[34][XInstruction] BEGIN ",
					L"[35][XInstruction] END [ENDING]",
					L"[36][XInstruction]< \"<?\" @ NAME { XAttribute } \"?>\" >",
					L"[37][XInstruction]< \"<?\" NAME @ { XAttribute } \"?>\" >",
					L"[38][XInstruction]< \"<?\" NAME { XAttribute @ } \"?>\" >",
					L"[39][XInstruction]< \"<?\" NAME { XAttribute } \"?>\" @ >",
					L"[40][XDocument] BEGIN ",
					L"[41][XDocument] END [ENDING]",
					L"[42][XDocument]< { ( XInstruction @ | XComment ) } XElement >",
					L"[43][XDocument]< { ( XInstruction | XComment ) } XElement @ >",
					L"[44][XDocument]< { ( XInstruction | XComment @ ) } XElement >",
				};
				return results[index];
			}

			const wchar_t* ParserSwitchName(vl::vint index)
			{
				return nullptr;
			}

			Parser::Parser()
				: vl::glr::ParserBase<XmlTokens, ParserStates, XmlAstInsReceiver>(&XmlTokenDeleter, &XmlLexerData, &XmlParserData)
			{
			};

			vl::vint32_t Parser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
			{
				return -1;
			};

			vl::Ptr<vl::glr::xml::XmlElement> Parser::ParseXElement(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::xml::XmlElement, ParserStates::XElement>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlElement> Parser::ParseXElement(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::xml::XmlElement, ParserStates::XElement>(tokens, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlDocument> Parser::ParseXDocument(const vl::WString& input, vl::vint codeIndex) const
			{
				 return ParseWithString<vl::glr::xml::XmlDocument, ParserStates::XDocument>(input, this, codeIndex);
			};

			vl::Ptr<vl::glr::xml::XmlDocument> Parser::ParseXDocument(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
			{
				 return ParseWithTokens<vl::glr::xml::XmlDocument, ParserStates::XDocument>(tokens, this, codeIndex);
			};
		}
	}
}
