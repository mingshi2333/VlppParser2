/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Xml
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_XML_PARSER_SYNTAX
#define VCZH_PARSER2_BUILTIN_XML_PARSER_SYNTAX

#include "Xml_Assembler.h"
#include "Xml_Lexer.h"

namespace vl
{
	namespace glr
	{
		namespace xml
		{
			enum class ParserStates
			{
				XAttribute = 0,
				XText = 5,
				XCData = 11,
				XComment = 14,
				XElement = 17,
				XSubNode = 28,
				XInstruction = 34,
				XDocument = 40,
			};

			template<ParserStates> struct ParserStateTypes;
			template<> struct ParserStateTypes<ParserStates::XElement> { using Type = vl::glr::xml::XmlElement; };
			template<> struct ParserStateTypes<ParserStates::XDocument> { using Type = vl::glr::xml::XmlDocument; };

			const wchar_t* ParserRuleName(vl::vint index);
			const wchar_t* ParserStateLabel(vl::vint index);
			extern void XmlParserData(vl::stream::IStream& outputStream);

			class Parser
				: public vl::glr::ParserBase<XmlTokens, ParserStates, XmlAstInsReceiver, ParserStateTypes>
				, protected vl::glr::automaton::TraceManager::ITypeCallback
			{
			protected:
				vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) override;
			public:
				Parser();

				vl::Ptr<vl::glr::xml::XmlElement> ParseXElement(const vl::WString & input, vl::vint codeIndex = -1);
				vl::Ptr<vl::glr::xml::XmlDocument> ParseXDocument(const vl::WString & input, vl::vint codeIndex = -1);
			};
		}
	}
}
#endif