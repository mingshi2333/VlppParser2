<[0]KEYWORD_MODULE:module> BeginObject(Module)
<[1]NAME:test> Token()
<[1]NAME:test> Field(Module::name)
<[3]KEYWORD_CLASS:class> AccumulatedDfa(2)
<[3]KEYWORD_CLASS:class> BeginObject(ClassDeclaration)
<[4]NAME:A> Token()
<[4]NAME:A> Field(Declaration::name)
<[6]KEYWORD_STATIC:static> AccumulatedDfa(2)
<[6]KEYWORD_STATIC:static> BeginObject(FunctionDeclaration)
<[7]KEYWORD_FUNC:func> EnumItem(0)
<[7]KEYWORD_FUNC:func> Field(FunctionDeclaration::functionKind)
<[8]NAME:B> Token()
<[8]NAME:B> Field(Declaration::name)
<[12]TYPE_VOID:void> BeginObject(PredefinedType)
<[12]TYPE_VOID:void> EnumItem(0)
<[12]TYPE_VOID:void> Field(PredefinedType::name)
<[12]TYPE_VOID:void> EndObject()
<[12]TYPE_VOID:void> Field(FunctionDeclaration::returnType)
<[13]OPEN_BRACE:{> DelayFieldAssignment()
<[13]OPEN_BRACE:{> BeginObject(BlockStatement)
<[14]CLOSE_BRACE:}> AccumulatedEoRo(1)
<[14]CLOSE_BRACE:}> EndObject()
<[14]CLOSE_BRACE:}> Field(FunctionDeclaration::statement)
<[14]CLOSE_BRACE:}> EnumItem(0)
<[14]CLOSE_BRACE:}> Field(FunctionDeclaration::anonymity)
<[14]CLOSE_BRACE:}> AccumulatedEoRo(2)
<[14]CLOSE_BRACE:}> EndObject()
<[14]CLOSE_BRACE:}> Field(ClassDeclaration::declarations)
<[15]KEYWORD_CLASS:class> AccumulatedDfa(2)
<[15]KEYWORD_CLASS:class> BeginObject(ClassDeclaration)
<[16]NAME:B> Token()
<[16]NAME:B> Field(Declaration::name)
<[18]CLOSE_BRACE:}> EnumItem(0)
<[18]CLOSE_BRACE:}> Field(ClassDeclaration::kind)
<[18]CLOSE_BRACE:}> EnumItem(0)
<[18]CLOSE_BRACE:}> Field(ClassDeclaration::constructorType)
<[18]CLOSE_BRACE:}> AccumulatedEoRo(2)
<[18]CLOSE_BRACE:}> EndObject()
<[18]CLOSE_BRACE:}> Field(ClassDeclaration::declarations)
<[19]CLOSE_BRACE:}> EnumItem(0)
<[19]CLOSE_BRACE:}> Field(ClassDeclaration::kind)
<[19]CLOSE_BRACE:}> EnumItem(0)
<[19]CLOSE_BRACE:}> Field(ClassDeclaration::constructorType)
<[19]CLOSE_BRACE:}> AccumulatedEoRo(2)
<[19]CLOSE_BRACE:}> EndObject()
<[19]CLOSE_BRACE:}> Field(Module::declarations)
<[19]CLOSE_BRACE:}> EnumItem(0)
<[19]CLOSE_BRACE:}> Field(Module::moduleType)
<[19]CLOSE_BRACE:}> EndObject()
