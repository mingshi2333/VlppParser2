{
    "$ast": "Module",
    "declarations": [{
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Void"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "VariableStatement",
                "variable": {
                    "$ast": "VariableDeclaration",
                    "attributes": [],
                    "name": "x",
                    "expression": {
                        "$ast": "FunctionExpression",
                        "function": {
                            "$ast": "FunctionDeclaration",
                            "attributes": [],
                            "name": "lambda",
                            "anonymity": "Named",
                            "arguments": [{
                                "$ast": "FunctionArgument",
                                "attributes": [],
                                "name": "lambda",
                                "type": {
                                    "$ast": "PredefinedType",
                                    "name": "Int"
                                }
                            }],
                            "functionKind": "Normal",
                            "returnType": {
                                "$ast": "PredefinedType",
                                "name": "Void"
                            },
                            "statement": {
                                "$ast": "BlockStatement",
                                "endLabel": "",
                                "statements": []
                            }
                        }
                    },
                    "type": null
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "test",
    "paths": []
}