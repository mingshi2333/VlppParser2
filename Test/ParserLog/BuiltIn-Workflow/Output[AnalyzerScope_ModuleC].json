{
    "$ast": "Module",
    "declarations": [{
        "$ast": "NamespaceDeclaration",
        "attributes": [],
        "name": "test",
        "declarations": [{
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "itoa",
            "anonymity": "Named",
            "arguments": [{
                "$ast": "FunctionArgument",
                "attributes": [],
                "name": "input",
                "type": {
                    "$ast": "PredefinedType",
                    "name": "Int"
                }
            }],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "String"
            },
            "statement": {
                "$ast": "BlockStatement",
                "endLabel": "",
                "statements": [{
                    "$ast": "ReturnStatement",
                    "expression": {
                        "$ast": "TypeCastingExpression",
                        "expression": {
                            "$ast": "ReferenceExpression",
                            "name": "input"
                        },
                        "strategy": "Strong",
                        "type": {
                            "$ast": "PredefinedType",
                            "name": "String"
                        }
                    }
                }]
            }
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "ftoa",
            "anonymity": "Named",
            "arguments": [{
                "$ast": "FunctionArgument",
                "attributes": [],
                "name": "input",
                "type": {
                    "$ast": "PredefinedType",
                    "name": "Float"
                }
            }],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "String"
            },
            "statement": {
                "$ast": "BlockStatement",
                "endLabel": "",
                "statements": [{
                    "$ast": "ReturnStatement",
                    "expression": {
                        "$ast": "TypeCastingExpression",
                        "expression": {
                            "$ast": "ReferenceExpression",
                            "name": "input"
                        },
                        "strategy": "Strong",
                        "type": {
                            "$ast": "PredefinedType",
                            "name": "String"
                        }
                    }
                }]
            }
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "dtoa",
            "anonymity": "Named",
            "arguments": [{
                "$ast": "FunctionArgument",
                "attributes": [],
                "name": "input",
                "type": {
                    "$ast": "PredefinedType",
                    "name": "Double"
                }
            }],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "String"
            },
            "statement": {
                "$ast": "BlockStatement",
                "endLabel": "",
                "statements": [{
                    "$ast": "ReturnStatement",
                    "expression": {
                        "$ast": "TypeCastingExpression",
                        "expression": {
                            "$ast": "ReferenceExpression",
                            "name": "input"
                        },
                        "strategy": "Strong",
                        "type": {
                            "$ast": "PredefinedType",
                            "name": "String"
                        }
                    }
                }]
            }
        }]
    }],
    "moduleType": "Unit",
    "name": "Builders",
    "paths": []
}