{
    "$ast": "Module",
    "declarations": [{
        "$ast": "ClassDeclaration",
        "attributes": [],
        "name": "OuterClass2",
        "baseTypes": [],
        "constructorType": "Undefined",
        "declarations": [{
            "$ast": "ClassDeclaration",
            "attributes": [],
            "name": "Base2",
            "baseTypes": [],
            "constructorType": "Undefined",
            "declarations": [{
                "$ast": "VariableDeclaration",
                "attributes": [],
                "name": "subscription",
                "expression": {
                    "$ast": "LiteralExpression",
                    "value": "Null"
                },
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "Subscription"
                    }
                }
            }, {
                "$ast": "VariableDeclaration",
                "attributes": [],
                "name": "s",
                "expression": {
                    "$ast": "StringExpression",
                    "value": "\"\""
                },
                "type": {
                    "$ast": "PredefinedType",
                    "name": "String"
                }
            }, {
                "$ast": "FunctionDeclaration",
                "attributes": [],
                "name": "Initialize",
                "anonymity": "Named",
                "arguments": [{
                    "$ast": "FunctionArgument",
                    "attributes": [],
                    "name": "derived",
                    "type": {
                        "$ast": "RawPointerType",
                        "element": {
                            "$ast": "ReferenceType",
                            "name": "Derived2"
                        }
                    }
                }],
                "functionKind": "Normal",
                "returnType": {
                    "$ast": "PredefinedType",
                    "name": "Void"
                },
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "BinaryExpression",
                            "first": {
                                "$ast": "ReferenceExpression",
                                "name": "subscription"
                            },
                            "op": "Assign",
                            "second": {
                                "$ast": "BindExpression",
                                "expandedExpression": null,
                                "expression": {
                                    "$ast": "BinaryExpression",
                                    "first": {
                                        "$ast": "BinaryExpression",
                                        "first": {
                                            "$ast": "ObserveExpression",
                                            "events": [{
                                                "$ast": "ReferenceExpression",
                                                "name": "ValueChanged"
                                            }],
                                            "expression": {
                                                "$ast": "ReferenceExpression",
                                                "name": "Value"
                                            },
                                            "name": "",
                                            "observeType": "SimpleObserve",
                                            "parent": {
                                                "$ast": "MemberExpression",
                                                "name": "x",
                                                "parent": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "derived"
                                                }
                                            }
                                        },
                                        "op": "Add",
                                        "second": {
                                            "$ast": "ObserveExpression",
                                            "events": [{
                                                "$ast": "ReferenceExpression",
                                                "name": "ValueChanged"
                                            }],
                                            "expression": {
                                                "$ast": "ReferenceExpression",
                                                "name": "Value"
                                            },
                                            "name": "",
                                            "observeType": "SimpleObserve",
                                            "parent": {
                                                "$ast": "MemberExpression",
                                                "name": "y",
                                                "parent": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "derived"
                                                }
                                            }
                                        }
                                    },
                                    "op": "Add",
                                    "second": {
                                        "$ast": "ObserveExpression",
                                        "events": [{
                                            "$ast": "ReferenceExpression",
                                            "name": "ValueChanged"
                                        }],
                                        "expression": {
                                            "$ast": "ReferenceExpression",
                                            "name": "Value"
                                        },
                                        "name": "",
                                        "observeType": "SimpleObserve",
                                        "parent": {
                                            "$ast": "MemberExpression",
                                            "name": "z",
                                            "parent": {
                                                "$ast": "ReferenceExpression",
                                                "name": "derived"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }, {
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [],
                            "function": {
                                "$ast": "MemberExpression",
                                "name": "Open",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "subscription"
                                }
                            }
                        }
                    }, {
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "AttachEventExpression",
                            "event": {
                                "$ast": "MemberExpression",
                                "name": "ValueChanged",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "subscription"
                                }
                            },
                            "function": {
                                "$ast": "FunctionExpression",
                                "function": {
                                    "$ast": "FunctionDeclaration",
                                    "attributes": [],
                                    "name": "",
                                    "anonymity": "Anonymous",
                                    "arguments": [{
                                        "$ast": "FunctionArgument",
                                        "attributes": [],
                                        "name": "value",
                                        "type": {
                                            "$ast": "PredefinedType",
                                            "name": "Object"
                                        }
                                    }],
                                    "functionKind": "Normal",
                                    "returnType": {
                                        "$ast": "PredefinedType",
                                        "name": "Void"
                                    },
                                    "statement": {
                                        "$ast": "BlockStatement",
                                        "endLabel": "",
                                        "statements": [{
                                            "$ast": "ExpressionStatement",
                                            "expression": {
                                                "$ast": "BinaryExpression",
                                                "first": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "s"
                                                },
                                                "op": "Assign",
                                                "second": {
                                                    "$ast": "FormatExpression",
                                                    "expandedExpression": null,
                                                    "value": "$\"$(s)[$(cast int value)]\""
                                                }
                                            }
                                        }]
                                    }
                                }
                            }
                        }
                    }]
                }
            }],
            "kind": "Class"
        }],
        "kind": "Class"
    }, {
        "$ast": "ClassDeclaration",
        "attributes": [{
            "$ast": "Attribute",
            "category": "cpp",
            "name": "Friend",
            "value": {
                "$ast": "TypeOfTypeExpression",
                "type": {
                    "$ast": "ReferenceType",
                    "name": "OuterClass2"
                }
            }
        }],
        "name": "Derived2",
        "baseTypes": [{
            "$ast": "ChildType",
            "name": "Base2",
            "parent": {
                "$ast": "ReferenceType",
                "name": "OuterClass2"
            }
        }],
        "constructorType": "Undefined",
        "declarations": [{
            "$ast": "VariableDeclaration",
            "attributes": [{
                "$ast": "Attribute",
                "category": "cpp",
                "name": "Protected",
                "value": null
            }],
            "name": "x",
            "expression": {
                "$ast": "NewClassExpression",
                "arguments": [],
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "ObservableValue"
                    }
                }
            },
            "type": {
                "$ast": "SharedPointerType",
                "element": {
                    "$ast": "ReferenceType",
                    "name": "ObservableValue"
                }
            }
        }, {
            "$ast": "VariableDeclaration",
            "attributes": [{
                "$ast": "Attribute",
                "category": "cpp",
                "name": "Protected",
                "value": null
            }],
            "name": "y",
            "expression": {
                "$ast": "NewClassExpression",
                "arguments": [],
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "ObservableValue"
                    }
                }
            },
            "type": {
                "$ast": "SharedPointerType",
                "element": {
                    "$ast": "ReferenceType",
                    "name": "ObservableValue"
                }
            }
        }, {
            "$ast": "VariableDeclaration",
            "attributes": [{
                "$ast": "Attribute",
                "category": "cpp",
                "name": "Protected",
                "value": null
            }],
            "name": "z",
            "expression": {
                "$ast": "NewClassExpression",
                "arguments": [],
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "ObservableValue"
                    }
                }
            },
            "type": {
                "$ast": "SharedPointerType",
                "element": {
                    "$ast": "ReferenceType",
                    "name": "ObservableValue"
                }
            }
        }, {
            "$ast": "ConstructorDeclaration",
            "attributes": [],
            "name": "",
            "arguments": [],
            "baseConstructorCalls": [],
            "constructorType": "SharedPtr",
            "statement": {
                "$ast": "BlockStatement",
                "endLabel": "",
                "statements": [{
                    "$ast": "ExpressionStatement",
                    "expression": {
                        "$ast": "CallExpression",
                        "arguments": [{
                            "$ast": "ThisExpression"
                        }],
                        "function": {
                            "$ast": "ReferenceExpression",
                            "name": "Initialize"
                        }
                    }
                }]
            }
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "Execute",
            "anonymity": "Named",
            "arguments": [],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "Void"
            },
            "statement": {
                "$ast": "BlockStatement",
                "endLabel": "",
                "statements": [{
                    "$ast": "ExpressionStatement",
                    "expression": {
                        "$ast": "BinaryExpression",
                        "first": {
                            "$ast": "MemberExpression",
                            "name": "Value",
                            "parent": {
                                "$ast": "ReferenceExpression",
                                "name": "x"
                            }
                        },
                        "op": "Assign",
                        "second": {
                            "$ast": "IntegerExpression",
                            "value": "10"
                        }
                    }
                }, {
                    "$ast": "ExpressionStatement",
                    "expression": {
                        "$ast": "BinaryExpression",
                        "first": {
                            "$ast": "MemberExpression",
                            "name": "Value",
                            "parent": {
                                "$ast": "ReferenceExpression",
                                "name": "y"
                            }
                        },
                        "op": "Assign",
                        "second": {
                            "$ast": "IntegerExpression",
                            "value": "20"
                        }
                    }
                }, {
                    "$ast": "ExpressionStatement",
                    "expression": {
                        "$ast": "BinaryExpression",
                        "first": {
                            "$ast": "MemberExpression",
                            "name": "Value",
                            "parent": {
                                "$ast": "ReferenceExpression",
                                "name": "z"
                            }
                        },
                        "op": "Assign",
                        "second": {
                            "$ast": "IntegerExpression",
                            "value": "30"
                        }
                    }
                }, {
                    "$ast": "ExpressionStatement",
                    "expression": {
                        "$ast": "CallExpression",
                        "arguments": [],
                        "function": {
                            "$ast": "MemberExpression",
                            "name": "Close",
                            "parent": {
                                "$ast": "ReferenceExpression",
                                "name": "subscription"
                            }
                        }
                    }
                }]
            }
        }],
        "kind": "Class"
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "String"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "VariableStatement",
                "variable": {
                    "$ast": "VariableDeclaration",
                    "attributes": [],
                    "name": "derived",
                    "expression": {
                        "$ast": "NewClassExpression",
                        "arguments": [],
                        "type": {
                            "$ast": "SharedPointerType",
                            "element": {
                                "$ast": "ReferenceType",
                                "name": "Derived2"
                            }
                        }
                    },
                    "type": null
                }
            }, {
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "CallExpression",
                    "arguments": [],
                    "function": {
                        "$ast": "MemberExpression",
                        "name": "Execute",
                        "parent": {
                            "$ast": "ReferenceExpression",
                            "name": "derived"
                        }
                    }
                }
            }, {
                "$ast": "ReturnStatement",
                "expression": {
                    "$ast": "MemberExpression",
                    "name": "s",
                    "parent": {
                        "$ast": "ReferenceExpression",
                        "name": "derived"
                    }
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "test",
    "paths": [{
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "test"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }, {
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "system"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }]
}