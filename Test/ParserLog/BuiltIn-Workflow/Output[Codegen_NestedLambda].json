{
    "$ast": "Module",
    "declarations": [{
        "$ast": "ClassDeclaration",
        "attributes": [],
        "name": "IA",
        "baseTypes": [],
        "constructorType": "SharedPtr",
        "declarations": [{
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "GetA",
            "anonymity": "Named",
            "arguments": [],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "Int"
            },
            "statement": null
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "SetA",
            "anonymity": "Named",
            "arguments": [{
                "$ast": "FunctionArgument",
                "attributes": [],
                "name": "value",
                "type": {
                    "$ast": "PredefinedType",
                    "name": "Int"
                }
            }],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "Void"
            },
            "statement": null
        }, {
            "$ast": "EventDeclaration",
            "attributes": [],
            "name": "AChanged",
            "arguments": []
        }, {
            "$ast": "PropertyDeclaration",
            "attributes": [],
            "name": "A",
            "getter": "GetA",
            "setter": "SetA",
            "type": {
                "$ast": "PredefinedType",
                "name": "Int"
            },
            "valueChangedEvent": "AChanged"
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "Calculate",
            "anonymity": "Named",
            "arguments": [],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "String"
            },
            "statement": null
        }],
        "kind": "Interface"
    }, {
        "$ast": "ClassDeclaration",
        "attributes": [],
        "name": "IB",
        "baseTypes": [],
        "constructorType": "SharedPtr",
        "declarations": [{
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "GetB",
            "anonymity": "Named",
            "arguments": [],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "Int"
            },
            "statement": null
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "SetB",
            "anonymity": "Named",
            "arguments": [{
                "$ast": "FunctionArgument",
                "attributes": [],
                "name": "value",
                "type": {
                    "$ast": "PredefinedType",
                    "name": "Int"
                }
            }],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "Void"
            },
            "statement": null
        }, {
            "$ast": "EventDeclaration",
            "attributes": [],
            "name": "BChanged",
            "arguments": []
        }, {
            "$ast": "PropertyDeclaration",
            "attributes": [],
            "name": "B",
            "getter": "GetB",
            "setter": "SetB",
            "type": {
                "$ast": "PredefinedType",
                "name": "Int"
            },
            "valueChangedEvent": "BChanged"
        }, {
            "$ast": "FunctionDeclaration",
            "attributes": [],
            "name": "Calculate",
            "anonymity": "Named",
            "arguments": [],
            "functionKind": "Normal",
            "returnType": {
                "$ast": "PredefinedType",
                "name": "String"
            },
            "statement": null
        }],
        "kind": "Interface"
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "String"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "ReturnStatement",
                "expression": {
                    "$ast": "CallExpression",
                    "arguments": [],
                    "function": {
                        "$ast": "MemberExpression",
                        "name": "Calculate",
                        "parent": {
                            "$ast": "NewInterfaceExpression",
                            "declarations": [{
                                "$ast": "VariableDeclaration",
                                "attributes": [],
                                "name": "a",
                                "expression": {
                                    "$ast": "IntegerExpression",
                                    "value": "0"
                                },
                                "type": null
                            }, {
                                "$ast": "FunctionDeclaration",
                                "attributes": [],
                                "name": "GetA",
                                "anonymity": "Named",
                                "arguments": [],
                                "functionKind": "Override",
                                "returnType": {
                                    "$ast": "PredefinedType",
                                    "name": "Int"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "ReferenceExpression",
                                            "name": "a"
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "FunctionDeclaration",
                                "attributes": [],
                                "name": "SetA",
                                "anonymity": "Named",
                                "arguments": [{
                                    "$ast": "FunctionArgument",
                                    "attributes": [],
                                    "name": "value",
                                    "type": {
                                        "$ast": "PredefinedType",
                                        "name": "Int"
                                    }
                                }],
                                "functionKind": "Override",
                                "returnType": {
                                    "$ast": "PredefinedType",
                                    "name": "Void"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "a"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "ReferenceExpression",
                                                "name": "value"
                                            }
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "CallExpression",
                                            "arguments": [],
                                            "function": {
                                                "$ast": "ReferenceExpression",
                                                "name": "AChanged"
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "FunctionDeclaration",
                                "attributes": [],
                                "name": "H",
                                "anonymity": "Named",
                                "arguments": [],
                                "functionKind": "Normal",
                                "returnType": {
                                    "$ast": "PredefinedType",
                                    "name": "String"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "CallExpression",
                                            "arguments": [],
                                            "function": {
                                                "$ast": "OrderedLambdaExpression",
                                                "body": {
                                                    "$ast": "CallExpression",
                                                    "arguments": [],
                                                    "function": {
                                                        "$ast": "MemberExpression",
                                                        "name": "Calculate",
                                                        "parent": {
                                                            "$ast": "NewInterfaceExpression",
                                                            "declarations": [{
                                                                "$ast": "VariableDeclaration",
                                                                "attributes": [],
                                                                "name": "b",
                                                                "expression": {
                                                                    "$ast": "IntegerExpression",
                                                                    "value": "0"
                                                                },
                                                                "type": null
                                                            }, {
                                                                "$ast": "FunctionDeclaration",
                                                                "attributes": [],
                                                                "name": "GetB",
                                                                "anonymity": "Named",
                                                                "arguments": [],
                                                                "functionKind": "Override",
                                                                "returnType": {
                                                                    "$ast": "PredefinedType",
                                                                    "name": "Int"
                                                                },
                                                                "statement": {
                                                                    "$ast": "BlockStatement",
                                                                    "endLabel": "",
                                                                    "statements": [{
                                                                        "$ast": "ReturnStatement",
                                                                        "expression": {
                                                                            "$ast": "ReferenceExpression",
                                                                            "name": "b"
                                                                        }
                                                                    }]
                                                                }
                                                            }, {
                                                                "$ast": "FunctionDeclaration",
                                                                "attributes": [],
                                                                "name": "SetB",
                                                                "anonymity": "Named",
                                                                "arguments": [{
                                                                    "$ast": "FunctionArgument",
                                                                    "attributes": [],
                                                                    "name": "value",
                                                                    "type": {
                                                                        "$ast": "PredefinedType",
                                                                        "name": "Int"
                                                                    }
                                                                }],
                                                                "functionKind": "Override",
                                                                "returnType": {
                                                                    "$ast": "PredefinedType",
                                                                    "name": "Void"
                                                                },
                                                                "statement": {
                                                                    "$ast": "BlockStatement",
                                                                    "endLabel": "",
                                                                    "statements": [{
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "b"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "value"
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "CallExpression",
                                                                            "arguments": [],
                                                                            "function": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "BChanged"
                                                                            }
                                                                        }
                                                                    }]
                                                                }
                                                            }, {
                                                                "$ast": "FunctionDeclaration",
                                                                "attributes": [],
                                                                "name": "H",
                                                                "anonymity": "Named",
                                                                "arguments": [],
                                                                "functionKind": "Normal",
                                                                "returnType": {
                                                                    "$ast": "PredefinedType",
                                                                    "name": "String"
                                                                },
                                                                "statement": {
                                                                    "$ast": "BlockStatement",
                                                                    "endLabel": "",
                                                                    "statements": [{
                                                                        "$ast": "ReturnStatement",
                                                                        "expression": {
                                                                            "$ast": "FormatExpression",
                                                                            "expandedExpression": null,
                                                                            "value": "$\"[$(A), $(B)]\""
                                                                        }
                                                                    }]
                                                                }
                                                            }, {
                                                                "$ast": "FunctionDeclaration",
                                                                "attributes": [],
                                                                "name": "Calculate",
                                                                "anonymity": "Named",
                                                                "arguments": [],
                                                                "functionKind": "Override",
                                                                "returnType": {
                                                                    "$ast": "PredefinedType",
                                                                    "name": "String"
                                                                },
                                                                "statement": {
                                                                    "$ast": "BlockStatement",
                                                                    "endLabel": "",
                                                                    "statements": [{
                                                                        "$ast": "VariableStatement",
                                                                        "variable": {
                                                                            "$ast": "VariableDeclaration",
                                                                            "attributes": [],
                                                                            "name": "f",
                                                                            "expression": {
                                                                                "$ast": "OrderedLambdaExpression",
                                                                                "body": {
                                                                                    "$ast": "BinaryExpression",
                                                                                    "first": {
                                                                                        "$ast": "CallExpression",
                                                                                        "arguments": [],
                                                                                        "function": {
                                                                                            "$ast": "FunctionExpression",
                                                                                            "function": {
                                                                                                "$ast": "FunctionDeclaration",
                                                                                                "attributes": [],
                                                                                                "name": "",
                                                                                                "anonymity": "Anonymous",
                                                                                                "arguments": [],
                                                                                                "functionKind": "Normal",
                                                                                                "returnType": {
                                                                                                    "$ast": "PredefinedType",
                                                                                                    "name": "Int"
                                                                                                },
                                                                                                "statement": {
                                                                                                    "$ast": "BlockStatement",
                                                                                                    "endLabel": "",
                                                                                                    "statements": [{
                                                                                                        "$ast": "ReturnStatement",
                                                                                                        "expression": {
                                                                                                            "$ast": "ReferenceExpression",
                                                                                                            "name": "A"
                                                                                                        }
                                                                                                    }]
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "op": "Add",
                                                                                    "second": {
                                                                                        "$ast": "ReferenceExpression",
                                                                                        "name": "B"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "type": null
                                                                        }
                                                                    }, {
                                                                        "$ast": "VariableStatement",
                                                                        "variable": {
                                                                            "$ast": "VariableDeclaration",
                                                                            "attributes": [],
                                                                            "name": "g",
                                                                            "expression": {
                                                                                "$ast": "FunctionExpression",
                                                                                "function": {
                                                                                    "$ast": "FunctionDeclaration",
                                                                                    "attributes": [],
                                                                                    "name": "",
                                                                                    "anonymity": "Anonymous",
                                                                                    "arguments": [],
                                                                                    "functionKind": "Normal",
                                                                                    "returnType": {
                                                                                        "$ast": "PredefinedType",
                                                                                        "name": "Int"
                                                                                    },
                                                                                    "statement": {
                                                                                        "$ast": "BlockStatement",
                                                                                        "endLabel": "",
                                                                                        "statements": [{
                                                                                            "$ast": "ReturnStatement",
                                                                                            "expression": {
                                                                                                "$ast": "BinaryExpression",
                                                                                                "first": {
                                                                                                    "$ast": "CallExpression",
                                                                                                    "arguments": [],
                                                                                                    "function": {
                                                                                                        "$ast": "OrderedLambdaExpression",
                                                                                                        "body": {
                                                                                                            "$ast": "ReferenceExpression",
                                                                                                            "name": "A"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "op": "Add",
                                                                                                "second": {
                                                                                                    "$ast": "ReferenceExpression",
                                                                                                    "name": "B"
                                                                                                }
                                                                                            }
                                                                                        }]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "type": null
                                                                        }
                                                                    }, {
                                                                        "$ast": "VariableStatement",
                                                                        "variable": {
                                                                            "$ast": "VariableDeclaration",
                                                                            "attributes": [],
                                                                            "name": "h",
                                                                            "expression": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "H"
                                                                            },
                                                                            "type": null
                                                                        }
                                                                    }, {
                                                                        "$ast": "VariableStatement",
                                                                        "variable": {
                                                                            "$ast": "VariableDeclaration",
                                                                            "attributes": [],
                                                                            "name": "s",
                                                                            "expression": {
                                                                                "$ast": "StringExpression",
                                                                                "value": "\"\""
                                                                            },
                                                                            "type": null
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "b"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "IntegerExpression",
                                                                                "value": "1"
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "s"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "BinaryExpression",
                                                                                "first": {
                                                                                    "$ast": "ReferenceExpression",
                                                                                    "name": "s"
                                                                                },
                                                                                "op": "FlagAnd",
                                                                                "second": {
                                                                                    "$ast": "FormatExpression",
                                                                                    "expandedExpression": null,
                                                                                    "value": "$\"[$(f())]\""
                                                                                }
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "B"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "IntegerExpression",
                                                                                "value": "2"
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "s"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "BinaryExpression",
                                                                                "first": {
                                                                                    "$ast": "ReferenceExpression",
                                                                                    "name": "s"
                                                                                },
                                                                                "op": "FlagAnd",
                                                                                "second": {
                                                                                    "$ast": "FormatExpression",
                                                                                    "expandedExpression": null,
                                                                                    "value": "$\"[$(g())]\""
                                                                                }
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "B"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "BinaryExpression",
                                                                                "first": {
                                                                                    "$ast": "ReferenceExpression",
                                                                                    "name": "B"
                                                                                },
                                                                                "op": "Add",
                                                                                "second": {
                                                                                    "$ast": "IntegerExpression",
                                                                                    "value": "10"
                                                                                }
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ExpressionStatement",
                                                                        "expression": {
                                                                            "$ast": "BinaryExpression",
                                                                            "first": {
                                                                                "$ast": "ReferenceExpression",
                                                                                "name": "s"
                                                                            },
                                                                            "op": "Assign",
                                                                            "second": {
                                                                                "$ast": "BinaryExpression",
                                                                                "first": {
                                                                                    "$ast": "ReferenceExpression",
                                                                                    "name": "s"
                                                                                },
                                                                                "op": "FlagAnd",
                                                                                "second": {
                                                                                    "$ast": "FormatExpression",
                                                                                    "expandedExpression": null,
                                                                                    "value": "$\"[$(h())]\""
                                                                                }
                                                                            }
                                                                        }
                                                                    }, {
                                                                        "$ast": "ReturnStatement",
                                                                        "expression": {
                                                                            "$ast": "ReferenceExpression",
                                                                            "name": "s"
                                                                        }
                                                                    }]
                                                                }
                                                            }],
                                                            "type": {
                                                                "$ast": "SharedPointerType",
                                                                "element": {
                                                                    "$ast": "ReferenceType",
                                                                    "name": "IB"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "FunctionDeclaration",
                                "attributes": [],
                                "name": "Calculate",
                                "anonymity": "Named",
                                "arguments": [],
                                "functionKind": "Override",
                                "returnType": {
                                    "$ast": "PredefinedType",
                                    "name": "String"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "VariableStatement",
                                        "variable": {
                                            "$ast": "VariableDeclaration",
                                            "attributes": [],
                                            "name": "f",
                                            "expression": {
                                                "$ast": "OrderedLambdaExpression",
                                                "body": {
                                                    "$ast": "CallExpression",
                                                    "arguments": [],
                                                    "function": {
                                                        "$ast": "FunctionExpression",
                                                        "function": {
                                                            "$ast": "FunctionDeclaration",
                                                            "attributes": [],
                                                            "name": "",
                                                            "anonymity": "Anonymous",
                                                            "arguments": [],
                                                            "functionKind": "Normal",
                                                            "returnType": {
                                                                "$ast": "PredefinedType",
                                                                "name": "Int"
                                                            },
                                                            "statement": {
                                                                "$ast": "BlockStatement",
                                                                "endLabel": "",
                                                                "statements": [{
                                                                    "$ast": "ReturnStatement",
                                                                    "expression": {
                                                                        "$ast": "ReferenceExpression",
                                                                        "name": "A"
                                                                    }
                                                                }]
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "type": null
                                        }
                                    }, {
                                        "$ast": "VariableStatement",
                                        "variable": {
                                            "$ast": "VariableDeclaration",
                                            "attributes": [],
                                            "name": "g",
                                            "expression": {
                                                "$ast": "FunctionExpression",
                                                "function": {
                                                    "$ast": "FunctionDeclaration",
                                                    "attributes": [],
                                                    "name": "",
                                                    "anonymity": "Anonymous",
                                                    "arguments": [],
                                                    "functionKind": "Normal",
                                                    "returnType": {
                                                        "$ast": "PredefinedType",
                                                        "name": "Int"
                                                    },
                                                    "statement": {
                                                        "$ast": "BlockStatement",
                                                        "endLabel": "",
                                                        "statements": [{
                                                            "$ast": "ReturnStatement",
                                                            "expression": {
                                                                "$ast": "CallExpression",
                                                                "arguments": [],
                                                                "function": {
                                                                    "$ast": "OrderedLambdaExpression",
                                                                    "body": {
                                                                        "$ast": "ReferenceExpression",
                                                                        "name": "A"
                                                                    }
                                                                }
                                                            }
                                                        }]
                                                    }
                                                }
                                            },
                                            "type": null
                                        }
                                    }, {
                                        "$ast": "VariableStatement",
                                        "variable": {
                                            "$ast": "VariableDeclaration",
                                            "attributes": [],
                                            "name": "h",
                                            "expression": {
                                                "$ast": "ReferenceExpression",
                                                "name": "H"
                                            },
                                            "type": null
                                        }
                                    }, {
                                        "$ast": "VariableStatement",
                                        "variable": {
                                            "$ast": "VariableDeclaration",
                                            "attributes": [],
                                            "name": "s",
                                            "expression": {
                                                "$ast": "StringExpression",
                                                "value": "\"\""
                                            },
                                            "type": null
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "a"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "IntegerExpression",
                                                "value": "1"
                                            }
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "s"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "BinaryExpression",
                                                "first": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "s"
                                                },
                                                "op": "FlagAnd",
                                                "second": {
                                                    "$ast": "FormatExpression",
                                                    "expandedExpression": null,
                                                    "value": "$\"[$(f())]\""
                                                }
                                            }
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "A"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "IntegerExpression",
                                                "value": "2"
                                            }
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "s"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "BinaryExpression",
                                                "first": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "s"
                                                },
                                                "op": "FlagAnd",
                                                "second": {
                                                    "$ast": "FormatExpression",
                                                    "expandedExpression": null,
                                                    "value": "$\"[$(g())]\""
                                                }
                                            }
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "A"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "BinaryExpression",
                                                "first": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "A"
                                                },
                                                "op": "Add",
                                                "second": {
                                                    "$ast": "IntegerExpression",
                                                    "value": "1"
                                                }
                                            }
                                        }
                                    }, {
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "s"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "BinaryExpression",
                                                "first": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "s"
                                                },
                                                "op": "FlagAnd",
                                                "second": {
                                                    "$ast": "FormatExpression",
                                                    "expandedExpression": null,
                                                    "value": "$\"[$(h())]\""
                                                }
                                            }
                                        }
                                    }, {
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "ReferenceExpression",
                                            "name": "s"
                                        }
                                    }]
                                }
                            }],
                            "type": {
                                "$ast": "SharedPointerType",
                                "element": {
                                    "$ast": "ReferenceType",
                                    "name": "IA"
                                }
                            }
                        }
                    }
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "test",
    "paths": []
}