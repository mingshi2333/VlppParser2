{
    "$ast": "Module",
    "declarations": [{
        "$ast": "VariableDeclaration",
        "attributes": [],
        "name": "sum",
        "expression": {
            "$ast": "IntegerExpression",
            "value": "0"
        },
        "type": null
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "test1",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Void"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "ForEachStatement",
                "expandedStatement": null,
                "collection": {
                    "$ast": "RangeExpression",
                    "begin": {
                        "$ast": "IntegerExpression",
                        "value": "1"
                    },
                    "beginBoundary": "Inclusive",
                    "end": {
                        "$ast": "IntegerExpression",
                        "value": "5"
                    },
                    "endBoundary": "Inclusive"
                },
                "direction": "Normal",
                "name": "x",
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "CONTINUE",
                    "statements": [{
                        "$ast": "TryStatement",
                        "catchStatement": null,
                        "finallyStatement": {
                            "$ast": "BlockStatement",
                            "endLabel": "",
                            "statements": [{
                                "$ast": "ExpressionStatement",
                                "expression": {
                                    "$ast": "BinaryExpression",
                                    "first": {
                                        "$ast": "ReferenceExpression",
                                        "name": "sum"
                                    },
                                    "op": "Assign",
                                    "second": {
                                        "$ast": "BinaryExpression",
                                        "first": {
                                            "$ast": "ReferenceExpression",
                                            "name": "sum"
                                        },
                                        "op": "Add",
                                        "second": {
                                            "$ast": "IntegerExpression",
                                            "value": "1"
                                        }
                                    }
                                }
                            }]
                        },
                        "name": "",
                        "protectedStatement": {
                            "$ast": "BlockStatement",
                            "endLabel": "",
                            "statements": [{
                                "$ast": "GotoStatement",
                                "label": "CONTINUE"
                            }]
                        }
                    }]
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "test2",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Void"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "BREAK",
            "statements": [{
                "$ast": "ForEachStatement",
                "expandedStatement": null,
                "collection": {
                    "$ast": "RangeExpression",
                    "begin": {
                        "$ast": "IntegerExpression",
                        "value": "1"
                    },
                    "beginBoundary": "Inclusive",
                    "end": {
                        "$ast": "IntegerExpression",
                        "value": "5"
                    },
                    "endBoundary": "Inclusive"
                },
                "direction": "Normal",
                "name": "x",
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "TryStatement",
                        "catchStatement": null,
                        "finallyStatement": {
                            "$ast": "BlockStatement",
                            "endLabel": "",
                            "statements": [{
                                "$ast": "ExpressionStatement",
                                "expression": {
                                    "$ast": "BinaryExpression",
                                    "first": {
                                        "$ast": "ReferenceExpression",
                                        "name": "sum"
                                    },
                                    "op": "Assign",
                                    "second": {
                                        "$ast": "BinaryExpression",
                                        "first": {
                                            "$ast": "ReferenceExpression",
                                            "name": "sum"
                                        },
                                        "op": "Add",
                                        "second": {
                                            "$ast": "IntegerExpression",
                                            "value": "10"
                                        }
                                    }
                                }
                            }]
                        },
                        "name": "",
                        "protectedStatement": {
                            "$ast": "BlockStatement",
                            "endLabel": "",
                            "statements": [{
                                "$ast": "GotoStatement",
                                "label": "BREAK"
                            }]
                        }
                    }]
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "test3",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Void"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "RETURN",
            "statements": [{
                "$ast": "TryStatement",
                "catchStatement": null,
                "finallyStatement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "BinaryExpression",
                            "first": {
                                "$ast": "ReferenceExpression",
                                "name": "sum"
                            },
                            "op": "Assign",
                            "second": {
                                "$ast": "BinaryExpression",
                                "first": {
                                    "$ast": "ReferenceExpression",
                                    "name": "sum"
                                },
                                "op": "Add",
                                "second": {
                                    "$ast": "IntegerExpression",
                                    "value": "100"
                                }
                            }
                        }
                    }]
                },
                "name": "",
                "protectedStatement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "GotoStatement",
                        "label": "RETURN"
                    }]
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "test4",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Void"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "RETURN",
            "statements": [{
                "$ast": "TryStatement",
                "catchStatement": null,
                "finallyStatement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "BinaryExpression",
                            "first": {
                                "$ast": "ReferenceExpression",
                                "name": "sum"
                            },
                            "op": "Assign",
                            "second": {
                                "$ast": "BinaryExpression",
                                "first": {
                                    "$ast": "ReferenceExpression",
                                    "name": "sum"
                                },
                                "op": "Add",
                                "second": {
                                    "$ast": "IntegerExpression",
                                    "value": "1000"
                                }
                            }
                        }
                    }]
                },
                "name": "",
                "protectedStatement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "TryStatement",
                        "catchStatement": null,
                        "finallyStatement": {
                            "$ast": "BlockStatement",
                            "endLabel": "",
                            "statements": [{
                                "$ast": "ExpressionStatement",
                                "expression": {
                                    "$ast": "BinaryExpression",
                                    "first": {
                                        "$ast": "ReferenceExpression",
                                        "name": "sum"
                                    },
                                    "op": "Assign",
                                    "second": {
                                        "$ast": "BinaryExpression",
                                        "first": {
                                            "$ast": "ReferenceExpression",
                                            "name": "sum"
                                        },
                                        "op": "Add",
                                        "second": {
                                            "$ast": "IntegerExpression",
                                            "value": "1000"
                                        }
                                    }
                                }
                            }]
                        },
                        "name": "",
                        "protectedStatement": {
                            "$ast": "BlockStatement",
                            "endLabel": "",
                            "statements": [{
                                "$ast": "TryStatement",
                                "catchStatement": null,
                                "finallyStatement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "sum"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "BinaryExpression",
                                                "first": {
                                                    "$ast": "ReferenceExpression",
                                                    "name": "sum"
                                                },
                                                "op": "Add",
                                                "second": {
                                                    "$ast": "IntegerExpression",
                                                    "value": "1000"
                                                }
                                            }
                                        }
                                    }]
                                },
                                "name": "",
                                "protectedStatement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "GotoStatement",
                                        "label": "RETURN"
                                    }]
                                }
                            }]
                        }
                    }]
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "String"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "CallExpression",
                    "arguments": [],
                    "function": {
                        "$ast": "ReferenceExpression",
                        "name": "test1"
                    }
                }
            }, {
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "CallExpression",
                    "arguments": [],
                    "function": {
                        "$ast": "ReferenceExpression",
                        "name": "test2"
                    }
                }
            }, {
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "CallExpression",
                    "arguments": [],
                    "function": {
                        "$ast": "ReferenceExpression",
                        "name": "test3"
                    }
                }
            }, {
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "CallExpression",
                    "arguments": [],
                    "function": {
                        "$ast": "ReferenceExpression",
                        "name": "test4"
                    }
                }
            }, {
                "$ast": "ReturnStatement",
                "expression": {
                    "$ast": "ReferenceExpression",
                    "name": "sum"
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "test",
    "paths": [{
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "system"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }]
}