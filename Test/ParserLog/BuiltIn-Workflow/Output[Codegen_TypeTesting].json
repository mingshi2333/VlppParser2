{
    "$ast": "Module",
    "declarations": [{
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "String"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "VariableStatement",
                "variable": {
                    "$ast": "VariableDeclaration",
                    "attributes": [],
                    "name": "a",
                    "expression": {
                        "$ast": "ConstructorExpression",
                        "arguments": [{
                            "$ast": "ConstructorArgument",
                            "key": {
                                "$ast": "IntegerExpression",
                                "value": "1"
                            },
                            "value": null
                        }, {
                            "$ast": "ConstructorArgument",
                            "key": {
                                "$ast": "IntegerExpression",
                                "value": "2"
                            },
                            "value": null
                        }, {
                            "$ast": "ConstructorArgument",
                            "key": {
                                "$ast": "IntegerExpression",
                                "value": "3"
                            },
                            "value": null
                        }, {
                            "$ast": "ConstructorArgument",
                            "key": {
                                "$ast": "IntegerExpression",
                                "value": "4"
                            },
                            "value": null
                        }, {
                            "$ast": "ConstructorArgument",
                            "key": {
                                "$ast": "IntegerExpression",
                                "value": "5"
                            },
                            "value": null
                        }]
                    },
                    "type": {
                        "$ast": "EnumerableType",
                        "element": {
                            "$ast": "PredefinedType",
                            "name": "Int"
                        }
                    }
                }
            }, {
                "$ast": "ReturnStatement",
                "expression": {
                    "$ast": "BinaryExpression",
                    "first": {
                        "$ast": "BinaryExpression",
                        "first": {
                            "$ast": "BinaryExpression",
                            "first": {
                                "$ast": "BinaryExpression",
                                "first": {
                                    "$ast": "BinaryExpression",
                                    "first": {
                                        "$ast": "BinaryExpression",
                                        "first": {
                                            "$ast": "TypeTestingExpression",
                                            "expression": {
                                                "$ast": "ReferenceExpression",
                                                "name": "a"
                                            },
                                            "test": "IsType",
                                            "type": {
                                                "$ast": "MapType",
                                                "key": null,
                                                "value": {
                                                    "$ast": "PredefinedType",
                                                    "name": "Int"
                                                },
                                                "writability": "Writable"
                                            }
                                        },
                                        "op": "FlagAnd",
                                        "second": {
                                            "$ast": "StringExpression",
                                            "value": "\", \""
                                        }
                                    },
                                    "op": "FlagAnd",
                                    "second": {
                                        "$ast": "TypeTestingExpression",
                                        "expression": {
                                            "$ast": "ReferenceExpression",
                                            "name": "a"
                                        },
                                        "test": "IsType",
                                        "type": {
                                            "$ast": "MapType",
                                            "key": {
                                                "$ast": "PredefinedType",
                                                "name": "String"
                                            },
                                            "value": {
                                                "$ast": "PredefinedType",
                                                "name": "Int"
                                            },
                                            "writability": "Writable"
                                        }
                                    }
                                },
                                "op": "FlagAnd",
                                "second": {
                                    "$ast": "StringExpression",
                                    "value": "\", \""
                                }
                            },
                            "op": "FlagAnd",
                            "second": {
                                "$ast": "TypeTestingExpression",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "a"
                                },
                                "test": "IsType",
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "List"
                                    }
                                }
                            }
                        },
                        "op": "FlagAnd",
                        "second": {
                            "$ast": "StringExpression",
                            "value": "\", \""
                        }
                    },
                    "op": "FlagAnd",
                    "second": {
                        "$ast": "TypeTestingExpression",
                        "expression": {
                            "$ast": "ReferenceExpression",
                            "name": "a"
                        },
                        "test": "IsType",
                        "type": {
                            "$ast": "RawPointerType",
                            "element": {
                                "$ast": "ReferenceType",
                                "name": "List"
                            }
                        }
                    }
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "test",
    "paths": [{
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "system"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }]
}