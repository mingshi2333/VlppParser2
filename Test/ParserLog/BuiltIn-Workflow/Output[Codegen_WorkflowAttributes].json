{
    "$ast": "Module",
    "declarations": [{
        "$ast": "NamespaceDeclaration",
        "attributes": [],
        "name": "calculator",
        "declarations": [{
            "$ast": "ClassDeclaration",
            "attributes": [{
                "$ast": "Attribute",
                "category": "cpp",
                "name": "File",
                "value": {
                    "$ast": "StringExpression",
                    "value": "\"WorkflowAttributes_Expression\""
                }
            }],
            "name": "Expression",
            "baseTypes": [],
            "constructorType": "Undefined",
            "declarations": [{
                "$ast": "FunctionDeclaration",
                "attributes": [{
                    "$ast": "Attribute",
                    "category": "cpp",
                    "name": "UserImpl",
                    "value": null
                }],
                "name": "Print",
                "anonymity": "Named",
                "arguments": [],
                "functionKind": "Normal",
                "returnType": {
                    "$ast": "PredefinedType",
                    "name": "String"
                },
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ReturnStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [{
                                "$ast": "TypeCastingExpression",
                                "expression": {
                                    "$ast": "ThisExpression"
                                },
                                "strategy": "Strong",
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "Expression"
                                    }
                                }
                            }],
                            "function": {
                                "$ast": "TopQualifiedExpression",
                                "name": "Print"
                            }
                        }
                    }]
                }
            }, {
                "$ast": "FunctionDeclaration",
                "attributes": [{
                    "$ast": "Attribute",
                    "category": "cpp",
                    "name": "UserImpl",
                    "value": null
                }],
                "name": "Evaluate",
                "anonymity": "Named",
                "arguments": [],
                "functionKind": "Normal",
                "returnType": {
                    "$ast": "PredefinedType",
                    "name": "Int"
                },
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ReturnStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [{
                                "$ast": "TypeCastingExpression",
                                "expression": {
                                    "$ast": "ThisExpression"
                                },
                                "strategy": "Strong",
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "Expression"
                                    }
                                }
                            }],
                            "function": {
                                "$ast": "TopQualifiedExpression",
                                "name": "Evaluate"
                            }
                        }
                    }]
                }
            }],
            "kind": "Class"
        }, {
            "$ast": "ClassDeclaration",
            "attributes": [],
            "name": "NumberExpression",
            "baseTypes": [{
                "$ast": "ReferenceType",
                "name": "Expression"
            }],
            "constructorType": "Undefined",
            "declarations": [{
                "$ast": "AutoPropertyDeclaration",
                "attributes": [],
                "name": "Value",
                "expandedDeclarations": [],
                "configConst": "Readonly",
                "configObserve": "NotObservable",
                "expression": {
                    "$ast": "IntegerExpression",
                    "value": "0"
                },
                "functionKind": "Normal",
                "type": {
                    "$ast": "PredefinedType",
                    "name": "Int"
                }
            }, {
                "$ast": "ConstructorDeclaration",
                "attributes": [],
                "name": "",
                "arguments": [{
                    "$ast": "FunctionArgument",
                    "attributes": [],
                    "name": "_value",
                    "type": {
                        "$ast": "PredefinedType",
                        "name": "Int"
                    }
                }],
                "baseConstructorCalls": [],
                "constructorType": "SharedPtr",
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [{
                                "$ast": "ReferenceExpression",
                                "name": "_value"
                            }],
                            "function": {
                                "$ast": "ReferenceExpression",
                                "name": "SetValue"
                            }
                        }
                    }]
                }
            }],
            "kind": "Class"
        }, {
            "$ast": "ClassDeclaration",
            "attributes": [],
            "name": "BinaryExpression",
            "baseTypes": [{
                "$ast": "ReferenceType",
                "name": "Expression"
            }],
            "constructorType": "Undefined",
            "declarations": [{
                "$ast": "EnumDeclaration",
                "attributes": [],
                "name": "BinaryOperator",
                "items": [{
                    "$ast": "EnumItem",
                    "attributes": [],
                    "intersections": [],
                    "kind": "Constant",
                    "name": "Add",
                    "number": "0"
                }, {
                    "$ast": "EnumItem",
                    "attributes": [],
                    "intersections": [],
                    "kind": "Constant",
                    "name": "Sub",
                    "number": "1"
                }, {
                    "$ast": "EnumItem",
                    "attributes": [],
                    "intersections": [],
                    "kind": "Constant",
                    "name": "Mul",
                    "number": "2"
                }, {
                    "$ast": "EnumItem",
                    "attributes": [],
                    "intersections": [],
                    "kind": "Constant",
                    "name": "Div",
                    "number": "3"
                }],
                "kind": "Normal"
            }, {
                "$ast": "AutoPropertyDeclaration",
                "attributes": [],
                "name": "Operator",
                "expandedDeclarations": [],
                "configConst": "Readonly",
                "configObserve": "NotObservable",
                "expression": {
                    "$ast": "ReferenceExpression",
                    "name": "Add"
                },
                "functionKind": "Normal",
                "type": {
                    "$ast": "ReferenceType",
                    "name": "BinaryOperator"
                }
            }, {
                "$ast": "AutoPropertyDeclaration",
                "attributes": [],
                "name": "Left",
                "expandedDeclarations": [],
                "configConst": "Readonly",
                "configObserve": "NotObservable",
                "expression": {
                    "$ast": "LiteralExpression",
                    "value": "Null"
                },
                "functionKind": "Normal",
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "Expression"
                    }
                }
            }, {
                "$ast": "AutoPropertyDeclaration",
                "attributes": [],
                "name": "Right",
                "expandedDeclarations": [],
                "configConst": "Readonly",
                "configObserve": "NotObservable",
                "expression": {
                    "$ast": "LiteralExpression",
                    "value": "Null"
                },
                "functionKind": "Normal",
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "Expression"
                    }
                }
            }, {
                "$ast": "ConstructorDeclaration",
                "attributes": [],
                "name": "",
                "arguments": [{
                    "$ast": "FunctionArgument",
                    "attributes": [],
                    "name": "_left",
                    "type": {
                        "$ast": "SharedPointerType",
                        "element": {
                            "$ast": "ReferenceType",
                            "name": "Expression"
                        }
                    }
                }, {
                    "$ast": "FunctionArgument",
                    "attributes": [],
                    "name": "_op",
                    "type": {
                        "$ast": "ReferenceType",
                        "name": "BinaryOperator"
                    }
                }, {
                    "$ast": "FunctionArgument",
                    "attributes": [],
                    "name": "_right",
                    "type": {
                        "$ast": "SharedPointerType",
                        "element": {
                            "$ast": "ReferenceType",
                            "name": "Expression"
                        }
                    }
                }],
                "baseConstructorCalls": [],
                "constructorType": "SharedPtr",
                "statement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [{
                                "$ast": "ReferenceExpression",
                                "name": "_left"
                            }],
                            "function": {
                                "$ast": "ReferenceExpression",
                                "name": "SetLeft"
                            }
                        }
                    }, {
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [{
                                "$ast": "ReferenceExpression",
                                "name": "_op"
                            }],
                            "function": {
                                "$ast": "ReferenceExpression",
                                "name": "SetOperator"
                            }
                        }
                    }, {
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "CallExpression",
                            "arguments": [{
                                "$ast": "ReferenceExpression",
                                "name": "_right"
                            }],
                            "function": {
                                "$ast": "ReferenceExpression",
                                "name": "SetRight"
                            }
                        }
                    }]
                }
            }],
            "kind": "Class"
        }]
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "Print",
        "anonymity": "Named",
        "arguments": [{
            "$ast": "FunctionArgument",
            "attributes": [],
            "name": "expr",
            "type": {
                "$ast": "SharedPointerType",
                "element": {
                    "$ast": "ReferenceType",
                    "name": "Expression"
                }
            }
        }],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "String"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "IfStatement",
                "expression": {
                    "$ast": "ReferenceExpression",
                    "name": "expr"
                },
                "falseBranch": {
                    "$ast": "IfStatement",
                    "expression": {
                        "$ast": "ReferenceExpression",
                        "name": "expr"
                    },
                    "falseBranch": {
                        "$ast": "BlockStatement",
                        "endLabel": "",
                        "statements": [{
                            "$ast": "RaiseExceptionStatement",
                            "expression": {
                                "$ast": "StringExpression",
                                "value": "\"Unrecognized expression type.\""
                            }
                        }]
                    },
                    "name": "be",
                    "trueBranch": {
                        "$ast": "BlockStatement",
                        "endLabel": "",
                        "statements": [{
                            "$ast": "VariableStatement",
                            "variable": {
                                "$ast": "VariableDeclaration",
                                "attributes": [],
                                "name": "op",
                                "expression": {
                                    "$ast": "StringExpression",
                                    "value": "\"\""
                                },
                                "type": null
                            }
                        }, {
                            "$ast": "SwitchStatement",
                            "expandedStatement": null,
                            "caseBranches": [{
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Add"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "op"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "StringExpression",
                                                "value": "\"+\""
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Sub"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "op"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "StringExpression",
                                                "value": "\"-\""
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Mul"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "op"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "StringExpression",
                                                "value": "\"*\""
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Div"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ExpressionStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "op"
                                            },
                                            "op": "Assign",
                                            "second": {
                                                "$ast": "StringExpression",
                                                "value": "\"\/\""
                                            }
                                        }
                                    }]
                                }
                            }],
                            "defaultBranch": null,
                            "expression": {
                                "$ast": "MemberExpression",
                                "name": "Operator",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "be"
                                }
                            }
                        }, {
                            "$ast": "ReturnStatement",
                            "expression": {
                                "$ast": "FormatExpression",
                                "expandedExpression": null,
                                "value": "$\"($(Print(be.Left)) $(op) $(Print(be.Right)))\""
                            }
                        }]
                    },
                    "type": {
                        "$ast": "SharedPointerType",
                        "element": {
                            "$ast": "ReferenceType",
                            "name": "BinaryExpression"
                        }
                    }
                },
                "name": "ne",
                "trueBranch": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ReturnStatement",
                        "expression": {
                            "$ast": "TypeCastingExpression",
                            "expression": {
                                "$ast": "MemberExpression",
                                "name": "Value",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "ne"
                                }
                            },
                            "strategy": "Strong",
                            "type": {
                                "$ast": "PredefinedType",
                                "name": "String"
                            }
                        }
                    }]
                },
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "NumberExpression"
                    }
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "Evaluate",
        "anonymity": "Named",
        "arguments": [{
            "$ast": "FunctionArgument",
            "attributes": [],
            "name": "expr",
            "type": {
                "$ast": "SharedPointerType",
                "element": {
                    "$ast": "ReferenceType",
                    "name": "Expression"
                }
            }
        }],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Int"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "IfStatement",
                "expression": {
                    "$ast": "ReferenceExpression",
                    "name": "expr"
                },
                "falseBranch": {
                    "$ast": "IfStatement",
                    "expression": {
                        "$ast": "ReferenceExpression",
                        "name": "expr"
                    },
                    "falseBranch": {
                        "$ast": "BlockStatement",
                        "endLabel": "",
                        "statements": [{
                            "$ast": "RaiseExceptionStatement",
                            "expression": {
                                "$ast": "StringExpression",
                                "value": "\"Unrecognized expression type.\""
                            }
                        }]
                    },
                    "name": "be",
                    "trueBranch": {
                        "$ast": "BlockStatement",
                        "endLabel": "",
                        "statements": [{
                            "$ast": "VariableStatement",
                            "variable": {
                                "$ast": "VariableDeclaration",
                                "attributes": [],
                                "name": "left",
                                "expression": {
                                    "$ast": "CallExpression",
                                    "arguments": [{
                                        "$ast": "MemberExpression",
                                        "name": "Left",
                                        "parent": {
                                            "$ast": "ReferenceExpression",
                                            "name": "be"
                                        }
                                    }],
                                    "function": {
                                        "$ast": "ReferenceExpression",
                                        "name": "Evaluate"
                                    }
                                },
                                "type": null
                            }
                        }, {
                            "$ast": "VariableStatement",
                            "variable": {
                                "$ast": "VariableDeclaration",
                                "attributes": [],
                                "name": "right",
                                "expression": {
                                    "$ast": "CallExpression",
                                    "arguments": [{
                                        "$ast": "MemberExpression",
                                        "name": "Right",
                                        "parent": {
                                            "$ast": "ReferenceExpression",
                                            "name": "be"
                                        }
                                    }],
                                    "function": {
                                        "$ast": "ReferenceExpression",
                                        "name": "Evaluate"
                                    }
                                },
                                "type": null
                            }
                        }, {
                            "$ast": "SwitchStatement",
                            "expandedStatement": null,
                            "caseBranches": [{
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Add"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "left"
                                            },
                                            "op": "Add",
                                            "second": {
                                                "$ast": "ReferenceExpression",
                                                "name": "right"
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Sub"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "left"
                                            },
                                            "op": "Sub",
                                            "second": {
                                                "$ast": "ReferenceExpression",
                                                "name": "right"
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Mul"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "left"
                                            },
                                            "op": "Mul",
                                            "second": {
                                                "$ast": "ReferenceExpression",
                                                "name": "right"
                                            }
                                        }
                                    }]
                                }
                            }, {
                                "$ast": "SwitchCase",
                                "expression": {
                                    "$ast": "ReferenceExpression",
                                    "name": "Div"
                                },
                                "statement": {
                                    "$ast": "BlockStatement",
                                    "endLabel": "",
                                    "statements": [{
                                        "$ast": "ReturnStatement",
                                        "expression": {
                                            "$ast": "BinaryExpression",
                                            "first": {
                                                "$ast": "ReferenceExpression",
                                                "name": "left"
                                            },
                                            "op": "Div",
                                            "second": {
                                                "$ast": "ReferenceExpression",
                                                "name": "right"
                                            }
                                        }
                                    }]
                                }
                            }],
                            "defaultBranch": null,
                            "expression": {
                                "$ast": "MemberExpression",
                                "name": "Operator",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "be"
                                }
                            }
                        }, {
                            "$ast": "RaiseExceptionStatement",
                            "expression": {
                                "$ast": "StringExpression",
                                "value": "\"Unrecognized binary operator.\""
                            }
                        }]
                    },
                    "type": {
                        "$ast": "SharedPointerType",
                        "element": {
                            "$ast": "ReferenceType",
                            "name": "BinaryExpression"
                        }
                    }
                },
                "name": "ne",
                "trueBranch": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ReturnStatement",
                        "expression": {
                            "$ast": "MemberExpression",
                            "name": "Value",
                            "parent": {
                                "$ast": "ReferenceExpression",
                                "name": "ne"
                            }
                        }
                    }]
                },
                "type": {
                    "$ast": "SharedPointerType",
                    "element": {
                        "$ast": "ReferenceType",
                        "name": "NumberExpression"
                    }
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "String"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "VariableStatement",
                "variable": {
                    "$ast": "VariableDeclaration",
                    "attributes": [],
                    "name": "expr",
                    "expression": {
                        "$ast": "NewClassExpression",
                        "arguments": [{
                            "$ast": "NewClassExpression",
                            "arguments": [{
                                "$ast": "NewClassExpression",
                                "arguments": [{
                                    "$ast": "IntegerExpression",
                                    "value": "1"
                                }],
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "NumberExpression"
                                    }
                                }
                            }, {
                                "$ast": "ReferenceExpression",
                                "name": "Add"
                            }, {
                                "$ast": "NewClassExpression",
                                "arguments": [{
                                    "$ast": "IntegerExpression",
                                    "value": "2"
                                }],
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "NumberExpression"
                                    }
                                }
                            }],
                            "type": {
                                "$ast": "SharedPointerType",
                                "element": {
                                    "$ast": "ReferenceType",
                                    "name": "BinaryExpression"
                                }
                            }
                        }, {
                            "$ast": "ReferenceExpression",
                            "name": "Mul"
                        }, {
                            "$ast": "NewClassExpression",
                            "arguments": [{
                                "$ast": "NewClassExpression",
                                "arguments": [{
                                    "$ast": "IntegerExpression",
                                    "value": "3"
                                }],
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "NumberExpression"
                                    }
                                }
                            }, {
                                "$ast": "ReferenceExpression",
                                "name": "Add"
                            }, {
                                "$ast": "NewClassExpression",
                                "arguments": [{
                                    "$ast": "IntegerExpression",
                                    "value": "4"
                                }],
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "NumberExpression"
                                    }
                                }
                            }],
                            "type": {
                                "$ast": "SharedPointerType",
                                "element": {
                                    "$ast": "ReferenceType",
                                    "name": "BinaryExpression"
                                }
                            }
                        }],
                        "type": {
                            "$ast": "SharedPointerType",
                            "element": {
                                "$ast": "ReferenceType",
                                "name": "BinaryExpression"
                            }
                        }
                    },
                    "type": null
                }
            }, {
                "$ast": "ReturnStatement",
                "expression": {
                    "$ast": "FormatExpression",
                    "expandedExpression": null,
                    "value": "$\"$(expr.Print()) = $(expr.Evaluate())\""
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "test",
    "paths": [{
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "test"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }, {
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "system"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }, {
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "calculator"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }]
}