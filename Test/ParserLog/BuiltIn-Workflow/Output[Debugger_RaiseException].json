{
    "$ast": "Module",
    "declarations": [{
        "$ast": "VariableDeclaration",
        "attributes": [],
        "name": "s",
        "expression": {
            "$ast": "IntegerExpression",
            "value": "0"
        },
        "type": null
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "Update",
        "anonymity": "Named",
        "arguments": [{
            "$ast": "FunctionArgument",
            "attributes": [],
            "name": "a",
            "type": {
                "$ast": "PredefinedType",
                "name": "Int"
            }
        }, {
            "$ast": "FunctionArgument",
            "attributes": [],
            "name": "b",
            "type": {
                "$ast": "PredefinedType",
                "name": "Int"
            }
        }],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Void"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "RaiseExceptionStatement",
                "expression": {
                    "$ast": "StringExpression",
                    "value": "\"Exception\""
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "Main",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Int"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "VariableStatement",
                "variable": {
                    "$ast": "VariableDeclaration",
                    "attributes": [],
                    "name": "o",
                    "expression": {
                        "$ast": "NewClassExpression",
                        "arguments": [{
                            "$ast": "IntegerExpression",
                            "value": "0"
                        }],
                        "type": {
                            "$ast": "SharedPointerType",
                            "element": {
                                "$ast": "ReferenceType",
                                "name": "ObservableValue"
                            }
                        }
                    },
                    "type": null
                }
            }, {
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "AttachEventExpression",
                    "event": {
                        "$ast": "MemberExpression",
                        "name": "ValueChanged",
                        "parent": {
                            "$ast": "ReferenceExpression",
                            "name": "o"
                        }
                    },
                    "function": {
                        "$ast": "ReferenceExpression",
                        "name": "Update"
                    }
                }
            }, {
                "$ast": "ExpressionStatement",
                "expression": {
                    "$ast": "BinaryExpression",
                    "first": {
                        "$ast": "MemberExpression",
                        "name": "Value",
                        "parent": {
                            "$ast": "ReferenceExpression",
                            "name": "o"
                        }
                    },
                    "op": "Assign",
                    "second": {
                        "$ast": "IntegerExpression",
                        "value": "1"
                    }
                }
            }, {
                "$ast": "ReturnStatement",
                "expression": {
                    "$ast": "ReferenceExpression",
                    "name": "s"
                }
            }]
        }
    }, {
        "$ast": "FunctionDeclaration",
        "attributes": [],
        "name": "Main2",
        "anonymity": "Named",
        "arguments": [],
        "functionKind": "Normal",
        "returnType": {
            "$ast": "PredefinedType",
            "name": "Int"
        },
        "statement": {
            "$ast": "BlockStatement",
            "endLabel": "",
            "statements": [{
                "$ast": "TryStatement",
                "catchStatement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "ReturnStatement",
                        "expression": {
                            "$ast": "UnaryExpression",
                            "op": "Negative",
                            "operand": {
                                "$ast": "IntegerExpression",
                                "value": "1"
                            }
                        }
                    }]
                },
                "finallyStatement": null,
                "name": "ex",
                "protectedStatement": {
                    "$ast": "BlockStatement",
                    "endLabel": "",
                    "statements": [{
                        "$ast": "VariableStatement",
                        "variable": {
                            "$ast": "VariableDeclaration",
                            "attributes": [],
                            "name": "o",
                            "expression": {
                                "$ast": "NewClassExpression",
                                "arguments": [{
                                    "$ast": "IntegerExpression",
                                    "value": "0"
                                }],
                                "type": {
                                    "$ast": "SharedPointerType",
                                    "element": {
                                        "$ast": "ReferenceType",
                                        "name": "ObservableValue"
                                    }
                                }
                            },
                            "type": null
                        }
                    }, {
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "AttachEventExpression",
                            "event": {
                                "$ast": "MemberExpression",
                                "name": "ValueChanged",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "o"
                                }
                            },
                            "function": {
                                "$ast": "ReferenceExpression",
                                "name": "Update"
                            }
                        }
                    }, {
                        "$ast": "ExpressionStatement",
                        "expression": {
                            "$ast": "BinaryExpression",
                            "first": {
                                "$ast": "MemberExpression",
                                "name": "Value",
                                "parent": {
                                    "$ast": "ReferenceExpression",
                                    "name": "o"
                                }
                            },
                            "op": "Assign",
                            "second": {
                                "$ast": "IntegerExpression",
                                "value": "1"
                            }
                        }
                    }, {
                        "$ast": "ReturnStatement",
                        "expression": {
                            "$ast": "ReferenceExpression",
                            "name": "s"
                        }
                    }]
                }
            }]
        }
    }],
    "moduleType": "Module",
    "name": "HelloWorld",
    "paths": [{
        "$ast": "ModuleUsingPath",
        "items": [{
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingNameFragment",
                "name": "test"
            }]
        }, {
            "$ast": "ModuleUsingItem",
            "fragments": [{
                "$ast": "ModuleUsingWildCardFragment"
            }]
        }]
    }]
}