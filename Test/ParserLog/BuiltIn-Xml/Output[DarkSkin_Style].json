{
    "$ast": "Document",
    "prologs": [],
    "rootElement": {
        "$ast": "Element",
        "attributes": [],
        "closingName": "Styles",
        "name": "Styles",
        "subNodes": [{
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"(\/\/Bounds + \/\/Table + \/\/RepeatStack + \/\/RepeatFlow)\""
            }, {
                "$ast": "Attribute",
                "name": "MinSizeLimitation",
                "value": "\"LimitToElementAndChildren\""
            }],
            "closingName": "",
            "name": "Style",
            "subNodes": []
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.windowBorder\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let margin = self.CustomFramePadding in (\r\n          (not self.Border) or (margin.left + margin.top + margin.right + margin.bottom == 0) ? \"#00000000\" :\r\n          self.VisuallyEnabled and self.Activated ? \"#017ACC\" :\r\n          \"#434346\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.windowTitle\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color (\r\n          self.VisuallyEnabled and self.Activated ? \"#999999\" :\r\n          \"#6D6D6D\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.buttonBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#252526\" :\r\n          state == ButtonState::Active ? \"#54545C\" :\r\n          state == ButtonState::Pressed ? \"#007ACC\" :\r\n          \"#3F3F46\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.buttonBorder\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#434346\" :\r\n          state == ButtonState::Active ? \"#6A6A75\" :\r\n          state == ButtonState::Pressed ? \"#1C97EA\" :\r\n          \"#54545C\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.buttonText\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#6D6D6D\" :\r\n          state == ButtonState::Active ? \"#F1F1F1\" :\r\n          state == ButtonState::Pressed ? \"#FFFFFF\" :\r\n          \"#F1F1F1\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.listBorder\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color (\r\n          not self.VisuallyEnabled ? \"#434346\" :\r\n          self.Focused ? \"#1C97EA\" :\r\n          \"#54545C\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.tabHeaderBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          self.Highlighted ? (\r\n            self.Selected ? \"#CC7ACC\" :\r\n            state == ButtonState::Active ? \"#EA97EA\" :\r\n            state == ButtonState::Pressed ? \"#EA97EA\" :\r\n            \"#604360\"\r\n          ) : (\r\n            self.Selected ? \"#007ACC\" :\r\n            state == ButtonState::Active ? \"#1C97EA\" :\r\n            state == ButtonState::Pressed ? \"#1C97EA\" :\r\n            \"#434346\"\r\n          )\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.tabHeaderBottomLine\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color (self.Highlighted ? \"#CC7ACC\" : \"#007ACC\")\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.tabDropdownBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          state == ButtonState::Active ? \"#1C97EA\" :\r\n          state == ButtonState::Pressed ? \"#1C97EA\" :\r\n          \"#434346\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.controlText\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color (\r\n          not self.VisuallyEnabled ? \"#6D6D6D\" :\r\n          \"#F1F1F1\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.controlBorder\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color (\r\n          not self.VisuallyEnabled ? \"#434346\" :\r\n          self.Focused ? \"#1C97EA\" :\r\n          \"#54545C\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.scrollArrowColor\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          state == ButtonState::Pressed ? \"#007ACC\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.scrollArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          state == ButtonState::Pressed ? \"#007ACC\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          state == ButtonState::Pressed ? \"#007ACC\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.scrollHandle\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Active ? \"#9E9E9E\" :\r\n          state == ButtonState::Pressed ? \"#EFEBEF\" :\r\n          \"#686868\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.itemBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          self.Selected or state == ButtonState::Pressed ? \"#3399FF\" :\r\n          state == ButtonState::Active ? \"#3F3F46\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.toolstripBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#007ACC\" :\r\n          state == ButtonState::Active ? \"#54545C\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.toolstripBorder\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.Selected ? \"#00000000\" :\r\n          \"#007ACC\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.toolstripArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#FFFFFF\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#FFFFFF\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.toolstripSplitBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed ? \"#54545C\" :\r\n          state == ButtonState::Active ? \"#54545C\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.toolstripSplitArrowBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed or self.Selected ? \"#007ACC\" :\r\n          state == ButtonState::Active ? \"#54545C\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.toolstripSplitArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Pressed or self.Selected ? \"#FFFFFF\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Pressed or self.Selected ? \"#FFFFFF\" :\r\n          state == ButtonState::Active ? \"#1997EA\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.menuBarItemBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#1B1B1C\" :\r\n          state == ButtonState::Active ? \"#3D3D40\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.menuItemBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed ? \"#3D3D40\" :\r\n          state == ButtonState::Active or self.SubMenuOpening ? \"#3D3D40\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.menuItemArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Active or self.SubMenuOpening ? \"#1997EA\" :\r\n          state == ButtonState::Pressed ? \"#007ACC\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#555558\" :\r\n          state == ButtonState::Active or self.SubMenuOpening ? \"#1997EA\" :\r\n          state == ButtonState::Pressed ? \"#007ACC\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.comboBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#2D2D30\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#3F3F46\" :\r\n          state == ButtonState::Active ? \"#3F3F46\" :\r\n          \"#333337\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.comboArrowBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#007ACC\" :\r\n          state == ButtonState::Active ? \"#1F1F20\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.comboArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#999999\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#FFFFFF\" :\r\n          state == ButtonState::Active ? \"#007ACC\" :\r\n          \"#999999\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#2D2D30\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#3F3F46\" :\r\n          state == ButtonState::Active ? \"#3F3F46\" :\r\n          \"#434346\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.columnHeaderBackground\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.Color-bind",
                "name": "att.Color-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#3E3E40\" :\r\n          state == ButtonState::Pressed or self.SubMenuOpening ? \"#007ACC\" :\r\n          state == ButtonState::Active ? \"#3E3E40\" :\r\n          \"#252527\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.expandableArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#6D6D6D\" :\r\n          state == ButtonState::Pressed ? \"#0A75B9\" :\r\n          state == ButtonState::Active ? \"#0A75B9\" :\r\n          \"#F1F1F1\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.Selected ? \"#00000000\" :\r\n          not self.VisuallyEnabled ? \"#6D6D6D\" :\r\n          state == ButtonState::Pressed ? \"#0A75B9\" :\r\n          state == ButtonState::Active ? \"#0A75B9\" :\r\n          \"#F1F1F1\"\r\n        )\r\n      ]]>"
                }]
            }]
        }, {
            "$ast": "Element",
            "attributes": [{
                "$ast": "Attribute",
                "name": "ref.Path",
                "value": "\"\/\/*.ribbonExpandableArrow\""
            }],
            "closingName": "Style",
            "name": "Style",
            "subNodes": [{
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BorderColor-bind",
                "name": "att.BorderColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#A0D0FF\" :\r\n          state == ButtonState::Pressed ? \"#004879\" :\r\n          state == ButtonState::Active ? \"#A0D0FF\" :\r\n          \"#A0D0FF\"\r\n        )\r\n      ]]>"
                }]
            }, {
                "$ast": "Element",
                "attributes": [],
                "closingName": "att.BackgroundColor-bind",
                "name": "att.BackgroundColor-bind",
                "subNodes": [{
                    "$ast": "CData",
                    "content": "<![CDATA[\r\n        cast Color let state = self.State in (\r\n          not self.VisuallyEnabled ? \"#00000000\" :\r\n          state == ButtonState::Pressed ? \"#004879\" :\r\n          state == ButtonState::Active ? \"#A0D0FF\" :\r\n          \"#00000000\"\r\n        )\r\n      ]]>"
                }]
            }]
        }]
    }
}