{
    "$ast": "AstFile",
    "types": [{
        "$ast": "Class",
        "name": "TypeOrExprOrOthers",
        "ambiguity": "No",
        "baseClass": "",
        "props": []
    }, {
        "$ast": "Class",
        "name": "Declaration",
        "ambiguity": "No",
        "baseClass": "TypeOrExprOrOthers",
        "props": []
    }, {
        "$ast": "Class",
        "name": "TypeOrExpr",
        "ambiguity": "No",
        "baseClass": "TypeOrExprOrOthers",
        "props": []
    }, {
        "$ast": "Class",
        "name": "ExprOnly",
        "ambiguity": "No",
        "baseClass": "TypeOrExpr",
        "props": []
    }, {
        "$ast": "Class",
        "name": "TypeOnly",
        "ambiguity": "No",
        "baseClass": "TypeOrExpr",
        "props": []
    }, {
        "$ast": "Enum",
        "name": "NameKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "Normal"
        }, {
            "$ast": "EnumItem",
            "name": "Enum"
        }, {
            "$ast": "EnumItem",
            "name": "EnumClass"
        }, {
            "$ast": "EnumItem",
            "name": "Class"
        }, {
            "$ast": "EnumItem",
            "name": "Struct"
        }, {
            "$ast": "EnumItem",
            "name": "Union"
        }, {
            "$ast": "EnumItem",
            "name": "Dtor"
        }, {
            "$ast": "EnumItem",
            "name": "UserDefinedLiteral"
        }]
    }, {
        "$ast": "Class",
        "name": "Identifier",
        "ambiguity": "No",
        "baseClass": "",
        "props": []
    }, {
        "$ast": "Class",
        "name": "NameIdentifier",
        "ambiguity": "No",
        "baseClass": "Identifier",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "NameKinds"
        }, {
            "$ast": "ClassProp",
            "name": "name",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Enum",
        "name": "Operators",
        "items": [{
            "$ast": "EnumItem",
            "name": "New"
        }, {
            "$ast": "EnumItem",
            "name": "NewArray"
        }, {
            "$ast": "EnumItem",
            "name": "Delete"
        }, {
            "$ast": "EnumItem",
            "name": "DeleteArray"
        }, {
            "$ast": "EnumItem",
            "name": "Comma"
        }, {
            "$ast": "EnumItem",
            "name": "RoundBracket"
        }, {
            "$ast": "EnumItem",
            "name": "Parantheses"
        }, {
            "$ast": "EnumItem",
            "name": "Bracket"
        }, {
            "$ast": "EnumItem",
            "name": "PointerDeref"
        }, {
            "$ast": "EnumItem",
            "name": "Pointer"
        }, {
            "$ast": "EnumItem",
            "name": "MemberDeref"
        }, {
            "$ast": "EnumItem",
            "name": "Member"
        }, {
            "$ast": "EnumItem",
            "name": "EQ"
        }, {
            "$ast": "EnumItem",
            "name": "NE"
        }, {
            "$ast": "EnumItem",
            "name": "LT"
        }, {
            "$ast": "EnumItem",
            "name": "LE"
        }, {
            "$ast": "EnumItem",
            "name": "GT"
        }, {
            "$ast": "EnumItem",
            "name": "GE"
        }, {
            "$ast": "EnumItem",
            "name": "Not"
        }, {
            "$ast": "EnumItem",
            "name": "Revert"
        }, {
            "$ast": "EnumItem",
            "name": "Xor"
        }, {
            "$ast": "EnumItem",
            "name": "And"
        }, {
            "$ast": "EnumItem",
            "name": "BitwiseAnd"
        }, {
            "$ast": "EnumItem",
            "name": "Or"
        }, {
            "$ast": "EnumItem",
            "name": "BitwiseOr"
        }, {
            "$ast": "EnumItem",
            "name": "Mul"
        }, {
            "$ast": "EnumItem",
            "name": "Div"
        }, {
            "$ast": "EnumItem",
            "name": "Mod"
        }, {
            "$ast": "EnumItem",
            "name": "Plus"
        }, {
            "$ast": "EnumItem",
            "name": "Increase"
        }, {
            "$ast": "EnumItem",
            "name": "Minus"
        }, {
            "$ast": "EnumItem",
            "name": "Decrease"
        }, {
            "$ast": "EnumItem",
            "name": "LeftShift"
        }, {
            "$ast": "EnumItem",
            "name": "RightShift"
        }, {
            "$ast": "EnumItem",
            "name": "Assign"
        }, {
            "$ast": "EnumItem",
            "name": "RevertAssign"
        }, {
            "$ast": "EnumItem",
            "name": "XorAssign"
        }, {
            "$ast": "EnumItem",
            "name": "AndAssign"
        }, {
            "$ast": "EnumItem",
            "name": "OrAssign"
        }, {
            "$ast": "EnumItem",
            "name": "MulAssign"
        }, {
            "$ast": "EnumItem",
            "name": "DivAssign"
        }, {
            "$ast": "EnumItem",
            "name": "ModAssign"
        }, {
            "$ast": "EnumItem",
            "name": "PlusAssign"
        }, {
            "$ast": "EnumItem",
            "name": "MinusAssign"
        }, {
            "$ast": "EnumItem",
            "name": "LeftShiftAssign"
        }, {
            "$ast": "EnumItem",
            "name": "RightShiftAssign"
        }]
    }, {
        "$ast": "Class",
        "name": "OperatorIdentifier",
        "ambiguity": "No",
        "baseClass": "Identifier",
        "props": [{
            "$ast": "ClassProp",
            "name": "op",
            "propType": "Type",
            "propTypeName": "Operators"
        }]
    }, {
        "$ast": "Class",
        "name": "GenericArgument",
        "ambiguity": "No",
        "baseClass": "TypeOrExprOrOthers",
        "props": [{
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "variadic",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Class",
        "name": "GenericArguments",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Array",
            "propTypeName": "TypeOrExprOrOthers"
        }]
    }, {
        "$ast": "Enum",
        "name": "QualifiedNameKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "Root"
        }, {
            "$ast": "EnumItem",
            "name": "Context"
        }, {
            "$ast": "EnumItem",
            "name": "Auto"
        }, {
            "$ast": "EnumItem",
            "name": "Decltype"
        }, {
            "$ast": "EnumItem",
            "name": "DecltypeAuto"
        }, {
            "$ast": "EnumItem",
            "name": "Member"
        }]
    }, {
        "$ast": "Class",
        "name": "QualifiedName",
        "ambiguity": "No",
        "baseClass": "TypeOrExpr",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "QualifiedNameKinds"
        }, {
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "parent",
            "propType": "Type",
            "propTypeName": "QualifiedName"
        }, {
            "$ast": "ClassProp",
            "name": "id",
            "propType": "Type",
            "propTypeName": "Identifier"
        }, {
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Type",
            "propTypeName": "GenericArguments"
        }]
    }, {
        "$ast": "Enum",
        "name": "PrimitiveExprLiteralKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "True"
        }, {
            "$ast": "EnumItem",
            "name": "False"
        }, {
            "$ast": "EnumItem",
            "name": "Nullptr"
        }, {
            "$ast": "EnumItem",
            "name": "This"
        }, {
            "$ast": "EnumItem",
            "name": "__Nullptr"
        }]
    }, {
        "$ast": "Class",
        "name": "PrimitiveExprLiteral",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "PrimitiveExprLiteralKinds"
        }]
    }, {
        "$ast": "Enum",
        "name": "NumericExprLiteralKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "Integer"
        }, {
            "$ast": "EnumItem",
            "name": "Hex"
        }, {
            "$ast": "EnumItem",
            "name": "Binary"
        }, {
            "$ast": "EnumItem",
            "name": "Float"
        }, {
            "$ast": "EnumItem",
            "name": "FloatHex"
        }, {
            "$ast": "EnumItem",
            "name": "Char"
        }]
    }, {
        "$ast": "Class",
        "name": "NumericExprLiteral",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "NumericExprLiteralKinds"
        }, {
            "$ast": "ClassProp",
            "name": "literal",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Enum",
        "name": "StringLiteralKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "String"
        }, {
            "$ast": "EnumItem",
            "name": "Macro_LPREFIX"
        }]
    }, {
        "$ast": "Class",
        "name": "StringLiteralFragment",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "StringLiteralKinds"
        }, {
            "$ast": "ClassProp",
            "name": "literal",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Class",
        "name": "StringLiteral",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "fragments",
            "propType": "Array",
            "propTypeName": "StringLiteralFragment"
        }]
    }, {
        "$ast": "Class",
        "name": "ParenthesisExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "BraceExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "CastExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "keyword",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "type",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "SysFuncExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "keyword",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "variadic",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Enum",
        "name": "OperatorScope",
        "items": [{
            "$ast": "EnumItem",
            "name": "Root"
        }, {
            "$ast": "EnumItem",
            "name": "Context"
        }]
    }, {
        "$ast": "Class",
        "name": "SizeofExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "variadic",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Enum",
        "name": "OperatorArray",
        "items": [{
            "$ast": "EnumItem",
            "name": "Array"
        }, {
            "$ast": "EnumItem",
            "name": "NotArray"
        }]
    }, {
        "$ast": "Class",
        "name": "DeleteExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "scope",
            "propType": "Type",
            "propTypeName": "OperatorScope"
        }, {
            "$ast": "ClassProp",
            "name": "array",
            "propType": "Type",
            "propTypeName": "OperatorArray"
        }, {
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Enum",
        "name": "OperatorInit",
        "items": [{
            "$ast": "EnumItem",
            "name": "None"
        }, {
            "$ast": "EnumItem",
            "name": "Array"
        }, {
            "$ast": "EnumItem",
            "name": "Parenthesis"
        }, {
            "$ast": "EnumItem",
            "name": "Brace"
        }]
    }, {
        "$ast": "Class",
        "name": "NewExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "scope",
            "propType": "Type",
            "propTypeName": "OperatorScope"
        }, {
            "$ast": "ClassProp",
            "name": "init",
            "propType": "Type",
            "propTypeName": "OperatorInit"
        }, {
            "$ast": "ClassProp",
            "name": "type",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "placementArguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "initArguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "PrefixUnaryExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "op",
            "propType": "Type",
            "propTypeName": "Operators"
        }, {
            "$ast": "ClassProp",
            "name": "operand",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "PostfixUnaryExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "op",
            "propType": "Type",
            "propTypeName": "Operators"
        }, {
            "$ast": "ClassProp",
            "name": "operand",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "IndexExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "operand",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "index",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Enum",
        "name": "CallKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "Parenthesis"
        }, {
            "$ast": "EnumItem",
            "name": "Brace"
        }]
    }, {
        "$ast": "Class",
        "name": "CallExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "CallKinds"
        }, {
            "$ast": "ClassProp",
            "name": "operand",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "BinaryExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "op",
            "propType": "Type",
            "propTypeName": "Operators"
        }, {
            "$ast": "ClassProp",
            "name": "left",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "right",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "IfExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "condition",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "trueBranch",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "falseBranch",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "ThrowExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "VariadicExpr",
        "ambiguity": "No",
        "baseClass": "ExprOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "operand",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "variadic",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Enum",
        "name": "PrimitiveTypeKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "Neutral"
        }, {
            "$ast": "EnumItem",
            "name": "Signed"
        }, {
            "$ast": "EnumItem",
            "name": "Unsigned"
        }]
    }, {
        "$ast": "Class",
        "name": "PrimitiveType",
        "ambiguity": "No",
        "baseClass": "TypeOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "PrimitiveTypeKinds"
        }, {
            "$ast": "ClassProp",
            "name": "literal1",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "literal2",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Class",
        "name": "ConstType",
        "ambiguity": "No",
        "baseClass": "TypeOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "type",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "VolatileType",
        "ambiguity": "No",
        "baseClass": "TypeOnly",
        "props": [{
            "$ast": "ClassProp",
            "name": "type",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Enum",
        "name": "AdvancedTypeKinds",
        "items": [{
            "$ast": "EnumItem",
            "name": "LRef"
        }, {
            "$ast": "EnumItem",
            "name": "RRef"
        }, {
            "$ast": "EnumItem",
            "name": "Const"
        }, {
            "$ast": "EnumItem",
            "name": "Volatile"
        }, {
            "$ast": "EnumItem",
            "name": "Pointer"
        }, {
            "$ast": "EnumItem",
            "name": "Pointer32"
        }, {
            "$ast": "EnumItem",
            "name": "Pointer64"
        }, {
            "$ast": "EnumItem",
            "name": "Member"
        }, {
            "$ast": "EnumItem",
            "name": "AlignAs"
        }]
    }, {
        "$ast": "Class",
        "name": "AdvancedType",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "kind",
            "propType": "Type",
            "propTypeName": "AdvancedTypeKinds"
        }, {
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "DeclaratorKeyword",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "keyword",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Class",
        "name": "FunctionKeyword",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "keyword",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "DeclaratorFunctionPart",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "parameters",
            "propType": "Array",
            "propTypeName": "TypeOrExprOrOthers"
        }, {
            "$ast": "ClassProp",
            "name": "variadic",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "keywords",
            "propType": "Array",
            "propTypeName": "FunctionKeyword"
        }, {
            "$ast": "ClassProp",
            "name": "deferredType",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "DeclaratorArrayPart",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "argument",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "Declarator",
        "ambiguity": "No",
        "baseClass": "",
        "props": [{
            "$ast": "ClassProp",
            "name": "keywords",
            "propType": "Array",
            "propTypeName": "DeclaratorKeyword"
        }, {
            "$ast": "ClassProp",
            "name": "advancedTypes",
            "propType": "Array",
            "propTypeName": "AdvancedType"
        }, {
            "$ast": "ClassProp",
            "name": "variadic",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "id",
            "propType": "Type",
            "propTypeName": "Identifier"
        }, {
            "$ast": "ClassProp",
            "name": "innerDeclarator",
            "propType": "Type",
            "propTypeName": "Declarator"
        }, {
            "$ast": "ClassProp",
            "name": "funcPart",
            "propType": "Type",
            "propTypeName": "DeclaratorFunctionPart"
        }, {
            "$ast": "ClassProp",
            "name": "arrayParts",
            "propType": "Array",
            "propTypeName": "DeclaratorArrayPart"
        }]
    }, {
        "$ast": "Class",
        "name": "DeclaratorType",
        "ambiguity": "No",
        "baseClass": "TypeOrExpr",
        "props": [{
            "$ast": "ClassProp",
            "name": "keywords",
            "propType": "Array",
            "propTypeName": "DeclaratorKeyword"
        }, {
            "$ast": "ClassProp",
            "name": "type",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "declarator",
            "propType": "Type",
            "propTypeName": "Declarator"
        }]
    }, {
        "$ast": "Class",
        "name": "VarInit",
        "ambiguity": "No",
        "baseClass": "",
        "props": []
    }, {
        "$ast": "Class",
        "name": "VarValueInit",
        "ambiguity": "No",
        "baseClass": "VarInit",
        "props": [{
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "VarParanthesisInit",
        "ambiguity": "No",
        "baseClass": "VarInit",
        "props": [{
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "VarBraceInit",
        "ambiguity": "No",
        "baseClass": "VarInit",
        "props": [{
            "$ast": "ClassProp",
            "name": "arguments",
            "propType": "Array",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "SingleVarDeclaration",
        "ambiguity": "No",
        "baseClass": "Declaration",
        "props": [{
            "$ast": "ClassProp",
            "name": "keywords",
            "propType": "Array",
            "propTypeName": "DeclaratorKeyword"
        }, {
            "$ast": "ClassProp",
            "name": "type",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "declarator",
            "propType": "Type",
            "propTypeName": "Declarator"
        }, {
            "$ast": "ClassProp",
            "name": "init",
            "propType": "Type",
            "propTypeName": "VarInit"
        }]
    }, {
        "$ast": "Class",
        "name": "Statement",
        "ambiguity": "No",
        "baseClass": "",
        "props": []
    }, {
        "$ast": "Class",
        "name": "EmptyStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": []
    }, {
        "$ast": "Class",
        "name": "BlockStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "statements",
            "propType": "Array",
            "propTypeName": "Statement"
        }]
    }, {
        "$ast": "Class",
        "name": "ExprStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "BreakStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": []
    }, {
        "$ast": "Class",
        "name": "ContinueStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": []
    }, {
        "$ast": "Class",
        "name": "ReturnStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "LabelStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "label",
            "propType": "Token",
            "propTypeName": ""
        }, {
            "$ast": "ClassProp",
            "name": "stat",
            "propType": "Type",
            "propTypeName": "Statement"
        }]
    }, {
        "$ast": "Class",
        "name": "GotoStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "label",
            "propType": "Token",
            "propTypeName": ""
        }]
    }, {
        "$ast": "Class",
        "name": "CaseStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "stat",
            "propType": "Type",
            "propTypeName": "Statement"
        }]
    }, {
        "$ast": "Class",
        "name": "DefaultStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "stat",
            "propType": "Type",
            "propTypeName": "Statement"
        }]
    }, {
        "$ast": "Class",
        "name": "__LeaveStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": []
    }, {
        "$ast": "Class",
        "name": "StaticAssertStat",
        "ambiguity": "No",
        "baseClass": "Statement",
        "props": [{
            "$ast": "ClassProp",
            "name": "expr",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }, {
            "$ast": "ClassProp",
            "name": "message",
            "propType": "Type",
            "propTypeName": "TypeOrExpr"
        }]
    }, {
        "$ast": "Class",
        "name": "File",
        "ambiguity": "No",
        "baseClass": "",
        "props": []
    }]
}