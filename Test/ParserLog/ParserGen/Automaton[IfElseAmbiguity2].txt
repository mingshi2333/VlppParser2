[0][Do] BEGIN 
[RULE: 0][CLAUSE: -1]
	token: "do" -> [3][Do]< "do" @ ";" >
		- BeginObject(DoStat)

[1][Do] END [ENDING]
[RULE: 0][CLAUSE: -1]

[2][Do]< "do" ";" @ >
[RULE: 0][CLAUSE: 0]
	ending -> [1][Do] END [ENDING]
		- EndObject()

[3][Do]< "do" @ ";" >
[RULE: 0][CLAUSE: 0]
	token: ";" -> [2][Do]< "do" ";" @ >

[4][Block] BEGIN 
[RULE: 1][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- BeginObject(BlockStat)

[5][Block] END [ENDING]
[RULE: 1][CLAUSE: -1]

[6][Block]< "{" @ { Stat } "}" >
[RULE: 1][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Block -> [24][Stat]<< !Block @ >>
	token: "}" -> [8][Block]< "{" { Stat } "}" @ >
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: IfContent -> [23][Stat]< IfContent @ >
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Do -> [25][Stat]<< !Do @ >>

[7][Block]< "{" { Stat @ } "}" >
[RULE: 1][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Block -> [24][Stat]<< !Block @ >>
	token: "}" -> [8][Block]< "{" { Stat } "}" @ >
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: IfContent -> [23][Stat]< IfContent @ >
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Do -> [25][Stat]<< !Do @ >>

[8][Block]< "{" { Stat } "}" @ >
[RULE: 1][CLAUSE: 0]
	ending -> [5][Block] END [ENDING]
		- EndObject()

[9][IfThenStat] BEGIN 
[RULE: 2][CLAUSE: -1]
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(IfContentCandidate)

[10][IfThenStat] END [ENDING]
[RULE: 2][CLAUSE: -1]

[11][IfThenStat]< "if" "cond" "then" @ Stat >
[RULE: 2][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [12][IfThenStat]< "if" "cond" "then" Stat @ >
			+ Field(IfContentCandidate::thenBranch)
		> rule: Block -> [24][Stat]<< !Block @ >>
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: Stat -> [12][IfThenStat]< "if" "cond" "then" Stat @ >
			+ Field(IfContentCandidate::thenBranch)
		> rule: IfContent -> [23][Stat]< IfContent @ >
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [12][IfThenStat]< "if" "cond" "then" Stat @ >
			+ Field(IfContentCandidate::thenBranch)
		> rule: Do -> [25][Stat]<< !Do @ >>

[12][IfThenStat]< "if" "cond" "then" Stat @ >
[RULE: 2][CLAUSE: 0]
	ending -> [10][IfThenStat] END [ENDING]
		- EndObject()

[13][IfThenStat]< "if" "cond" @ "then" Stat >
[RULE: 2][CLAUSE: 0]
	token: "then" -> [11][IfThenStat]< "if" "cond" "then" @ Stat >

[14][IfThenStat]< "if" @ "cond" "then" Stat >
[RULE: 2][CLAUSE: 0]
	token: "cond" -> [13][IfThenStat]< "if" "cond" @ "then" Stat >

[15][IfContent] BEGIN 
[RULE: 3][CLAUSE: -1]
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>

[16][IfContent] END [ENDING]
[RULE: 3][CLAUSE: -1]

[17][IfContent]<< !IfThenStat "else" @ Stat >>
[RULE: 3][CLAUSE: 1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [18][IfContent]<< !IfThenStat "else" Stat @ >>
			+ Field(IfContentCandidate::elseBranch)
		> rule: Block -> [24][Stat]<< !Block @ >>
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: Stat -> [18][IfContent]<< !IfThenStat "else" Stat @ >>
			+ Field(IfContentCandidate::elseBranch)
		> rule: IfContent -> [23][Stat]< IfContent @ >
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [18][IfContent]<< !IfThenStat "else" Stat @ >>
			+ Field(IfContentCandidate::elseBranch)
		> rule: Do -> [25][Stat]<< !Do @ >>

[18][IfContent]<< !IfThenStat "else" Stat @ >>
[RULE: 3][CLAUSE: 1]
	ending -> [16][IfContent] END [ENDING]
		- EndObject()

[19][IfContent]<< !IfThenStat @ "else" Stat >>
[RULE: 3][CLAUSE: 1]
	token: "else" -> [17][IfContent]<< !IfThenStat "else" @ Stat >>

[20][IfContent]<< !IfThenStat @ >>
[RULE: 3][CLAUSE: 0]
	ending -> [16][IfContent] END [ENDING]
		- ReopenObject()
		- EndObject()
	leftrec -> [19][IfContent]<< !IfThenStat @ "else" Stat >>
		+ ReopenObject()

[21][Stat] BEGIN 
[RULE: 4][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Block -> [24][Stat]<< !Block @ >>
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: IfContent -> [23][Stat]< IfContent @ >
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Do -> [25][Stat]<< !Do @ >>

[22][Stat] END [ENDING]
[RULE: 4][CLAUSE: -1]

[23][Stat]< IfContent @ >
[RULE: 4][CLAUSE: 2]
	ending -> [22][Stat] END [ENDING]
		- Field(IfStat::content)
		- EndObject()

[24][Stat]<< !Block @ >>
[RULE: 4][CLAUSE: 1]
	ending -> [22][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[25][Stat]<< !Do @ >>
[RULE: 4][CLAUSE: 0]
	ending -> [22][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[26][Module] BEGIN 
[RULE: 5][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [28][Module]< Stat @ >
		> rule: Block -> [24][Stat]<< !Block @ >>
	token: "if" -> [14][IfThenStat]< "if" @ "cond" "then" Stat >
		- BeginObject(Module)
		- BeginObject(IfStat)
		- DelayFieldAssignment()
		- BeginObject(IfContentCandidate)
		> rule: Stat -> [28][Module]< Stat @ >
		> rule: IfContent -> [23][Stat]< IfContent @ >
		> rule: IfThenStat -> [20][IfContent]<< !IfThenStat @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [28][Module]< Stat @ >
		> rule: Do -> [25][Stat]<< !Do @ >>

[27][Module] END [ENDING]
[RULE: 5][CLAUSE: -1]

[28][Module]< Stat @ >
[RULE: 5][CLAUSE: 0]
	ending -> [27][Module] END [ENDING]
		- Field(Module::stat)
		- EndObject()

