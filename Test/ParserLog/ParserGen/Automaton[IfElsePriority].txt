[0][Do] BEGIN 
[RULE: 0][CLAUSE: -1]
	token: "do" -> [3][Do]< "do" @ ";" >
		- BeginObject(DoStat)

[1][Do] END [ENDING]
[RULE: 0][CLAUSE: -1]

[2][Do]< "do" ";" @ >
[RULE: 0][CLAUSE: 0]
	ending -> [1][Do] END [ENDING]
		- EndObject()

[3][Do]< "do" @ ";" >
[RULE: 0][CLAUSE: 0]
	token: ";" -> [2][Do]< "do" ";" @ >

[4][Block] BEGIN 
[RULE: 1][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- BeginObject(BlockStat)

[5][Block] END [ENDING]
[RULE: 1][CLAUSE: -1]

[6][Block]< "{" @ { Stat } "}" >
[RULE: 1][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Block -> [19][Stat]<< !Block @ >>
	token: "}" -> [8][Block]< "{" { Stat } "}" @ >
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: If -> [21][Stat]<< !If @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Do -> [20][Stat]<< !Do @ >>

[7][Block]< "{" { Stat @ } "}" >
[RULE: 1][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Block -> [19][Stat]<< !Block @ >>
	token: "}" -> [8][Block]< "{" { Stat } "}" @ >
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: If -> [21][Stat]<< !If @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: Do -> [20][Stat]<< !Do @ >>

[8][Block]< "{" { Stat } "}" @ >
[RULE: 1][CLAUSE: 0]
	ending -> [5][Block] END [ENDING]
		- EndObject()

[9][If] BEGIN 
[RULE: 2][CLAUSE: -1]
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- BeginObject(IfStat)

[10][If] END [ENDING]
[RULE: 2][CLAUSE: -1]

[11][If]< "if" "cond" "then" @ Stat +[ "else" Stat ] >
[RULE: 2][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [14][If]< "if" "cond" "then" Stat @ +[ "else" Stat ] >
			+ Field(IfStat::thenBranch)
		> rule: Block -> [19][Stat]<< !Block @ >>
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [14][If]< "if" "cond" "then" Stat @ +[ "else" Stat ] >
			+ Field(IfStat::thenBranch)
		> rule: If -> [21][Stat]<< !If @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [14][If]< "if" "cond" "then" Stat @ +[ "else" Stat ] >
			+ Field(IfStat::thenBranch)
		> rule: Do -> [20][Stat]<< !Do @ >>

[12][If]< "if" "cond" "then" Stat +[ "else" @ Stat ] >
[RULE: 2][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [13][If]< "if" "cond" "then" Stat +[ "else" Stat @ ] >
			+ Field(IfStat::elseBranch)
		> rule: Block -> [19][Stat]<< !Block @ >>
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [13][If]< "if" "cond" "then" Stat +[ "else" Stat @ ] >
			+ Field(IfStat::elseBranch)
		> rule: If -> [21][Stat]<< !If @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [13][If]< "if" "cond" "then" Stat +[ "else" Stat @ ] >
			+ Field(IfStat::elseBranch)
		> rule: Do -> [20][Stat]<< !Do @ >>

[13][If]< "if" "cond" "then" Stat +[ "else" Stat @ ] >
[RULE: 2][CLAUSE: 0]
	ending -> [10][If] END [ENDING]
		- EndObject()

[14][If]< "if" "cond" "then" Stat @ +[ "else" Stat ] >
[RULE: 2][CLAUSE: 0]
	ending [LOW PRIORITY] -> [10][If] END [ENDING]
		- EndObject()
	token: "else" [HIGH PRIORITY] -> [12][If]< "if" "cond" "then" Stat +[ "else" @ Stat ] >

[15][If]< "if" "cond" @ "then" Stat +[ "else" Stat ] >
[RULE: 2][CLAUSE: 0]
	token: "then" -> [11][If]< "if" "cond" "then" @ Stat +[ "else" Stat ] >

[16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
[RULE: 2][CLAUSE: 0]
	token: "cond" -> [15][If]< "if" "cond" @ "then" Stat +[ "else" Stat ] >

[17][Stat] BEGIN 
[RULE: 3][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Block -> [19][Stat]<< !Block @ >>
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: If -> [21][Stat]<< !If @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Do -> [20][Stat]<< !Do @ >>

[18][Stat] END [ENDING]
[RULE: 3][CLAUSE: -1]

[19][Stat]<< !Block @ >>
[RULE: 3][CLAUSE: 1]
	ending -> [18][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[20][Stat]<< !Do @ >>
[RULE: 3][CLAUSE: 0]
	ending -> [18][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[21][Stat]<< !If @ >>
[RULE: 3][CLAUSE: 2]
	ending -> [18][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[22][Module] BEGIN 
[RULE: 4][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [24][Module]< Stat @ >
		> rule: Block -> [19][Stat]<< !Block @ >>
	token: "if" -> [16][If]< "if" @ "cond" "then" Stat +[ "else" Stat ] >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [24][Module]< Stat @ >
		> rule: If -> [21][Stat]<< !If @ >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [24][Module]< Stat @ >
		> rule: Do -> [20][Stat]<< !Do @ >>

[23][Module] END [ENDING]
[RULE: 4][CLAUSE: -1]

[24][Module]< Stat @ >
[RULE: 4][CLAUSE: 0]
	ending -> [23][Module] END [ENDING]
		- Field(Module::stat)
		- EndObject()

