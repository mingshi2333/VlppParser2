[0][Do] BEGIN 
[RULE: 0][CLAUSE: -1]
	token: "do" -> [3][Do]< "do" @ ";" >
		- BeginObject(DoStat)

[1][Do] END [ENDING]
[RULE: 0][CLAUSE: -1]

[2][Do]< "do" ";" @ >
[RULE: 0][CLAUSE: 0]
	ending -> [1][Do] END [ENDING]
		- EndObject()

[3][Do]< "do" @ ";" >
[RULE: 0][CLAUSE: 0]
	token: ";" -> [2][Do]< "do" ";" @ >

[4][Block] BEGIN 
[RULE: 1][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- BeginObject(BlockStat)

[5][Block] END [ENDING]
[RULE: 1][CLAUSE: -1]

[6][Block]< "{" @ { Stat } "}" >
[RULE: 1][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "}" -> [8][Block]< "{" { Stat } "}" @ >
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[7][Block]< "{" { Stat @ } "}" >
[RULE: 1][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "}" -> [8][Block]< "{" { Stat } "}" @ >
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [7][Block]< "{" { Stat @ } "}" >
			+ Field(BlockStat::stats)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[8][Block]< "{" { Stat } "}" @ >
[RULE: 1][CLAUSE: 0]
	ending -> [5][Block] END [ENDING]
		- EndObject()

[9][HalfIf] BEGIN 
[RULE: 2][CLAUSE: -1]
	token: "if" -> [14][HalfIf]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)

[10][HalfIf] END [ENDING]
[RULE: 2][CLAUSE: -1]

[11][HalfIf]< "if" "cond" "then" @ Stat >
[RULE: 2][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [12][HalfIf]< "if" "cond" "then" Stat @ >
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [12][HalfIf]< "if" "cond" "then" Stat @ >
			+ Field(IfStat::thenBranch)
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [12][HalfIf]< "if" "cond" "then" Stat @ >
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[12][HalfIf]< "if" "cond" "then" Stat @ >
[RULE: 2][CLAUSE: 0]
	ending -> [10][HalfIf] END [ENDING]
		- EndObject()

[13][HalfIf]< "if" "cond" @ "then" Stat >
[RULE: 2][CLAUSE: 0]
	token: "then" -> [11][HalfIf]< "if" "cond" "then" @ Stat >

[14][HalfIf]< "if" @ "cond" "then" Stat >
[RULE: 2][CLAUSE: 0]
	token: "cond" -> [13][HalfIf]< "if" "cond" @ "then" Stat >

[15][CompleteIf] BEGIN 
[RULE: 3][CLAUSE: -1]
	token: "if" -> [22][CompleteIf]< "if" @ "cond" "then" CompleteStat "else" Stat >
		- BeginObject(IfStat)

[16][CompleteIf] END [ENDING]
[RULE: 3][CLAUSE: -1]

[17][CompleteIf]< "if" "cond" "then" @ CompleteStat "else" Stat >
[RULE: 3][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: CompleteStat -> [20][CompleteIf]< "if" "cond" "then" CompleteStat @ "else" Stat >
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [22][CompleteIf]< "if" @ "cond" "then" CompleteStat "else" Stat >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: CompleteStat -> [20][CompleteIf]< "if" "cond" "then" CompleteStat @ "else" Stat >
			+ Field(IfStat::thenBranch)
		> rule: CompleteIf -> [42][CompleteStat]<< ( !OtherStat | !CompleteIf @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: CompleteStat -> [20][CompleteIf]< "if" "cond" "then" CompleteStat @ "else" Stat >
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[18][CompleteIf]< "if" "cond" "then" CompleteStat "else" @ Stat >
[RULE: 3][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [19][CompleteIf]< "if" "cond" "then" CompleteStat "else" Stat @ >
			+ Field(IfStat::elseBranch)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [19][CompleteIf]< "if" "cond" "then" CompleteStat "else" Stat @ >
			+ Field(IfStat::elseBranch)
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [19][CompleteIf]< "if" "cond" "then" CompleteStat "else" Stat @ >
			+ Field(IfStat::elseBranch)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[19][CompleteIf]< "if" "cond" "then" CompleteStat "else" Stat @ >
[RULE: 3][CLAUSE: 0]
	ending -> [16][CompleteIf] END [ENDING]
		- EndObject()

[20][CompleteIf]< "if" "cond" "then" CompleteStat @ "else" Stat >
[RULE: 3][CLAUSE: 0]
	token: "else" -> [18][CompleteIf]< "if" "cond" "then" CompleteStat "else" @ Stat >

[21][CompleteIf]< "if" "cond" @ "then" CompleteStat "else" Stat >
[RULE: 3][CLAUSE: 0]
	token: "then" -> [17][CompleteIf]< "if" "cond" "then" @ CompleteStat "else" Stat >

[22][CompleteIf]< "if" @ "cond" "then" CompleteStat "else" Stat >
[RULE: 3][CLAUSE: 0]
	token: "cond" -> [21][CompleteIf]< "if" "cond" @ "then" CompleteStat "else" Stat >

[23][IfTail] BEGIN 
[RULE: 4][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: CompleteStat -> [25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [14][HalfIf]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		> rule: HalfIf -> [28][IfTail]( CompleteStat [ "else" Stat ] | HalfIf @ )
	token: "if" -> [22][CompleteIf]< "if" @ "cond" "then" CompleteStat "else" Stat >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: CompleteStat -> [25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
			+ Field(IfStat::thenBranch)
		> rule: CompleteIf -> [42][CompleteStat]<< ( !OtherStat | !CompleteIf @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: CompleteStat -> [25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[24][IfTail] END [ENDING]
[RULE: 4][CLAUSE: -1]

[25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
[RULE: 4][CLAUSE: 0]
	ending -> [24][IfTail] END [ENDING]
	token: "else" -> [26][IfTail]( CompleteStat [ "else" @ Stat ] | HalfIf )

[26][IfTail]( CompleteStat [ "else" @ Stat ] | HalfIf )
[RULE: 4][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [27][IfTail]( CompleteStat [ "else" Stat @ ] | HalfIf )
			+ Field(IfStat::elseBranch)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [27][IfTail]( CompleteStat [ "else" Stat @ ] | HalfIf )
			+ Field(IfStat::elseBranch)
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [27][IfTail]( CompleteStat [ "else" Stat @ ] | HalfIf )
			+ Field(IfStat::elseBranch)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[27][IfTail]( CompleteStat [ "else" Stat @ ] | HalfIf )
[RULE: 4][CLAUSE: 0]
	ending -> [24][IfTail] END [ENDING]

[28][IfTail]( CompleteStat [ "else" Stat ] | HalfIf @ )
[RULE: 4][CLAUSE: 0]
	ending -> [24][IfTail] END [ENDING]
		- Field(IfStat::thenBranch)

[29][If] BEGIN 
[RULE: 5][CLAUSE: -1]
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- BeginObject(IfStat)

[30][If] END [ENDING]
[RULE: 5][CLAUSE: -1]

[31][If]< "if" "cond" "then" @ IfTail >
[RULE: 5][CLAUSE: 0]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: IfTail -> [32][If]< "if" "cond" "then" IfTail @ >
		> rule: CompleteStat -> [25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [14][HalfIf]< "if" @ "cond" "then" Stat >
		- BeginObject(IfStat)
		> rule: IfTail -> [32][If]< "if" "cond" "then" IfTail @ >
		> rule: HalfIf -> [28][IfTail]( CompleteStat [ "else" Stat ] | HalfIf @ )
	token: "if" -> [22][CompleteIf]< "if" @ "cond" "then" CompleteStat "else" Stat >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: IfTail -> [32][If]< "if" "cond" "then" IfTail @ >
		> rule: CompleteStat -> [25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
			+ Field(IfStat::thenBranch)
		> rule: CompleteIf -> [42][CompleteStat]<< ( !OtherStat | !CompleteIf @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: IfTail -> [32][If]< "if" "cond" "then" IfTail @ >
		> rule: CompleteStat -> [25][IfTail]( CompleteStat @ [ "else" Stat ] | HalfIf )
			+ Field(IfStat::thenBranch)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[32][If]< "if" "cond" "then" IfTail @ >
[RULE: 5][CLAUSE: 0]
	ending -> [30][If] END [ENDING]
		- EndObject()

[33][If]< "if" "cond" @ "then" IfTail >
[RULE: 5][CLAUSE: 0]
	token: "then" -> [31][If]< "if" "cond" "then" @ IfTail >

[34][If]< "if" @ "cond" "then" IfTail >
[RULE: 5][CLAUSE: 0]
	token: "cond" -> [33][If]< "if" "cond" @ "then" IfTail >

[35][OtherStat] BEGIN 
[RULE: 6][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[36][OtherStat] END [ENDING]
[RULE: 6][CLAUSE: -1]

[37][OtherStat]<< ( !Do @ | !Block ) >>
[RULE: 6][CLAUSE: 0]
	ending -> [36][OtherStat] END [ENDING]
		- ReopenObject()
		- EndObject()

[38][OtherStat]<< ( !Do | !Block @ ) >>
[RULE: 6][CLAUSE: 0]
	ending -> [36][OtherStat] END [ENDING]
		- ReopenObject()
		- EndObject()

[39][CompleteStat] BEGIN 
[RULE: 7][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [22][CompleteIf]< "if" @ "cond" "then" CompleteStat "else" Stat >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: CompleteIf -> [42][CompleteStat]<< ( !OtherStat | !CompleteIf @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: OtherStat -> [41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[40][CompleteStat] END [ENDING]
[RULE: 7][CLAUSE: -1]

[41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>
[RULE: 7][CLAUSE: 0]
	ending -> [40][CompleteStat] END [ENDING]
		- ReopenObject()
		- EndObject()

[42][CompleteStat]<< ( !OtherStat | !CompleteIf @ ) >>
[RULE: 7][CLAUSE: 0]
	ending -> [40][CompleteStat] END [ENDING]
		- ReopenObject()
		- EndObject()

[43][Stat] BEGIN 
[RULE: 8][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[44][Stat] END [ENDING]
[RULE: 8][CLAUSE: -1]

[45][Stat]<< ( !OtherStat @ | !If ) >>
[RULE: 8][CLAUSE: 0]
	ending -> [44][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[46][Stat]<< ( !OtherStat | !If @ ) >>
[RULE: 8][CLAUSE: 0]
	ending -> [44][Stat] END [ENDING]
		- ReopenObject()
		- EndObject()

[47][Module] BEGIN 
[RULE: 9][CLAUSE: -1]
	token: "{" -> [6][Block]< "{" @ { Stat } "}" >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(BlockStat)
		> rule: Stat -> [49][Module]< Stat @ >
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Block -> [38][OtherStat]<< ( !Do | !Block @ ) >>
	token: "if" -> [34][If]< "if" @ "cond" "then" IfTail >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- BeginObject(IfStat)
		> rule: Stat -> [49][Module]< Stat @ >
		> rule: If -> [46][Stat]<< ( !OtherStat | !If @ ) >>
	token: "do" -> [3][Do]< "do" @ ";" >
		- BeginObject(Module)
		- DelayFieldAssignment()
		- DelayFieldAssignment()
		- BeginObject(DoStat)
		> rule: Stat -> [49][Module]< Stat @ >
		> rule: OtherStat -> [45][Stat]<< ( !OtherStat @ | !If ) >>
		> rule: Do -> [37][OtherStat]<< ( !Do @ | !Block ) >>

[48][Module] END [ENDING]
[RULE: 9][CLAUSE: -1]

[49][Module]< Stat @ >
[RULE: 9][CLAUSE: 0]
	ending -> [48][Module] END [ENDING]
		- Field(Module::stat)
		- EndObject()

