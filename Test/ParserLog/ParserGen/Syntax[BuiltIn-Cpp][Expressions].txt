{
    "$ast": "SyntaxFile",
    "rules": [{
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Macro_LPREFIX"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "MACRO_LPREFIX",
                "refType": "Id"
            },
            "type": "StringLiteralFragment"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "String"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "STRING",
                "refType": "Id"
            },
            "type": "StringLiteralFragment"
        }],
        "name": "_StringLiteralFragment",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "Id"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "id",
                "literal": "_DeclaratorId",
                "refType": "Id"
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "Id"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "id",
                    "literal": "_DeclaratorId",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "init",
                    "literal": "_VarInit",
                    "refType": "Id"
                }
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "PackId"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "id",
                    "literal": "_DeclaratorId",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"...\"",
                    "refType": "Literal"
                }
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "PackInit"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"...\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "id",
                        "literal": "_DeclaratorId",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "init",
                    "literal": "_VarInit",
                    "refType": "Id"
                }
            },
            "type": "LambdaCapture"
        }],
        "name": "_LambdaCaptureId",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "Default"
            }, {
                "$ast": "Assignment",
                "field": "refKind",
                "type": "Strong",
                "value": "Ref"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"&\"",
                "refType": "Literal"
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "Default"
            }, {
                "$ast": "Assignment",
                "field": "refKind",
                "type": "Strong",
                "value": "Copy"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"=\"",
                "refType": "Literal"
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "This"
            }, {
                "$ast": "Assignment",
                "field": "refKind",
                "type": "Strong",
                "value": "Ref"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"this\"",
                "refType": "Literal"
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "objKind",
                "type": "Strong",
                "value": "This"
            }, {
                "$ast": "Assignment",
                "field": "refKind",
                "type": "Strong",
                "value": "Copy"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"this\"",
                    "refType": "Literal"
                }
            },
            "type": "LambdaCapture"
        }, {
            "$ast": "ReuseClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "refKind",
                "type": "Strong",
                "value": "Copy"
            }],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_LambdaCaptureId"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "refKind",
                "type": "Strong",
                "value": "Ref"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"&\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "UseSyntax",
                    "name": "_LambdaCaptureId"
                }
            }
        }],
        "name": "_LambdaCapture",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"[\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "LoopSyntax",
                                    "delimiter": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\",\"",
                                        "refType": "Literal"
                                    },
                                    "syntax": {
                                        "$ast": "RefSyntax",
                                        "field": "captures",
                                        "literal": "_LambdaCapture",
                                        "refType": "Id"
                                    }
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"]\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "OptionalSyntax",
                            "priority": "Equal",
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "genericHeader",
                                "literal": "_GenericHeader",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "functionHeader",
                            "literal": "_DeclaratorFunctionPartOptionalParameters",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "stat",
                    "literal": "_BlockStat",
                    "refType": "Id"
                }
            },
            "type": "LambdaExpr"
        }],
        "name": "_LambdaExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "True"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"true\"",
                "refType": "Literal"
            },
            "type": "PrimitiveExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "False"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"false\"",
                "refType": "Literal"
            },
            "type": "PrimitiveExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Nullptr"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"nullptr\"",
                "refType": "Literal"
            },
            "type": "PrimitiveExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "This"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"this\"",
                "refType": "Literal"
            },
            "type": "PrimitiveExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "__Nullptr"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"__nullptr\"",
                "refType": "Literal"
            },
            "type": "PrimitiveExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Integer"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "INT",
                "refType": "Id"
            },
            "type": "NumericExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Hex"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "HEX",
                "refType": "Id"
            },
            "type": "NumericExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Binary"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "BIN",
                "refType": "Id"
            },
            "type": "NumericExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Float"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "FLOAT",
                "refType": "Id"
            },
            "type": "NumericExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "FloatHex"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "FLOATHEX",
                "refType": "Id"
            },
            "type": "NumericExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Char"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal",
                "literal": "CHAR",
                "refType": "Id"
            },
            "type": "NumericExprLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "fragments",
                    "literal": "_StringLiteralFragment",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "LoopSyntax",
                    "delimiter": null,
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "fragments",
                        "literal": "_StringLiteralFragment",
                        "refType": "Id"
                    }
                }
            },
            "type": "StringLiteral"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"(\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expr",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "ParenthesisExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"{\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expr_Argument",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "BraceExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "keyword",
                                        "literal": "\"dynamic_cast\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"<\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "type",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expr",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CastExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "keyword",
                                        "literal": "\"static_cast\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"<\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "type",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expr",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CastExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "keyword",
                                        "literal": "\"const_cast\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"<\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "type",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expr",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CastExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "keyword",
                                        "literal": "\"reinterpret_cast\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"<\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "type",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expr",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CastExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "keyword",
                                        "literal": "\"safe_cast\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"<\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "type",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expr",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CastExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "keyword",
                            "literal": "\"typeid\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_TypeOrExpr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "SysFuncExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "keyword",
                            "literal": "\"alignof\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_TypeOrExpr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "SysFuncExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "keyword",
                            "literal": "\"__alignof\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_TypeOrExpr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "SysFuncExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "keyword",
                            "literal": "\"__uuidof\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_TypeOrExpr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "SysFuncExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "keyword",
                            "literal": "\"noexcept\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_TypeOrExpr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "SysFuncExpr"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_LambdaExpr"
            }
        }],
        "name": "_PrimitiveExpr",
        "type": "TypeOrExpr"
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PrefixMergeClause",
            "rule": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_PrimitiveExpr",
                "refType": "Id"
            }
        }, {
            "$ast": "PrefixMergeClause",
            "rule": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_QualifiedName",
                "refType": "Id"
            }
        }],
        "name": "_QualifiedName_PrimitiveExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_QualifiedName_PrimitiveExpr"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Brace"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "operand",
                            "literal": "_QualifiedName",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expr_Argument",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "CallExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Brace"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "operand",
                            "literal": "_CallConstructibleType",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expr_Argument",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "CallExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Parenthesis"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "operand",
                            "literal": "_CallConstructibleType",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expr_Argument",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CallExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Member"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_PostfixUnaryExpr",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\".\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_QualifiedName",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Pointer"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_PostfixUnaryExpr",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"->\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_QualifiedName",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Increase"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PostfixUnaryExpr",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"++\"",
                    "refType": "Literal"
                }
            },
            "type": "PostfixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Decrease"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PostfixUnaryExpr",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"--\"",
                    "refType": "Literal"
                }
            },
            "type": "PostfixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "operand",
                            "literal": "_PostfixUnaryExpr",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"[\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "index",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "IndexExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Parenthesis"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "operand",
                            "literal": "_PostfixUnaryExpr",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expr_Argument",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CallExpr"
        }],
        "name": "_PostfixUnaryExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "scope",
                "type": "Strong",
                "value": "Context"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"new\"",
                "refType": "Literal"
            },
            "type": "NewExpr"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "scope",
                "type": "Strong",
                "value": "Root"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"::\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"new\"",
                    "refType": "Literal"
                }
            },
            "type": "NewExpr"
        }],
        "name": "_NewPrefix",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "_NewPrefix",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "OptionalSyntax",
                                "priority": "Equal",
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"(\"",
                                            "refType": "Literal"
                                        },
                                        "second": {
                                            "$ast": "LoopSyntax",
                                            "delimiter": {
                                                "$ast": "RefSyntax",
                                                "field": "",
                                                "literal": "\",\"",
                                                "refType": "Literal"
                                            },
                                            "syntax": {
                                                "$ast": "RefSyntax",
                                                "field": "placementArguments",
                                                "literal": "_Expr_Argument",
                                                "refType": "Id"
                                            }
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\")\"",
                                        "refType": "Literal"
                                    }
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "type",
                            "literal": "_QualifiedName",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"[\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "arrayArguments",
                                    "literal": "_Expr",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"]\"",
                                "refType": "Literal"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "init",
                        "literal": "_VarCtorInit",
                        "refType": "Id"
                    }
                }
            },
            "type": "NewExpr"
        }],
        "name": "_NewExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "scope",
                "type": "Strong",
                "value": "Context"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"delete\"",
                "refType": "Literal"
            },
            "type": "DeleteExpr"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "scope",
                "type": "Strong",
                "value": "Root"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"::\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"delete\"",
                    "refType": "Literal"
                }
            },
            "type": "DeleteExpr"
        }],
        "name": "_DeletePrefix",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_DeletePrefix",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "argument",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "DeleteExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "_DeletePrefix",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"[\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"]\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "argument",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "DeleteExpr"
        }],
        "name": "_DeleteExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"sizeof\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "variadic",
                        "literal": "\"...\"",
                        "refType": "Literal"
                    }
                }
            },
            "type": "SizeofExpr"
        }],
        "name": "_SizeOfPrefix",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_SizeOfPrefix",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "argument",
                    "literal": "_PostfixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "SizeofExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_SizeOfPrefix",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "argument",
                    "literal": "_AllPrefixUnaryExpr_NoCStyleCast",
                    "refType": "Id"
                }
            },
            "type": "SizeofExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "_SizeOfPrefix",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_Type",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "SizeofExpr"
        }],
        "name": "_SizeofExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Increase"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"++\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Decrease"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"--\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Revert"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"~\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Not"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"!\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Minus"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"-\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Plus"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"+\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "BitwiseAnd"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"&\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Mul"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "PrefixUnaryExpr"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_NewExpr"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_DeleteExpr"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_SizeofExpr"
            }
        }],
        "name": "_AllPrefixUnaryExpr_NoCStyleCast",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_AllPrefixUnaryExpr_NoCStyleCast"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "type",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "expr",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "CastExpr"
        }],
        "name": "_AllPrefixUnaryExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_PostfixUnaryExpr"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_AllPrefixUnaryExpr"
            }
        }],
        "name": "_PrefixUnaryExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_NameIdentifier"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_DtorIdentifier"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_OperatorIdentifier"
            }
        }],
        "name": "_MemberOperatorIdentifier",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_PrefixUnaryExpr"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "MemberDeref"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr0",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\".*\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "PointerDeref"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr0",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"->*\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_PrefixUnaryExpr",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr0",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr0"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Mul"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr1",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"*\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr0",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Div"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr1",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"\/\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr0",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Mod"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr1",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"%\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr0",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr1",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr1"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Plus"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr2",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"+\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr1",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Minus"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr2",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"-\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr1",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr2",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr2"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "LeftShift"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "left",
                            "literal": "_BExpr3",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"<\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"<\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr2",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "RightShift"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "left",
                            "literal": "_BExpr3",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\">\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\">\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr2",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr3",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr3"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Compare"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr3",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"<=>\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr3",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr4",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr4"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "LT"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"<\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "GT"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "left",
                    "literal": "_BExpr5",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "TestConditionSyntax",
                    "branches": [{
                        "$ast": "TestConditionBranch",
                        "condition": {
                            "$ast": "RefCondition",
                            "name": "allow_GT"
                        },
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "right",
                                "literal": "_BExpr4",
                                "refType": "Id"
                            }
                        }
                    }]
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "LE"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "left",
                            "literal": "_BExpr5",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"<\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "GE"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "left",
                            "literal": "_BExpr5",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\">\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr5",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr5"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "EQ"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr6",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"==\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr5",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "NE"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr6",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"!=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr5",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr6",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr6"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "BitwiseAnd"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr7",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"&\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr6",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr7",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr7"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Xor"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr8",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"^\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr7",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr8",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr8"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "BitwiseOr"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr9",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"|\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr8",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr9",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr9"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "And"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr10",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"&&\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr9",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr10",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr10"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Or"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"||\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr10",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr11",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"throw\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_BExpr10",
                        "refType": "Id"
                    }
                }
            },
            "type": "ThrowExpr"
        }],
        "name": "_ThrowExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "@public",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr11"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_ThrowExpr"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "condition",
                                "literal": "_BExpr11",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"?\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "trueBranch",
                            "literal": "_Expr",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\":\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "falseBranch",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "IfExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Assign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "MulAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"*=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "DivAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"\/=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "ModAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"%=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "PlusAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"+=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "MinusAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"-=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "LeftShiftAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "left",
                                "literal": "_BExpr11",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"<\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"<\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "RightShiftAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "left",
                                "literal": "_BExpr11",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\">\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\">\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "AndAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"&=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "OrAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"|=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "XorAssign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr11",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"^=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr_NoComma",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "@public",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr_NoComma"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Comma"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "left",
                        "literal": "_BExpr",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\",\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "right",
                    "literal": "_BExpr_NoComma",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpr"
        }],
        "name": "_BExpr",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "@public",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr_NoComma"
            }
        }],
        "name": "_Expr_NoComma_Raw",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "@public",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_BExpr"
            }
        }],
        "name": "_Expr_Raw",
        "type": ""
    }],
    "switches": []
}