{
    "$ast": "SyntaxFile",
    "rules": [{
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"wchar_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char8_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char16_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char32_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"short\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"int\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int8\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int16\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int32\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int64\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"long\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "literal1",
                    "literal": "\"long\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "literal2",
                    "literal": "\"int\"",
                    "refType": "Literal"
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "literal1",
                    "literal": "\"long\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "literal2",
                    "literal": "\"long\"",
                    "refType": "Literal"
                }
            },
            "type": "PrimitiveType"
        }],
        "name": "_PrimitiveTypeLiteral",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Signed"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"signed\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_PrimitiveTypeLiteral",
                        "refType": "Id"
                    }
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Unsigned"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"unsigned\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_PrimitiveTypeLiteral",
                        "refType": "Id"
                    }
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"void\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"bool\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"float\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"double\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "literal1",
                    "literal": "\"long\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "literal2",
                    "literal": "\"double\"",
                    "refType": "Literal"
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_PrimitiveTypeLiteral",
                "refType": "Id"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"typename\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "UseSyntax",
                    "name": "_QualifiedNameAfterTypename"
                }
            }
        }],
        "name": "_PrimitiveType",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PrefixMergeClause",
            "rule": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_PrimitiveType",
                "refType": "Id"
            }
        }],
        "name": "_PM_PrimitiveType",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PrefixMergeClause",
            "rule": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_QualifiedName",
                "refType": "Id"
            }
        }],
        "name": "_PM_QualifiedName",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_PM_PrimitiveType"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_ShortTypeBeforeDeclarator",
                    "refType": "Id"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_ShortTypeBeforeDeclarator",
                    "refType": "Id"
                }
            },
            "type": "VolatileType"
        }],
        "name": "_CallConstructibleTypeBeforeDeclarator",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_PM_QualifiedName"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_CallConstructibleTypeBeforeDeclarator"
            }
        }],
        "name": "_ShortTypeBeforeDeclarator",
        "type": "TypeOrExpr"
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_CallConstructibleTypeBeforeDeclarator"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_PM_QualifiedName",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_PM_QualifiedName",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                }
            },
            "type": "VolatileType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_CallConstructibleType",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_CallConstructibleType",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                }
            },
            "type": "VolatileType"
        }],
        "name": "_CallConstructibleType",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_ShortTypeBeforeDeclarator"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeBeforeDeclarator",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeBeforeDeclarator",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                }
            },
            "type": "VolatileType"
        }],
        "name": "_TypeBeforeDeclarator",
        "type": ""
    }],
    "switches": []
}