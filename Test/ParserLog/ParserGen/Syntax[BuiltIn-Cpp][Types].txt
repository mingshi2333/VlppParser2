{
    "$ast": "SyntaxFile",
    "rules": [{
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"wchar_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char8_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char16_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char32_t\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"char\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"short\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"int\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int8\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int16\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int32\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"__int64\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"long\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "literal1",
                    "literal": "\"long\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "literal2",
                    "literal": "\"int\"",
                    "refType": "Literal"
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "literal1",
                    "literal": "\"long\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "literal2",
                    "literal": "\"long\"",
                    "refType": "Literal"
                }
            },
            "type": "PrimitiveType"
        }],
        "name": "_PrimitiveTypeLiteral",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Signed"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"signed\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_PrimitiveTypeLiteral",
                        "refType": "Id"
                    }
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Unsigned"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"unsigned\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_PrimitiveTypeLiteral",
                        "refType": "Id"
                    }
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"void\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"bool\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"float\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "literal1",
                "literal": "\"double\"",
                "refType": "Literal"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "literal1",
                    "literal": "\"long\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "literal2",
                    "literal": "\"double\"",
                    "refType": "Literal"
                }
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Neutral"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_PrimitiveTypeLiteral",
                "refType": "Id"
            },
            "type": "PrimitiveType"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"typename\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "UseSyntax",
                    "name": "_QualifiedName"
                }
            }
        }],
        "name": "_PrimitiveType",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PrefixMergeClause",
            "rule": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_PrimitiveType",
                "refType": "Id"
            }
        }],
        "name": "_PM_PrimitiveType",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PrefixMergeClause",
            "rule": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "_QualifiedName",
                "refType": "Id"
            }
        }],
        "name": "_PM_QualifiedName",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_PM_PrimitiveType"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeBeforeDeclarator",
                    "refType": "Id"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeBeforeDeclarator",
                    "refType": "Id"
                }
            },
            "type": "VolatileType"
        }],
        "name": "_ShortTypeStartsWithKeywordBeforeDeclarator",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_PM_QualifiedName"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_ShortTypeStartsWithKeywordBeforeDeclarator"
            }
        }],
        "name": "_ShortTypeBeforeDeclarator",
        "type": "TypeOrExpr"
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_ShortTypeStartsWithKeywordBeforeDeclarator"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeStartsWithKeywordBeforeDeclarator",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeStartsWithKeywordBeforeDeclarator",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                }
            },
            "type": "VolatileType"
        }],
        "name": "_TypeStartsWithKeywordBeforeDeclarator",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_ShortTypeBeforeDeclarator"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeBeforeDeclarator",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"const\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_TypeBeforeDeclarator",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"volatile\"",
                    "refType": "Literal"
                }
            },
            "type": "VolatileType"
        }],
        "name": "_TypeBeforeDeclarator",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "LRef"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"&\"",
                "refType": "Literal"
            },
            "type": "AdvancedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "RRef"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"&&\"",
                "refType": "Literal"
            },
            "type": "AdvancedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Pointer"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"*\"",
                "refType": "Literal"
            },
            "type": "AdvancedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Pointer32"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"__ptr32\"",
                    "refType": "Literal"
                }
            },
            "type": "AdvancedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Pointer64"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"__ptr64\"",
                    "refType": "Literal"
                }
            },
            "type": "AdvancedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "AlignAs"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"alignas\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "AdvancedType"
        }],
        "name": "_AdvancedTypeNoCVNoMember",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Const"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"const\"",
                "refType": "Literal"
            },
            "type": "AdvancedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Volatile"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"volatile\"",
                "refType": "Literal"
            },
            "type": "AdvancedType"
        }],
        "name": "_AdvancedTypeCV",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_AdvancedTypeNoCVNoMember"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_AdvancedTypeCV"
            }
        }],
        "name": "_AdvancedTypeNoMember",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Member"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "argument",
                    "literal": "_QualifiedName",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"::\"",
                    "refType": "Literal"
                }
            },
            "type": "AdvancedType"
        }],
        "name": "_AdvancedTypeMember",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"constexpr\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"extern\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"static\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"mutable\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"thread_local\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"virtual\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"explicit\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"friend\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"abstract\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"inline\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__inline\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__forceinline\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__cdecl\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__clrcall\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__stdcall\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__fastcall\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__thiscall\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"__vectorcall\"",
                "refType": "Literal"
            },
            "type": "DeclaratorKeyword"
        }],
        "name": "_DeclaratorKeyword",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "advancedTypes",
                "literal": "_AdvancedTypeNoCVNoMember",
                "refType": "Id"
            },
            "type": "Declarator"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keywords",
                "literal": "_DeclaratorKeyword",
                "refType": "Id"
            },
            "type": "Declarator"
        }],
        "name": "_DeclaratorAKFirst",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "advancedTypes",
                "literal": "_AdvancedTypeNoMember",
                "refType": "Id"
            },
            "type": "Declarator"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keywords",
                "literal": "_DeclaratorKeyword",
                "refType": "Id"
            },
            "type": "Declarator"
        }],
        "name": "_DeclaratorAKFollow",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "advancedTypes",
                "literal": "_AdvancedTypeCV",
                "refType": "Id"
            },
            "type": "Declarator"
        }],
        "name": "_DeclaratorAKCV",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "advancedTypes",
                "literal": "_AdvancedTypeMember",
                "refType": "Id"
            },
            "type": "Declarator"
        }],
        "name": "_DeclaratorAKMember",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"(\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "variadic",
                            "literal": "\"...\"",
                            "refType": "Literal"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "DeclaratorFunctionPart"
        }, {
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "parameters",
                                "literal": "_TypeOrSingleVarDeclOptionalName",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": null,
                            "syntax": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "parameters",
                                    "literal": "_TypeOrSingleVarDeclOptionalName",
                                    "refType": "Id"
                                }
                            }
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "variadic",
                                "literal": "\"...\"",
                                "refType": "Literal"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "DeclaratorFunctionPart"
        }],
        "name": "_DeclaratorFunctionParameters",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"constexpr\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"&\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"&&\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"const\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"volatile\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"override\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"final\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "keyword",
                "literal": "\"mutable\"",
                "refType": "Literal"
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "keyword",
                    "literal": "\"noexcept\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "arguments",
                                    "literal": "_Expr_Argument",
                                    "refType": "Id"
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    }
                }
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "keyword",
                    "literal": "\"throw\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "arguments",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    }
                }
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"=\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "keyword",
                    "literal": "'0'",
                    "refType": "ConditionalLiteral"
                }
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"=\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "keyword",
                    "literal": "\"delete\"",
                    "refType": "Literal"
                }
            },
            "type": "FunctionKeyword"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"=\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "keyword",
                    "literal": "\"default\"",
                    "refType": "Literal"
                }
            },
            "type": "FunctionKeyword"
        }],
        "name": "_FunctionKeyword",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_DeclaratorFunctionParameters",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "keywords",
                            "literal": "_FunctionKeyword",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"->\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "deferredType",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    }
                }
            },
            "type": "DeclaratorFunctionPart"
        }],
        "name": "_DeclaratorFunctionPart",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"[\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "argument",
                        "literal": "_Expr",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "DeclaratorArrayPart"
        }],
        "name": "_DeclaratorArrayPart",
        "type": ""
    }, {
        "$ast": "Rule",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_NameIdentifier"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_OperatorIdentifier"
            }
        }],
        "name": "_DeclaratorId",
        "type": ""
    }],
    "switches": []
}