{
    "$ast": "SyntaxFile",
    "rules": [{
        "$ast": "Rule",
        "attParser": "@parser",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Void"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"void\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Object"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"object\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Interface"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"interface\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Int"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"int\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "UInt"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"uint\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Float"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"float\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Double"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"double\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "String"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"string\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Char"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"char\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "name",
                "type": "Strong",
                "value": "Bool"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"bool\"",
                "refType": "Literal"
            },
            "type": "PredefinedType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "name",
                "literal": "NAME",
                "refType": "Id"
            },
            "type": "ReferenceType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"func\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "arguments",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\":\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "result",
                    "literal": "_Type",
                    "refType": "Id"
                }
            },
            "type": "FunctionType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "element",
                    "literal": "_Type",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                }
            },
            "type": "RawPointerType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "element",
                    "literal": "_Type",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"^\"",
                    "refType": "Literal"
                }
            },
            "type": "SharedPointerType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "element",
                    "literal": "_Type",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"?\"",
                    "refType": "Literal"
                }
            },
            "type": "NullableType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "element",
                        "literal": "_Type",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"{\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "EnumerableType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "writability",
                "type": "Strong",
                "value": "Writable"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "value",
                            "literal": "_Type",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"[\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "key",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "MapType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"observe\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "element",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"[\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "ObservableListType"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "writability",
                "type": "Strong",
                "value": "Readonly"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"const\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "value",
                                "literal": "_Type",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"[\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "key",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "MapType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "parent",
                        "literal": "_Type",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"::\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "name",
                    "literal": "NAME",
                    "refType": "Id"
                }
            },
            "type": "ChildType"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"::\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "name",
                    "literal": "NAME",
                    "refType": "Id"
                }
            },
            "type": "TopQualifiedType"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"(\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "UseSyntax",
                        "name": "_Type"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            }
        }],
        "name": "_Type",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "key",
                    "literal": "_Expression",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\":\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "value",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    }
                }
            },
            "type": "ConstructorArgument"
        }],
        "name": "_CtorFragment",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "name",
                        "literal": "NAME",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "value",
                    "literal": "_Expression",
                    "refType": "Id"
                }
            },
            "type": "LetVariable"
        }],
        "name": "_LetVariable",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "value",
                "literal": "FORMATSTRING",
                "refType": "Id"
            },
            "type": "FormatExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"bind\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "BindExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"$coroutine\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\")\"",
                                "refType": "Literal"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "NewCoroutineExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"new\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "type",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"using\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "MixinCastExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"$\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\".\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "name",
                    "literal": "NAME",
                    "refType": "Id"
                }
            },
            "type": "CoOperatorExpression"
        }],
        "name": "_VirtualExpression",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "beginBoundary",
                "type": "Strong",
                "value": "Exclusive"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"(\"",
                "refType": "Literal"
            },
            "type": "RangeExpression"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "beginBoundary",
                "type": "Strong",
                "value": "Inclusive"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"[\"",
                "refType": "Literal"
            },
            "type": "RangeExpression"
        }],
        "name": "_BeginBoundary",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "endBoundary",
                "type": "Strong",
                "value": "Exclusive"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\")\"",
                "refType": "Literal"
            },
            "type": "RangeExpression"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "endBoundary",
                "type": "Strong",
                "value": "Inclusive"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"]\"",
                "refType": "Literal"
            },
            "type": "RangeExpression"
        }],
        "name": "_EndBoundary",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "test",
                "type": "Strong",
                "value": "In"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"in\"",
                "refType": "Literal"
            },
            "type": "SetTestingExpression"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "test",
                "type": "Strong",
                "value": "NotIn"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"not\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"in\"",
                    "refType": "Literal"
                }
            },
            "type": "SetTestingExpression"
        }],
        "name": "_SetTestingOperator",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "value",
                "type": "Strong",
                "value": "Null"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"null\"",
                "refType": "Literal"
            },
            "type": "LiteralExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "value",
                "type": "Strong",
                "value": "True"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"true\"",
                "refType": "Literal"
            },
            "type": "LiteralExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "value",
                "type": "Strong",
                "value": "False"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"false\"",
                "refType": "Literal"
            },
            "type": "LiteralExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "value",
                "literal": "INTEGER",
                "refType": "Id"
            },
            "type": "IntegerExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "value",
                "literal": "FLOAT",
                "refType": "Id"
            },
            "type": "FloatingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "value",
                "literal": "STRING",
                "refType": "Id"
            },
            "type": "StringExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"this\"",
                "refType": "Literal"
            },
            "type": "ThisExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "name",
                "literal": "NAME",
                "refType": "Id"
            },
            "type": "ReferenceExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "name",
                "literal": "ORDERED_NAME",
                "refType": "Id"
            },
            "type": "OrderedNameExpression"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"(\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "UseSyntax",
                        "name": "_Expression"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"[\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "body",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "OrderedLambdaExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "function",
                "literal": "_Function",
                "refType": "Id"
            },
            "type": "FunctionExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"let\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "variables",
                                        "literal": "_LetVariable",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "LoopSyntax",
                                    "delimiter": null,
                                    "syntax": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\",\"",
                                            "refType": "Literal"
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "variables",
                                            "literal": "_LetVariable",
                                            "refType": "Id"
                                        }
                                    }
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"in\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "LetExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"range\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "_BeginBoundary",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "begin",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "end",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_EndBoundary",
                    "refType": "Id"
                }
            },
            "type": "RangeExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"{\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_CtorFragment",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "AlternativeSyntax",
                                "first": {
                                    "$ast": "LoopSyntax",
                                    "delimiter": null,
                                    "syntax": {
                                        "$ast": "RefSyntax",
                                        "field": "arguments",
                                        "literal": "_CtorFragment",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "LoopSyntax",
                                        "delimiter": null,
                                        "syntax": {
                                            "$ast": "SequenceSyntax",
                                            "first": {
                                                "$ast": "RefSyntax",
                                                "field": "",
                                                "literal": "\";\"",
                                                "refType": "Literal"
                                            },
                                            "second": {
                                                "$ast": "RefSyntax",
                                                "field": "arguments",
                                                "literal": "_CtorFragment",
                                                "refType": "Id"
                                            }
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\";\"",
                                        "refType": "Literal"
                                    }
                                }
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstructorExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"new\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "type",
                                "literal": "_Type",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "NewClassExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"new\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "type",
                                "literal": "_Type",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "declarations",
                            "literal": "_Declaration",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "NewInterfaceExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "observeType",
                "type": "Strong",
                "value": "SimpleObserve"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "parent",
                                        "literal": "_ExpPrimitive",
                                        "refType": "Id"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\".\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"observe\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"on\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "events",
                                    "literal": "_Expression",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": null,
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\",\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "events",
                                        "literal": "_Expression",
                                        "refType": "Id"
                                    }
                                }
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "ObserveExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "observeType",
                "type": "Strong",
                "value": "ExtendedObserve"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "SequenceSyntax",
                                            "first": {
                                                "$ast": "RefSyntax",
                                                "field": "parent",
                                                "literal": "_ExpPrimitive",
                                                "refType": "Id"
                                            },
                                            "second": {
                                                "$ast": "RefSyntax",
                                                "field": "",
                                                "literal": "\".\"",
                                                "refType": "Literal"
                                            }
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"observe\"",
                                            "refType": "Literal"
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"as\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"on\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "events",
                                    "literal": "_Expression",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": null,
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\",\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "events",
                                        "literal": "_Expression",
                                        "refType": "Id"
                                    }
                                }
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "ObserveExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "function",
                            "literal": "_ExpPrimitive",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_Expression",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": null,
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\",\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "arguments",
                                        "literal": "_Expression",
                                        "refType": "Id"
                                    }
                                }
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "CallExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "parent",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\".\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "name",
                    "literal": "NAME",
                    "refType": "Id"
                }
            },
            "type": "MemberExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "parent",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"::\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "name",
                    "literal": "NAME",
                    "refType": "Id"
                }
            },
            "type": "ChildExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Index"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "first",
                            "literal": "_ExpPrimitive",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"[\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "second",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"]\"",
                    "refType": "Literal"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "element",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_SetTestingOperator",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "collection",
                    "literal": "_Expression",
                    "refType": "Id"
                }
            },
            "type": "SetTestingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"of\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_Type",
                    "refType": "Id"
                }
            },
            "type": "InferExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "test",
                "type": "Strong",
                "value": "IsType"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"is\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_Type",
                    "refType": "Id"
                }
            },
            "type": "TypeTestingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "test",
                "type": "Strong",
                "value": "IsNotType"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_ExpPrimitive",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"is\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"not\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_Type",
                    "refType": "Id"
                }
            },
            "type": "TypeTestingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "test",
                "type": "Strong",
                "value": "IsNull"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"is\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"null\"",
                    "refType": "Literal"
                }
            },
            "type": "TypeTestingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "test",
                "type": "Strong",
                "value": "IsNotNull"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_ExpPrimitive",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"is\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"not\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"null\"",
                    "refType": "Literal"
                }
            },
            "type": "TypeTestingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "strategy",
                "type": "Strong",
                "value": "Weak"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"as\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_Type",
                    "refType": "Id"
                }
            },
            "type": "TypeCastingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "strategy",
                "type": "Strong",
                "value": "Weak"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_ExpPrimitive",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"as\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                }
            },
            "type": "ExpectedTypeCastExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"typeof\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "type",
                        "literal": "_Type",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "TypeOfTypeExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"type\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "TypeOfExpressionExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"attach\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "event",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "function",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "AttachEventExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"detach\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "event",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "handler",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "DetachEventExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"::\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "name",
                    "literal": "NAME",
                    "refType": "Id"
                }
            },
            "type": "TopQualifiedExpression"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_VirtualExpression"
            }
        }],
        "name": "_ExpPrimitive",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_ExpPrimitive"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Positive"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"+\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_Exp0",
                    "refType": "Id"
                }
            },
            "type": "UnaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Negative"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"-\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_Exp0",
                    "refType": "Id"
                }
            },
            "type": "UnaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Not"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"not\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "operand",
                    "literal": "_Exp0",
                    "refType": "Id"
                }
            },
            "type": "UnaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "strategy",
                "type": "Strong",
                "value": "Strong"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"cast\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "type",
                        "literal": "_Type",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "expression",
                    "literal": "_Exp0",
                    "refType": "Id"
                }
            },
            "type": "TypeCastingExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "strategy",
                "type": "Strong",
                "value": "Strong"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"cast\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"*\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "expression",
                    "literal": "_Exp0",
                    "refType": "Id"
                }
            },
            "type": "ExpectedTypeCastExpression"
        }],
        "name": "_Exp0",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp0"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Exp"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp1",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"^\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp0",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp1",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp1"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Mul"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp2",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"*\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp1",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Div"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp2",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"\/\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp1",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Mod"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp2",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"%\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp1",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp2",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp2"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Add"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp3",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"+\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp2",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Sub"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp3",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"-\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp2",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "FlagAnd"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp3",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"&\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp2",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "FlagOr"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp3",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"|\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp2",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp3",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp3"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Shl"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp4",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"shl\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp3",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Shr"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp4",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"shr\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp3",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp4",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp4"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "LT"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"<\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "GT"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\">\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "LE"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"<=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "GE"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\">=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "EQ"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"==\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "NE"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp5",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"!=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp4",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp5",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp5"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Xor"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp6",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"xor\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp5",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp6",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp6"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "And"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp7",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"and\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp6",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp7",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp7"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Or"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp8",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"or\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp7",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp8",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp8"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "FailedThen"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp9",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"??\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp8",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp9",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp9"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "condition",
                                "literal": "_Exp9",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"?\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "trueBranch",
                            "literal": "_Exp10",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\":\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "falseBranch",
                    "literal": "_Exp10",
                    "refType": "Id"
                }
            },
            "type": "IfExpression"
        }],
        "name": "_Exp10",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp10"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "op",
                "type": "Strong",
                "value": "Assign"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "first",
                        "literal": "_Exp10",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"=\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "second",
                    "literal": "_Exp11",
                    "refType": "Id"
                }
            },
            "type": "BinaryExpression"
        }],
        "name": "_Exp11",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "@parser",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Exp11"
            }
        }],
        "name": "_Expression",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"case\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\":\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "SwitchCase"
        }],
        "name": "_SwitchCase",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": null,
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "statements",
                                "literal": "_Statement",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "endLabel",
                                    "literal": "NAME",
                                    "refType": "Id"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\":\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\";\"",
                                "refType": "Literal"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "BlockStatement"
        }],
        "name": "_Block",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Block"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_If"
            }
        }],
        "name": "_ElseStat",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"if\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"(\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "OptionalSyntax",
                                    "priority": "Equal",
                                    "syntax": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "SequenceSyntax",
                                            "first": {
                                                "$ast": "SequenceSyntax",
                                                "first": {
                                                    "$ast": "SequenceSyntax",
                                                    "first": {
                                                        "$ast": "RefSyntax",
                                                        "field": "",
                                                        "literal": "\"var\"",
                                                        "refType": "Literal"
                                                    },
                                                    "second": {
                                                        "$ast": "RefSyntax",
                                                        "field": "name",
                                                        "literal": "NAME",
                                                        "refType": "Id"
                                                    }
                                                },
                                                "second": {
                                                    "$ast": "RefSyntax",
                                                    "field": "",
                                                    "literal": "\":\"",
                                                    "refType": "Literal"
                                                }
                                            },
                                            "second": {
                                                "$ast": "RefSyntax",
                                                "field": "type",
                                                "literal": "_Type",
                                                "refType": "Id"
                                            }
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"=\"",
                                            "refType": "Literal"
                                        }
                                    }
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "expression",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "trueBranch",
                        "literal": "_Block",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "PreferTake",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"else\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "falseBranch",
                            "literal": "_ElseStat",
                            "refType": "Id"
                        }
                    }
                }
            },
            "type": "IfStatement"
        }],
        "name": "_If",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "direction",
                "type": "Strong",
                "value": "Normal"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"in\"",
                "refType": "Literal"
            },
            "type": "ForEachStatement"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "direction",
                "type": "Strong",
                "value": "Reversed"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"in\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"reversed\"",
                    "refType": "Literal"
                }
            },
            "type": "ForEachStatement"
        }],
        "name": "_ForOperator",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"switch\"",
                                            "refType": "Literal"
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"(\"",
                                            "refType": "Literal"
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "expression",
                                        "literal": "_Expression",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\")\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"{\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": null,
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "caseBranches",
                                "literal": "_SwitchCase",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"default\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\":\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "defaultBranch",
                                "literal": "_Block",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "SwitchStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"for\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"(\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "_ForOperator",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "collection",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "ForEachStatement"
        }],
        "name": "_VirtualStatement",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"$pause\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "AlternativeSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\";\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "statement",
                        "literal": "_Block",
                        "refType": "Id"
                    }
                }
            },
            "type": "CoPauseStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "OptionalSyntax",
                            "priority": "Equal",
                            "syntax": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"var\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "varName",
                                        "literal": "NAME",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"=\"",
                                    "refType": "Literal"
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "opName",
                            "literal": "COROUTINE_OPERATOR",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "CoOperatorStatement"
        }],
        "name": "_CoStatement",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "AlternativeSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"$\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "name",
                        "literal": "COROUTINE_OPERATOR",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "CoProviderStatement"
        }],
        "name": "_CoProvider",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "Default"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"$switch\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"raise\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "StateSwitchStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "Pass"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"$switch\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"continue\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "StateSwitchStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "PassAndReturn"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"$switch\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"continue\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"return\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "StateSwitchStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "Ignore"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"$switch\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"(\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "StateSwitchStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "IgnoreAndReturn"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"$switch\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"return\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "StateSwitchStatement"
        }],
        "name": "_StateSwitchHead",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "name",
                "literal": "NAME",
                "refType": "Id"
            },
            "type": "StateSwitchArgument"
        }],
        "name": "_StateSwitchArgument",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"case\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "name",
                                        "literal": "NAME",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "OptionalSyntax",
                                "priority": "Equal",
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "arguments",
                                        "literal": "_StateSwitchArgument",
                                        "refType": "Id"
                                    },
                                    "second": {
                                        "$ast": "LoopSyntax",
                                        "delimiter": null,
                                        "syntax": {
                                            "$ast": "SequenceSyntax",
                                            "first": {
                                                "$ast": "RefSyntax",
                                                "field": "",
                                                "literal": "\",\"",
                                                "refType": "Literal"
                                            },
                                            "second": {
                                                "$ast": "RefSyntax",
                                                "field": "arguments",
                                                "literal": "_StateSwitchArgument",
                                                "refType": "Id"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\":\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "StateSwitchCase"
        }],
        "name": "_StateSwitchCase",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "UseSyntax",
                            "name": "_StateSwitchHead"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "caseBranches",
                            "literal": "_StateSwitchCase",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "Goto"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"$goto_state\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            },
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "StateInvokeStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "type",
                "type": "Strong",
                "value": "Push"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"$push_state\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            },
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "StateInvokeStatement"
        }],
        "name": "_StateStatement",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "@parser",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Block"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"goto\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "label",
                        "literal": "NAME",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "GotoStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "variable",
                "literal": "_Variable",
                "refType": "Id"
            },
            "type": "VariableStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"break\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "BreakStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"continue\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "ContinueStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"return\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "ReturnStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"delete\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "DeleteStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"raise\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "expression",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "RaiseExceptionStatement"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_If"
            }
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"while\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "condition",
                            "literal": "_Expression",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "WhileStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"try\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "protectedStatement",
                            "literal": "_Block",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"catch\"",
                                            "refType": "Literal"
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"(\"",
                                            "refType": "Literal"
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "name",
                                        "literal": "NAME",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\")\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "catchStatement",
                                "literal": "_Block",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"finally\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "finallyStatement",
                            "literal": "_Block",
                            "refType": "Id"
                        }
                    }
                }
            },
            "type": "TryStatement"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "expression",
                    "literal": "_Expression",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "ExpressionStatement"
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_VirtualStatement"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_CoStatement"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_StateStatement"
            }
        }],
        "name": "_Statement",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"$state_input\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            },
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_FunctionArgument",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "StateInput"
        }],
        "name": "_StateInput",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"$state\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "AlternativeSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"default\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "name",
                                        "literal": "NAME",
                                        "refType": "Id"
                                    }
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            },
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_FunctionArgument",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "StateDeclaration"
        }],
        "name": "_StateDecl",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"$state_machine\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "AlternativeSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "inputs",
                                "literal": "_StateInput",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "states",
                                "literal": "_StateDecl",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "StateMachineDeclaration"
        }],
        "name": "_StateMachine",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"@\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "category",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\":\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "name",
                        "literal": "NAME",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "OptionalSyntax",
                    "priority": "Equal",
                    "syntax": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "value",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    }
                }
            },
            "type": "Attribute"
        }],
        "name": "_Attribute",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"namespace\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "name",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "declarations",
                            "literal": "_Declaration",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "NamespaceDeclaration"
        }],
        "name": "_Namespace",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "LoopSyntax",
                            "delimiter": null,
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "attributes",
                                "literal": "_Attribute",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "name",
                            "literal": "NAME",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\":\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "type",
                    "literal": "_Type",
                    "refType": "Id"
                }
            },
            "type": "FunctionArgument"
        }],
        "name": "_FunctionArgument",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"(\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\",\"",
                            "refType": "Literal"
                        },
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "arguments",
                            "literal": "_FunctionArgument",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "FunctionDeclaration"
        }],
        "name": "_FunctionArgumentList",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Block"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_CoProvider"
            }
        }],
        "name": "_FunctionStat",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "LoopSyntax",
                                    "delimiter": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\",\"",
                                        "refType": "Literal"
                                    },
                                    "syntax": {
                                        "$ast": "RefSyntax",
                                        "field": "arguments",
                                        "literal": "_FunctionArgument",
                                        "refType": "Id"
                                    }
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\")\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\":\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "returnType",
                        "literal": "_Type",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "AlternativeSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "statement",
                        "literal": "_FunctionStat",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\";\"",
                        "refType": "Literal"
                    }
                }
            },
            "type": "FunctionDeclaration"
        }],
        "name": "_FunctionBody",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "functionKind",
                "type": "Strong",
                "value": "Static"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"static\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"func\"",
                    "refType": "Literal"
                }
            },
            "type": "FunctionDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "functionKind",
                "type": "Strong",
                "value": "Override"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"override\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"func\"",
                    "refType": "Literal"
                }
            },
            "type": "FunctionDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "functionKind",
                "type": "Strong",
                "value": "Normal"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"func\"",
                "refType": "Literal"
            },
            "type": "FunctionDeclaration"
        }],
        "name": "_FunctionKind",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "anonymity",
                "type": "Strong",
                "value": "Named"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "_FunctionKind",
                        "refType": "Id"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "name",
                        "literal": "NAME",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_FunctionBody",
                    "refType": "Id"
                }
            },
            "type": "FunctionDeclaration"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "anonymity",
                "type": "Strong",
                "value": "Anonymous"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_FunctionKind",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_FunctionBody",
                    "refType": "Id"
                }
            },
            "type": "FunctionDeclaration"
        }],
        "name": "_Function",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"var\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "OptionalSyntax",
                                "priority": "Equal",
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\":\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "type",
                                        "literal": "_Type",
                                        "refType": "Id"
                                    }
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"=\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "expression",
                        "literal": "_Expression",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "VariableDeclaration"
        }],
        "name": "_Variable",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"event\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"(\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            },
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_Type",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\")\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "EventDeclaration"
        }],
        "name": "_Event",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "SequenceSyntax",
                                            "first": {
                                                "$ast": "RefSyntax",
                                                "field": "",
                                                "literal": "\"prop\"",
                                                "refType": "Literal"
                                            },
                                            "second": {
                                                "$ast": "RefSyntax",
                                                "field": "name",
                                                "literal": "NAME",
                                                "refType": "Id"
                                            }
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\":\"",
                                            "refType": "Literal"
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "type",
                                        "literal": "_Type",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"{\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "getter",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "OptionalSyntax",
                            "priority": "Equal",
                            "syntax": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "setter",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            }
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\":\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "valueChangedEvent",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "PropertyDeclaration"
        }],
        "name": "_Property",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"static\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "StaticInitDeclaration"
        }],
        "name": "_StaticInit",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "type",
                            "literal": "_Type",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"(\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "arguments",
                                "literal": "_Expression",
                                "refType": "Id"
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": null,
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\",\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "arguments",
                                        "literal": "_Expression",
                                        "refType": "Id"
                                    }
                                }
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\")\"",
                    "refType": "Literal"
                }
            },
            "type": "BaseConstructorCall"
        }],
        "name": "_BaseConstructorCall",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "constructorType",
                "type": "Strong",
                "value": "SharedPtr"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"new\"",
                "refType": "Literal"
            },
            "type": "ConstructorDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "constructorType",
                "type": "Strong",
                "value": "RawPtr"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"new\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"*\"",
                    "refType": "Literal"
                }
            },
            "type": "ConstructorDeclaration"
        }],
        "name": "_ConstructorType",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "_ConstructorType",
                                    "refType": "Id"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"(\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "arguments",
                                    "literal": "_FunctionArgument",
                                    "refType": "Id"
                                }
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\")\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\":\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "LoopSyntax",
                                "delimiter": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\",\"",
                                    "refType": "Literal"
                                },
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "baseConstructorCalls",
                                    "literal": "_BaseConstructorCall",
                                    "refType": "Id"
                                }
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "ConstructorDeclaration"
        }],
        "name": "_Constructor",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"delete\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "statement",
                    "literal": "_Block",
                    "refType": "Id"
                }
            },
            "type": "DestructorDeclaration"
        }],
        "name": "_Destructor",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "OptionalSyntax",
                                "priority": "Equal",
                                "syntax": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\":\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "LoopSyntax",
                                        "delimiter": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\",\"",
                                            "refType": "Literal"
                                        },
                                        "syntax": {
                                            "$ast": "RefSyntax",
                                            "field": "baseTypes",
                                            "literal": "_Type",
                                            "refType": "Id"
                                        }
                                    }
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"{\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": null,
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "declarations",
                                "literal": "_Declaration",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "declarations",
                            "literal": "_StateMachine",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "ClassDeclaration"
        }],
        "name": "_ClassBody",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Class"
            }, {
                "$ast": "Assignment",
                "field": "constructorType",
                "type": "Strong",
                "value": "Undefined"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"class\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "name",
                        "literal": "NAME",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_ClassBody",
                    "refType": "Id"
                }
            },
            "type": "ClassDeclaration"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Interface"
            }, {
                "$ast": "Assignment",
                "field": "constructorType",
                "type": "Strong",
                "value": "SharedPtr"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"interface\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "name",
                        "literal": "NAME",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_ClassBody",
                    "refType": "Id"
                }
            },
            "type": "ClassDeclaration"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Interface"
            }, {
                "$ast": "Assignment",
                "field": "constructorType",
                "type": "Strong",
                "value": "RawPtr"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"interface\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "name",
                            "literal": "NAME",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"*\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_ClassBody",
                    "refType": "Id"
                }
            },
            "type": "ClassDeclaration"
        }],
        "name": "_Class",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "name",
                "literal": "NAME",
                "refType": "Id"
            },
            "type": "EnumItemIntersection"
        }],
        "name": "_EnumItemInt",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Constant"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "LoopSyntax",
                                "delimiter": null,
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "attributes",
                                    "literal": "_Attribute",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "name",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"=\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "number",
                        "literal": "INTEGER",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\",\"",
                    "refType": "Literal"
                }
            },
            "type": "EnumItem"
        }],
        "name": "_EnumItemA",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Intersection"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "LoopSyntax",
                                    "delimiter": null,
                                    "syntax": {
                                        "$ast": "RefSyntax",
                                        "field": "attributes",
                                        "literal": "_Attribute",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"=\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "intersections",
                            "literal": "_EnumItemInt",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"|\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "intersections",
                                "literal": "_EnumItemInt",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\",\"",
                    "refType": "Literal"
                }
            },
            "type": "EnumItem"
        }],
        "name": "_EnumItemB",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Normal"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"enum\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"{\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "items",
                            "literal": "_EnumItemA",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "items",
                            "literal": "_EnumItemA",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "EnumDeclaration"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "kind",
                "type": "Strong",
                "value": "Flag"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\"flagenum\"",
                                        "refType": "Literal"
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "name",
                                        "literal": "NAME",
                                        "refType": "Id"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"{\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "items",
                                "literal": "_EnumItemA",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "LoopSyntax",
                            "delimiter": null,
                            "syntax": {
                                "$ast": "RefSyntax",
                                "field": "items",
                                "literal": "_EnumItemA",
                                "refType": "Id"
                            }
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "items",
                            "literal": "_EnumItemB",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "EnumDeclaration"
        }],
        "name": "_Enum",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "LoopSyntax",
                                "delimiter": null,
                                "syntax": {
                                    "$ast": "RefSyntax",
                                    "field": "attributes",
                                    "literal": "_Attribute",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "name",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\":\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "type",
                        "literal": "_Type",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "StructMember"
        }],
        "name": "_StructMember",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"struct\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "name",
                                "literal": "NAME",
                                "refType": "Id"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "members",
                            "literal": "_StructMember",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "StructDeclaration"
        }],
        "name": "_Struct",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "configConst",
                "type": "Strong",
                "value": "Writable"
            }, {
                "$ast": "Assignment",
                "field": "configObserve",
                "type": "Strong",
                "value": "Observable"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"{\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "AutoPropertyDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "configConst",
                "type": "Strong",
                "value": "Readonly"
            }, {
                "$ast": "Assignment",
                "field": "configObserve",
                "type": "Strong",
                "value": "Observable"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"{\"",
                        "refType": "Literal"
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"const\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "AutoPropertyDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "configConst",
                "type": "Strong",
                "value": "Writable"
            }, {
                "$ast": "Assignment",
                "field": "configObserve",
                "type": "Strong",
                "value": "NotObservable"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"{\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"not\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"observe\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "AutoPropertyDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "configConst",
                "type": "Strong",
                "value": "Readonly"
            }, {
                "$ast": "Assignment",
                "field": "configObserve",
                "type": "Strong",
                "value": "NotObservable"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"{\"",
                                    "refType": "Literal"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "\"const\"",
                                    "refType": "Literal"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\",\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"not\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\"observe\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"}\"",
                    "refType": "Literal"
                }
            },
            "type": "AutoPropertyDeclaration"
        }],
        "name": "_APConfig",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "functionKind",
                "type": "Strong",
                "value": "Static"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"static\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"prop\"",
                    "refType": "Literal"
                }
            },
            "type": "AutoPropertyDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "functionKind",
                "type": "Strong",
                "value": "Override"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"override\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"prop\"",
                    "refType": "Literal"
                }
            },
            "type": "AutoPropertyDeclaration"
        }, {
            "$ast": "PartialClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "functionKind",
                "type": "Strong",
                "value": "Normal"
            }],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"prop\"",
                "refType": "Literal"
            },
            "type": "AutoPropertyDeclaration"
        }],
        "name": "_AutoPropertyKind",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "RefSyntax",
                                    "field": "",
                                    "literal": "_AutoPropertyKind",
                                    "refType": "Id"
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "name",
                                    "literal": "NAME",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\":\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "type",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "OptionalSyntax",
                        "priority": "Equal",
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"=\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "expression",
                                "literal": "_Expression",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_APConfig",
                    "refType": "Id"
                }
            },
            "type": "AutoPropertyDeclaration"
        }],
        "name": "_AutoProperty",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "SequenceSyntax",
                                "first": {
                                    "$ast": "SequenceSyntax",
                                    "first": {
                                        "$ast": "SequenceSyntax",
                                        "first": {
                                            "$ast": "RefSyntax",
                                            "field": "",
                                            "literal": "\"$interface\"",
                                            "refType": "Literal"
                                        },
                                        "second": {
                                            "$ast": "RefSyntax",
                                            "field": "name",
                                            "literal": "NAME",
                                            "refType": "Id"
                                        }
                                    },
                                    "second": {
                                        "$ast": "RefSyntax",
                                        "field": "",
                                        "literal": "\":\"",
                                        "refType": "Literal"
                                    }
                                },
                                "second": {
                                    "$ast": "RefSyntax",
                                    "field": "baseType",
                                    "literal": "_Type",
                                    "refType": "Id"
                                }
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"<\"",
                                "refType": "Literal"
                            }
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "elementType",
                            "literal": "_Type",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "RefSyntax",
                        "field": "",
                        "literal": "\">\"",
                        "refType": "Literal"
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "CastResultInterfaceDeclaration"
        }],
        "name": "_CastResultInterface",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Namespace"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Variable"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Event"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Property"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_StaticInit"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Constructor"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Destructor"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Class"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Enum"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Struct"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_CastResultInterface"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_Function"
            }
        }, {
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "UseSyntax",
                "name": "_AutoProperty"
            }
        }],
        "name": "_DeclarationCandidates",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "@parser",
        "attPublic": "",
        "clauses": [{
            "$ast": "ReuseClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "LoopSyntax",
                    "delimiter": null,
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "attributes",
                        "literal": "_Attribute",
                        "refType": "Id"
                    }
                },
                "second": {
                    "$ast": "UseSyntax",
                    "name": "_DeclarationCandidates"
                }
            }
        }],
        "name": "_Declaration",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "name",
                "literal": "NAME",
                "refType": "Id"
            },
            "type": "ModuleUsingNameFragment"
        }, {
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "RefSyntax",
                "field": "",
                "literal": "\"*\"",
                "refType": "Literal"
            },
            "type": "ModuleUsingWildCardFragment"
        }],
        "name": "_UsingFragment",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "fragments",
                    "literal": "_UsingFragment",
                    "refType": "Id"
                },
                "second": {
                    "$ast": "LoopSyntax",
                    "delimiter": null,
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "fragments",
                        "literal": "_UsingFragment",
                        "refType": "Id"
                    }
                }
            },
            "type": "ModuleUsingItem"
        }],
        "name": "_UsingItem",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\"using\"",
                            "refType": "Literal"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "items",
                            "literal": "_UsingItem",
                            "refType": "Id"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "SequenceSyntax",
                            "first": {
                                "$ast": "RefSyntax",
                                "field": "",
                                "literal": "\"::\"",
                                "refType": "Literal"
                            },
                            "second": {
                                "$ast": "RefSyntax",
                                "field": "items",
                                "literal": "_UsingItem",
                                "refType": "Id"
                            }
                        }
                    }
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\";\"",
                    "refType": "Literal"
                }
            },
            "type": "ModuleUsingPath"
        }],
        "name": "_UsingPath",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "",
        "attPublic": "",
        "clauses": [{
            "$ast": "PartialClause",
            "assignments": [],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "SequenceSyntax",
                    "first": {
                        "$ast": "SequenceSyntax",
                        "first": {
                            "$ast": "RefSyntax",
                            "field": "name",
                            "literal": "NAME",
                            "refType": "Id"
                        },
                        "second": {
                            "$ast": "RefSyntax",
                            "field": "",
                            "literal": "\";\"",
                            "refType": "Literal"
                        }
                    },
                    "second": {
                        "$ast": "LoopSyntax",
                        "delimiter": null,
                        "syntax": {
                            "$ast": "RefSyntax",
                            "field": "paths",
                            "literal": "_UsingPath",
                            "refType": "Id"
                        }
                    }
                },
                "second": {
                    "$ast": "LoopSyntax",
                    "delimiter": null,
                    "syntax": {
                        "$ast": "RefSyntax",
                        "field": "declarations",
                        "literal": "_Declaration",
                        "refType": "Id"
                    }
                }
            },
            "type": "Module"
        }],
        "name": "_ModuleBody",
        "type": ""
    }, {
        "$ast": "Rule",
        "attParser": "@parser",
        "attPublic": "",
        "clauses": [{
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "moduleType",
                "type": "Strong",
                "value": "Module"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"module\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_ModuleBody",
                    "refType": "Id"
                }
            },
            "type": "Module"
        }, {
            "$ast": "CreateClause",
            "assignments": [{
                "$ast": "Assignment",
                "field": "moduleType",
                "type": "Strong",
                "value": "Unit"
            }],
            "syntax": {
                "$ast": "SequenceSyntax",
                "first": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "\"unit\"",
                    "refType": "Literal"
                },
                "second": {
                    "$ast": "RefSyntax",
                    "field": "",
                    "literal": "_ModuleBody",
                    "refType": "Id"
                }
            },
            "type": "Module"
        }],
        "name": "_Module",
        "type": ""
    }],
    "switches": []
}