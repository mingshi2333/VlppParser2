/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:BinaryOp
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_BINARYOP_EXPPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_BINARYOP_EXPPARSER_SYNTAX

#include "BinaryOp_Assembler.h"
#include "BinaryOp_Lexer.h"

namespace binaryop
{
	enum class ExpParserStates
	{
		Exp0 = 0,
		Exp1 = 6,
		Exp2 = 12,
		Exp3 = 18,
		Exp4 = 24,
		Exp5 = 30,
		Exp6 = 36,
		Exp = 42,
	};

	template<ExpParserStates> struct ExpParserStateTypes;
	template<> struct ExpParserStateTypes<ExpParserStates::Exp> { using Type = binaryop::Expr; };

	const wchar_t* ExpParserRuleName(vl::vint index);
	const wchar_t* ExpParserStateLabel(vl::vint index);
	extern void BinaryOpExpParserData(vl::stream::IStream& outputStream);

	class ExpParser
		: public vl::glr::ParserBase<BinaryOpTokens, ExpParserStates, BinaryOpAstInsReceiver, ExpParserStateTypes>
		, protected vl::glr::automaton::TraceManager::ITypeCallback
	{
	protected:
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) override;
	public:
		ExpParser();

		vl::Ptr<binaryop::Expr> ParseExp(const vl::WString & input, vl::vint codeIndex = -1);
	};
}
#endif