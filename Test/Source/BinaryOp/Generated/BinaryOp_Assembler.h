/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:BinaryOp
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_BINARYOP_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_BINARYOP_AST_ASSEMBLER

#include "BinaryOpExprAst.h"

namespace binaryop
{
	enum class BinaryOpClasses : vl::vint32_t
	{
		BinaryExpr = 0,
		Expr = 1,
		RefExpr = 2,
	};

	enum class BinaryOpFields : vl::vint32_t
	{
		BinaryExpr_left = 0,
		BinaryExpr_op = 1,
		BinaryExpr_right = 2,
		RefExpr_name = 3,
	};

	extern const wchar_t* BinaryOpTypeName(BinaryOpClasses type);
	extern const wchar_t* BinaryOpCppTypeName(BinaryOpClasses type);
	extern const wchar_t* BinaryOpFieldName(BinaryOpFields field);
	extern const wchar_t* BinaryOpCppFieldName(BinaryOpFields field);

	class BinaryOpAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif