/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Ast
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "CppAst.h"

namespace cpp_parser
{
/***********************************************************************
Visitor Pattern Implementation
***********************************************************************/
}
namespace vl
{
	namespace reflection
	{
		namespace description
		{
#ifndef VCZH_DEBUG_NO_REFLECTION

			IMPL_TYPE_INFO_RENAME(cpp_parser::CppFile, cpp_parser::CppFile)

#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA

			BEGIN_CLASS_MEMBER(cpp_parser::CppFile)
				CLASS_MEMBER_BASE(vl::glr::ParsingAstBase)

				CLASS_MEMBER_CONSTRUCTOR(vl::Ptr<cpp_parser::CppFile>(), NO_PARAMETER)

			END_CLASS_MEMBER(cpp_parser::CppFile)

#endif

#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
			class CppAstTypeLoader : public vl::Object, public ITypeLoader
			{
			public:
				void Load(ITypeManager* manager)
				{
					ADD_TYPE_INFO(cpp_parser::CppFile)
				}

				void Unload(ITypeManager* manager)
				{
				}
			};
#endif
#endif

			bool CppAstLoadTypes()
			{
#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA
				if (auto manager = GetGlobalTypeManager())
				{
					Ptr<ITypeLoader> loader = new CppAstTypeLoader;
					return manager->AddTypeLoader(loader);
				}
#endif
				return false;
			}
		}
	}
}
