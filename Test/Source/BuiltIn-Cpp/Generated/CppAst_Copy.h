/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Ast
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_CPP_AST_AST_COPY_VISITOR
#define VCZH_PARSER2_BUILTIN_CPP_AST_AST_COPY_VISITOR

#include "CppAst.h"

namespace cpp_parser
{
	namespace copy_visitor
	{
		/// <summary>A copy visitor, overriding all abstract methods with AST copying code.</summary>
		class AstVisitor
			: public virtual vl::glr::CopyVisitorBase
			, protected virtual CppTypeOrExpr::IVisitor
			, protected virtual CppQualifiedName::IVisitor
		{
		protected:
			void CopyFields(CppFile* from, CppFile* to);
			void CopyFields(CppName* from, CppName* to);
			void CopyFields(CppOperatorName* from, CppOperatorName* to);
			void CopyFields(CppQualifiedName* from, CppQualifiedName* to);
			void CopyFields(CppTypeOrExpr* from, CppTypeOrExpr* to);

		protected:
			virtual void Visit(CppFile* node);

			void Visit(CppQualifiedName* node) override;

			void Visit(CppName* node) override;
			void Visit(CppOperatorName* node) override;

		public:
			virtual vl::Ptr<CppTypeOrExpr> CopyNode(CppTypeOrExpr* node);
			virtual vl::Ptr<CppFile> CopyNode(CppFile* node);

			vl::Ptr<CppName> CopyNode(CppName* node);
			vl::Ptr<CppOperatorName> CopyNode(CppOperatorName* node);
			vl::Ptr<CppQualifiedName> CopyNode(CppQualifiedName* node);
		};
	}
}
#endif