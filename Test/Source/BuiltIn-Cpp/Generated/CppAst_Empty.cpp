/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Ast
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "CppAst_Empty.h"

namespace cpp_parser::empty_visitor
{

/***********************************************************************
TypeOrExprOrOthersVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void TypeOrExprOrOthersVisitor::Visit(CppTypeOrExprOrOthersToResolve* node)
	{
	}

	void TypeOrExprOrOthersVisitor::Visit(CppDeclaration* node)
	{
		Dispatch(node);
	}

	void TypeOrExprOrOthersVisitor::Visit(CppTypeOrExpr* node)
	{
		Dispatch(node);
	}

	void TypeOrExprOrOthersVisitor::Visit(CppGenericArgument* node)
	{
	}

	void TypeOrExprOrOthersVisitor::Visit(CppOrdinaryGenericParameter* node)
	{
	}

/***********************************************************************
DeclarationVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void DeclarationVisitor::Visit(CppDeclarationToResolve* node)
	{
	}

	void DeclarationVisitor::Visit(CppDeclarationCommon* node)
	{
		Dispatch(node);
	}

/***********************************************************************
DeclarationCommonVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void DeclarationCommonVisitor::Visit(CppVariablesDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppClassDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppEnumDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppTemplateDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppStaticAssertDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppTypedefDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppExternDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppNamespaceDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppUsingNamespaceDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppUsingValueDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppUsingTypeDeclaration* node)
	{
	}

	void DeclarationCommonVisitor::Visit(CppFriendTypeDeclaration* node)
	{
	}

/***********************************************************************
TypeOrExprVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void TypeOrExprVisitor::Visit(CppTypeOrExprToResolve* node)
	{
	}

	void TypeOrExprVisitor::Visit(CppExprOnly* node)
	{
		Dispatch(node);
	}

	void TypeOrExprVisitor::Visit(CppTypeOnly* node)
	{
		Dispatch(node);
	}

	void TypeOrExprVisitor::Visit(CppQualifiedName* node)
	{
	}

	void TypeOrExprVisitor::Visit(CppDeclaratorType* node)
	{
	}

/***********************************************************************
ExprOnlyVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void ExprOnlyVisitor::Visit(CppPrimitiveExprLiteral* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppNumericExprLiteral* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppStringLiteral* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppLambdaExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppParenthesisExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppBraceExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppCastExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppSysFuncExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppSizeofExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppDeleteExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppNewExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppPrefixUnaryExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppPostfixUnaryExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppIndexExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppCallExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppBinaryExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppIfExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppThrowExpr* node)
	{
	}

	void ExprOnlyVisitor::Visit(CppVariadicExpr* node)
	{
	}

/***********************************************************************
TypeOnlyVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void TypeOnlyVisitor::Visit(CppPrimitiveType* node)
	{
	}

	void TypeOnlyVisitor::Visit(CppConstType* node)
	{
	}

	void TypeOnlyVisitor::Visit(CppVolatileType* node)
	{
	}

/***********************************************************************
StatementVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void StatementVisitor::Visit(CppStatementToResolve* node)
	{
	}

	void StatementVisitor::Visit(CppEmptyStat* node)
	{
	}

	void StatementVisitor::Visit(CppBlockStat* node)
	{
	}

	void StatementVisitor::Visit(CppExprStat* node)
	{
	}

	void StatementVisitor::Visit(CppDeclStat* node)
	{
	}

	void StatementVisitor::Visit(CppBreakStat* node)
	{
	}

	void StatementVisitor::Visit(CppContinueStat* node)
	{
	}

	void StatementVisitor::Visit(CppReturnStat* node)
	{
	}

	void StatementVisitor::Visit(CppLabelStat* node)
	{
	}

	void StatementVisitor::Visit(CppGotoStat* node)
	{
	}

	void StatementVisitor::Visit(CppCaseStat* node)
	{
	}

	void StatementVisitor::Visit(CppDefaultStat* node)
	{
	}

	void StatementVisitor::Visit(Cpp__LeaveStat* node)
	{
	}

	void StatementVisitor::Visit(CppWhileStat* node)
	{
	}

	void StatementVisitor::Visit(CppDoWhileStat* node)
	{
	}

	void StatementVisitor::Visit(CppIfElseStat* node)
	{
	}

	void StatementVisitor::Visit(CppForStat* node)
	{
	}

	void StatementVisitor::Visit(CppSwitchStat* node)
	{
	}

	void StatementVisitor::Visit(CppTryStat* node)
	{
	}

	void StatementVisitor::Visit(Cpp__TryStat* node)
	{
	}

/***********************************************************************
IdentifierVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void IdentifierVisitor::Visit(CppNameIdentifier* node)
	{
	}

	void IdentifierVisitor::Visit(CppOperatorIdentifier* node)
	{
	}

	void IdentifierVisitor::Visit(CppOperatorTypeIdentifier* node)
	{
	}

/***********************************************************************
DeclaratorFunctionPartVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void DeclaratorFunctionPartVisitor::Visit(CppDeclaratorFunctionPartToResolve* node)
	{
	}

	void DeclaratorFunctionPartVisitor::Visit(CppDeclaratorFunctionPartCommon* node)
	{
	}

/***********************************************************************
VarInitVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void VarInitVisitor::Visit(CppVarValueInit* node)
	{
	}

	void VarInitVisitor::Visit(CppVarParanthesisInit* node)
	{
	}

	void VarInitVisitor::Visit(CppVarBraceInit* node)
	{
	}

	void VarInitVisitor::Visit(CppVarStatInit* node)
	{
	}

/***********************************************************************
DeclaratorVariablePartVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void DeclaratorVariablePartVisitor::Visit(CppDeclaratorVariablePartToResolve* node)
	{
	}

	void DeclaratorVariablePartVisitor::Visit(CppDeclaratorVariablePartCommon* node)
	{
	}

/***********************************************************************
ForStatConditionPartVisitor
***********************************************************************/

	// Visitor Members -----------------------------------

	void ForStatConditionPartVisitor::Visit(CppForStatLoopCondition* node)
	{
	}

	void ForStatConditionPartVisitor::Visit(CppForStatIterateCondition* node)
	{
	}
}
