/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Cpp
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_CPP_PARSER_SYNTAX
#define VCZH_PARSER2_BUILTIN_CPP_PARSER_SYNTAX

#include "Cpp_Assembler.h"
#include "Cpp_Lexer.h"

namespace cpp_parser
{
	enum class ParserStates
	{
		_NameIdentifier = 0,
		_DtorIdentifier = 3,
		_TypeIdentifier = 7,
		_OperatorIdentifierNewArray = 20,
		_OperatorIdentifierDeleteArray = 24,
		_OperatorIdentifier = 28,
		_Identifier = 119,
		_GenericArgument = 124,
		_GenericArguments = 144,
		_QualifiedNameFragment = 150,
		_MemberQualifiedNameFragment = 157,
		_SingleLevelQualifiedName = 160,
		_NextLevelQualifiedName = 170,
		_QualifiedName = 176,
		_QualifiedNameAfterTypename = 181,
		_StringLiteralFragment = 187,
		_LambdaCaptureId = 191,
		_LambdaCapture = 201,
		_LambdaExpr = 211,
		_PrimitiveExpr = 220,
		_QualifiedName_PrimitiveExpr = 298,
		_PostfixUnaryExpr = 302,
		_NewPrefix = 318,
		_NewExpr = 323,
		_DeletePrefix = 335,
		_DeleteExpr = 340,
		_SizeOfPrefix = 348,
		_SizeofExpr = 352,
		_AllPrefixUnaryExpr_NoCStyleCast = 362,
		_AllPrefixUnaryExpr = 383,
		_PrefixUnaryExpr = 390,
		_MemberOperatorIdentifier = 407,
		_MemberOperatorQualifiedName = 412,
		_BExpr0 = 416,
		_BExpr1 = 434,
		_BExpr2 = 452,
		_BExpr3 = 470,
		_PrimitiveTypeLiteral = 488,
		_PrimitiveType = 506,
		_PM_PrimitiveType = 521,
		_PM_QualifiedName = 524,
		_ShortTypeStartsWithKeywordBeforeDeclarator = 527,
		_ShortTypeBeforeDeclarator = 532,
		_TypeStartsWithKeywordBeforeDeclarator = 538,
		_TypeBeforeDeclarator = 546,
		_AdvancedTypeNoCVNoMember = 556,
		_AdvancedTypeCV = 569,
		_AdvancedTypeNoMember = 573,
		_AdvancedTypeMember = 577,
		_DeclaratorKeyword = 581,
		_DeclaratorAKFirst = 601,
		_DeclaratorAKFollow = 605,
		_DeclaratorAKCV = 609,
		_DeclaratorAKMember = 612,
		_DeclaratorFunctionParameters = 615,
		_FunctionKeyword = 627,
		_DeclaratorFunctionPart = 653,
		_DeclaratorFunctionPartOptionalParameters = 659,
		_DeclaratorArrayPart = 668,
		_DeclaratorId = 673,
		_DeclaratorBeforeInner = 677,
		_DeclaratorAfterInner = 684,
		_InnerDeclaratorWithoutName = 689,
		_InnerDeclaratorInnerOptionalName = 693,
		_InnerDeclaratorInnerRequiredName = 697,
		_DeclaratorInnerWithoutName = 701,
		_DeclaratorInnerOptionalName = 707,
		_DeclaratorInnerRequiredName = 715,
		_DeclaratorWithoutName = 723,
		_DeclaratorOptionalName = 731,
		_DeclaratorRequiredName = 739,
		_VarValueInit = 746,
		_VarNewParanInit = 750,
		_VarVarParanInit = 756,
		_VarBraceInit = 763,
		_VarCtorInit = 769,
		_VarInit = 773,
		_DeclaratorVariablePartWithoutInit = 778,
		_DeclaratorVariablePartOptionalInit = 781,
		_DeclaratorVariablePartRequiredInit = 785,
		_VarWithoutInit = 789,
		_VarRequiredInit = 799,
		_FunctionParameterVariablePart = 809,
		_FunctionParameter = 814,
		_CatchParameterVariablePart = 825,
		_CatchParameter = 828,
		_ExprOrVarWithInit = 839,
		_GenericParameterKeyword = 860,
		_OrdinaryGenericParameter = 867,
		_TypedGenericParameterInit = 874,
		_TypedGenericParameterVariablePart = 878,
		_TypedGenericParameter = 883,
		_GenericParameter = 893,
		_GenericHeader = 904,
		_VarsDeclWithoutKeyword = 910,
		_VarsDecl = 920,
		_Decl = 931,
		_ExprStat = 942,
		_BlockStat = 964,
		_TryStatCatchPart = 969,
		_TryStat = 977,
		___TryStat = 983,
		_IfStatConditionPart = 994,
		_IfStat = 1018,
		_ForStatConditionPart = 1026,
		_ForStat = 1049,
		_OtherStats = 1056,
		_Stat = 1105,
		_TypeStartsWithKeyword = 1133,
		_Type = 1142,
		_Expr_NoComma = 1153,
		_Expr = 1172,
		_Expr_Argument = 1192,
		_TypeOrExpr_NoComma_NoGT = 1212,
		_TypeOrExpr = 1231,
		_File = 1251,
		_BExpr4_SWITCH_COMBINED = 1254,
		_TypeOrExpr_NoComma_Raw_SWITCH_COMBINED = 1272,
		_TypeOrExpr_Raw_SWITCH_COMBINED = 1283,
		_BExpr_SWITCH_1allow_GT = 1294,
		_BExpr10_SWITCH_0allow_GT = 1314,
		_BExpr10_SWITCH_1allow_GT = 1332,
		_BExpr4_SWITCH_0allow_GT = 1350,
		_BExpr4_SWITCH_1allow_GT = 1368,
		_BExpr5_SWITCH_0allow_GT = 1386,
		_BExpr5_SWITCH_1allow_GT = 1404,
		_BExpr6_SWITCH_0allow_GT = 1422,
		_BExpr6_SWITCH_1allow_GT = 1440,
		_BExpr7_SWITCH_0allow_GT = 1458,
		_BExpr7_SWITCH_1allow_GT = 1476,
		_BExpr8_SWITCH_0allow_GT = 1494,
		_BExpr8_SWITCH_1allow_GT = 1512,
		_BExpr9_SWITCH_0allow_GT = 1530,
		_BExpr9_SWITCH_1allow_GT = 1548,
		_BExpr_NoComma_SWITCH_0allow_GT = 1566,
		_BExpr_NoComma_SWITCH_1allow_GT = 1585,
		_Expr_NoComma_Raw_SWITCH_1allow_GT = 1604,
		_Expr_Raw_SWITCH_1allow_GT = 1623,
		_ThrowExpr_SWITCH_1allow_GT = 1643,
		_ThrowExpr_SWITCH_0allow_GT = 1647,
		_TypeOrExpr_NoComma_Raw_SWITCH_0allow_GT = 1651,
		_TypeOrExpr_Raw_SWITCH_1allow_GT = 1670,
		_PrefixUnaryExpr_LRI_Isolated_1 = 1690,
		_BExpr_NoComma_SWITCH_0allow_GT_LRI_Isolated_1 = 1693,
		_BExpr_NoComma_SWITCH_1allow_GT_LRI_Isolated_1 = 1696,
		_ShortTypeStartsWithKeywordBeforeDeclarator_LRI_Isolated_1 = 1699,
		_ShortTypeStartsWithKeywordBeforeDeclarator_LRI_Isolated_2 = 1703,
		_FunctionParameter_LRI_Isolated_2 = 1707,
		_CatchParameter_LRI_Isolated_2 = 1713,
		_ExprOrVarWithInit_LRI_Isolated_2 = 1719,
		_GenericParameter_LRI_Isolated_0 = 1725,
		_VarsDecl_LRI_Isolated_1 = 1728,
		_ForStatConditionPart_LRI_Isolated_0 = 1733,
		_Stat_LRI_Isolated_1 = 1739,
		_Stat_LRI_Isolated_2 = 1742,
		_Stat_LRI_Isolated_3 = 1745,
		_Stat_LRI_Isolated_4 = 1748,
		_Stat_LRI_Isolated_5 = 1751,
		_Stat_LRI_Isolated_6 = 1754,
		_TypeStartsWithKeyword_LRI_Isolated_2 = 1757,
		_Type_LRI_Isolated_2 = 1763,
		_GenericArgument_LRI_Original = 1769,
		_QualifiedName_PrimitiveExpr_LRI_Original = 1774,
		_PostfixUnaryExpr_LRI_Original = 1779,
		_PrefixUnaryExpr_LRI_Original = 1811,
		_BExpr0_LRI_Original = 1816,
		_BExpr1_LRI_Original = 1825,
		_BExpr2_LRI_Original = 1837,
		_BExpr3_LRI_Original = 1846,
		_BExpr4_SWITCH_COMBINED_LRI_Original = 1855,
		_BExpr4_SWITCH_0allow_GT_LRI_Original = 1858,
		_BExpr4_SWITCH_1allow_GT_LRI_Original = 1870,
		_BExpr5_SWITCH_0allow_GT_LRI_Original = 1885,
		_BExpr5_SWITCH_1allow_GT_LRI_Original = 1894,
		_BExpr6_SWITCH_0allow_GT_LRI_Original = 1903,
		_BExpr6_SWITCH_1allow_GT_LRI_Original = 1909,
		_BExpr7_SWITCH_0allow_GT_LRI_Original = 1915,
		_BExpr7_SWITCH_1allow_GT_LRI_Original = 1921,
		_BExpr8_SWITCH_0allow_GT_LRI_Original = 1927,
		_BExpr8_SWITCH_1allow_GT_LRI_Original = 1933,
		_BExpr9_SWITCH_0allow_GT_LRI_Original = 1939,
		_BExpr9_SWITCH_1allow_GT_LRI_Original = 1945,
		_BExpr10_SWITCH_0allow_GT_LRI_Original = 1951,
		_BExpr10_SWITCH_1allow_GT_LRI_Original = 1957,
		_BExpr_NoComma_SWITCH_0allow_GT_LRI_Original = 1963,
		_BExpr_NoComma_SWITCH_1allow_GT_LRI_Original = 2006,
		_BExpr_SWITCH_1allow_GT_LRI_Original = 2049,
		_Expr_NoComma_Raw_SWITCH_1allow_GT_LRI_Original = 2055,
		_Expr_Raw_SWITCH_1allow_GT_LRI_Original = 2058,
		_PM_PrimitiveType_LRI_Original = 2061,
		_PM_QualifiedName_LRI_Original = 2065,
		_ShortTypeStartsWithKeywordBeforeDeclarator_LRI_Original = 2069,
		_ShortTypeBeforeDeclarator_LRI_Original = 2075,
		_TypeStartsWithKeywordBeforeDeclarator_LRI_Original = 2079,
		_TypeBeforeDeclarator_LRI_Original = 2086,
		_VarWithoutInit_LRI_Original = 2093,
		_VarRequiredInit_LRI_Original = 2097,
		_FunctionParameter_LRI_Original = 2101,
		_CatchParameter_LRI_Original = 2108,
		_ExprOrVarWithInit_LRI_Original = 2115,
		_TypedGenericParameter_LRI_Original = 2122,
		_GenericParameter_LRI_Original = 2127,
		_VarsDeclWithoutKeyword_LRI_Original = 2132,
		_VarsDecl_LRI_Original = 2138,
		_Decl_LRI_Original = 2143,
		_ExprStat_LRI_Original = 2146,
		_IfStatConditionPart_LRI_Original = 2152,
		_ForStatConditionPart_LRI_Original = 2160,
		_Stat_LRI_Original = 2177,
		_TypeStartsWithKeyword_LRI_Original = 2187,
		_Type_LRI_Original = 2194,
		_Expr_NoComma_LRI_Original = 2201,
		_Expr_LRI_Original = 2204,
		_Expr_Argument_LRI_Original = 2207,
		_TypeOrExpr_NoComma_Raw_SWITCH_COMBINED_LRI_Original = 2212,
		_TypeOrExpr_NoComma_Raw_SWITCH_0allow_GT_LRI_Original = 2215,
		_TypeOrExpr_Raw_SWITCH_COMBINED_LRI_Original = 2219,
		_TypeOrExpr_Raw_SWITCH_1allow_GT_LRI_Original = 2222,
		_TypeOrExpr_NoComma_NoGT_LRI_Original = 2226,
		_TypeOrExpr_LRI_Original = 2229,
	};

	const wchar_t* ParserRuleName(vl::vint index);
	const wchar_t* ParserStateLabel(vl::vint index);
	extern void CppParserData(vl::stream::IStream& outputStream);

	class Parser
		: public vl::glr::ParserBase<CppTokens, ParserStates, CppAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::WString GetClassName(vl::vint32_t classIndex) const override;
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		Parser();

		vl::Ptr<cpp_parser::CppStatement> Parse_Stat(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppStatement> Parse_Stat(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Type(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Type(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Expr(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Expr(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_TypeOrExpr(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_TypeOrExpr(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppFile> Parse_File(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppFile> Parse_File(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif