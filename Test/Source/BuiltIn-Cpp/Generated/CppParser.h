/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Cpp
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_CPP_PARSER_SYNTAX
#define VCZH_PARSER2_BUILTIN_CPP_PARSER_SYNTAX

#include "Cpp_Assembler.h"
#include "Cpp_Lexer.h"

namespace cpp_parser
{
	enum class ParserStates
	{
		_NameIdentifier = 0,
		_DtorIdentifier = 3,
		_TypeIdentifier = 7,
		_OperatorIdentifier = 20,
		_Identifier = 117,
		_GenericArgument = 122,
		_GenericArguments = 126,
		_QualifiedNameFragment = 132,
		_MemberQualifiedNameFragment = 139,
		_QualifiedName = 142,
		_StringLiteralFragment = 161,
		_PrimitiveExpr = 165,
		_PostfixUnaryExpr = 278,
		_MemberOperatorIdentifier = 296,
		_MemberOperatorQualifiedName = 301,
		_BExpr0 = 305,
		_BExpr1 = 320,
		_BExpr2 = 332,
		_BExpr3 = 341,
		_BExpr4 = 350,
		_BExpr5 = 365,
		_BExpr6 = 374,
		_BExpr7 = 380,
		_BExpr8 = 386,
		_BExpr9 = 392,
		_BExpr10 = 398,
		_BExpr_NoComma = 404,
		_BExpr = 407,
		_PrimitiveTypeLiteral = 410,
		_PrimitiveType = 428,
		_ShortType = 443,
		_LongType = 454,
		_Type = 463,
		_Expr = 469,
		_Expr_NoComma = 475,
		_TypeOrExpr = 481,
		_TypeOrExpr_NoComma_NoLT = 490,
		_File = 499,
	};

	const wchar_t* ParserRuleName(vl::vint index);
	const wchar_t* ParserStateLabel(vl::vint index);
	const wchar_t* ParserSwitchName(vl::vint index);
	extern void CppParserData(vl::stream::IStream& outputStream);

	class Parser
		: public vl::glr::ParserBase<CppTokens, ParserStates, CppAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		Parser();

		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_TypeOrExpr(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_TypeOrExpr(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppFile> Parse_File(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppFile> Parse_File(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif