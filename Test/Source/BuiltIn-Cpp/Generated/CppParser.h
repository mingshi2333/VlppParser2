/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Cpp
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_CPP_PARSER_SYNTAX
#define VCZH_PARSER2_BUILTIN_CPP_PARSER_SYNTAX

#include "Cpp_Assembler.h"
#include "Cpp_Lexer.h"

namespace cpp_parser
{
	enum class ParserStates
	{
		_NameIdentifier = 0,
		_DtorIdentifier = 3,
		_TypeIdentifier = 7,
		_OperatorIdentifierNewArray = 20,
		_OperatorIdentifierDeleteArray = 24,
		_OperatorIdentifier = 28,
		_Identifier = 119,
		_GenericArgument = 124,
		_GenericArguments = 144,
		_QualifiedNameFragment = 150,
		_MemberQualifiedNameFragment = 157,
		_SingleLevelQualifiedName = 160,
		_NextLevelQualifiedName = 170,
		_QualifiedName = 176,
		_QualifiedNameAfterTypename = 181,
		_StringLiteralFragment = 187,
		_LambdaCaptureId = 191,
		_LambdaCapture = 201,
		_LambdaExpr = 211,
		_PrimitiveExpr = 220,
		_QualifiedName_PrimitiveExpr = 298,
		_PostfixUnaryExpr = 302,
		_NewPrefix = 318,
		_NewExpr = 323,
		_DeletePrefix = 335,
		_DeleteExpr = 340,
		_SizeOfPrefix = 348,
		_SizeofExpr = 352,
		_AllPrefixUnaryExpr_NoCStyleCast = 362,
		_AllPrefixUnaryExpr = 383,
		_PrefixUnaryExpr = 390,
		_MemberOperatorIdentifier = 407,
		_MemberOperatorQualifiedName = 412,
		_BExpr0 = 416,
		_BExpr1 = 434,
		_BExpr2 = 452,
		_BExpr3 = 470,
		_PrimitiveTypeLiteral = 488,
		_PrimitiveType = 506,
		_PM_PrimitiveType = 521,
		_PM_QualifiedName = 524,
		_ShortTypeStartsWithKeywordBeforeDeclarator = 527,
		_ShortTypeBeforeDeclarator = 532,
		_TypeStartsWithKeywordBeforeDeclarator = 538,
		_TypeBeforeDeclarator = 546,
		_AdvancedTypeNoCVNoMember = 556,
		_AdvancedTypeCV = 569,
		_AdvancedTypeNoMember = 573,
		_AdvancedTypeMember = 577,
		_DeclaratorKeyword = 581,
		_DeclaratorAKFirst = 601,
		_DeclaratorAKFollow = 605,
		_DeclaratorAKCV = 609,
		_DeclaratorAKMember = 612,
		_DeclaratorFunctionParameters = 615,
		_FunctionKeyword = 627,
		_DeclaratorFunctionPart = 653,
		_DeclaratorFunctionPartOptionalParameters = 659,
		_DeclaratorArrayPart = 668,
		_DeclaratorId = 673,
		_DeclaratorBeforeInner = 677,
		_DeclaratorAfterInner = 684,
		_InnerDeclaratorWithoutName = 689,
		_InnerDeclaratorInnerOptionalName = 693,
		_InnerDeclaratorInnerRequiredName = 697,
		_DeclaratorInnerWithoutName = 701,
		_DeclaratorInnerOptionalName = 706,
		_DeclaratorInnerRequiredName = 714,
		_DeclaratorWithoutName = 722,
		_DeclaratorOptionalName = 730,
		_DeclaratorRequiredName = 738,
		_VarValueInit = 745,
		_VarNewParanInit = 749,
		_VarVarParanInit = 755,
		_VarBraceInit = 762,
		_VarCtorInit = 768,
		_VarInit = 772,
		_DeclaratorVariablePartWithoutInit = 777,
		_DeclaratorVariablePartOptionalInit = 780,
		_DeclaratorVariablePartRequiredInit = 784,
		_VarWithoutInit = 788,
		_VarRequiredInit = 798,
		_FunctionParameterVariablePart = 808,
		_FunctionParameter = 813,
		_CatchParameterVariablePart = 824,
		_CatchParameter = 827,
		_ExprOrVarWithInit = 838,
		_GenericParameterKeyword = 859,
		_OrdinaryGenericParameter = 866,
		_TypedGenericParameterInit = 873,
		_TypedGenericParameterVariablePart = 877,
		_TypedGenericParameter = 882,
		_GenericParameter = 892,
		_GenericHeader = 903,
		_VarsDeclWithoutKeyword = 909,
		_VarsDecl = 919,
		_Decl = 930,
		_ExprStat = 941,
		_BlockStat = 963,
		_TryStatCatchPart = 968,
		_TryStat = 976,
		___TryStat = 982,
		_IfStatConditionPart = 993,
		_IfStat = 1017,
		_ForStatConditionPart = 1025,
		_ForStat = 1048,
		_OtherStats = 1055,
		_Stat = 1104,
		_TypeStartsWithKeyword = 1132,
		_Type = 1141,
		_Expr_NoComma = 1152,
		_Expr = 1171,
		_Expr_Argument = 1191,
		_TypeOrExpr_NoComma_NoGT = 1211,
		_TypeOrExpr = 1230,
		_File = 1250,
		_BExpr4_SWITCH_COMBINED = 1253,
		_TypeOrExpr_NoComma_Raw_SWITCH_COMBINED = 1271,
		_TypeOrExpr_Raw_SWITCH_COMBINED = 1282,
		_BExpr_SWITCH_1allow_GT = 1293,
		_BExpr10_SWITCH_0allow_GT = 1313,
		_BExpr10_SWITCH_1allow_GT = 1331,
		_BExpr4_SWITCH_0allow_GT = 1349,
		_BExpr4_SWITCH_1allow_GT = 1367,
		_BExpr5_SWITCH_0allow_GT = 1385,
		_BExpr5_SWITCH_1allow_GT = 1403,
		_BExpr6_SWITCH_0allow_GT = 1421,
		_BExpr6_SWITCH_1allow_GT = 1439,
		_BExpr7_SWITCH_0allow_GT = 1457,
		_BExpr7_SWITCH_1allow_GT = 1475,
		_BExpr8_SWITCH_0allow_GT = 1493,
		_BExpr8_SWITCH_1allow_GT = 1511,
		_BExpr9_SWITCH_0allow_GT = 1529,
		_BExpr9_SWITCH_1allow_GT = 1547,
		_BExpr_NoComma_SWITCH_0allow_GT = 1565,
		_BExpr_NoComma_SWITCH_1allow_GT = 1584,
		_Expr_NoComma_Raw_SWITCH_1allow_GT = 1603,
		_Expr_Raw_SWITCH_1allow_GT = 1622,
		_ThrowExpr_SWITCH_1allow_GT = 1642,
		_ThrowExpr_SWITCH_0allow_GT = 1646,
		_TypeOrExpr_NoComma_Raw_SWITCH_0allow_GT = 1650,
		_TypeOrExpr_Raw_SWITCH_1allow_GT = 1669,
		_PrefixUnaryExpr_LRI_Isolated_1 = 1689,
		_BExpr_NoComma_SWITCH_0allow_GT_LRI_Isolated_1 = 1692,
		_BExpr_NoComma_SWITCH_1allow_GT_LRI_Isolated_1 = 1695,
		_ShortTypeStartsWithKeywordBeforeDeclarator_LRI_Isolated_1 = 1698,
		_ShortTypeStartsWithKeywordBeforeDeclarator_LRI_Isolated_2 = 1702,
		_FunctionParameter_LRI_Isolated_2 = 1706,
		_CatchParameter_LRI_Isolated_2 = 1712,
		_ExprOrVarWithInit_LRI_Isolated_2 = 1718,
		_GenericParameter_LRI_Isolated_0 = 1724,
		_VarsDecl_LRI_Isolated_1 = 1727,
		_ForStatConditionPart_LRI_Isolated_0 = 1732,
		_Stat_LRI_Isolated_1 = 1738,
		_Stat_LRI_Isolated_2 = 1741,
		_Stat_LRI_Isolated_3 = 1744,
		_Stat_LRI_Isolated_4 = 1747,
		_Stat_LRI_Isolated_5 = 1750,
		_Stat_LRI_Isolated_6 = 1753,
		_TypeStartsWithKeyword_LRI_Isolated_2 = 1756,
		_Type_LRI_Isolated_2 = 1762,
		_GenericArgument_LRI_Original = 1768,
		_QualifiedName_PrimitiveExpr_LRI_Original = 1773,
		_PostfixUnaryExpr_LRI_Original = 1778,
		_PrefixUnaryExpr_LRI_Original = 1810,
		_BExpr0_LRI_Original = 1815,
		_BExpr1_LRI_Original = 1824,
		_BExpr2_LRI_Original = 1836,
		_BExpr3_LRI_Original = 1845,
		_BExpr4_SWITCH_COMBINED_LRI_Original = 1854,
		_BExpr4_SWITCH_0allow_GT_LRI_Original = 1857,
		_BExpr4_SWITCH_1allow_GT_LRI_Original = 1869,
		_BExpr5_SWITCH_0allow_GT_LRI_Original = 1884,
		_BExpr5_SWITCH_1allow_GT_LRI_Original = 1893,
		_BExpr6_SWITCH_0allow_GT_LRI_Original = 1902,
		_BExpr6_SWITCH_1allow_GT_LRI_Original = 1908,
		_BExpr7_SWITCH_0allow_GT_LRI_Original = 1914,
		_BExpr7_SWITCH_1allow_GT_LRI_Original = 1920,
		_BExpr8_SWITCH_0allow_GT_LRI_Original = 1926,
		_BExpr8_SWITCH_1allow_GT_LRI_Original = 1932,
		_BExpr9_SWITCH_0allow_GT_LRI_Original = 1938,
		_BExpr9_SWITCH_1allow_GT_LRI_Original = 1944,
		_BExpr10_SWITCH_0allow_GT_LRI_Original = 1950,
		_BExpr10_SWITCH_1allow_GT_LRI_Original = 1956,
		_BExpr_NoComma_SWITCH_0allow_GT_LRI_Original = 1962,
		_BExpr_NoComma_SWITCH_1allow_GT_LRI_Original = 2005,
		_BExpr_SWITCH_1allow_GT_LRI_Original = 2048,
		_Expr_NoComma_Raw_SWITCH_1allow_GT_LRI_Original = 2054,
		_Expr_Raw_SWITCH_1allow_GT_LRI_Original = 2057,
		_PM_PrimitiveType_LRI_Original = 2060,
		_PM_QualifiedName_LRI_Original = 2064,
		_ShortTypeStartsWithKeywordBeforeDeclarator_LRI_Original = 2068,
		_ShortTypeBeforeDeclarator_LRI_Original = 2074,
		_TypeStartsWithKeywordBeforeDeclarator_LRI_Original = 2078,
		_TypeBeforeDeclarator_LRI_Original = 2085,
		_VarWithoutInit_LRI_Original = 2092,
		_VarRequiredInit_LRI_Original = 2096,
		_FunctionParameter_LRI_Original = 2100,
		_CatchParameter_LRI_Original = 2107,
		_ExprOrVarWithInit_LRI_Original = 2114,
		_TypedGenericParameter_LRI_Original = 2121,
		_GenericParameter_LRI_Original = 2126,
		_VarsDeclWithoutKeyword_LRI_Original = 2131,
		_VarsDecl_LRI_Original = 2137,
		_Decl_LRI_Original = 2142,
		_ExprStat_LRI_Original = 2145,
		_IfStatConditionPart_LRI_Original = 2151,
		_ForStatConditionPart_LRI_Original = 2159,
		_Stat_LRI_Original = 2176,
		_TypeStartsWithKeyword_LRI_Original = 2186,
		_Type_LRI_Original = 2193,
		_Expr_NoComma_LRI_Original = 2200,
		_Expr_LRI_Original = 2203,
		_Expr_Argument_LRI_Original = 2206,
		_TypeOrExpr_NoComma_Raw_SWITCH_COMBINED_LRI_Original = 2211,
		_TypeOrExpr_NoComma_Raw_SWITCH_0allow_GT_LRI_Original = 2214,
		_TypeOrExpr_Raw_SWITCH_COMBINED_LRI_Original = 2218,
		_TypeOrExpr_Raw_SWITCH_1allow_GT_LRI_Original = 2221,
		_TypeOrExpr_NoComma_NoGT_LRI_Original = 2225,
		_TypeOrExpr_LRI_Original = 2228,
	};

	const wchar_t* ParserRuleName(vl::vint index);
	const wchar_t* ParserStateLabel(vl::vint index);
	extern void CppParserData(vl::stream::IStream& outputStream);

	class Parser
		: public vl::glr::ParserBase<CppTokens, ParserStates, CppAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::WString GetClassName(vl::vint32_t classIndex) const override;
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		Parser();

		vl::Ptr<cpp_parser::CppStatement> Parse_Stat(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppStatement> Parse_Stat(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Type(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Type(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Expr(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_Expr(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_TypeOrExpr(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppTypeOrExpr> Parse_TypeOrExpr(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppFile> Parse_File(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<cpp_parser::CppFile> Parse_File(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif