/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:Cpp
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_BUILTIN_CPP_AST_ASSEMBLER
#define VCZH_PARSER2_BUILTIN_CPP_AST_ASSEMBLER

#include "CppAst.h"

namespace cpp_parser
{
	enum class CppClasses : vl::vint32_t
	{
		ConstType = 0,
		ExprOnly = 1,
		File = 2,
		Name = 3,
		NumericExprLiteral = 4,
		OperatorName = 5,
		PrimitiveExprLiteral = 6,
		PrimitiveType = 7,
		QualifiedName = 8,
		StringLiteral = 9,
		StringLiteralFragment = 10,
		TypeOnly = 11,
		TypeOrExpr = 12,
		VolatileType = 13,
	};

	enum class CppFields : vl::vint32_t
	{
		ConstType_type = 0,
		Name_kind = 1,
		Name_name = 2,
		NumericExprLiteral_kind = 3,
		NumericExprLiteral_literal = 4,
		OperatorName_op = 5,
		PrimitiveExprLiteral_kind = 6,
		PrimitiveType_kind = 7,
		PrimitiveType_literal1 = 8,
		PrimitiveType_literal2 = 9,
		StringLiteral_fragments = 10,
		StringLiteralFragment_kind = 11,
		StringLiteralFragment_literal = 12,
		VolatileType_type = 13,
	};

	extern const wchar_t* CppTypeName(CppClasses type);
	extern const wchar_t* CppCppTypeName(CppClasses type);
	extern const wchar_t* CppFieldName(CppFields field);
	extern const wchar_t* CppCppFieldName(CppFields field);

	class CppAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif