template<typename X>
struct Field;

template<typename T, typename U>
struct A
{
};

template<>
struct A<int, double>
{
	Field<char> a;
	Field<char> A<int, double>::* b;
	Field<float> C();
	Field<float> (A<int, double>::*d)();
	Field<float> E(...)const;
	Field<float> (A<int, double>::*f)(...)const;
};

A<int, double> a;
A<int, double>* pa;
const A<int, double> ca;
volatile A<int, double>* pva;