namespace ns
{
	struct A
	{
		template<int X, typename T>
		struct B
		{
			struct C
			{
				template<typename U, int Y>
				struct D
				{
															D();
															~D();
					template<typename V, typename... Vs>	D(V, Vs...);
					template<typename V, typename... Vs>	D(T, U, V, Vs...);
				};

				template<int Y, typename U1, typename U2, typename U3>
				struct D<U1(*)(U2, U3), Y>
				{
															D();
															~D();
					template<typename V, typename... Vs>	D(V, Vs...);
					template<typename V, typename... Vs>	D(T, U1, U2, U3, V, Vs...);
				};
			};
		};

		template<typename T1, typename T2, typename T3, int X>
		struct B<X, T1(*)(T2, T3)>
		{
			struct C
			{
				template<typename U, int Y>
				struct D
				{
															D();
															~D();
					template<typename V, typename... Vs>	D(V, Vs...);
					template<typename V, typename... Vs>	D(T1, T2, T3, U, V, Vs...);
				};

				template<int Y, typename U1, typename U2, typename U3>
				struct D<U1(*)(U2, U3), Y>
				{
															D();
															~D();
					template<typename V, typename... Vs>	D(V, Vs...);
					template<typename V, typename... Vs>	D(T1, T2, T3, U1, U2, U3, V, Vs...);
				};
			};
		};
	};
}

namespace ns
{
	template<int _1, typename X>								template<typename Y, int _2>																		A::B<_1, X>::C::D<Y, _2>::D(){}
	template<int _1, typename X>								template<typename Y, int _2>																		A::B<_1, X>::C::D<Y, _2>::~D(){}
	template<int _1, typename X>								template<typename Y, int _2>								template<typename Z, typename... Zs>	A::B<_1, X>::C::D<Y, _2>::D(Z, Zs...){}
	template<int _1, typename X>								template<typename Y, int _2>								template<typename Z, typename... Zs>	A::B<_1, X>::C::D<Y, _2>::D(X, Y, Z, Zs...){}

	template<int _1, typename X>								template<int _2, typename Y1, typename Y2, typename Y3>												A::B<_1, X>::C::D<Y1(*)(Y2, Y3), _2>::D(){}
	template<int _1, typename X>								template<int _2, typename Y1, typename Y2, typename Y3>												A::B<_1, X>::C::D<Y1(*)(Y2, Y3), _2>::~D(){}
	template<int _1, typename X>								template<int _2, typename Y1, typename Y2, typename Y3>		template<typename Z, typename... Zs>	A::B<_1, X>::C::D<Y1(*)(Y2, Y3), _2>::D(Z, Zs...){}
	template<int _1, typename X>								template<int _2, typename Y1, typename Y2, typename Y3>		template<typename Z, typename... Zs>	A::B<_1, X>::C::D<Y1(*)(Y2, Y3), _2>::D(X, Y1, Y2, Y3, Z, Zs...){}

	template<typename X1, typename X2, typename X3, int _1>		template<typename Y, int _2>																		A::B<_1, X1(*)(X2, X3)>::C::D<Y, _2>::D(){}
	template<typename X1, typename X2, typename X3, int _1>		template<typename Y, int _2>																		A::B<_1, X1(*)(X2, X3)>::C::D<Y, _2>::~D(){}
	template<typename X1, typename X2, typename X3, int _1>		template<typename Y, int _2>								template<typename Z, typename... Zs>	A::B<_1, X1(*)(X2, X3)>::C::D<Y, _2>::D(Z, Zs...){}
	template<typename X1, typename X2, typename X3, int _1>		template<typename Y, int _2>								template<typename Z, typename... Zs>	A::B<_1, X1(*)(X2, X3)>::C::D<Y, _2>::D(X1, X2, X3, Y, Z, Zs...){}

	template<typename X1, typename X2, typename X3, int _1>		template<int _2, typename Y1, typename Y2, typename Y3>												A::B<_1, X1(*)(X2, X3)>::C::D<Y1(*)(Y2, Y3), _2>::D(){}
	template<typename X1, typename X2, typename X3, int _1>		template<int _2, typename Y1, typename Y2, typename Y3>												A::B<_1, X1(*)(X2, X3)>::C::D<Y1(*)(Y2, Y3), _2>::~D(){}
	template<typename X1, typename X2, typename X3, int _1>		template<int _2, typename Y1, typename Y2, typename Y3>		template<typename Z, typename... Zs>	A::B<_1, X1(*)(X2, X3)>::C::D<Y1(*)(Y2, Y3), _2>::D(Z, Zs...){}
	template<typename X1, typename X2, typename X3, int _1>		template<int _2, typename Y1, typename Y2, typename Y3>		template<typename Z, typename... Zs>	A::B<_1, X1(*)(X2, X3)>::C::D<Y1(*)(Y2, Y3), _2>::D(X1, X2, X3, Y1, Y2, Y3, Z, Zs...){}
}