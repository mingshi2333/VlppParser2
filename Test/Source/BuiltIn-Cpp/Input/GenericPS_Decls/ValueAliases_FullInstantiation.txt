		template<typename A, typename... Ts> struct FuncType;

		template<typename A, typename B, typename... Ts>
		constexpr auto Value = false;

		template<typename A, typename B, typename... Ts>
		constexpr auto Value<A*, B*, Ts...> = 'c';

		template<typename A, typename B, typename... Ts>
		constexpr auto Value<A, B, Ts*...> = L'c';

		template<typename A, typename B, typename... Ts>
		constexpr auto Value<A*, B*, Ts*...> = 0.f;

		template<typename A, typename B, typename C, typename D>
		constexpr auto Value<A*, B*, C*, D*> = 0.0;

		template<typename A, typename B>
		constexpr auto Value<char*, wchar_t*, A*, B*> = (char*)nullptr;

		template<typename A, typename B>
		constexpr auto Value<A*, B*, float*, double*> = (wchar_t*)nullptr;

		template<>
		constexpr auto Value<char*, wchar_t*, float*, double*> = (bool*)nullptr;

		template<typename A, typename B>
		constexpr auto Value<A(*)(float), B(*)(double)> = (char**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<char(*)(A), wchar_t(*)(B)> = (wchar_t**)nullptr;

		template<>
		constexpr auto Value<char(*)(float), wchar_t(*)(double)> = (bool**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<A(*)(B), A(*)(B), A(*)(B), A(*)(B)> = (float**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<A(*)(B), B(*)(A), A(*)(A), B(*)(B)> = (double**)nullptr;

		template<typename A, typename B, typename... Ts>
		constexpr auto Value<A(*)(Ts...), B(*)(Ts...), A(*)(B(*...bs)(Ts))> = (void**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<FuncType<A, float>, FuncType<B, double>> = (char**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<FuncType<char, A>, FuncType<wchar_t, B>> = (wchar_t**)nullptr;

		template<>
		constexpr auto Value<FuncType<char, float>, FuncType<wchar_t, double>> = (bool**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<FuncType<A, B>, FuncType<A, B>, FuncType<A, B>, FuncType<A, B>> = (float**)nullptr;

		template<typename A, typename B>
		constexpr auto Value<FuncType<A, B>, FuncType<B, A>, FuncType<A, A>, FuncType<B, B>> = (double**)nullptr;

		template<typename A, typename B, typename... Ts>
		constexpr auto Value<FuncType<A, Ts...>, FuncType<B, Ts...>, FuncType<A, FuncType<B, Ts>...>> = (void**)nullptr;