template<typename T = int*>											auto One =				{T{}};
template<typename T = int*, typename U = char*>						auto Two =				{T{}, U{}};
template<typename... TArgs>											auto Vta =				{TArgs{}...};
template<typename T = int*, typename... TArgs>						auto OneVta =			{T{}, TArgs{}...};
template<typename T = int*, typename U = char*, typename... TArgs>	auto TwoVta =			{T{}, U{}, TArgs{}...};

template<typename... Ts>											auto ApplyOne =			One<Ts...>;
template<typename... Ts>											auto ApplyTwo =			Two<Ts...>;
template<typename... Ts>											auto ApplyVta =			Vta<Ts...>;
template<typename... Ts>											auto ApplyOneVta =		OneVta<Ts...>;
template<typename... Ts>											auto ApplyTwoVta =		TwoVta<Ts...>;

template<typename T, typename... Ts>								auto ApplyOne_1 =		One<T, Ts...>;
template<typename T, typename... Ts>								auto ApplyTwo_1 =		Two<T, Ts...>;
template<typename T, typename... Ts>								auto ApplyVta_1 =		Vta<T, Ts...>;
template<typename T, typename... Ts>								auto ApplyOneVta_1 =	OneVta<T, Ts...>;
template<typename T, typename... Ts>								auto ApplyTwoVta_1 =	TwoVta<T, Ts...>;