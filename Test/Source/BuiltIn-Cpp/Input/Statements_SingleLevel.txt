;
break;
continue;
return;
return 0;
X:;
X:0;
default:;
default:0;
case 1:;
case 1:0;
goto X;
__leave;
static_assert(sizeof(int) == 4);

0;
int a;
int a = 0;
int a ();
int a (0);
int a {};
int a {0};
int a, *b, c[10], (*d)(bool);
int a = 0, *b (nullptr), c[10] = {0, 1}, (*d)(bool) {nullptr};
{;break;continue;return;return 0; X:; X:0; default:; default:0; case 1:; case 1:0; goto X; __leave; static_assert(sizeof(int) == 4);}

while(int x=1){do{;}while(0);}
for(int x:0) for(;;) for(0;1;2) for(int i=0,j=0;1;2);
if (int i=0) if (0) 1; else if (int i=0,j=0;1) 2; else 3;
switch(0){case 1:1; break; case 2:2; default: switch(int i=0);}
try {try{1;2;3;}catch(...);} catch(int) try; catch(int x);
__try; __except(0) __try; __finally;

while (int a = 0);
int v[10]; for (int a : v);
for (int a = 0; a < 10; a++);
if (int a = 0);
if (int a = 0; true);
switch (int a = 0) {}
try; catch(int a);

int a = 0, b; int c;
for (int a = 0, b = 0, c = 0; a < 0; a++, b++, c++);
if (int a, b; int c = 0);
if (int a, b, c; true);

for (auto& a : v);
for (const auto& a : std2::Vector());
for (decltype(auto) a : std3::Vector());