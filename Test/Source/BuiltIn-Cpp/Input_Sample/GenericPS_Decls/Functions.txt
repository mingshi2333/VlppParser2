		void R();

		template<typename T>
		T R(T);

		template<typename T, typename U, typename... Ts>
		auto R(T, U u, Ts... ts) { return R(u, ts...); }

		template<typename T, typename U, typename... Ts>
		auto F(T, U, Ts*...) -> decltype(R(Ts()...));

		template<>
		void F<char, wchar_t>(char, wchar_t);

		template<>
		float F<char, wchar_t, float>(char, wchar_t, float*);

		template<>
		double F<char, wchar_t, float, double>(char, wchar_t, float*, double*);

		template<>
		bool F<char, wchar_t, float, double, bool>(char, wchar_t, float*, double*, bool*);

		float* pf = nullptr;
		double* pd = nullptr;
		bool* pb = nullptr;