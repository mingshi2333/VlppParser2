//////////////////////////////////////////////////////////////////
// Namespace Declaration
//////////////////////////////////////////////////////////////////

_NsName
  ::= ID:name as NamespaceName
  ;

_NsDecl
  ::= "namespace" {ID:names ; "::"} "{" _DeclWithSemicolon:decls "}" as NamespaceDeclaration
  ;
  
//////////////////////////////////////////////////////////////////
// Typedef Declaration
//////////////////////////////////////////////////////////////////

_TypedefCompatibleDecl
  ::= !_VarsDeclWithoutKeyword
  ::= !_ClassDeclInTypedef
  ;

_TypedefDecl
  ::= "typedef" _TypedefCompatibleDecl:declaration as TypedefDeclaration
  ;

//////////////////////////////////////////////////////////////////
// Friend Declaration
//////////////////////////////////////////////////////////////////

_FriendDecl
  ::= "friend" _Decl:decl as FriendDeclaration
  ;

//////////////////////////////////////////////////////////////////
// Static Assert Declaration
//////////////////////////////////////////////////////////////////

_StaticAssertDecl
  ::= "static_assert" "(" _Expr:expr ["," _Expr:message] ")" as StaticAssertDeclaration
  ;
  
//////////////////////////////////////////////////////////////////
// Enum Declaration
//////////////////////////////////////////////////////////////////

_EnumItem
  ::= ID:name ["=" _Expr:expr] as EnumItem
  ;

_EnumBody
  ::= "{" [_EnumItem:items {_EnumItem:items ; ","} [","]] "}" as EnumBody
  ;

_EnumDeclPartial
  ::= _EnumBody:body as partial EnumDeclaration
  ::= ";" as partial EnumDeclaration
  ;

_EnumDecl
  ::= "enum" ID:name _EnumDeclPartial as EnumDeclaration {kind = Enum}
  ::= "enum" "class" ID:name [":" _Type:type] _EnumDeclPartial as EnumDeclaration {kind = EnumClass}
  ;

//////////////////////////////////////////////////////////////////
// Other Declarations
//////////////////////////////////////////////////////////////////

_OtherDecl
  ::= !_NsDecl
  ::= !_TypedefDecl
  ::= !_FriendDecl
  ::= !_StaticAssertDecl
  ::= !_EnumDecl
  ;