//////////////////////////////////////////////////////////////////
// Variable Initialization
//////////////////////////////////////////////////////////////////

_VarValueInit
  ::= "=" _Expr_NoComma:expr as VarValueInit
  ;

_VarNewParanInit
  ::= "(" {_Expr_Argument:arguments ; ","} ")" as VarParanthesisInit
  ;

_VarBraceInit
  ::= "{" {_Expr_Argument:arguments ; ","} "}" as VarBraceInit
  ;

_VarCtorInit
  ::= !_VarNewParanInit
  ::= !_VarBraceInit
  ;

_VarInit
  ::= !_VarValueInit
  ::= !_VarNewParanInit
  ::= !_VarBraceInit
  ;

//////////////////////////////////////////////////////////////////
// Function Initialization
//////////////////////////////////////////////////////////////////

_VarStatInitItemFirst
  ::= ":" ID:name _VarCtorInit:init as VarStatInitItem
  ;

_VarStatInitItemSecond
  ::= "," ID:name _VarCtorInit:init as VarStatInitItem
  ;

_VarStatInit
  ::= [_VarStatInitItemFirst:initItems {_VarStatInitItemSecond:initItems}] _BlockStat:stat as VarStatInit
  ;

//////////////////////////////////////////////////////////////////
// Declarators in Variables
//////////////////////////////////////////////////////////////////

_DeclaratorVariablePartWithoutInit
  ::= _DeclaratorRequiredName:declarator as DeclaratorVariablePart
  ;

_DeclaratorVariablePartOptionalInit
  ::= _DeclaratorRequiredName:declarator [_VarInit:init] as DeclaratorVariablePart
  ;

_DeclaratorVariablePartRequiredInit
  ::= _DeclaratorRequiredName:declarator _VarInit:init as DeclaratorVariablePart
  ;

//////////////////////////////////////////////////////////////////
// Function Parameter
//////////////////////////////////////////////////////////////////

_FunctionParameterVariablePart
  ::= _VarValueInit:init as DeclaratorVariablePart
  ::= _DeclaratorOptionalName:declarator [_VarValueInit:init] as DeclaratorVariablePart
  ;

_FunctionParameter
  ::= !_TypeBeforeDeclarator
  ::= _TypeBeforeDeclarator:type _FunctionParameterVariablePart:firstVarPart as VariablesDeclaration
  ::= _DeclaratorKeyword:keywords {_DeclaratorKeyword:keywords}
      _TypeBeforeDeclarator:type [_FunctionParameterVariablePart:firstVarPart] as VariablesDeclaration
  ;

//////////////////////////////////////////////////////////////////
// Generic Header
//////////////////////////////////////////////////////////////////

_GenericParameterKeyword
  ::= "typename":typenameToken as partial OrdinaryGenericParameter
  ::= "class":typenameToken as partial OrdinaryGenericParameter
  ::= "template" _GenericHeader:genericHeader "class":typenameToken as partial OrdinaryGenericParameter
  ;

_OrdinaryGenericParameter
  ::= _GenericParameterKeyword ["...":variadic] [_DeclaratorId:id] ["=" _TypeOrExpr_NoComma_NoGT:init] as OrdinaryGenericParameter
  ;

_TypedGenericParameterInit
  ::= "=" _TypeOrExpr_NoComma_NoGT:expr as VarValueInit
  ;

_TypedGenericParameterVariablePart
  ::= _TypedGenericParameterInit:init as DeclaratorVariablePart
  ::= _DeclaratorOptionalName:declarator [_TypedGenericParameterInit:init] as DeclaratorVariablePart
  ;

_TypedGenericParameter
  ::= !_TypeBeforeDeclarator
  ::= _TypeBeforeDeclarator:type _TypedGenericParameterVariablePart:firstVarPart as VariablesDeclaration
  ;

_GenericParameter
  ::= !_OrdinaryGenericParameter
  ::= !_TypedGenericParameter
  ;

_GenericHeader
  ::= "<" {_GenericParameter:parameters ; ","} ">" as GenericHeader
  ;

//////////////////////////////////////////////////////////////////
// Variable in Statement Declarations
//////////////////////////////////////////////////////////////////

_CatchParameterVariablePart
  ::= _DeclaratorOptionalName:declarator as DeclaratorVariablePart
  ;

_CatchParameter
  ::= !_TypeBeforeDeclarator
  ::= _TypeBeforeDeclarator:type _CatchParameterVariablePart:firstVarPart as VariablesDeclaration
  ::= _DeclaratorKeyword:keywords {_DeclaratorKeyword:keywords}
      _TypeBeforeDeclarator:type _CatchParameterVariablePart:firstVarPart as VariablesDeclaration
  ;

_ExprOrVarCondition
  ::= !_Expr
  ::= _TypeBeforeDeclarator:type _DeclaratorVariablePartRequiredInit:firstVarPart as VariablesDeclaration
  ::= _DeclaratorKeyword:keywords {_DeclaratorKeyword:keywords}
      _TypeBeforeDeclarator:type _DeclaratorVariablePartRequiredInit:firstVarPart as VariablesDeclaration
  ;

_ForEachParameter
  ::= _TypeBeforeDeclarator:type _DeclaratorVariablePartWithoutInit:firstVarPart as VariablesDeclaration
  ;

//////////////////////////////////////////////////////////////////
// Typedef Compatible Variable Declarations
//////////////////////////////////////////////////////////////////

_MultiTypedefVarDeclVariablePart
  ::= !_DeclaratorVariablePartWithoutInit ["," _MultiTypedefVarDeclVariablePart:nextVarPart]
  ;

_MultiTypedefVarsDeclWithoutKeyword
  ::= _TypeBeforeDeclarator:type _MultiTypedefVarDeclVariablePart:firstVarPart as VariablesDeclaration
  ;

//////////////////////////////////////////////////////////////////
// Multiple Variable Declarations
//////////////////////////////////////////////////////////////////

_MultiVarsDeclVariablePart
  ::= !_DeclaratorVariablePartOptionalInit ["," _MultiVarsDeclVariablePart:nextVarPart]
  ;

_MultiVarsDeclWithoutKeyword
  ::= _TypeBeforeDeclarator:type _MultiVarsDeclVariablePart:firstVarPart as VariablesDeclaration
  ;

_MultiVarsDecl
  ::= !_MultiVarsDeclWithoutKeyword
  ::= _DeclaratorKeyword:keywords {_DeclaratorKeyword:keywords} !_MultiVarsDeclWithoutKeyword
  ;

//////////////////////////////////////////////////////////////////
// Multiple Variable or Function Forward Declarations
//////////////////////////////////////////////////////////////////

_UntypedFuncForwardDeclVariablePart
  ::= _DeclaratorUntypedFuncWithoutKeyword:declarator as DeclaratorVariablePart
  ;

_UntypedFuncForwardDeclWithoutKeyword
  ::= _UntypedFuncForwardDeclVariablePart:firstVarPart as VariablesDeclaration
  ;

_MultiVarsOrFuncForwardDeclWithoutKeyword
  ::= !_MultiVarsDeclWithoutKeyword
  ::= !_UntypedFuncForwardDeclWithoutKeyword
  ;

_MultiVarsOrFuncForwardDecl
  ::= !_MultiVarsOrFuncForwardDeclWithoutKeyword
  ::= _DeclaratorKeyword:keywords {_DeclaratorKeyword:keywords} !_MultiVarsOrFuncForwardDeclWithoutKeyword
  ;

//////////////////////////////////////////////////////////////////
// Multiple Variable or Function Forward/Impl Declarations
//////////////////////////////////////////////////////////////////

_MultiVarsOrTypedFuncDeclVariablePart
  ::= !_DeclaratorVariablePartWithoutInit [_VarInit:init] ["," _MultiVarsDeclVariablePart:nextVarPart] ";"
  ::= !_DeclaratorVariablePartWithoutInit _VarStatInit:init
  ;

_MultiVarsOrTypedFuncDeclWithoutKeyword
  ::= _TypeBeforeDeclarator:type _MultiVarsOrTypedFuncDeclVariablePart:firstVarPart as VariablesDeclaration
  ;

_UntypedFuncDeclVariablePart
  ::= _DeclaratorUntypedFuncWithoutKeyword:declarator (_VarStatInit:init | ";") as DeclaratorVariablePart
  ;

_UntypedFuncDeclWithoutKeyword
  ::= _UntypedFuncDeclVariablePart:firstVarPart as VariablesDeclaration
  ;

_MultiVarsOrFuncDeclWithoutKeyword
  ::= !_MultiVarsOrTypedFuncDeclWithoutKeyword
  ::= !_UntypedFuncDeclWithoutKeyword
  ;

_MultiVarsOrFuncDecl
  ::= !_MultiVarsOrFuncDeclWithoutKeyword
  ::= _DeclaratorKeyword:keywords {_DeclaratorKeyword:keywords} !_MultiVarsOrFuncDeclWithoutKeyword
  ;