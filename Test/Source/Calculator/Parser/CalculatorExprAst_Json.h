/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:ExprAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_CALCULATOR_EXPRAST_AST_JSON_VISITOR
#define VCZH_PARSER2_UNITTEST_CALCULATOR_EXPRAST_AST_JSON_VISITOR

#include "CalculatorExprAst.h"

namespace calculator
{
	namespace json_visitor
	{
		/// <summary>A JSON visitor, overriding all abstract methods with AST to JSON serialization code.</summary>
		class ExprAstVisitor
			: public vl::glr::JsonVisitorBase
			, protected virtual Expr::IVisitor
			, protected virtual Expandable::IVisitor
		{
		protected:
			virtual void PrintFields(Arg* node);
			virtual void PrintFields(Binary* node);
			virtual void PrintFields(Call* node);
			virtual void PrintFields(Expandable* node);
			virtual void PrintFields(Expr* node);
			virtual void PrintFields(False* node);
			virtual void PrintFields(Func* node);
			virtual void PrintFields(Import* node);
			virtual void PrintFields(LetExpr* node);
			virtual void PrintFields(Module* node);
			virtual void PrintFields(NumExpr* node);
			virtual void PrintFields(Ref* node);
			virtual void PrintFields(True* node);
			virtual void PrintFields(Unary* node);

		protected:
			void Visit(NumExpr* node) override;
			void Visit(Ref* node) override;
			void Visit(True* node) override;
			void Visit(False* node) override;
			void Visit(Func* node) override;
			void Visit(Call* node) override;
			void Visit(Expandable* node) override;

			void Visit(LetExpr* node) override;
			void Visit(Unary* node) override;
			void Visit(Binary* node) override;

		public:
			ExprAstVisitor(vl::stream::StreamWriter& _writer);

			void Print(Expr* node);
			void Print(Arg* node);
			void Print(Import* node);
			void Print(Module* node);
		};
	}
}
#endif