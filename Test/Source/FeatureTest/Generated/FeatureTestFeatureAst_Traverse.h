/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_FEATURETEST_FEATUREAST_AST_TRAVERSE_VISITOR
#define VCZH_PARSER2_UNITTEST_FEATURETEST_FEATUREAST_AST_TRAVERSE_VISITOR

#include "FeatureTestFeatureAst.h"

namespace featuretest
{
	namespace traverse_visitor
	{
		/// <summary>A traverse visitor, overriding all abstract methods with AST visiting code.</summary>
		class FeatureAstVisitor
			: public vl::Object
			, protected virtual Feature::IVisitor
		{
		protected:
			virtual void Traverse(vl::glr::ParsingToken& token);
			virtual void Traverse(vl::glr::ParsingAstBase* node);
			virtual void Traverse(BranchedOptionalFeature* node);
			virtual void Traverse(Feature* node);
			virtual void Traverse(FeatureToResolve* node);
			virtual void Traverse(NestedOptionalFeature* node);
			virtual void Traverse(OptionalFeature* node);
			virtual void Traverse(Plus* node);

		protected:
			virtual void Finishing(vl::glr::ParsingAstBase* node);
			virtual void Finishing(BranchedOptionalFeature* node);
			virtual void Finishing(Feature* node);
			virtual void Finishing(FeatureToResolve* node);
			virtual void Finishing(NestedOptionalFeature* node);
			virtual void Finishing(OptionalFeature* node);
			virtual void Finishing(Plus* node);

		protected:
			void Visit(FeatureToResolve* node) override;
			void Visit(OptionalFeature* node) override;
			void Visit(NestedOptionalFeature* node) override;
			void Visit(BranchedOptionalFeature* node) override;

		public:
			void InspectInto(Feature* node);
			void InspectInto(Plus* node);
		};
	}
}
#endif