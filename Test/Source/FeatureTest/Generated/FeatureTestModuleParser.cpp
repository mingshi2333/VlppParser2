/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "FeatureTestModuleParser.h"

namespace featuretest
{
	void FeatureTestModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 5371; // 54085 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 251;
		static const vl::vint dataSolidRows = 20;
		static const vl::vint dataRows = 21;
		static const char* compressed[] = {
			"\x45\xD3\x00\x00\xF3\x14\x00\x00\x0D\x00\x01\x82\x80\x03\x0B\x82\x81\x82\x06\x89\x82\x83\x0A\x86\x02\x85\x04\x0A\x8F\x0A\x95\x0A\x83\x0E\x85\x0F\x0A\xA3\x0A\x87\x1A\x83\x16\x85\x17\x0A\xB3\x0A\x99\x1A\x87\x1E\x85\x22\x0A\xD3\x0A\x97\x2A\x87\x2E\x85\x6D\x0E\x86\xBF\x73\x94\x9B\x9A\x84\x00\x35\xB5\xB7\x99\x94\x9B\x9C\x9F\x7F\x3E\xBC\x81\xB9\x93\xA2\x9E\x85\x9F\x40\xC7\xBF\x85\xAD\x9A\xA6\xA1\x9B\x0A\x81\x0E\xA4\xA3\xAE\xA1\x84\xA4\x4C\xB6\x95\xAD\xA7\xAB\xA7\xAC\xAD\x5D\xCF\xA1\xB4\xA3\xB6\xAA\x98\xAF\x65\xDC\xA7\xA2\xBB\xB4\xB1\xB6\xB3\x03\xD8\x9F\xA9\xA9\xB0\xB2\x82\xA9\x09\xF8\xAF\xAA\xB1\xB8\xB7\xBC\xBB\x7D\xEC\x81\xCE\xB3\xC0\xBA\x80\xB9\x75\xF4\xBF\xAA\xC5\xC4\xBF\xC2\xBF\x8D\x80\xCF\xC2\xC3\xCC\xC1\xCA\xC3\x01\x88\xCB\xD9\xAC\xC7\xCA\xC7\xCC\x90\x9E\xD2\xC0\xD4\xCC\xD2\xCA\xD3\x98\xB8\xA1\xC8\xDF\xC8\x02\x01\xA8\x73\x9C\xF2\xD1\xD4\xD9\xC7\xD8\xDB\xB5\x9B\xF9\xD1\xCD\xCC\xD7\xD0\xD5\xA5\xC0\xE7\xC2\xE9\xD2\xCF\x80\x86\x79\xBB\xE2\xDD\xD4\xE5\xD6\xE3\xE5\xB7\xBA\xF8\xD3\xE2\xED\xE8\xDF\xE8\xD7\xCA\xFE\xCC",
			"\xEF\xE3\xEC\xEC\xE8\xDA\xCD\xFF\xDD\xE2\xF4\xEF\xD5\xF2\xDF\x81\x84\x10\xD4\xE9\xED\xF6\xF0\xEF\xDE\xE1\xE4\xF4\xFF\xF1\xFB\xE0\xF7\xC3\xF9\xE9\xD5\x04\xF6\xEA\xF8\xFF\x72\x71\x7C\x7A\xF3\x76\x76\x80\x7E\x07\xBA\x79\x81\x71\x0B\xAD\x61\x4F\x5D\x05\x88\x82\x86\x82\x13\x8C\x85\x86\x73\x0D\xA3\x79\x86\x79\x17\x9A\x8D\x84\x87\x14\xA1\x86\x86\x88\x18\x9F\x89\x78\x81\x03\xBB\x75\x88\x89\x1E\xAC\x80\x8B\x88\x30\xAB\x81\x8D\x8B\xA9\x47\x0A\x43\x6B\x29\x9B\x87\x8A\x8A\x34\xB2\x8E\x8D\x8F\x40\xAF\x8F\x8E\x90\xBF\x50\x49\x71\x8E\x26\x8A\x4A\x02\x7F\xEE\x41\x88\x8A\x93\x3C\x84\x92\x97\x8E\xE7\x4B\x0C\x90\x80\x4D\x99\x92\x40\x03\x57\x82\x80\x96\x8E\x11\xAE\x84\x95\x92\x09\x40\x47\x93\x97\x64\xA8\x92\x9A\x42\x0E\x1D\x9F\x92\x96\x5E\xB0\x9F\x98\x96\x74\xB1\x95\x9F\x9C\x76\xB9\x98\x9F\x9E\x51\xA3\x9B\x98\x92\x7F\xAA\x93\x8F\x94\x61\x83\xAE\x9E\xA1\x85\x83\x97\xA1\x6B\x12\x67\x92\x9D\x9F\x0A\x50\x0E\x98\xA4\x80\x88\xA5\xA6\xA2\x89\xBF\x61\x07\xA4\x60\x83\x82\x04\xA7\x69\x8F\xAD\xA6\xA0\x98\x97\xAF\x6C\x42\x10\xA6\xA4\xA2\xAA",
			"\x8B\x81\x9D\xAB\xAA\xA4\xAE\xAA\x40\x05\x37\x99\xA0\xAE\xA8\xA1\xB7\x96\x04\xA8\x81\xB8\xAD\xAF\x9D\x94\xB1\xA7\xAC\xB0\xA3\xBE\xA6\xA6\xB0\xAF\x89\xB6\xAE\xB2\xAC\x8B\xBE\xB1\xB3\x03\x97\x0C\xAF\xB1\x72\x98\x03\xB5\xA9\xC8\x8F\xB9\xB4\xB4\x06\x59\x07\xB6\xAC\x03\x9A\x0F\xB7\xB0\x7A\x81\xB6\xB0\xB6\xE7\xBF\x66\x46\xA3\xC4\xB9\xA5\xB9\xB1\xED\xBF\xAF\xBA\xBB\x7C\xA7\x7C\x05\xAD\xDC\xA9\xB4\xB9\xBD\xF4\xA6\xB1\xBC\xB5\x77\x9E\x08\xBF\xB6\x04\xFA\xBC\xB1\xC1\xFF\xA8\xB9\xC0\xB8\x08\xF3\xB2\xBC\xBF\x0F\xFE\xBE\xC0\xC0\x01\x60\x03\xBB\xC1\x03\x61\x07\xC6\xB6\x06\xDC\xCB\xC3\xBE\x12\xD0\xC4\xC6\xC8\x0A\xD3\xC5\xC8\xC9\x0C\xF2\x92\x0B\xC0\x1D\xF9\xBF\xC4\xC6\x2F\xDE\xC6\xC9\xCA\x31\xEE\xC3\xCC\xC8\xF0\xB7\xC0\xCE\x9E\x24\x1B\xC6\xCC\x00\x25\x3E\xCD\xC0\xCA\x38\xFD\xB9\xCC\xD1\x3B\xC8\xD2\xCE\xD2\x3F\xE1\xC4\x7A\x09\x2C\xF5\xC3\xD2\xD3\x47\xD4\xD6\xD3\xD5\x11\xD5\xDA\xD4\xD6\x23\xD6\xD9\xD5\x70\x28\x02\xDD\xCA\x41\x29\x22\xD2\xD7\xD8\x68\xE7\xDA\xDA\xCE\x4B\xDE\xDD\xD7\xD6\x5F\xCF\xCA\x0A\x42\xC8\x53\xD0\xDF\xDB\x5C",
			"\xE7\xCE\xDA\xDE\x77\xFC\xD9\xDC\xCD\x6C\xCD\xDD\xDF\x6F\x2D\x26\xD1\xE2\x41\x2E\x06\xEC\xD2\xDD\x7F\xC5\xD1\xDC\xDE\x8F\xFE\xD1\xE4\xE0\x8B\xE9\xD1\x40\x48\x09\x75\xD6\xE5\xE5\x6B\xDC\xE7\xE3\xE6\x7B\xD4\xE1\xEA\xE3\x90\xE5\xE2\xE6\xE9\xBF\x72\x0A\xE1\xC8\x22\x6C\xBF\xE5\xE7\xA3\xC9\xD1\xED\xDB\x83\xE4\xE7\xEB\xED\xA2\xE7\x74\x0C\xDD\xB4\xCD\xE2\xED\xED\xBF\xFE\xED\xEF\xE4\xB6\xF9\xE2\xF2\xE0\xC1\x77\x0B\xEB\xD1\x38\x0B\xF7\xF0\xE3\xC4\xC1\xF1\xF7\xF0\xA8\xCC\x74\x4A\xEB\x9E\xD9\xF3\xEC\xF2\xD3\xDC\xF5\xF6\xF4\xDF\xD4\xF8\xED\xF1\xE4\xE0\xF7\xCA\x0E\x0A\x6B\x7E\xF7\xF8\xE6\xC6\xFD\xF7\xD0\x3E\x0E\xFF\xC2\x49\xD8\xDB\xF0\xF5\xF8\x3F\xC0\x12\xFF\xC8\x41\x3B\xFC\xFA\xF8\xEE\x63\x66\x10\x7E\x71\x81\xFF\x6B\x7F\x37\x43\x04\x81\xF9\x00\x8B\x81\x03\x8D\x87\x7E\x06\x90\x81\x01\x93\x8F\x80\xD0\x40\x79\x3C\x44\x0A\x83\x89\x28\x25\x7F\x0B\x8E\x85\x7D\xFB\x46\x0A\x06\xE1\x37\x09\x11\x9F\x84\x81\x49\x68\x0A\x09\x92\x85\x82\xD8\x5E\x83\x68\x49\x09\x7C\x0A\xB3\x87\x85\x01\x4D\x0B\x85\x16\x8F\x79\x0E\xEF\x7B\x86\xFC\x6C\x80",
			"\x84\x40\x94\x87\x0F\xE1\x3E\x08\x1C\xB7\x4F\x09\x46\x8F\x76\x12\xDA\x77\x68\x28\x09\x8B\x4F\x51\x0F\x8A\xFD\x3D\x81\x83\x81\x12\x0A\x8A\x2F\x94\x88\x05\xC1\x83\x40\x95\x09\x22\x7D\x43\x95\x85\x18\xC3\x6C\x25\xCC\x42\x8A\x8B\x2D\x8B\x8B\x14\xAE\x8A\x86\x36\xBC\x86\x8D\x3E\x88\x8F\x89\x5A\x08\x8B\xE0\x1B\x0D\x8E\x6F\x8A\x8D\x16\x82\x2C\x0A\x3C\xA9\x35\x0B\x7E\x95\x88\x1C\x82\x91\x20\x2F\x01\x93\x8B\x67\x83\x90\x22\x83\x4E\x25\x0E\xAD\x89\x20\x60\x07\x91\x1A\xCC\x8F\x90\x00\x21\x0A\x92\x37\x22\x0C\x26\x89\x9A\x8E\x7A\x63\x0B\x93\x62\x92\x8C\x27\xD9\x74\x0D\xA8\x5D\x91\x8F\x94\x88\x97\x1A\xFA\x46\x0C\x53\xA9\x91\x8E\x8A\x93\x93\x2A\xFB\x48\x0C\x57\xB3\x97\x96\x7B\x87\x94\x2C\x81\x2A\x0C\x50\x86\x23\x0D\xBE\x82\x95\x28\xF7\x4C\x0D\x60\x82\x25\x0D\xC6\x9A\x94\x21\xD9\x7E\x0D\x64\xAF\x93\x99\xB8\x95\x91\xC8\x6F\x0E\x99\x68\xAA\x91\x97\xCF\x94\x70\x1C\x55\x98\x9A\x6B\xBB\x90\x00\x71\x0A\x72\x1C\x5C\x92\x9B\x6E\x98\x9B\x0E\xE4\x97\x99\x39\xF4\x54\x0F\x74\x9F\x9E\x9B\xD0\x86\x9F\x3A\xEA\x94\x9F\x77\xB2\x9B\x38\x75\x0E",
			"\x4E\x1D\x6E\x91\x9F\x79\xB6\x99\x38\x77\x0E\x4C\x1E\x7C\x9B\x91\x31\x82\x9E\x20\x79\x16\x97\x3D\xFF\x95\x9F\x7E\x8F\x63\x0F\xCE\x9C\x0C\x41\xB2\x9B\xA1\xD6\x3D\x0E\x99\x7E\x13\xA0\x17\x86\xA2\x21\x3F\x1A\xA1\x3C\x80\x0E\x4D\x20\x6E\x42\x10\x37\x43\x16\x4D\x84\x0E\x4D\x21\x6E\x46\x10\xDE\x49\x21\x11\x2E\xA6\x20\x23\x1F\xA3\x98\x65\x85\xA7\xA0\x38\xB1\x97\x46\xB9\xA6\xA6\xE6\x0D\x16\x99\x8E\x14\xA4\x47\xBD\xA7\x27\x47\x0E\x98\x12\x42\xBC\xA5\x36\xCC\x31\x13\xA4\xBA\xA3\x94\xF0\x9F\x36\x24\x4E\x93\x12\xA7\x84\xAB\x94\x94\x0E\x99\x25\x56\xAB\xA9\x9D\x82\x26\x12\x5C\xB1\xA8\x45\xFE\x9D\x35\x4B\x0A\xA4\xAC\x37\xAF\xA9\x4D\xD9\x79\x13\xB3\x8D\xA1\xAD\x57\xAB\xAD\xC8\x1B\x1E\xAC\x86\xB6\xAE\xA1\x77\xB4\x71\x27\x4E\x9E\x13\xB0\x95\xA0\xAE\x00\x1F\x12\x33\xA0\x1E\xAE\xB4\x93\x91\x14\xCE\x82\x15\x61\xEF\xA3\xAC\xC6\xB7\x23\x14\x8B\xB9\xAD\x63\x92\xB7\x26\x52\x11\xB0\xAF\x98\xA0\xB0\x79\x25\x17\xB2\xCD\xBF\xAB\xB2\xAD\x26\x15\x67\xA0\xBE\xB2\xC3\xB7\x27\x14\xA3\xBE\xA9\x5C\xC3\xA0\x00\x54\x29\xB0\xAA\x9F\xA9\x69\x2A\x2F",
			"\xB2\xAF\xD8\x8B\x6E\x03\x7A\x22\x20\x8E\x06\x28\x01\xB9\x0F\x44\x37\x48\x3B\xB7\x40\x60\x8C\x37\xDF\x8B\x39\xB8\x31\xA5\xBB\x5C\x48\xB9\x20\xE3\x9B\x3A\xB8\x02\x3D\xB5\x62\x39\xB0\x2B\xED\x12\xBE\x20\x56\x49\x32\x73\xE5\x3C\xB8\xDE\xB3\x2C\xBA\xD5\xA8\x2B\x75\x83\x29\xBB\xC5\x1B\xB8\x29\xDD\xA3\x23\x78\xCB\x30\xBB\x80\x27\xBF\x27\xE0\xA0\x01\x7C\xE2\xBA\x21\xF2\x8A\xB9\x31\xE9\xB1\xBB\x77\xE3\x5B\xBD\x80\x36\xBB\x39\xEF\xA8\xBD\x4E\x6D\xB0\x01\xFE\xA5\x3C\xC0\x06\xD9\xBE\x7B\xFB\xB9\x20\x02\xF4\xB9\x21\xFF\xBB\x39\x80\x82\xC4\x26\x04\xCC\xC6\x20\x0E\xDF\x26\x81\x91\xC5\x3D\x09\xD4\xC7\x1F\x16\xC9\x31\x88\x8B\x33\xC4\xDE\x25\xC4\xBD\x0A\x29\xC3\x4F\x27\xCF\xB9\x14\xF3\x2C\xC5\x07\xCE\xC6\x88\xB2\xC4\xC4\x1A\xE6\xC6\xC6\x28\xC9\x22\x8A\xBC\x20\xC6\x05\xC5\xC7\xC5\x38\xCD\xC6\x8E\xC0\xC3\xC9\x19\xC5\xCD\xC6\x47\xD7\xC5\x92\xB9\xCE\xBA\x23\xCD\xC8\xC9\x06\x3D\x3E\x93\xEA\xB4\xC9\x27\xCA\xCE\xCA\x4C\xD4\xCB\x94\xFA\xBA\xBB\xE5\xAB\xC1\xC8\x1D\xDE\xC8\x8F\xE0\xCE\xC6\x29\xD0\xCA\xCB\xE6\xA2\xCF\x80\xE4\xCF\x26\x0F",
			"\xD4\xC5\xC7\x5F\xCB\xCA\x90\xD8\xC3\xCE\x34\xD7\xCE\xCE\x59\xC2\x22\x99\xF7\xCC\xCB\x34\xF8\xB9\xCE\x74\xC1\xCF\x9F\xE3\xC2\xCF\x18\xC5\xD6\xC7\x3B\xCB\xCF\xA1\x80\xD8\xCF\x3A\xD5\xBE\xD0\x8F\xCE\xD1\x78\x8C\xDD\xCE\xDE\x31\xBC\x33\x06\xD9\xC0\x4F\x6E\xC2\xC0\x38\xFC\x27\xD2\x73\x39\xD2\x6F\xEA\xC5\x26\x4F\xCA\xD1\xD0\x48\x31\xBF\x7C\x9A\xC5\xAE\x9A\x1C\xD0\xBD\xA6\xD5\x26\xAA\xA1\xDD\xD5\x99\x2F\xD0\xD1\x55\xCD\xD0\xA4\xBA\xD8\xD7\x2D\xC1\x21\xD1\xA5\xCC\xCC\xA1\xA8\xD4\xD3\x5F\xD7\xC3\x20\x9A\xD9\x26\xA8\xDD\xC3\xD1\x53\xFC\xD0\xBE\xB5\xDF\x1F\xB2\xFE\xCB\x31\x5E\xE7\xCB\x21\xB9\xD8\xDA\xAF\x80\x0A\x73\x3C\xC1\x26\x46\xDB\xC4\xBA\xB7\xDC\xD9\xDA\xF5\x25\xDC\xDC\xDB\xC0\xD9\x85\xC2\xDE\xD9\x4A\xC0\xC4\xD4\xEB\xCB\xD3\xA6\xF0\xD3\x27\x58\xF4\x22\xDC\xDB\x3E\xC7\xAB\xF8\xDC\xBB\x62\xC0\x03\xDF\xF4\xC0\xC5\x43\x73\x2C\xDF\x0F\xC1\xD9\x21\x7B\xCB\x39\xC1\x86\xE5\xDE\x85\x09\xE3\x3B\x0B\xEC\xE0\x81\x8F\xE5\x3D\x88\xC6\xE4\xC0\x9C\x36\xE3\x87\x98\xE4\xE1\x80\xDC\xE3\xDB\x9C\x3F\xE3\xB5\x93\xDC\x26\x8D\xEF\xCA\x21",
			"\xE0\xC3\xE7\x8F\xD3\xB1\xD3\xE5\x13\xDF\xBE\xD5\xDE\xDE\xBA\xB3\x20\xD5\xC4\x2F\xE7\xDD\xCD\xC7\xE0\xB1\xC3\xDF\xD9\x4F\xFC\xB9\xDA\xB7\xD2\xE7\xB1\x82\x2B\xD4\x9E\x37\xE2\xC2\x1E\xEC\xDE\xCE\xBD\xED\xDC\x63\xE9\xDF\xDC\x33\xE2\xE2\xBC\xCD\xEB\xE4\x95\xD1\xE9\xBE\xC9\xD5\x27\xD1\x82\xD1\xE6\x9E\xEE\xDB\x3B\x58\xF4\xD5\x83\xA3\xD9\xE7\x78\xFB\xE1\x27\x41\xF3\xDD\xD9\xB6\xD1\xE1\xB4\xE8\xED\xED\x70\xEB\xEF\x3F\x6E\xEA\xEA\x25\x62\xEE\x20\x46\x4B\x32\x81\xF9\xEC\x37\xBD\xF7\xEB\x20\x7C\xEE\xE6\xDD\xB6\xEF\x21\xBF\xC2\x21\xF0\xD6\xA3\xF2\xDE\xB2\x84\xF0\x84\xC6\xF1\x20\x14\xEF\xC2\x41\x26\xE3\x26\x03\xD1\xF4\xD5\x8E\xED\xF3\xE4\x8F\xF0\x01\xCB\xC6\xEE\xE1\x9C\xEF\xD6\x81\xA2\xF3\xE0\xCD\xC3\x24\xF4\xCD\xA1\xF4\xE7\xA9\xED\xEE\x94\xDC\xF1\xEA\x06\xD0\xF6\xEB\xA6\xFF\xEB\xF2\x31\xF3\xF5\xB8\xF4\xF6\xD3\x8B\xF3\xEB\xBA\xC9\x24\xF5\xCB\x20\xF9\xBE\x98\xF9\x54\xDE\xC5\xFC\x37\xC2\xFD\xDF\xE7\x8E\x9A\xD9\x9F\xED\xE5\x3C\xC9\xEC\xE1\xE5\xCF\xF0\xFB\x80\xC6\xC4\x33\xD1\xF2\xF9\xF6\x8C\xE6\xC1\xA2\xCD\xFC\xF9\xBE\xE6\x20",
			"\x97\x3A\xF0\x01\xF1\xC6\xFB\x20\xE6\xED\xF5\x99\x1C\xF6\x4D\xF3\xC2\x25\x4D\x89\x3B\xFA\xC1\xF2\xFF\xC2\x03\xD2\x54\xFC\xF7\xEB\x32\xE7\x86\xEB\xFF\x0F\xFD\xFC\xC2\xFF\x72\x60\x01\x88\x5E\x03\x88\x14\x05\x8F\x13\x07\x8C\x13\xF4\x74\x61\xDD\x7C\x79\xDE\x75\x13\x0B\x82\x60\x0D\x84\x7E\x0F\x84\x13\xD7\x73\x17\x11\x88\x5E\x17\x81\x7F\xD6\x74\x7D\x48\x19\x81\x1F\x8D\x81\xE0\x76\x81\xE3\x29\x51\xCF\x71\x76\x66\x4F\x45\xA0\x79\x7A\xBF\x70\x66\x88\x70\x00\x4B\x20\x61\x0A\x19\x7E\x02\x1D\x7E\x03\x10\x7F\x06\x1D\x28\x06\x19\x7F\x03\x1B\x29\x09\x1F\x29\x09\x18\x2A\x80\x7A\x10\x42\x82\x10\x31\x86\x10\xB4\x29\x10\x14\x19\x10\xBB\x29\x10\x34\x81\x10\x4D\x86\x10\x36\x82\x10\xD2\x29\x10\xD6\x29\x10\xDE\x29\x10\x3A\x83\x10\x59\x8B\x83\x0A\x12\x2E\x09\x1B\x2E\x06\x17\x2F\x3F\x8A\x10\x64\x86\x10\x45\x81\x10\x2F\x87\x86\x03\x19\x86\x30\x8A\x10\x1D\x0A\x10\x02\x39\x10\x18\x19\x10\x16\x39\x10\x1A\x39\x10\x2B\x39\x10\x1A\x19\x10\x3D\x3A\x84\x0A\x1F\x87\x06\x11\x85\xE8\x71\x88\x0A\x14\x88\x35\x8A\x10\x41\x39\x10\x50\x39\x10\x1C\x19",
			"\x10\x61\x39\x10\x65\x36\x85\x0A\x13\x89\xDD\x21\x11\x95\x8A\x10\x5D\x83\x10\x3C\x82\x10\x73\x39\x10\x1E\x19\x10\x2C\x0A\x10\x85\x39\x10\x89\x39\x10\x98\x36\x10\x30\x0A\x10\x31\x0A\x10\xAA\x39\x10\xAD\x36\x10\xBB\x39\x10\x35\x0A\x10\x36\x0A\x10\xCA\x39\x10\xCD\x39\x10\xD7\x36\x10\xE8\x39\x10\x3B\x0A\x10\x3C\x0A\x10\x3D\x03\x12\x0A\x11\x3F\x09\x14\x3F\x06\x1D\x8B\x03\x1A\x3F\x09\x1D\x3F\x09\x13\x40\x09\x19\x40\x09\x19\x41\x09\x1C\x41\x06\x12\x42\x09\x15\x42\x09\x1A\x42\x09\x11\x43\x09\x1A\x04\x0A\x1B\x04\xE3\x85\x8E\x09\x1C\x04\x0A\x17\x43\x09\x15\x44\x09\x18\x44\x09\x1E\x44\x09\x11\x45\x09\x17\x45\x09\x1E\x45\x06\x14\x05\x0A\x15\x05\x0A\x16\x05\x2B\x1A\x10\x58\x0A\x10\x59\x0A\x10\x74\x49\x10\x77\x49\x10\x7D\x4F\x7C\x4F\x80\x15\xCA\x0E\x26\x37\x18\x83\x91\x6B\x0C\x0C\x9C\x26\xD4\x7C\x0C\x11\x91\x84\xD4\x7D\x0C\x15\x98\x86\xD4\x7E\x0C\x19\x9D\x83\x6E\x2F\x0C\x1D\x92\x10\x9B\x8F\x68\xD0\x01\x92\x01\x13\x92\xD5\x51\x0D\x26\x90\x00\x55\x88\x61\x0A\x12\x0D\x2B\x91\x87\xCF\x73\x0D\x2B\x93\x87\x2D\x74\x0D\x35\x94\x7D",
			"\xD5\x0B\x92\x79\x87\x7C\x02\x16\x0D\x2B\x9B\x87\x2E\x99\x10\xD7\x01\x94\xD4\x78\x0D\x2B\x9B\x88\x43\x96\x10\xD9\x0B\x92\x8D\x8E\x93\x01\x1A\x0D\x4E\x94\x7D\xDB\x0B\x92\x9F\x8D\x72\xDC\x0E\x26\xDB\x56\x89\x91\x64\x1E\x37\x17\x95\x91\x6D\x0D\x2B\x97\x8A\x4B\x93\x10\xDE\x0E\x26\xC9\x75\x8A\x50\x9B\x27\x37\x14\x96\x91\x6F\x0D\x2B\x9F\x8A\x6B\x90\x0E\x6E\x26\x60\xAD\x83\x76\x03\x27\x13\x72\x91\x69\xE1\x0B\x92\xB9\x8D\x72\xE2\x0E\x26\x2F\x87\x8B\xCF\x7E\x95\xB8\x84\x7D\xE3\x0B\x92\xBB\x8D\x72\xE4\x0A\x98\xD4\x75\x0E\x2B\x93\x8C\xCF\x76\x0E\x2B\x95\x8C\xCF\x77\x0E\x95\x94\x7D\xE8\x01\x99\xAE\x49\x0E\x6E\x27\x84\x03\x11\x8C\x23\x8F\x1B\x37\x12\x8D\x2D\x7A\x0E\x2B\x94\x8D\x2D\x7B\x0E\xA9\x94\x7D\xEC\x0B\x92\xA6\x93\x10\xF1\x5D\x0E\x6E\x2C\x61\xD0\x85\x96\x77\x27\x13\xDE\x8D\x72\xEE\x0B\x92\xE0\x8D\x72\xEF\x0E\x9B\xD4\x70\x0F\x2B\x94\x8E\xCF\x71\x0F\x2B\x98\x8E\xCF\x72\x0F\xC9\x94\x7D\xF3\x0B\x92\xDC\x8B\x96\xF4\x0B\x92\xBB\x98\x6C\x0A\x15\x0F\x2B\x92\x8E\x78\x96\x10\xF6\x05\x9C\x6E\x27\x0F\x2B\x90\x8F\x2D\x78\x0F\x2B",
			"\x92\x8F\x2D\x79\x0F\xE5\x94\x7D\xFA\x0B\x92\xF4\x8D\x72\xFB\x0C\x9E\xD4\x7C\x0F\x6E\x24\x60\xFA\x8F\x7C\xFD\x03\x9F\xFB\x84\x7D\xFE\x08\x9F\x09\x1C\x8F\x85\x9E\x26\xF1\x53\x90\x27\x88\x3D\x9D\x81\x10\x05\x9D\x72\xE4\x11\xA0\xD4\x71\x00\xE0\x51\x5F\x05\xA0\x00\x07\xAD\x95\xE7\x17\x13\x07\x9D\x72\x02\x0D\xA0\xD4\x70\x48\xCF\x73\x00\x18\xAF\x7C\x1A\xAD\x72\x04\x0D\xA1\x2D\x76\x48\xCF\x75\x00\x22\xA1\x69\x24\xAD\x72\x06\x07\xA2\xDA\x66\x10\xCD\x4F\x7C\x07\x0C\xA2\xE6\x69\x10\xED\x4F\x7C\x08\x02\xA3\x9D\x7A\x10\xD4\x4F\x7C\x09\x08\xA3\x09\x91\x4E\xCF\x7A\x00\x38\xA3\x85\x01\x13\x4E\xCF\x7B\x00\x38\xAE\x90\x02\x1B\x4D\x08\x98\xA3\x5B\x87\x4C\xD4\x7D\x00\x38\xAE\x83\x06\x18\x4E\xCF\x7E\x00\x38\xA9\x49\xD4\x7F\x00\x59\xAA\x10\x9F\x4F\x7C\x10\x0D\xA5\x09\x1F\xA5\x2D\x71\x01\x62\xA6\x10\x65\x04\x7D\x12\x07\xA6\x03\x1D\x4A\xCF\x73\x01\x6C\xA2\x10\x6E\xAD\x72\x14\x01\xA7\x01\x17\x49\xD8\x35\x01\x76\xA0\x00\x9A\x4B\x9D\x03\x16\x01\x7B\xA5\x4A\x7E\xA4\x85\x7B\xA9\xA6\xD8\x38\x01\x7B\xAD\x4B\xCF\x79\x01\x7B\xA0\x4C\xCF\x7A",
			"\x01\x8D\xA4\x7D\x1B\x0B\xA7\xC5\x4F\x7C\x1C\x04\xA9\xD4\x7D\x01\x38\xAA\x0A\xD4\x72\x72\x91\x65\x81\x94\x34\x60\x35\x7B\x96\xA0\xAB\x2F\xDD\x60\x79\x9D\xAF\x44\x14\x7C\x6F\x37\x17\xAA\xF2\x5B\x34\xDB\x5B\x81\x9B\x73\x9A\xFB\x26\x60\xC9\x77\x13\x14\x75\xAA\x27\x2F\x82\x1C\x67\x13\xDB\x5A\xAB\xE1\x1C\x61\x9E\xA2\x10\xC9\x70\xAC\x03\xA2\x83\xEB\x75\x98\xD8\x49\x90\x44\xA0\x15\xB3\x4D\xAC\xA0\x9F\x68\x06\x6E\xAA\x21\x3D\xAC\xC3\xAE\x5F\x8A\x33\x6B\x09\x1A\xA4\x01\x11\xAD\xD5\x59\x90\xD4\xA7\x34\xDC\xAE\x1A\x5B\xAA\x38\xA2\xA8\x89\x09\x19\x84\x2D\x7F\xA0\xC6\xAE\x24\x54\xA3\x10\x40\x88\xA0\xD8\x41\xAF\x9C\x84\x7D\xEF\xAD\xA2\x9B\x34\xAF\xBA\x54\x7D\xEA\xA2\x9B\xE1\x1E\xAA\xF1\x5E\x86\x0F\xA7\x13\x4B\x86\x10\xE1\xA4\x2F\x6E\x87\xAD\x00\x07\x85\x6B\x94\x1E\xFC\x61\x5F\xFD\xAB\xAF\x8B\xAA\x38\xB9\xA3\x2B\x0A\x1A\xAF\x01\x19\x75\xCB\x45\xB0\x03\x10\x86\x2D\x7E\xB1\xFE\xAF\x33\x2D\x93\x10\x0C\xB2\xA1\x95\x45\xB2\x02\x18\x88\xD5\x52\x86\xC7\x1B\x34\x28\xB9\xB1\xD4\x76\x93\x21\xBE\x24\xBF\xAA\x89\x87\x84\x7D\x75\x86\xB0",
			"\x4B\x38\x92\xE4\xAF\x7C\x42\x93\xB3\x72\x25\xAC\x5F\x8E\x4A\x37\x1D\x87\x0D\xB7\x1E\x13\x86\x10\x20\xB2\x10\x2F\xBF\xAA\x6B\x5C\xB2\x12\xBD\x72\x82\x80\xB4\x77\x2F\x82\xF1\x50\xB5\x30\xBF\x7C\x4A\x94\xB5\x7A\x2E\xAD\x4E\xB6\x10\x32\x98\x9B\xD5\x5F\x94\x5C\xBB\x27\x1C\x61\x5F\x32\xB2\x10\x6C\x8F\x68\xB3\x49\xB3\xD6\x9F\x7C\x8F\x87\xB4\xC1\x19\x90\xF1\x5E\xB6\x51\xB1\x69\x91\x82\xB7\xC3\x1D\xAC\xF1\x5D\x93\x6F\xBD\x72\x5C\x94\x74\xE1\x13\xAE\xF1\x5F\xB3\x02\x17\x87\xF2\xA5\x49\x46\xBF\xB7\x91\x60\x96\x82\xB3\x20\x4F\xA1\x10\xF1\x5B\xB8\x77\xBF\x68\xA1\x8A\xB7\xA9\x1C\xAE\x8A\x84\xB4\x0A\x13\x8A\xB4\xA7\x13\xF7\xA2\xB9\x0A\x14\xB6\x02\x13\xB5\x6C\xB8\x4D\x71\xBC\xB8\x8F\x6A\x96\x65\xB4\x1E\x18\xBF\xB5\x03\x19\xBA\x95\xB5\x5D\x6E\x9F\xB8\x4E\x29\xB0\x1B\x1C\xB9\xA8\x8A\x38\x1C\xB3\xBB\x00\x01\xB8\x59\xBD\x72\xAB\x8F\xB9\x0A\x13\xB2\xB6\xB3\x10\x8E\xB1\x10\x79\xB6\xB2\xA8\x47\xB9\xAA\xB5\x5D\x77\x98\xB9\xAD\x1D\xB4\xF1\x5E\xBC\xBE\xBA\x97\x8A\x3C\xB3\x04\x66\xBD\xC1\xB1\x69\xB1\x8D\xBA\xE7\x18\xB5\x3D\xB6\x10\xAC",
			"\xB7\xBD\x0A\x13\x8B\xD2\xBF\x1B\x61\xB5\xB6\xB5\xB1\x10\x9E\xB9\xB8\xA8\x49\x8A\xCF\xB0\x15\xB5\x84\xBC\x09\x19\xB6\xA2\xBB\xBB\x83\xA5\x5D\x84\x99\xBE\xCC\x16\xB7\xDD\xB2\x10\xF2\xB6\xBE\x09\x1F\x97\xE0\xB1\x1C\x7E\xBE\xBB\xD1\xB3\xBF\x37\x1B\x98\x07\xC3\x1C\x94\xB9\xBF\x06\x1B\x97\x02\x13\xBC\xF0\xBF\x4D\xDF\xB2\x10\xF5\xBD\x72\xCC\x87\xBC\x9D\x3B\xC1\x0C\xCA\x10\xBF\x8E\xBF\x37\x16\xBA\x12\xC3\x10\x20\xC4\xC0\x06\x12\x9A\x24\xCB\xB9\xFB\xB0\x00\x29\xC1\xC0\xD5\x52\x99\x2D\xCE\x88\xC9\x5A\xC1\xBA\xB6\x10\x96\x95\xC3\x06\x19\xBC\xE8\x66\x10\xFD\xB1\xC2\x09\x18\x8C\x3C\xC3\x10\xE5\xB7\xC2\x02\x16\xC0\x02\x18\xBE\x91\x6A\x8C\x0F\xC3\x32\x4A\xC2\xC3\x50\x1E\x8C\x45\xC2\x10\xED\xB0\xBB\x02\x1E\xC0\x4B\xC4\x7D\xB7\x9F\xC4\x27\x3A\xC5\x52\xC5\x9A\x8A\x33\xC0\x48\xC1\x10\x1D\xC1\x10\x44\xC1\x69\xAA\x9E\xC5\x94\x3C\xC2\x42\xC6\x10\xD6\x85\xC5\x01\x16\xC1\x65\xB4\xC3\x03\x13\xC2\x91\x68\x8D\x6C\xCB\x2F\x76\xCA\xC2\x03\x1A\x8D\x72\xC0\x00\x0B\xCE\xC1\x01\x1B\xC3\x77\xC4\x7D\xD1\x9B\xC7\x27\x26\xC8\x7E\xC2\x10\xD5\x94",
			"\xC8\x7B\x24\xC1\x65\xC0\x00\x69\xCD\xC8\x01\x1F\x9B\x8A\xC1\x12\x6E\x25\xC9\x61\xCA\x10\xDA\x91\xC8\x4C\xCE\xBB\x9C\xC3\xBE\x91\x66\x9C\x81\xC1\xC4\xF8\xA2\x10\xA3\xCA\xB0\xCA\x91\xC8\x67\xCF\xC3\x03\x1E\xC4\x02\x11\xC7\x91\x6A\x8E\x81\xC4\x1E\x5D\xC6\xC9\x00\x0C\x8E\x81\xCD\xC7\x93\xC1\x9B\x02\x14\xC5\x91\x6E\x8E\xB7\xC7\x1E\xC0\xCD\xC9\xEF\x8A\x38\x8C\xC3\xC9\x6B\xC1\xCC\xD4\x76\x9E\x99\xC3\x20\xCD\xC8\xCC\x06\x1D\x9E\xD1\xC6\x10\xA3\xC1\x5F\xB4\xCA\xCB\xF6\x87\xCD\xB1\xCE\x26\xDB\xC4\xCD\x03\x18\x8F\xF6\xB6\x10\xC2\xCE\xBB\xE1\xC4\xCA\x8F\x65\x9F\x81\xC7\xCC\xB0\xC3\xCB\x39\xC3\x10\xFE\x91\xC8\x7A\xC9\xCA\x01\x15\xCF\x01\x16\xCB\x91\x65\x46\xC5\xC1\x1C\xF8\xCB\xCB\xD4\x7F\x8F\xE5\xC2\x27\xFF\xC4\xCC\x91\x61\x90\x03\xD7\x27\x89\xCA\xCB\x02\xAE\xCD\x8E\xCE\x26\x8F\xC1\x10\x80\xC1\x69\x11\xA6\xCF\xD9\x31\xD1\xEA\xC5\x5D\x29\xAE\xD0\x97\xCE\x26\x98\xC2\x10\x13\xDF\x68\x8D\x4A\xB3\x3F\x3F\xD1\xE2\xC2\x10\x7D\xA1\xC8\x9F\xC5\xB6\x2B\xDA\xCB\x64\xAC\xD1\x00\x06\xCA\x65\xB2\xD3\x20\xD4\x7D\x82\xA4\xD2\x43\x34\xD3",
			"\x27\xD1\x10\x67\x0A\x38\xAD\xC5\xB6\x3F\xD5\xD3\xCF\x75\x4B\x29\x83\x34\x41\xDB\xD3\x00\x0E\xA8\x81\xCA\xCF\x90\xCC\xD4\x48\xD5\xA9\x81\xCC\xCB\x65\xBE\xD4\x19\xD0\x15\xC8\x49\xD0\x01\x16\xD0\x90\xC2\xD5\xBA\xCF\xA2\x81\xC2\x9E\x65\xBC\xD5\x48\xDB\xA3\x81\xC0\xCD\x90\xCA\xD5\x48\xDC\xA4\x81\xC6\xCD\x67\xD1\xCF\x02\x10\xA4\x81\xCD\xCD\x90\xC0\xD6\xBA\xC6\xA4\x81\xC4\xCE\x6B\x96\xD6\x12\xD4\x7D\x56\xA8\xD3\x9B\x3A\xD7\x55\xD7\x13\xFB\x48\xD5\x00\x0C\xCE\x65\xBC\xD6\x7B\xDF\x7C\x01\x55\xD4\x9B\x38\xD8\x81\xDA\x10\x7A\x0A\x38\xF3\xC5\xB6\x72\xDB\x7B\x91\x60\x51\x84\xDC\xCF\x65\xB6\xD8\x02\x18\xD7\xCC\xBF\x4D\x9C\xD6\xD9\x8F\x62\x51\x84\xD2\xD0\x6B\x93\xD9\x9D\xDE\x81\xD8\x48\xDA\xA2\xD5\x5D\x17\x54\xD8\x08\xDB\x96\x9A\xD2\x10\xB1\xD1\x69\x26\x8D\xCF\xC3\x15\xDB\x7A\x64\x7D\x1E\x54\xD8\x0D\xD0\xC9\xBA\xDD\xDA\x50\x11\x52\x84\xD5\xD1\x52\xCF\xDB\xA8\xAF\x7C\x23\x54\xD8\x1F\xA5\xB6\xC8\xD5\x75\x91\x65\x52\x84\xDB\xD1\xBE\xB6\xDC\x8F\xD9\x10\x27\x54\xD8\x91\x48\x3D\xD6\xDA\xB0\x29\x54\xD8\x78\xAB\x96\x15\xAF\xC6\x03",
			"\x1B\x52\x84\xD9\xD2\x65\xBD\xDC\x02\x16\xDA\x91\x6D\x52\x84\xD4\x1E\xEA\xD8\xD4\x87\x0A\x38\x2F\xD0\xC9\xD4\xD1\x10\xEC\xDF\x68\x88\x0F\x44\xF7\xD7\xDD\x06\x10\x53\x84\xD7\xD3\x65\xB3\xD2\xE4\x54\x7D\x8A\x01\x6D\x37\x16\xA8\x6B\x94\xE0\x02\x11\xB1\xD5\x53\x53\x2F\xC4\x1E\x73\xA3\xE0\x43\xBF\x7C\x41\x51\xE1\xE7\x1D\xD3\xD8\x3C\xE0\x01\x11\xC3\x50\x18\x54\x18\xE1\x1C\x44\xDB\xE0\xC7\x84\x7D\x53\x51\xE2\xC3\x19\x06\x6E\x2C\xE1\x00\x09\xCE\x37\x19\x55\x28\xE9\x1A\x8A\xA4\xE2\x09\x14\xD5\x37\x10\x56\x31\xED\x1A\x4A\xD4\xE1\xEB\x84\x7D\x98\x08\xE0\x0A\x10\xD5\x3C\xE6\x10\x68\xD0\x15\x9A\x00\xE4\x09\x17\xD5\x34\xE6\x10\x1A\xED\x72\x9C\x0F\x44\x2C\xE3\xE2\x91\x6B\x57\xEF\xD7\x1E\x2C\xEA\xE2\xCF\x7D\x57\x55\xE1\x1C\x2C\xE1\xDC\x50\x12\x58\x39\xEF\x1B\x5E\xD5\xB6\xE1\xD4\xDE\x02\x18\x58\x84\xD4\xD6\x65\xB8\xDE\x02\x1B\xDD\x2D\x7A\x58\x8C\xDD\x39\x6C\xE8\xD4\x9C\x54\xD8\x6A\xD5\xB6\xF5\xD0\x49\xD4\x72\x5A\x71\xEB\x44\x79\xEE\xDF\x03\x13\x5B\x84\xD0\xD7\x65\xB2\xE0\xBA\xCC\xA9\x84\xD6\xD7\x65\xBA\xE0\x03\x1E\xE6\x91\x6B",
			"\x0A\x37\xCB\x44\x8C\xEA\xCB\xAE\x0A\x38\x7D\xD5\xB6\x13\xED\xE6\xD4\x7F\x0A\x91\xE9\x3D\x99\xE8\xD4\xB2\x0A\x38\x35\xAB\x96\x4D\xE6\xE6\x01\x13\x0B\x8A\x39\x4F\xD8\x35\xEA\xBA\xC4\x0B\x8A\x33\xD8\x6B\x92\xE5\xBA\xC5\x0B\x8A\x3B\xD8\xB1\xEE\xD6\x01\x16\x0B\x8A\x33\x50\xD8\x38\xE5\x62\xB0\x15\xB7\x0A\x38\x09\x5D\xEB\xB8\xE0\x00\xB8\x0A\x38\x91\xD8\x3D\x33\xE6\xEA\x00\x09\x0B\x8A\x38\xD9\x6B\x9B\xE3\x9A\xEF\x7C\xBA\x0D\xE9\x21\x32\xED\x48\xDD\x0B\x8A\x34\xDA\x6B\x92\xE4\xD3\xED\x72\xBE\x06\xED\x47\x3E\xED\x48\xD1\x0C\x8A\x3F\xDA\x6B\x9A\xE4\x8D\xE4\x7D\xC2\x0F\x44\x63\xEF\xED\x91\x63\x0C\x4F\x4A\xE6\xF0\xEF\x68\xC4\x0F\x44\x77\xE5\xEF\xD5\x55\x0C\x4F\x44\xE8\xFA\xE0\x15\xC6\x0F\x44\x8A\xEF\xEF\x37\x17\x0C\x4F\x47\xE9\x04\xFA\x10\xC8\x0F\x44\xA3\xEB\xEE\xCF\x79\x0C\x4F\x4A\xEA\x17\xCD\x1A\xDC\x54\x7D\x93\xC8\x15\xA5\xAF\x0F\xA3\xAF\xEB\x58\x1A\xB1\x66\x7D\x72\x07\xB4\x14\x21\xF9\x13\xAE\xA0\x15\x25\xFD\xAA\x16\xF7\xF2\x8C\x7B\x19\x94\x73\x13\xAC\xA7\x13\x2F\xFB\xF2\x20\xA6\xF1\x03\x89\xA3\xF8\x54\x71\x50\x18\xF3",
			"\xB8\xA4\xF3\x16\xFF\x6A\xFF\x6B\x5C\xDB\x50\x15\x41\xF7\x13\x19\x80\x00\x20\x87\xAB\x44\xF6\xF1\x51\x70\xDD\xC7\x52\xAB\x81\x60\x15\x2F\x88\x15\x51\xF8\x14\x2F\x80\xF5\x16\xFE\xB5\x58\x18\xF5\x48\x1E\xB5\x50\x1C\xF5\x37\x1C\x61\x58\x10\xF6\x48\x1D\xAB\x5F\xF6\xF1\x09\x98\x15\x67\xF8\x14\x09\x90\x15\x6B\xF7\x13\x6D\xF3\x83\x16\xFD\xAC\x58\x12\xF7\x48\x1D\xAC\x50\x16\xF7\x37\x18\xF7\x0A\x1A\xF7\xDB\xA1\x1B\xE3\xA8\x5E\xE3\xA0\x15\x81\xFD\x90\x16\xF3\xF8\xE8\xAB\x19\x91\xBC\x5D\x89\xF0\x15\x8B\xF7\x13\x8D\xF7\xF8\x65\xB0\x00\x89\xF7\x69\x93\xFE\xF8\x16\xF5\xF9\x90\xF7\xBD\x89\xF8\x71\x9B\xF6\xF9\x2F\xC0\x00\x0F\xA8\x15\xA1\xF8\x14\x03\xB7\x13\xA5\xFA\x10\xA1\xB8\x1E\xA9\xF8\x5E\xA9\xF0\x15\xAD\xF0\xBA\x16\xFF\xFA\xA8\xF1\xFB\x16\xFF\xBA\x58\x16\xFB\x48\x1F\xBA\xB7\xAA\xFB\x37\x1C\xFB\x17\xB0\x66\x00\x0F\xBA\xD7\x72\xFC\xBD\xF3\x7B\x65\x85\x68\xC1\xF5\x78\xBF\xF9\x10\x55\xFF\xBA\xCD\xFA\xFC\xC7\xF6\x10\x41\xFF\xBA\x50\x1F\xBA\x18\x7F\xBA\x38\xFF\xBA\x25\xFF\xBA\xAC\xAF\xBA\x5C\xFF\xBA\x97\x60",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"Plus",
			L"Lt",
			L"Gt",
			L"EqualOptional",
			L"PositiveOptional",
			L"NegativeOptional",
			L"NO1",
			L"PositiveNO1",
			L"NegativeNO1",
			L"NO2",
			L"PositiveNO2",
			L"NegativeNO2",
			L"NestedOptional",
			L"NestedPositiveOptional",
			L"NestedNegativeOptional",
			L"BranchedOptional",
			L"PbaGts",
			L"Pba",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][Plus] BEGIN ",
			L"[1][Plus] END [ENDING]",
			L"[2][Plus]< \"+\" @ >",
			L"[3][Lt] BEGIN ",
			L"[4][Lt] END [ENDING]",
			L"[5][Lt]< \"<\" @ >",
			L"[6][Gt] BEGIN ",
			L"[7][Gt] END [ENDING]",
			L"[8][Gt]< \">\" @ >",
			L"[9][EqualOptional] BEGIN ",
			L"[10][EqualOptional] END [ENDING]",
			L"[11][EqualOptional]< \"optional\" @ [ Plus ] \"+\" { Plus } >",
			L"[12][EqualOptional]< \"optional\" [ Plus @ ] \"+\" { Plus } >",
			L"[13][EqualOptional]< \"optional\" [ Plus ] \"+\" @ { Plus } >",
			L"[14][EqualOptional]< \"optional\" [ Plus ] \"+\" { Plus @ } >",
			L"[15][PositiveOptional] BEGIN ",
			L"[16][PositiveOptional] END [ENDING]",
			L"[17][PositiveOptional]< \"positive_optional\" +[ Plus @ ] \"+\" { Plus } >",
			L"[18][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" @ { Plus } >",
			L"[19][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" { Plus @ } >",
			L"[20][PositiveOptional]< \"positive_optional\" @ +[ Plus ] \"+\" { Plus } >",
			L"[21][NegativeOptional] BEGIN ",
			L"[22][NegativeOptional] END [ENDING]",
			L"[23][NegativeOptional]< \"negative_optional\" -[ Plus @ ] \"+\" { Plus } >",
			L"[24][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" @ { Plus } >",
			L"[25][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" { Plus @ } >",
			L"[26][NegativeOptional]< \"negative_optional\" @ -[ Plus ] \"+\" { Plus } >",
			L"[27][NO1] BEGIN ",
			L"[28][NO1] END [ENDING]",
			L"[29][NO1][ Plus @ ] Plus",
			L"[30][NO1][ Plus ] Plus @",
			L"[31][PositiveNO1] BEGIN ",
			L"[32][PositiveNO1] END [ENDING]",
			L"[33][PositiveNO1]+[ Plus @ ] Plus",
			L"[34][PositiveNO1]+[ Plus ] Plus @",
			L"[35][NegativeNO1] BEGIN ",
			L"[36][NegativeNO1] END [ENDING]",
			L"[37][NegativeNO1]-[ Plus @ ] Plus",
			L"[38][NegativeNO1]-[ Plus ] Plus @",
			L"[39][NO2] BEGIN ",
			L"[40][NO2] END [ENDING]",
			L"[41][NO2][ NO1 @ ] Plus",
			L"[42][NO2][ NO1 ] Plus @",
			L"[43][PositiveNO2] BEGIN ",
			L"[44][PositiveNO2] END [ENDING]",
			L"[45][PositiveNO2]+[ PositiveNO1 @ ] Plus",
			L"[46][PositiveNO2]+[ PositiveNO1 ] Plus @",
			L"[47][NegativeNO2] BEGIN ",
			L"[48][NegativeNO2] END [ENDING]",
			L"[49][NegativeNO2]-[ NegativeNO1 @ ] Plus",
			L"[50][NegativeNO2]-[ NegativeNO1 ] Plus @",
			L"[51][NestedOptional] BEGIN ",
			L"[52][NestedOptional] END [ENDING]",
			L"[53][NestedOptional]< \"nested_optional\" @ [ NO2 ] Plus { Plus } >",
			L"[54][NestedOptional]< \"nested_optional\" [ NO2 @ ] Plus { Plus } >",
			L"[55][NestedOptional]< \"nested_optional\" [ NO2 ] Plus @ { Plus } >",
			L"[56][NestedOptional]< \"nested_optional\" [ NO2 ] Plus { Plus @ } >",
			L"[57][NestedPositiveOptional] BEGIN ",
			L"[58][NestedPositiveOptional] END [ENDING]",
			L"[59][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 @ ] Plus { Plus } >",
			L"[60][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus @ { Plus } >",
			L"[61][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus { Plus @ } >",
			L"[62][NestedPositiveOptional]< \"nested_positive_optional\" @ +[ PositiveNO2 ] Plus { Plus } >",
			L"[63][NestedNegativeOptional] BEGIN ",
			L"[64][NestedNegativeOptional] END [ENDING]",
			L"[65][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 @ ] Plus { Plus } >",
			L"[66][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus @ { Plus } >",
			L"[67][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus { Plus @ } >",
			L"[68][NestedNegativeOptional]< \"nested_negative_optional\" @ -[ NegativeNO2 ] Plus { Plus } >",
			L"[69][BranchedOptional] BEGIN ",
			L"[70][BranchedOptional] END [ENDING]",
			L"[71][BranchedOptional]< \"branched_optional\" +[ Plus @ ] Plus { Plus } >",
			L"[72][BranchedOptional]< \"branched_optional\" +[ Plus ] Plus @ { Plus } >",
			L"[73][BranchedOptional]< \"branched_optional\" +[ Plus ] Plus { Plus @ } >",
			L"[74][BranchedOptional]< \"branched_optional\" -[ Plus @ ] Plus { Plus } >",
			L"[75][BranchedOptional]< \"branched_optional\" -[ Plus ] Plus @ { Plus } >",
			L"[76][BranchedOptional]< \"branched_optional\" -[ Plus ] Plus { Plus @ } >",
			L"[77][BranchedOptional]< \"branched_optional\" @ +[ Plus ] Plus { Plus } >",
			L"[78][BranchedOptional]< \"branched_optional\" @ -[ Plus ] Plus { Plus } >",
			L"[79][BranchedOptional]< \"branched_optional\" @ [ Plus ] Plus { Plus } >",
			L"[80][BranchedOptional]< \"branched_optional\" [ Plus @ ] Plus { Plus } >",
			L"[81][BranchedOptional]< \"branched_optional\" [ Plus ] Plus @ { Plus } >",
			L"[82][BranchedOptional]< \"branched_optional\" [ Plus ] Plus { Plus @ } >",
			L"[83][PbaGts] BEGIN ",
			L"[84][PbaGts] END [ENDING]",
			L"[85][PbaGts]Gt @ { Gt }",
			L"[86][PbaGts]Gt { Gt @ }",
			L"[87][Pba] BEGIN ",
			L"[88][Pba] END [ENDING]",
			L"[89][Pba]< \"prefix_before_ambiguity\" @ { Lt } PbaGts [ Plus ] Plus { Plus } >",
			L"[90][Pba]< \"prefix_before_ambiguity\" { Lt @ } PbaGts [ Plus ] Plus { Plus } >",
			L"[91][Pba]< \"prefix_before_ambiguity\" { Lt } PbaGts @ [ Plus ] Plus { Plus } >",
			L"[92][Pba]< \"prefix_before_ambiguity\" { Lt } PbaGts [ Plus @ ] Plus { Plus } >",
			L"[93][Pba]< \"prefix_before_ambiguity\" { Lt } PbaGts [ Plus ] Plus @ { Plus } >",
			L"[94][Pba]< \"prefix_before_ambiguity\" { Lt } PbaGts [ Plus ] Plus { Plus @ } >",
			L"[95][Module] BEGIN ",
			L"[96][Module] END [ENDING]",
			L"[97][Module]< \"entry_rule_priority\" +[ Plus @ ] Plus { Plus } >",
			L"[98][Module]< \"entry_rule_priority\" +[ Plus ] Plus @ { Plus } >",
			L"[99][Module]< \"entry_rule_priority\" +[ Plus ] Plus { Plus @ } >",
			L"[100][Module]< \"entry_rule_priority\" -[ Plus @ ] Plus { Plus } >",
			L"[101][Module]< \"entry_rule_priority\" -[ Plus ] Plus @ { Plus } >",
			L"[102][Module]< \"entry_rule_priority\" -[ Plus ] Plus { Plus @ } >",
			L"[103][Module]< \"entry_rule_priority\" @ +[ Plus ] Plus { Plus } >",
			L"[104][Module]< \"entry_rule_priority\" @ -[ Plus ] Plus { Plus } >",
			L"[105][Module]< \"entry_rule_priority\" @ [ Plus ] Plus { Plus } >",
			L"[106][Module]< \"entry_rule_priority\" [ Plus @ ] Plus { Plus } >",
			L"[107][Module]< \"entry_rule_priority\" [ Plus ] Plus @ { Plus } >",
			L"[108][Module]< \"entry_rule_priority\" [ Plus ] Plus { Plus @ } >",
			L"[109][Module]<< !BranchedOptional @ >>",
			L"[110][Module]<< !EqualOptional @ >>",
			L"[111][Module]<< !NegativeOptional @ >>",
			L"[112][Module]<< !NestedNegativeOptional @ >>",
			L"[113][Module]<< !NestedOptional @ >>",
			L"[114][Module]<< !NestedPositiveOptional @ >>",
			L"[115][Module]<< !Pba @ >>",
			L"[116][Module]<< !PositiveOptional @ >>",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<FeatureTestTokens, ModuleParserStates, FeatureTestAstInsReceiver, ModuleParserStateTypes>(&FeatureTestTokenDeleter, &FeatureTestLexerData, &FeatureTestModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2)
	{
		static vl::vint32_t results[9][9] = {
			{0, 1, 1, -1, -1, 1, 1, 1, -1, },
			{1, 1, 1, -1, -1, 1, 1, 1, -1, },
			{1, 1, 2, -1, -1, 1, 1, 1, -1, },
			{-1, -1, -1, 3, -1, -1, -1, -1, -1, },
			{-1, -1, -1, -1, 4, -1, -1, -1, -1, },
			{1, 1, 1, -1, -1, 5, 1, 1, -1, },
			{1, 1, 1, -1, -1, 1, 6, 1, -1, },
			{1, 1, 1, -1, -1, 1, 1, 7, -1, },
			{-1, -1, -1, -1, -1, -1, -1, -1, 8, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<featuretest::Feature> ModuleParser::ParseModule(const vl::WString & input, vl::vint codeIndex)
	{
		 return Parse<ModuleParserStates::Module>(input, this, codeIndex);
	};
}
