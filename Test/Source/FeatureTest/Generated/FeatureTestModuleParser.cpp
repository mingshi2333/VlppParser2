/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "FeatureTestModuleParser.h"

namespace featuretest
{
	void FeatureTestModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 4513; // 41378 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 161;
		static const vl::vint dataSolidRows = 17;
		static const vl::vint dataRows = 18;
		static const char* compressed[] = {
			"\xA2\xA1\x00\x00\x99\x11\x00\x00\x0A\x00\x01\x82\x80\x0F\x03\x82\x81\x82\x06\x89\x82\x83\x0A\x81\x06\x84\x84\x06\x95\x0A\x99\x0A\x85\x0E\x85\x10\x0A\xA5\x0A\x89\x1A\x85\x16\x85\x19\x0A\xB9\x0A\x9F\x1A\x85\x26\x84\x4C\x04\x09\xBF\x6B\x9C\x93\x96\x84\x00\x2D\xAD\xAF\x91\x9C\x93\x98\x9B\x7F\x36\xB4\xB9\x91\x9B\x9A\x9A\x85\x9B\x38\xBF\xB7\x9D\x95\x9F\x96\x85\x00\x42\xBA\x89\xBC\x9B\xA6\x9E\x95\xA1\x4D\xC5\x8F\xAA\xA3\xAC\xA5\xAA\xA7\x06\xC0\x84\xAE\x91\xAC\xAF\xAA\xA9\x59\xD0\x89\x88\xA3\xB5\xAD\xA1\xAF\x5E\xE1\x94\xAA\xB6\xAC\xB4\xAD\x81\x5A\xE6\x9B\xA7\xBE\xB0\xB0\xB8\xB1\x75\xE9\xB7\xAB\xBB\xBD\xB7\x80\x01\x47\xF2\x82\xC8\xB4\xBD\xBF\xB6\x81\x71\x84\xF3\xAB\xC3\xC1\xBD\xC2\xC4\x78\x86\xF6\xB0\xCC\xBC\xCA\xBE\xCB\x87\x81\x89\xCE\xCC\xC2\xC5\xC6\xC9\x7A\x98\xD3\xDA\xC1\xCA\xD1\xD0\xD2\x95\xA8\xD7\xCA\xD9\xC8\x99\xD2\xD6\xA3\xAE\xE9\xD2\xDB\xD0\x00\x87\x84\x80\x9E\xFA\xDC\xCF\xCE\xD3\xC6\xD8\xA7\xB4\xED\xDB\xC0\xD7\xDE\xE1\xD8\xC4\x82\x85\x01\xCB\xDB\x82\x02\xE6\xBC\xCD\xFE\xDD\xC1\xED\xE9\xE2\xEA\xD7\x8A\x87\x10",
			"\xE9\xE9\x84\x04\xEE\xD3\xBD\xC0\xE6\xE9\xE3\xF0\xED\xF0\xD2\xE6\xCD\x80\xFA\xF1\xF7\xE3\xE0\xE5\x80\x00\x85\xBE\xF1\xFA\xFB\xD7\xEF\xE4\xF8\xF7\xF3\xDC\xFD\xDA\xFF\xC3\x7B\x72\x81\x7F\x03\xBF\x75\x81\x80\x04\x89\x86\x82\x82\x08\x8B\x8E\x81\x83\x10\x88\x78\x7F\x02\xEC\x79\x7F\x48\x03\x15\x80\x82\x84\x83\x1B\x8F\x8D\x85\x84\xF0\x78\x7D\x01\x86\xF8\x4E\x04\x88\x87\x21\xA8\x8A\x7E\x8A\xE7\x6D\x76\x77\x41\x27\x9E\x89\x8A\x8C\x2B\xB4\x8D\x8A\x85\xE2\x78\x8E\x78\x04\x0A\x79\x6F\x8A\x8B\xDD\x7F\x8A\x8E\x41\x12\x31\x80\x89\x8D\x47\xB7\x8A\x87\x8C\x49\xB9\x8B\x90\x92\x1F\x91\x9C\x92\x94\x50\x93\x96\x95\x95\x58\x8A\x97\x80\x95\x5A\xAC\x8A\x43\x04\x46\xB1\x64\x05\x98\x57\x9D\x96\x8E\x93\x5B\xA5\x9A\x42\x44\xF4\x42\x96\x04\x99\x59\xA8\x9E\x95\x7D\x69\xB1\x99\x43\x05\x70\xA6\x9D\x90\x9D\x73\x82\x9F\x93\x8D\x18\x3D\x82\x9F\x99\x7C\x84\xAE\x9D\x9D\x7A\xB1\x6A\x06\xA0\x85\xBB\x97\xA1\x9F\x41\x91\xA8\x7B\xA3\x86\x92\xA0\x93\xA4\x96\x83\x99\xA7\x9F\x83\x8E\xA3\x40\x07\x79\x95\x41\xA9\xA3\x5C\x9D\xA5\xA8\xA9\x6A\xA8\xA6\x9C\xA5",
			"\x9E\x98\xAE\xAB\xA5\xB0\x9A\xA2\x42\x07\x8C\xAC\xA7\xAA\xAD\xA9\xB8\xAB\xAB\xA6\x88\xA6\xA9\xAC\xAF\x90\xAF\xA2\xAD\xAC\x9C\x89\x40\x0B\xA8\x06\x58\x4D\x98\xB0\x95\x82\xB5\xB2\xAE\x89\xBF\xAE\xB1\xAF\xAA\x91\xBB\xAF\xB4\xB3\x62\x05\xAC\xB3\xAD\x84\xB4\xB4\xB4\xBE\x97\xBE\xB5\xB0\xE3\x8D\xB5\xB9\xB7\xC3\xA9\xB1\x7C\x09\xC8\x83\x4A\x47\xB2\xD8\xA6\xBA\xBB\xB7\xDC\xB7\xA5\xBE\xB4\xE7\xB6\xB1\xBC\xBA\xCF\x99\xA6\x0A\x42\xB7\x60\xB5\xB5\xB8\xD6\x85\xC4\xC3\xC1\x03\xC9\xC2\xC3\xC2\x99\x9C\x40\xBD\xAC\x2A\x2D\xBB\xBE\xBE\xF9\xB8\xB3\xBC\xB9\x17\xF2\xBD\xBF\xC4\x16\xDB\xC1\xAF\x0A\x00\xC8\xCC\xC0\xC7\xE2\x99\xCC\xBC\xBD\x24\xC6\xCA\xC3\xBD\x25\xDE\xC0\x02\x0B\x12\xC1\x4F\x09\xCC\x26\xD4\xC5\xCD\xC7\x28\xD5\xCD\xC9\xCE\x37\xFB\xC8\xC6\xCB\x30\x21\xCB\xC9\xCA\x22\xEC\xCA\xCB\xC8\x3A\xC7\xD6\xD1\xD1\x44\xEE\x70\x4B\xC3\xE9\xB4\x04\xCE\xCB\x54\xFC\xC5\xD7\xCF\x56\xD9\xD3\x6D\x0D\x53\xDA\xDA\xC6\xD7\x27\xD8\xD2\xDB\xD7\x63\xE1\xD4\xDB\xD9\x66\xE9\xD1\x6E\x0D\x0A\x69\x43\xD1\xD2\x4C\xF0\xDF\xD9\xBA\x3A\x34\xCB\x0D\xD7\x65",
			"\xF6\xC7\xD6\xBC\x3C\x34\xCD\x0C\xDE\x68\xFA\xD0\xDA\xCD\x3E\x00\xEA\xD8\xCE\x18\xE4\x40\xD7\xDE\x87\xFE\xC1\xE0\xE2\x8F\xCE\xED\xE2\xD2\x4D\xC8\xDD\xCC\xE5\x01\x40\x14\xCD\x10\x86\xC2\xE9\xDC\xE4\xE8\x82\x14\xCF\x10\x9D\xE0\xEE\xE5\xE4\x37\x84\x15\xEA\xE4\xA7\xD3\xE1\xDD\xBA\x45\x2D\xDF\xE8\xE3\xAD\xF6\xC9\x13\xEA\x98\xD7\xE3\xEF\xE0\xA6\xFD\xEC\xEA\xEF\xB9\xF4\xE0\xF2\x42\x4A\x34\xCB\x10\xEE\xBB\xDF\xEF\xEE\x71\x4C\x34\xC6\x4B\xE2\xBC\xCB\xF1\xF0\xCF\x4E\x08\xF3\xDE\xF0\xD2\xEF\xEF\x12\xEC\xD7\xD1\xF3\xF4\xC6\x53\x02\xD6\xE4\xF6\xDF\xE8\xE9\xF2\xF9\xDD\xCA\xF5\xFA\xEB\x09\x56\x14\xCF\x15\xD6\xE3\xFE\xF7\xEB\x58\x34\xC9\x15\xFC\x4B\xE9\xF8\xFA\x41\x5A\x38\xF5\xE5\xFE\xF2\x6A\x7E\x42\x5B\x04\x66\x2E\x3E\x7A\x6E\x01\x9B\x7F\x40\x5D\x04\x66\x2F\x07\x82\x77\xFA\x6C\x7E\x41\x5F\x0F\x80\xF2\x67\x7A\x82\x99\x40\x0F\xB6\x7F\x7C\x82\x04\x80\x87\x83\xC2\x42\x0F\x06\x9E\x8D\x82\x08\x89\x80\x83\x02\x24\x0F\x08\xA6\x80\x84\x12\xAE\x84\x85\xC2\x46\x0C\xCD\x67\x05\x83\xF9\x51\x86\x66\x68\x14\x65\x1A\x35\x82\x81\x1B\x96\x62",
			"\x0D\x3C\x95\x37\x1A\x15\x4C\x0D\x0A\x6D\x0D\x42\x6E\x15\x43\x1B\x15\x40\x0F\x0A\x71\x0A\x7C\x03\x34\x0C\x14\xA5\x86\x82\x1F\x99\x7E\x8A\xEB\x75\x77\xF0\x58\x89\x47\x3B\x34\x60\x0F\x41\x88\x87\x0B\xAE\x69\x0E\x9A\x7A\x09\x8C\x5A\x97\x8A\xE5\x7B\x08\x8D\x2D\xA7\x81\x8D\x37\x5C\x0C\xCD\x7D\x0D\x8C\x35\xAD\x80\x86\x01\x3E\x0C\xCD\x7F\x05\x8F\x2C\xAE\x89\x53\x80\x1D\x8F\x05\xF0\x83\x91\xE0\x01\x13\x85\x55\x8F\x8F\x1F\xD4\x88\x3F\x41\x08\x96\x86\x8A\x96\x8C\x23\xB3\x35\x11\x47\xBD\x81\x92\x7E\x92\x91\x40\x07\x14\x66\x44\x02\x94\x8B\xA0\x86\x21\x22\x34\x6A\x11\x4F\x98\x95\x90\xC6\x2B\x10\xCD\x0C\x16\x95\x3B\x89\x96\x95\xF8\x2D\x11\x2B\x93\x9A\x80\x5A\xAD\x36\x11\xB3\x83\x8C\x24\xB0\x93\x37\x47\x39\x90\x8F\xC0\x8F\x96\xB0\x10\x1F\x96\x61\xBA\x97\x92\x03\x31\x11\x31\xBB\x96\x96\x42\x89\x22\x12\xCB\x88\x99\x33\x8B\x91\x21\x7E\x2B\x83\x39\x84\x2F\x38\x61\x40\x2E\x47\x81\x2E\x6E\x31\xDD\x8A\x3A\x59\x64\x26\x29\xE2\x1F\x39\x21\x14\x59\x9A\x59\x5C\x9A\x20\x6C\x8E\x34\x9C\xE5\x83\x3F\x39\x86\x29\x9C\xC7\x1A\x9E\x31\xEC\x89",
			"\x22\x3B\xC5\x31\x9D\x80\x1F\x9D\x38\xF0\x82\x21\x40\xF2\x9A\x21\x7A\x85\x3F\x9E\xC5\x39\x9E\x41\x7B\x9E\x37\x81\x80\x06\xA1\x40\x33\x9F\x40\x06\xAE\x36\x84\xBE\x32\xA1\x03\x2C\xA3\x78\x7D\x90\x00\x8D\xB9\x3C\xA3\xFF\x8D\xA2\x25\xB1\x22\xA2\x81\x14\xA3\x3C\x16\xA3\x3C\x46\xE2\x94\x30\x87\x9C\xA1\xA2\x05\xA6\x2D\x4A\xF9\x3B\xA5\x80\x1E\xA5\xA6\x1D\xA6\x2C\x47\xB7\xA7\x27\x9D\xBA\xA5\x9D\x3F\xBA\x9D\x50\x8B\xA3\xA9\x8C\x85\xAC\xA5\xE0\x80\xA8\x61\x3E\xAB\xA8\xA5\x89\xAA\xA8\x4D\xB0\xAB\x53\xC4\xA1\xAA\xAA\x93\xAE\xA8\x55\xB8\xAB\x55\xC8\xAC\x9E\xA7\x9D\xAA\xAA\x5F\xB6\xA9\x58\xDA\xA3\xAD\x85\x07\xAE\xA6\x67\xB9\xA5\x56\xDC\xAE\x36\xA6\x9B\xA8\xAD\xEA\x9B\x99\x4F\xDE\xA5\xA3\x75\xB3\xA8\xAC\x6D\xB3\x8B\x46\xF4\xA8\xA4\xBB\xB4\x26\xAD\x07\xBE\xAD\x4C\x00\xB9\xAE\xBC\xBB\xAE\xB0\x1F\xBC\xAD\x62\x88\xB8\xA7\x80\x65\xA8\xAE\xF6\x82\xB1\x4B\x04\xBD\xAE\xB9\xBF\xAA\xB1\x38\xBC\xA7\x65\x8C\xB7\xAE\xB1\x85\xB6\xB3\x87\xB1\x9D\x68\xA2\xB8\xA7\xB9\x14\xB1\x3F\x0E\xB3\x2D\x49\x81\x2F\xA5\x9B\x33\xA0\x28\x99\xA3\x9E\x68\xBE",
			"\x3B\xB4\x00\x2D\xB4\x26\xAF\xB0\xB7\x66\xA0\xBB\xB0\xDE\x80\x2E\xA1\x10\xB7\x25\x6D\xB7\xB1\x27\xDC\xBA\xB3\xB2\x98\xB7\x24\x70\xE6\x23\xB8\x99\x92\xB4\x25\xA7\xB1\xB7\x5A\x90\xBF\xB0\xB5\xAF\xAE\xBA\xD5\xBA\xB3\x60\xC9\xBB\xB6\xB2\xA2\xA0\x37\xCC\xA3\xA5\x4B\x46\xB7\xB9\x95\x11\xBA\xB9\xE2\xAC\x25\x73\xF1\xA8\x9F\xCE\x9E\xBB\x3C\x21\xAA\xA6\x7B\x82\x21\xBF\xFC\x35\xBD\xBC\xC8\xA9\x23\x7D\xB7\x2B\xBE\xFC\xBF\x18\xA4\x66\x3D\xBC\x7E\x9C\xAE\xB0\xDF\x02\xC5\xBC\x04\xC1\xC3\x73\xE6\xBA\xAE\xFB\x8B\xC7\xBF\xB3\xB0\xBF\x83\x9C\xA3\x2F\x03\xC7\xBC\xC2\x69\xA6\xB5\x84\xBD\xB4\xB5\xF9\x94\xBF\xBB\xB3\xB0\xA4\x78\xEC\xB9\xA0\x0F\xD8\xB8\xC4\x1D\xD4\x27\x7A\x91\xB6\xB3\xED\x9C\xB5\xBB\x6C\xA3\x3F\x72\x84\x3B\xC5\xC0\xAD\xC1\xBF\xBE\xA8\xBC\xF4\x2A\xC9\xBD\x95\x24\xB8\xC1\xDC\xAE\xC5\x8E\xB0\xCF\xC3\xD1\xB1\xC4\xC3\x47\xD2\xBB\x75\xDA\xB8\xC7\xF7\xA8\xB5\xC7\xFF\x15\xC5\x5D\xB7\xC0\xBB\x20\xED\x26\xA5\xE1\xA3\xC4\x8B\xED\xB4\xC9\x13\xD5\xB4\xCB\xC5\xAF\xC3\x8F\xC7\xB3\xCC\xDD\xA5\xC8\xB6\x67\xC0\x29\x9A\xC2\xBA\x21\xF9",
			"\x0E\x35\xB6\x0E\x34\xC7\x7A\x72\xC9\x21\x38\xEF\xCB\xCE\x77\xC9\x22\x9B\xE6\x98\xCE\x3E\xF5\xC9\xCB\x06\x3B\xCC\x6D\xDC\x79\xCF\x21\xE4\xA6\xCA\xEA\xA4\xD2\x9F\x86\xDD\x25\xDA\x8C\xC9\xD1\xFA\xA0\xD2\x93\xA2\xCC\xD0\x48\xC6\x27\xCC\xB5\xB8\xD2\x42\x1A\xD9\x20\x4E\xD7\xD2\xD2\x02\x3E\xD3\x40\x5B\x34\xCE\x83\x24\xD5\xD0\x03\x35\xB4\xA5\xA9\xD0\xD5\x80\x27\xD3\xD1\xAC\xC5\xD5\xAC\xA8\xD2\x21\x57\xC3\xD1\x21\xB6\xC4\xA2\x77\x2D\xD0\x00\x55\xEC\xC8\xD7\x66\x39\xD4\x4D\xBF\xD6\x21\xE0\xBC\xC3\xC7\x31\x22\xDA\x7F\xAB\x25\xB6\x63\xC7\xD0\xD9\x8D\xDB\xC0\x50\x4A\xDB\xD9\xDA\xB3\x2C\xDA\xFE\xB6\xD9\xB0\x8F\xC8\xDA\xFC\x8D\xDC\xD7\xCE\xCD\x27\xA3\xBA\xB3\xDC\xD8\xA5\xD8\x28\xE7\xD7\x25\xBA\xB4\x2B\xDD\x98\x2D\xDD\x25\xDD\xC5\xBF\xB7\xB2\xD2\xA1\x6D\xD4\xCC\xD9\x70\x53\xDC\xAD\xE5\x93\xDB\x07\xDA\xDC\x30\xF1\xC7\xBB\xBF\x8E\x31\xE0\xDD\x85\xE0\xB6\xFA\xD0\xD5\xBD\x84\x3B\x89\x08\xD8\xC9\x21\x05\xDE\x9E\x62\xB3\xA2\xD8\x38\xED\xC9\xA6\x09\x38\x41\x42\x23\x49\x20\x13\x49\x20\x22\x03\x3C\x45\x42\x11\x0A\x21\x22\x49\x20\x4C",
			"\x7F\xC7\xE7\xC5\x89\x23\x4D\x84\x2C\x4E\x20\x6F\x59\xE2\x42\x31\xE6\x20\x8E\xC6\x20\x4F\x09\x21\x51\x42\x14\x2F\xE3\x89\x0A\x22\xE4\x06\x2B\x51\x42\x1B\x0A\x20\x50\x49\x26\xE4\x06\x26\xEA\x41\x28\xE6\x20\x3B\xDF\x57\x4B\x2B\xE6\x22\x45\x09\x24\x57\x84\x1F\x02\x21\xC7\x49\x22\xB2\x06\x2A\x5B\x84\x23\x02\x21\xEC\x4E\xE4\xD8\xB3\xEA\x20\x8D\xC6\x21\xEC\x30\xEA\x22\xCD\xEE\x5A\x21\x7F\x49\x27\x04\x0A\x28\x07\x46\x0A\x2A\xE6\x83\x0E\x66\x20\x3C\xE6\x20\xC8\x82\x27\xEF\x81\x39\xE9\xE4\x0A\x31\x61\x42\x20\x69\x20\x16\x1D\x22\x21\x30\x69\x23\xCC\x09\x21\x69\x84\x31\x02\x21\x32\x1F\x22\x42\x52\x69\x20\xAE\x49\x24\x6D\x09\x37\x06\x42\x38\x01\x24\x85\x35\x69\x21\x77\x69\x21\xDF\x09\x2F\x6F\x84\x05\x71\x21\x8A\x66\x21\xEA\x83\x2B\xF4\x81\x1A\x71\x21\x9C\x69\x22\xE8\x09\x24\x75\x84\x2A\x71\x21\xB1\x69\x22\x11\x0A\x27\x08\x85\x08\x0A\x21\xB7\x69\x21\xF1\x09\x27\x79\x84\x0D\x79\x21\xCF\x66\x21\xF5\x09\x2B\x7B\x08\xF3\xA7\x25\xB4\x15\x43\x4B\x03\xE3\x21\x5A\x12\xFA\x21\xD4\xE2\x22\x2D\x57\xFB\xE3\x0D\xF7\x14\xFB\x35\xFB\xC0",
			"\x2E\x60\xF3\xA3\x0A\x79\x14\xFC\x02\x2C\xEA\x68\xBA\x18\xFD\x80\x2A\xF9\x9E\xBB\x0D\xFC\x00\x24\xEA\xCB\x81\x3C\x12\xFE\x38\xF3\xB5\x2F\x72\xF5\xEE\xD1\xBE\x14\xFF\x1B\x6F\x0B\xF2\x74\x74\x50\x30\x0C\xF2\x7A\x74\x7F\x1A\x10\xC1\x07\x80\x1B\x62\x0C\xF2\x77\x75\xF5\x72\x10\xC3\x02\x7F\x59\x75\x6C\x0A\x14\x0C\x14\x8B\x61\xC5\x02\x7F\x68\x72\x5A\xC6\x05\x21\xF5\x5F\x75\x11\x61\x1F\x2F\x1D\x81\xF1\x47\x0C\xF2\x72\x77\x11\x81\x10\xC8\x05\x21\x1E\x50\x77\xD0\x61\x1B\x2F\x1A\x82\xB3\x59\x0C\xF2\x76\x78\x50\x3A\x0C\x15\x23\x53\x84\x76\x10\xC4\x5D\x1A\x2F\x18\x83\xB3\x5B\x0C\xF2\x7F\x78\x11\x6C\x0C\x15\x22\x6C\x8D\x71\x62\xF8\x1F\x12\x46\x83\x5B\xCD\x02\x7F\x91\x71\x61\xCE\x02\x85\x1B\x6F\x0C\xF2\x78\x79\xB3\x50\x0D\xF2\x7A\x79\x11\x61\x0D\x5D\x8B\x61\xD2\x09\x85\x2B\x43\x0D\x15\x25\x5B\x96\x76\x81\xEE\x1F\x12\xA3\x73\x5B\xD4\x02\x7F\xA5\x73\x5B\xD5\x00\x87\x1B\x66\x0D\xF2\x7D\x86\x03\x1E\x50\xD7\x05\x21\x4E\x72\x10\xA1\x7E\x83\x39\x2F\x12\xB3\x73\x5B\xD8\x02\x7F\xB5\x73\x5B\xD9\x06\x88\x1B\x6A\x0D\xF2\x79\x7B\xB3\x5B",
			"\x0D\xF2\x7B\x7B\x11\x6C\x0D\x91\x8B\x61\xDD\x02\x7F\xB1\x7A\x86\x06\x1E\x0D\xF2\x73\x88\x09\x89\x10\xDF\x02\x7F\xB7\x70\x88\x09\x10\x0E\x8D\x85\x21\xE1\x02\x7F\xC3\x73\x5B\xE2\x02\x7F\xC5\x73\x5B\xE3\x0E\x8A\x1B\x64\x0E\xF2\x77\x7C\xB3\x55\x0E\xB5\x8B\x61\xE6\x05\x21\x0E\x56\x40\x11\x67\x0E\x15\x2C\x51\x61\x0B\x61\xE8\x05\x21\x11\x70\x00\x0C\x41\x61\xE9\x05\x21\x82\x61\x10\x14\x41\x61\xEA\x05\x21\x27\x50\x00\x1A\x41\x61\xEB\x05\x21\x66\x73\x10\x0E\x41\x61\xEC\x05\x21\x6B\x72\x10\x04\x41\x61\xED\x02\x7F\x50\x0B\x61\xEE\x02\x7F\x51\x0B\x61\xEF\x08\x8E\x1B\x60\x0F\xF2\x71\x3E\x11\x61\x0F\xF2\x74\x05\x1B\x62\x0F\xF3\x8B\x61\xF3\x02\x7F\xCD\x7A\x89\x03\x14\x0F\xE4\x8B\x42\xF5\x02\x7F\x52\x0B\x42\xF6\x0F\x8E\x15\x27\x0F\xF2\x75\x3F\x11\x68\x0F\xF2\x77\x3F\x11\x69\x0F\x0D\x9B\x61\xFA\x02\x7F\xFD\x31\x61\xFB\x04\x91\x1B\x6C\x0F\x15\x23\x09\x1B\x68\x61\x0E\x7F\x3A\x1C\x59\x5A\xBC\x8F\x3A\xC7\x8E\x51\x2F\x11\x92\xAF\x3E\x51\x1E\x96\x10\xC7\x81\x6E\x32\x8E\x82\xDA\x12\x6D\xCC\x41\x10\x14\x72\x93\xD2\x4E\x6A\x8A\x61\x4F",
			"\xF5\x57\x8C\x2E\x32\x6C\x2B\x93\x6A\x34\x33\x63\x06\x15\x5B\xF5\x53\x7D\x0D\x6E\x32\x52\x65\x4E\xD3\x8E\x92\xC1\x18\x92\x29\x76\x10\x1E\x73\x5B\xD9\x8B\x70\x96\x33\x8D\x53\x9C\x6F\x33\x90\x00\x57\x92\x1F\x1B\x6F\x8D\x01\x1C\x93\x3C\x3B\x95\x3F\x92\x10\x40\x79\x87\x39\x2D\x92\x6A\x71\x75\xA2\x54\x7F\x2C\x9F\x3A\x5E\x96\x5B\x1B\x6D\x72\xFC\x82\x2C\xF5\x5E\x50\x51\x9F\x89\xB3\x5F\x72\x66\x9E\x1E\x1E\x56\x97\x65\x70\x65\xB9\x3B\x77\x01\x12\x97\xA2\x54\x73\x7B\x96\x39\x6C\x93\x10\x48\x79\x62\xB5\x41\x10\x8B\x94\x96\x1B\x69\x7F\x03\x10\x96\x18\x3F\x98\xAC\x5B\x61\x42\x73\x97\xB1\x23\x53\x0E\x5F\x7E\x01\x15\x96\xF1\x44\x80\x6D\x93\x37\x9E\x90\x97\x11\x65\x75\x9A\x99\x2E\xC2\x6E\x50\x84\x92\x10\x63\x91\x10\x10\x89\x9A\xF1\x19\x70\x02\x1D\x9A\x8E\x9F\x4B\x7A\x9E\x9A\x1B\x65\x81\x87\x99\x29\x7D\x81\x10\x0E\x59\x9B\x97\x91\x61\x5B\x7D\x9B\xC2\x2D\x8C\x0F\x5A\x10\x92\x9A\x9B\x11\x6D\x75\xB2\x93\x21\x15\x2D\x7F\x02\x16\x98\xF1\x46\x4C\x00\x0F\x77\xCC\x93\x5B\x22\x8F\x9C\xB3\x1B\x95\x0E\x58\x9D\xC3\x93\x5B\x26\x80\x9C\x39",
			"\x2F\x96\x0E\x52\x9A\x78\x92\x5A\xEF\x2C\x9D\xB5\x17\x97\x54\x9F\x74\x09\x19\x99\x8C\x92\x46\x00\x03\x75\xA4\x83\x5B\x6E\x7C\x9E\xAD\x12\x98\xC9\x99\x10\xF6\x99\x9E\xF1\x40\x83\xFA\x91\x1B\xA0\x94\x9E\x56\x7B\x42\x33\x84\x33\x89\x9F\x9E\x02\x1C\x9B\xB3\x26\x93\x8D\x90\x00\xC5\x99\x9D\xA2\x5D\x77\x0C\xA1\x2B\x96\x9D\x9F\xC9\x28\xA0\x81\x74\x33\xA5\x9C\x51\x13\xA1\x9E\xA2\x5D\x83\xC6\x91\x2B\xC2\x96\x9A\x06\x1B\x9D\x00\xA5\x4E\x42\x85\xA2\xE9\x2B\x9C\x06\xA7\x76\x0A\x1E\x9C\xF3\x9E\x4C\x06\x1B\x9E\x2B\xA6\x14\x1E\x11\x83\xC1\x12\x9D\x31\xAC\x76\x2B\x86\x14\x89\x73\xA0\xC1\x10\x9E\x28\xA0\xA4\xF7\x92\x5A\x8B\x74\xA4\xC6\x18\x9E\x14\xA2\x10\x02\xA9\xA3\x2F\x1B\x84\x2E\xA1\x1F\xFF\x97\xA1\x00\x04\x83\x03\x19\x9F\x35\xA4\x4D\x00\x06\xA1\x22\xA1\x4F\x4F\x85\xA5\xF8\x18\x9A\x2E\xA0\xA6\x47\xA1\x4F\x53\x8C\xA4\x2F\x11\x9B\x39\xA8\xA6\xAF\x90\x00\x4F\x3C\xA6\x17\x1B\x42\x24\xAF\xA4\xE5\x44\x79\x74\xAE\x75\x15\x2D\xA2\x02\x12\x78\x4C\x87\x93\x00\x0B\xA3\x06\x1B\xA4\xA2\x59\x86\x64\xA8\x31\x86\xA8\xA7\x46\x1A\x85\x89\xA5",
			"\x1B\xE3\x9A\xA1\x03\x1B\xA8\x61\xA5\x4E\x5E\x8B\xA7\x37\xAB\x42\x94\xA9\xA6\xE5\x4C\x79\x3C\xA6\x1C\x51\xA6\x56\x8A\x7C\xA1\x09\x12\x12\x9F\xAF\x12\x80\xA3\x99\x0A\x14\xA5\x8C\xAF\x12\x9F\x78\xA9\x03\x14\xA8\x2E\xA3\xA6\x02\x13\xA4\xA2\x5F\x87\x8F\xA8\x2E\xB4\xA5\xA9\x46\x18\x87\x58\xA1\x1F\xB6\xA8\xA5\x6B\xA3\x10\xC1\xA5\x4E\x71\x89\xAB\x36\x33\xAC\xAD\xAA\x10\xA7\x70\xAB\x02\x1B\xA9\x0E\x53\xA7\x03\x1E\xA9\xB3\x5D\x7A\x3F\xA5\x42\x88\xAB\xAC\x09\x1F\x7A\xCE\xA1\x10\xAC\xA7\xAD\x01\x1E\xA8\x02\x1A\xA7\xA2\x59\x89\xC8\xA6\x31\xE2\xAC\xAB\x82\x84\x33\xBB\xA2\xA9\x02\x17\xA9\x03\x14\xAE\xF1\x47\x88\xE7\xA5\x32\xF0\xAA\xAD\x06\x13\x8A\xF5\xAF\x12\xCA\xA0\xAE\x00\x04\xAD\x52\xAA\x10\x8E\x8B\xAF\x92\x70\x35\x00\xB8\xAF\x03\x12\x89\xDD\xA0\x00\xF2\xAC\xAB\x07\xBA\xAE\xBC\x74\x33\xE9\xA6\x1B\x9B\x74\xAA\x06\x1F\x7B\xA7\xAD\x79\x10\x7A\xB1\x06\x1D\xAC\xA2\x51\x7C\x0B\xB1\x1F\xB8\xA8\xB0\x02\x1B\x8A\x04\xB2\x7A\x15\x2E\xAB\x01\x1F\xAA\xA2\x5F\x8A\x27\xB2\x24\x2A\xBC\xA9\x46\x16\x8B\x2F\xB3\x10\xC7\xA8\xA5\x37\xBB\xB2",
			"\x1B\x69\x7C\x35\xB2\x2C\x39\xB2\xB3\x2F\x1B\x7C\x0B\xBE\xB1\x58\xA4\xB4\x10\xBC\x7C\x34\x36\xAD\xEE\xA1\x10\x46\xB0\xB4\x0A\x15\x8E\x19\xBB\xAD\x2B\x4D\xB4\x71\xA9\x8E\x51\xB6\x10\x9E\x82\xAA\x1D\xB6\xB1\x03\x13\x90\x57\xB3\x10\x03\xBA\xB5\xAC\x71\xB1\x11\x60\x8F\x21\xB8\x1F\x4A\xB8\xB1\xB3\x54\x8F\x5F\xB2\x2C\x4A\xB0\xB2\xA2\x55\x05\x0F\x46\xAE\x24\xB1\x10\xEE\x3D\xB6\x01\x1A\xB6\x2E\xA9\xB5\x99\x3B\x61\xF0\x3B\xB1\x73\x3C\xB7\x4E\xB9\x10\x15\x9B\xB0\x70\xB8\xA5\xF4\xAE\x7A\x1B\x61\x8E\xA3\x96\x39\x89\xB7\xB4\x06\x1B\x8D\x0B\xB6\xB2\x58\xAA\xAF\x75\xB0\x00\xCF\x8B\xB0\x2E\xB8\xA5\x61\xBD\xB7\x11\x65\x8D\x8D\xB7\x47\x9D\xB3\xB8\x06\x13\x06\x34\x34\xB3\x58\xAA\xB0\x03\x1C\xAD\xA2\x5A\x42\x80\xB6\x39\xAA\xB7\xB9\x34\x48\xB7\x00\x0C\xB3\x58\xAD\x7B\x41\xAF\x12\x39\x44\xBB\x42\xBE\xA2\xB8\xB9\xA4\xF1\x4B\x43\xB4\xBB\x8F\x2E\xAA\xB7\x97\xB0\x44\xB4\xB0\xB5\xA9\x96\xBC\x90\xB3\x10\x43\x44\xBB\x56\xB9\x9A\x87\xBD\xBC\x02\x15\x44\xB4\xBE\xB5\xD2\xBC\xB5\x02\x17\x44\xB4\xB6\xB6\x2E\xA4\xB9\xD4\xB1\x10\x49\x44\xBB\x6C",
			"\xB9\x9A\x9B\xBE\xB9\xB3\x5D\x70\xA1\xB5\x42\xE7\xB4\xBA\x03\x12\x07\x34\x32\xB7\x50\x38\xBA\xE8\xB2\x5A\x73\x07\x94\x3C\x34\xBF\xEE\xB2\x10\x76\x04\x33\x77\xB9\x9A\xB6\xB5\x64\x46\x1E\x45\x41\xA1\x1F\x7F\xB0\xC0\x0A\x1E\x9E\xE5\x45\x46\x05\xC8\x1F\x0A\x98\xC0\x2C\x7B\x61\x6C\x4D\xC0\xB3\x1E\x90\x10\xC5\xA8\x1B\x64\x47\x14\xC5\x1B\x85\xBE\xA2\x01\xCF\xAF\x1B\x6C\x47\x1B\xCD\x1A\x8C\xBE\xC1\xCC\xAB\x61\x87\x43\xC2\xB1\x1E\x8B\x17\xC3\x10\xBF\xB2\x5A\x8E\x4A\xC2\xC1\x19\x8C\x2D\xC2\x10\xCC\xB6\x14\x95\x42\xC3\xC6\x12\xB9\x26\xC9\x10\xD3\xB6\x14\x9C\x4A\xC3\x2F\x19\xB9\x3D\xC6\x10\xF2\xB3\x5B\xA3\x44\xBB\xF1\x1F\xC1\xFF\xB2\x5A\xA5\x4A\xC4\xF8\x1F\xC1\x07\xC2\x5A\xAA\x40\xC5\xB3\x14\xBC\x97\xBC\x4A\xB4\xB0\xBA\x2E\xAA\xBC\x03\x1D\xBB\xF1\x42\x4B\xAF\xB7\x47\x5E\xC7\xB9\xC4\x44\xBB\xC3\x80\x35\xD1\xBF\xC5\x1B\x6A\x4C\x63\xC5\x42\x6B\xC7\xB9\x94\x04\x33\x22\x40\x35\xD8\xB1\xB0\x09\x15\x09\x34\x36\xBA\x50\x3E\xBD\x02\x10\xC6\xE5\x46\x09\xF8\xB0\x3E\xDA\xB1\x10\x99\x04\x33\xAE\xB9\x9A\xE5\xBC\xC6\x11\x6A\x09\x83\xC2",
			"\x2F\x8B\xC7\xB9\x9D\x04\x33\x65\x05\x21\x47\xC8\xC7\x06\x1E\x09\x34\x32\x43\x50\x37\xC9\x97\xBF\x09\x33\x45\x21\x4D\xC7\xB9\xA0\x04\x33\xBB\xB9\x9A\xA3\xC1\xBE\x00\x01\x0A\x3A\x45\x21\x53\xC7\xB9\xA2\x04\x33\xC8\xB9\x9A\xAF\xCA\xCA\xA3\x04\x33\xCF\xB9\x9A\x0F\xC8\xC9\x03\x14\x0A\x34\x36\xBD\xA9\x96\xC1\x8C\xC3\x5B\xA5\x0F\xC8\xE8\x22\xCC\x97\xB8\x0A\x34\x3C\xBD\xA9\x9D\xC1\x7F\xCB\x61\xA9\x06\xCC\x36\x3E\xCC\xAA\xCC\x0A\x34\x33\xBE\xA9\x95\xC2\xCF\xC1\x61\xAD\x0F\x40\x2C\xC3\xCC\xA2\x5E\x0A\x0F\x44\xC3\xE0\xC1\x4F\xAF\x0F\x40\x3C\xCB\xCD\xB3\x50\x0B\x0F\x44\xC4\xEA\xC2\x5A\xB1\x0F\x40\x5C\xCF\xCE\xF1\x42\x0B\x0F\x49\xC6\xCA\x7B\x61\xB3\x0F\x40\x75\xC1\xA8\xB5\x14\x53\x1B\x6E\xAF\x5A\x1C\x94\x2B\x12\x92\xF2\x7B\xB4\xE5\x46\xD0\x42\xCF\x83\x4D\x62\x5A\x71\xAB\xBF\x97\xB4\xB1\x8A\x14\x99\x34\x17\x8C\x46\x16\xD1\x2F\x18\xD1\x0D\x66\x14\x16\x6E\x12\x1D\xDB\x12\x45\x9F\x12\x21\xD8\x68\x2E\x17\x6E\x26\x9F\x12\x27\xDB\x69\x72\x19\x66\xCF\x7F\x12\x2D\xD1\x93\x8A\x17\x70\xFF\x02\x6C\x46\x14\xD3\x46\x9A\x18\xBE\x64\x6C",
			"\xB3\x59\x7D\x02\x1F\x9B\x16\x2E\xD3\xB0\x5E\xD3\x46\x12\xD4\x2F\x18\x9C\x5A\x16\xD4\x40\x18\x9C\x46\x1A\xD4\x45\xD1\xD0\x4C\xD8\x71\x9C\x13\x8D\xB0\x53\x8D\x46\x14\xD5\x2F\x16\xD5\x50\xD2\x95\x72\x1B\x95\xB0\x5B\x95\x46\x1E\xD5\x17\x21\xD0\x60\xD9\x96\x8A\x1F\x96\xB0\x5F\x96\x46\x18\xD6\x2F\x1A\xD6\x64\xD9\x9A\x00\x06\x9E\x6B\xD2\x7D\x6C\xDD\x7D\x50\x3F\xD6\x08\xAF\x96\x14\x68\xD7\x71\xD9\xBB\x0A\xC6\x21\x7D\xD0\x5B\x7D\xD4\xD3\x81\xDF\x12\x83\xD9\xC0\xD8\x74\xD8\x87\xD6\xD8\xBB\x6A\xD8\xA6\x68\xD8\x8B\xDD\x71\x7D\x63\x10\x7D\xD2\xD4\x93\xDE\xD8\x4D\x76\xD9\xCE\x18\xD9\xA2\x5D\xD7\x14\x6D\xD7\x26\x9D\xD7\x16\xDD\xD7\x45\x9D\xD7\xA9\x50",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"Plus",
			L"EqualOptional",
			L"PositiveOptional",
			L"NegativeOptional",
			L"NO1",
			L"PositiveNO1",
			L"NegativeNO1",
			L"NO2",
			L"PositiveNO2",
			L"NegativeNO2",
			L"NestedOptional",
			L"NestedPositiveOptional",
			L"NestedNegativeOptional",
			L"BranchedOptional",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][Plus] BEGIN ",
			L"[1][Plus] END [ENDING]",
			L"[2][Plus]< \"+\" @ >",
			L"[3][EqualOptional] BEGIN ",
			L"[4][EqualOptional] END [ENDING]",
			L"[5][EqualOptional]< \"optional\" @ [ Plus ] \"+\" { Plus } >",
			L"[6][EqualOptional]< \"optional\" [ Plus @ ] \"+\" { Plus } >",
			L"[7][EqualOptional]< \"optional\" [ Plus ] \"+\" @ { Plus } >",
			L"[8][EqualOptional]< \"optional\" [ Plus ] \"+\" { Plus @ } >",
			L"[9][PositiveOptional] BEGIN ",
			L"[10][PositiveOptional] END [ENDING]",
			L"[11][PositiveOptional]< \"positive_optional\" +[ Plus @ ] \"+\" { Plus } >",
			L"[12][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" @ { Plus } >",
			L"[13][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" { Plus @ } >",
			L"[14][PositiveOptional]< \"positive_optional\" @ +[ Plus ] \"+\" { Plus } >",
			L"[15][NegativeOptional] BEGIN ",
			L"[16][NegativeOptional] END [ENDING]",
			L"[17][NegativeOptional]< \"negative_optional\" -[ Plus @ ] \"+\" { Plus } >",
			L"[18][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" @ { Plus } >",
			L"[19][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" { Plus @ } >",
			L"[20][NegativeOptional]< \"negative_optional\" @ -[ Plus ] \"+\" { Plus } >",
			L"[21][NO1] BEGIN ",
			L"[22][NO1] END [ENDING]",
			L"[23][NO1][ Plus @ ] Plus",
			L"[24][NO1][ Plus ] Plus @",
			L"[25][PositiveNO1] BEGIN ",
			L"[26][PositiveNO1] END [ENDING]",
			L"[27][PositiveNO1]+[ Plus @ ] Plus",
			L"[28][PositiveNO1]+[ Plus ] Plus @",
			L"[29][NegativeNO1] BEGIN ",
			L"[30][NegativeNO1] END [ENDING]",
			L"[31][NegativeNO1]-[ Plus @ ] Plus",
			L"[32][NegativeNO1]-[ Plus ] Plus @",
			L"[33][NO2] BEGIN ",
			L"[34][NO2] END [ENDING]",
			L"[35][NO2][ NO1 @ ] Plus",
			L"[36][NO2][ NO1 ] Plus @",
			L"[37][PositiveNO2] BEGIN ",
			L"[38][PositiveNO2] END [ENDING]",
			L"[39][PositiveNO2]+[ PositiveNO1 @ ] Plus",
			L"[40][PositiveNO2]+[ PositiveNO1 ] Plus @",
			L"[41][NegativeNO2] BEGIN ",
			L"[42][NegativeNO2] END [ENDING]",
			L"[43][NegativeNO2]-[ NegativeNO1 @ ] Plus",
			L"[44][NegativeNO2]-[ NegativeNO1 ] Plus @",
			L"[45][NestedOptional] BEGIN ",
			L"[46][NestedOptional] END [ENDING]",
			L"[47][NestedOptional]< \"nested_optional\" @ [ NO2 ] Plus { Plus } >",
			L"[48][NestedOptional]< \"nested_optional\" [ NO2 @ ] Plus { Plus } >",
			L"[49][NestedOptional]< \"nested_optional\" [ NO2 ] Plus @ { Plus } >",
			L"[50][NestedOptional]< \"nested_optional\" [ NO2 ] Plus { Plus @ } >",
			L"[51][NestedPositiveOptional] BEGIN ",
			L"[52][NestedPositiveOptional] END [ENDING]",
			L"[53][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 @ ] Plus { Plus } >",
			L"[54][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus @ { Plus } >",
			L"[55][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus { Plus @ } >",
			L"[56][NestedPositiveOptional]< \"nested_positive_optional\" @ +[ PositiveNO2 ] Plus { Plus } >",
			L"[57][NestedNegativeOptional] BEGIN ",
			L"[58][NestedNegativeOptional] END [ENDING]",
			L"[59][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 @ ] Plus { Plus } >",
			L"[60][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus @ { Plus } >",
			L"[61][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus { Plus @ } >",
			L"[62][NestedNegativeOptional]< \"nested_negative_optional\" @ -[ NegativeNO2 ] Plus { Plus } >",
			L"[63][BranchedOptional] BEGIN ",
			L"[64][BranchedOptional] END [ENDING]",
			L"[65][BranchedOptional]< \"branched_optional\" +[ Plus @ ] Plus { Plus } >",
			L"[66][BranchedOptional]< \"branched_optional\" +[ Plus ] Plus @ { Plus } >",
			L"[67][BranchedOptional]< \"branched_optional\" +[ Plus ] Plus { Plus @ } >",
			L"[68][BranchedOptional]< \"branched_optional\" -[ Plus @ ] Plus { Plus } >",
			L"[69][BranchedOptional]< \"branched_optional\" -[ Plus ] Plus @ { Plus } >",
			L"[70][BranchedOptional]< \"branched_optional\" -[ Plus ] Plus { Plus @ } >",
			L"[71][BranchedOptional]< \"branched_optional\" @ +[ Plus ] Plus { Plus } >",
			L"[72][BranchedOptional]< \"branched_optional\" @ -[ Plus ] Plus { Plus } >",
			L"[73][BranchedOptional]< \"branched_optional\" @ [ Plus ] Plus { Plus } >",
			L"[74][BranchedOptional]< \"branched_optional\" [ Plus @ ] Plus { Plus } >",
			L"[75][BranchedOptional]< \"branched_optional\" [ Plus ] Plus @ { Plus } >",
			L"[76][BranchedOptional]< \"branched_optional\" [ Plus ] Plus { Plus @ } >",
			L"[77][Module] BEGIN ",
			L"[78][Module] END [ENDING]",
			L"[79][Module]< \"entry_rule_priority\" +[ Plus @ ] Plus { Plus } >",
			L"[80][Module]< \"entry_rule_priority\" +[ Plus ] Plus @ { Plus } >",
			L"[81][Module]< \"entry_rule_priority\" +[ Plus ] Plus { Plus @ } >",
			L"[82][Module]< \"entry_rule_priority\" -[ Plus @ ] Plus { Plus } >",
			L"[83][Module]< \"entry_rule_priority\" -[ Plus ] Plus @ { Plus } >",
			L"[84][Module]< \"entry_rule_priority\" -[ Plus ] Plus { Plus @ } >",
			L"[85][Module]< \"entry_rule_priority\" @ +[ Plus ] Plus { Plus } >",
			L"[86][Module]< \"entry_rule_priority\" @ -[ Plus ] Plus { Plus } >",
			L"[87][Module]< \"entry_rule_priority\" @ [ Plus ] Plus { Plus } >",
			L"[88][Module]< \"entry_rule_priority\" [ Plus @ ] Plus { Plus } >",
			L"[89][Module]< \"entry_rule_priority\" [ Plus ] Plus @ { Plus } >",
			L"[90][Module]< \"entry_rule_priority\" [ Plus ] Plus { Plus @ } >",
			L"[91][Module]<< !BranchedOptional @ >>",
			L"[92][Module]<< !EqualOptional @ >>",
			L"[93][Module]<< !NegativeOptional @ >>",
			L"[94][Module]<< !NestedNegativeOptional @ >>",
			L"[95][Module]<< !NestedOptional @ >>",
			L"[96][Module]<< !NestedPositiveOptional @ >>",
			L"[97][Module]<< !PositiveOptional @ >>",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<FeatureTestTokens, ModuleParserStates, FeatureTestAstInsReceiver, ModuleParserStateTypes>(&FeatureTestTokenDeleter, &FeatureTestLexerData, &FeatureTestModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2)
	{
		static vl::vint32_t results[6][6] = {
			{0, 1, 1, 1, 1, -1, },
			{1, 1, 1, 1, 1, -1, },
			{1, 1, 2, 1, 1, -1, },
			{1, 1, 1, 3, 1, -1, },
			{1, 1, 1, 1, 4, -1, },
			{-1, -1, -1, -1, -1, 5, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<featuretest::Feature> ModuleParser::ParseModule(const vl::WString & input, vl::vint codeIndex)
	{
		 return Parse<ModuleParserStates::Module>(input, this, codeIndex);
	};
}
