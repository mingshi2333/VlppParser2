/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "FeatureTestModuleParser.h"

namespace featuretest
{
	void FeatureTestModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 5023; // 46830 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 159;
		static const vl::vint dataSolidRows = 19;
		static const vl::vint dataRows = 20;
		static const char* compressed[] = {
			"\xEE\xB6\x00\x00\x97\x13\x00\x00\x0A\x00\x01\x82\x80\x0F\x03\x82\x81\x82\x06\x89\x82\x83\x0A\x81\x06\x84\x84\x06\x95\x0A\x99\x0A\x85\x0E\x85\x10\x0A\xA5\x0A\x89\x1A\x85\x16\x85\x19\x0A\xB9\x0A\x9F\x1A\x85\x32\x84\x14\x05\x09\xBF\x6B\x9C\x93\x96\x84\x00\x2D\xAD\xAF\x91\x9C\x93\x98\x9B\x7F\x36\xB4\xB9\x91\x9B\x9A\x9A\x85\x9B\x38\xBF\xB7\x9D\x95\x9F\x96\x85\x00\x42\xBA\x89\xBC\x9B\xA6\x9E\x95\xA1\x4D\xC5\x8F\xAA\xA3\xAC\xA5\xAA\xA7\x06\xC0\x84\xAE\x91\xAC\xAF\xAA\xA9\x59\xD0\x89\x88\xA3\xB5\xAD\xA1\xAF\x5E\xE1\x94\xAA\xB6\xAC\xB4\xAD\x81\x5A\xE6\x9B\xA7\xBE\xB0\xB0\xB8\xB1\x75\xE9\xB7\xAB\xBB\xBD\xB7\x80\x01\x47\xF2\x82\xC8\xB4\xBD\xBF\xB6\x81\x71\x84\xF3\xAB\xC3\xC1\xBD\xC2\xC4\x78\x86\xF6\xB0\xCC\xBC\xCA\xBE\xCB\x87\x81\x89\xCE\xCC\xC2\xC5\xC6\xC9\x7A\x98\xD3\xDA\xC1\xCA\xD1\xD0\xD2\x95\xA8\xD7\xCA\xD9\xC8\x99\xD2\xD6\xA3\xAE\xE9\xD2\xDB\xD0\x00\x87\x84\x80\x9E\xFA\xDC\xCF\xCE\xD3\xC6\xD8\xA7\xB4\xED\xDB\xC0\xD7\xDE\xE1\xD8\xC4\x82\xA9\x85\xBB\xDB\x82\x03\xC0\xCD\xBE\xDD\xDC\xD1\xE8\xE2\xE3\xE4\xD6\xD3\xC3\x87",
			"\x00\xEC\xEA\x82\x04\xDD\xC5\xDA\xF2\xED\xD9\xED\xF3\xE3\xC1\xD8\xE8\xE6\xEE\x84\xE6\xEE\xF1\xE7\xEA\xC0\x8E\xF0\xFD\xEB\xF5\xF1\xE6\xF6\xEA\xFB\xFF\xD7\xF9\xF9\xFE\xFC\x73\x61\x81\x6D\x03\x83\x70\x83\x81\x02\x88\x84\x82\x82\x06\x89\x8E\x83\x82\x0F\xAD\x6B\x01\x78\xE4\x49\x4C\x00\x85\xF9\x6F\x75\x86\x86\x19\xB5\x7C\x86\x7F\xF6\x4D\x08\x84\x88\x06\x4E\x03\x89\x81\xC8\x4C\x89\x89\x84\x2B\x90\x8E\x89\x6B\x10\x43\x44\x5B\x87\x28\xA9\x7A\x8A\x8D\x2C\xB8\x8F\x89\x8B\x0D\xB5\x60\x06\x42\xB9\x74\x87\x8F\x75\x43\xAF\x42\x07\x89\x45\xBF\x79\x8C\x91\x4B\xB8\x74\x8A\x87\x50\x9B\x81\x95\x87\x52\x95\x94\x97\x95\x4F\x96\x99\x94\x96\x35\x8C\x9B\x8E\x8E\x3D\xA1\x91\x6F\x04\x48\xB3\x64\x05\x99\x5F\x9E\x92\x98\x98\x3C\xAD\x9C\x9B\x9B\xC6\x52\x44\x7E\x96\x16\x28\x9B\x9A\x9A\x6E\xB8\x90\x9E\x93\x5D\xAF\x47\x06\x9D\x79\xBC\x99\x92\x7E\x83\x82\x9D\x92\x42\x18\x00\x9A\x91\x9A\x82\x87\xA4\xA2\xA3\x86\xB5\x6A\x06\xA2\x8F\x8C\xAB\xA3\x9D\x8D\x96\xA5\xA4\xA6\x97\x81\xAD\xA7\x9E\x9F\xBA\x92\xAA\x93\x1C\x00\xA1\x72\x45\x73\x9C\x95\xA3\x94",
			"\x5B\xAD\xAD\x9D\xA8\x99\x9C\xAB\xA6\xA7\xB3\xA0\xA5\xAE\x71\x1E\x14\xA1\xA6\xAC\xBB\xB4\xAD\xAE\xAD\xBF\xA3\xA0\xAF\xB0\xB7\xB1\xAE\xAC\xAB\xEA\x60\x06\xAA\x71\x18\x69\xAE\xAB\xAA\x5A\xAF\xA5\xB0\xB1\xC1\x86\xB0\xB0\xB2\xD0\xAA\xA0\xA7\x40\x22\x3A\xA8\xB7\xB6\xD1\x99\xBF\xB0\xB8\xDA\x9A\xA5\xB4\xB5\xDF\xA6\xB9\xB8\xAF\xAC\xA4\x0B\xB3\x4B\x1A\x4E\xB2\xB7\xB9\xD3\xB5\xB4\xBF\xBD\xEB\x87\xB1\xB8\xB9\xE3\xAA\xB2\x42\x09\x0A\x77\x68\xBF\xBE\xFE\xA5\xBC\xB8\xC1\x07\xC6\xCA\xBE\xC2\xD7\x88\xCB\xC1\xBF\x09\xC0\x0C\x46\xBC\xFD\x6A\x0F\xB8\xBA\x0E\xCD\xCC\xC2\xB0\xF6\xB9\xBA\xC4\xC4\x0F\xF3\xBE\xC6\x71\x2B\x01\xC8\xC7\xC6\xD6\x9C\xC3\xC0\xCA\x27\xE0\xCF\xC6\xC8\x19\xEA\xC3\xCB\x4B\x2E\x17\xC9\x43\x0B\x36\xEB\xCE\xCA\xCC\x31\xE9\xCE\xCD\xCB\x30\xEC\xCD\xC6\x96\x30\x26\xC3\xD2\xD0\x3A\xC1\xDB\xCF\xCF\x47\xCB\xD0\xD2\xB8\x4A\xEA\x70\x48\xC5\xB3\x74\x09\xCF\xCC\x4F\xFC\xB1\xD4\xD4\x5C\xDA\xDD\x7D\x0D\x57\xFD\xC9\xD5\xC1\x4E\xCD\xDB\xD6\xD7\x68\xE4\xD7\xDA\xDA\x5D\xEC\xD3\x6E\x0D\x0A\x44\x03\xD9\xC4\x6B\xF4\xDD\xD9\x6B\x3A",
			"\x21\xD1\x43\x0E\x7A\xE5\xD9\xD3\xDD\x0F\xFC\x0D\xDD\x0F\x7D\xF5\xD1\xC8\xE0\x1F\xFE\x05\xE0\xE2\x3C\xC8\xD3\x40\x49\x54\xEE\xD2\xE6\xDD\x69\xD4\xE3\xE7\xE1\x95\xD8\xE7\xE7\xCB\x8C\xCC\xD6\x40\x10\x7D\xC1\x1B\xE1\xE6\x9C\xE4\xED\xE0\x00\x42\x3D\xD3\x13\xE8\x9B\xE7\xE6\xE3\xC7\x44\x2C\xE6\xE7\xEC\x9A\xF4\xEF\xC5\x11\x71\xF3\xD5\xEF\xEE\x1F\xC9\x12\xEC\xEF\xAE\xDD\xEA\xED\xE9\xAD\xDE\xE8\xD6\xD9\xC2\xCD\xDA\x11\xDF\x4B\x3F\xE4\xF2\xED\xC1\xFC\xBC\x11\xDF\x4D\x0E\xF1\xF5\xF1\xC3\xC6\x7E\x12\xF5\xC6\xE2\xD8\xF2\xE9\x2F\x4F\x19\xEF\xF7\xD8\xE4\xF1\xC7\x14\xE3\xC6\x47\x15\xFA\xC7\xFF\xD0\xF9\xF6\xDD\xCE\xEE\xF6\xFB\xE5\xF4\xFD\x6B\x16\xDE\xB3\xFD\xFB\xFE\xFA\xFD\xF8\x95\x17\xF9\x72\x7E\x00\xFE\x6C\x7F\x01\xAA\x3F\x0B\x7D\x60\x0C\xF7\x70\x7C\x80\xF3\x40\x79\x7E\x04\x9E\x7D\x04\x81\x21\x0D\xBE\x62\x0B\x81\x0E\x8F\x7B\x03\x8D\x86\x7F\x0D\x99\x87\x74\x63\x01\x83\x04\xA3\x8F\x75\xEB\x50\x7F\x25\x26\x38\x34\x07\x85\x84\x85\xE4\x5F\x47\x0C\x7D\x68\x0C\x06\x9D\x8A\x83\x1A\xA6\x86\x83\x34\x97\x86\x0D\xCE\x49\x0D\xBE\x6A\x0B",
			"\x86\x2C\x85\x84\x04\xC2\x8B\x84\x09\x84\x8E\x3E\x6B\x06\x69\x0E\xC3\x8E\x85\x20\xBD\x3E\x0D\x4A\x8E\x8B\xFB\x1F\x8C\x89\xD9\x31\x09\x8A\x46\x8D\x89\x16\xD3\x8F\x42\x3A\x18\x8E\x80\x5A\x80\x8C\x17\xAC\x57\x0E\x20\x9B\x8D\x7E\x52\x84\x6C\x1E\x66\x82\x8C\x34\xA7\x89\x62\x79\x1D\x6E\x1E\x6C\x8D\x85\x31\xAF\x88\x87\x69\x87\x85\x11\xD8\x4B\x0F\xBE\x7C\x0C\x8E\x47\x8B\x8B\x1E\xF5\x8E\x8D\x36\xBA\x89\x21\x7D\x02\x85\x20\xF9\x88\x8F\x3B\x81\x3F\x0F\x8A\x81\x8C\x21\x87\x92\x91\x84\x01\x10\x90\x92\x8B\x92\x23\xC6\x32\x10\x4C\xB6\x8E\x90\x8D\x98\x4B\x20\x7D\x64\x10\x4F\x85\x93\x92\xA1\x88\x97\x0E\x83\x9A\x93\x80\x05\x15\x6F\x86\x06\x94\x25\x8C\x9B\x94\x2A\xAC\x91\x93\xE2\x47\x11\x24\x9F\x9A\x94\x1D\xBE\x96\x49\x89\x1B\x97\x29\xAD\x9D\x96\x08\x8B\x12\x98\xB3\x9B\x91\x15\xA7\x9D\x10\x64\xA9\x94\x98\xD0\x82\x5F\x23\x4E\x95\x97\x4A\x96\x9C\x85\x91\x14\x9B\x2F\x8A\x23\x13\x11\x54\x13\x44\x95\x03\x46\x25\x23\x47\x13\x11\x58\x13\x44\x99\x0C\x7E\x40\x1D\x1A\x9C\x50\x95\x9C\x96\xDB\x96\x96\x7D\x21\x12\x97\x67\xB8\x94\x97\xA2\x15",
			"\x9F\x3B\xCA\x93\x91\x51\x3A\x99\x9E\xD7\x9C\x9D\x42\x24\x1F\x9F\x65\x89\x9E\x9D\xC6\x25\x15\x41\xB7\x9C\x96\xA5\x66\x13\xA1\xF2\x81\xA3\x00\xA7\x10\xA2\x89\x85\x9D\x65\x13\x13\x46\x40\x41\x43\x21\xE5\x0E\x36\xA3\xC5\x20\x28\x47\x82\x22\x6E\xC2\x23\xA1\x20\x20\xBE\x36\x46\xC6\x26\x3A\xEE\x09\x23\x42\x84\x29\xA6\x75\x22\xAA\x20\x99\xAB\x3B\xA5\x2C\xA0\x2A\x4B\x86\x20\xA7\x8F\xA6\x2C\xA6\x09\x36\xA4\x50\x86\x25\xA4\xC7\x38\xA0\x00\x47\xBA\xA6\x42\x3D\xA5\x38\xA1\x80\x2F\x26\x27\xA0\x02\x53\xB4\x27\xA9\xA4\xB7\x23\xA7\x03\x2C\xAA\x6F\x53\xAF\xA9\x96\x11\xAC\xAB\x5E\xB5\xA6\x59\x51\xA5\xA9\xE2\x07\xA9\xAA\x4A\xAF\xA6\x59\x60\xAD\xAB\x7F\x1F\xAE\x2C\x67\xA6\x2C\x56\x82\x2A\xAA\xEB\x2C\xAD\xAB\x6F\xA6\xA6\x58\xFA\xA1\xA9\xB1\xBB\xAE\x31\x79\xA0\xB3\x5F\xC5\x31\xB0\xC2\x83\xB6\x37\x85\xA8\xB3\x61\xD6\x39\xB0\xC6\x8B\xB3\x3D\x8D\xB0\xB3\x63\xC3\xAD\xA2\xBF\xBD\xAC\xAF\x06\x37\xAE\x5B\x93\xB0\xAA\xCE\xB4\x21\xB2\x94\xAA\x3A\x65\x99\xB3\xB5\xCA\x98\xB3\x20\x02\x66\xB3\x65\x82\xBB\xB4\xD5\xA4\xB7\xB4\xA2\xB0\xB4\x4A\xEB",
			"\xAF\xA7\xCE\xAD\xB3\xAB\xB5\xBF\xB2\x67\xB1\x21\xAB\xD4\x8A\xB7\xB6\x76\xB9\xB4\x6F\xBB\xBD\x24\xCD\xA1\xB3\xB6\xB2\xB2\xA9\x69\xB1\xBC\xB5\xD7\x8D\xBE\xB4\xCF\xAB\x23\x72\xC8\xBE\xA6\xC2\x07\xBA\xB9\x31\xA2\xB9\x58\xC0\xB2\xB2\xEE\x97\xBA\xB3\xA0\xB6\xB6\x73\xAE\xBC\xA4\xC7\xA5\xBF\xB7\xE7\xBD\xB9\x7A\xD7\xB3\x2F\xA8\xAD\xB9\xBD\xE6\xAB\xBE\x78\xD0\xB4\xBC\xE6\xB5\xBC\xBA\xF7\xB8\xB9\x74\xF8\xBA\xA4\xF8\xAB\x3B\xAE\x01\x28\xAF\x4D\x46\xB3\xBE\xFB\xBD\xB9\x72\x2D\x20\xC0\x00\x02\xC4\x26\x02\xFA\xB6\xBB\x05\xDC\xBD\x7C\xF4\xB8\xBC\x0A\xD3\xC6\xC0\xD6\x31\xAC\x61\x0A\xCC\xC1\x98\x0E\xC3\xB8\x10\xD4\xAB\x17\xFF\xBA\x9B\x0F\xDB\xBB\xBC\x15\xD8\xC2\x7A\x96\xCB\xC4\x15\xDF\xBB\xBA\xFA\xB9\xBC\x78\xC4\xBC\x25\xF0\x8F\xC0\xC5\x17\xD2\xC1\x8B\xBA\xCF\xC5\xE4\xB3\xC1\xC4\x31\x27\xAB\x5C\x1C\xC4\xB6\xEB\x91\xC1\xC6\x07\xC6\x22\x55\xB4\x24\xC9\xEC\x86\xCF\xC6\x2C\xDD\xC7\x7E\xC8\xC9\xC6\x2A\xFB\xC6\xCA\x52\xD2\xC4\x5C\xDA\x9D\xC9\xEA\x8E\x31\xCB\x49\xC8\xB6\x5C\xA5\xCA\xBB\x1A\xF4\xC3\x25\x36\xC0\xC4\x8E\xD7\xCF\xC7\x35",
			"\xE0\xCD\xCA\x6D\xD1\xCB\x91\xF1\xCE\xC5\x39\xF0\xC4\xCE\x01\x25\xAD\x8A\xF9\xC0\xC6\x3D\xD5\xCE\xB7\x7F\xD0\xC4\xA0\xD7\xCF\xBC\xF8\xAC\xB8\xC6\x85\xD2\xBC\x94\xE5\xB7\xD1\xE4\xB3\x2E\xC4\x2C\x30\xD3\x4A\x12\xDF\x1E\x4A\xD6\xD5\xCC\x93\xD8\xD3\x3F\x0A\xC3\x3E\xC7\x0A\xC5\x3D\x9E\xCD\x23\x98\x89\x20\xD5\xE2\x1F\xD3\xD4\x06\x3D\xD2\xA9\xA2\xDB\xC2\x56\xE1\xD1\x21\xAA\xDE\x36\x82\xFE\xC4\xC4\x20\xC9\xC7\xCC\x9B\xCD\x9D\xAD\xEE\xC7\xAA\x5C\xF3\xD0\xD5\x72\xCC\xCA\xAF\x8A\x2F\x39\x56\xC9\x25\xD8\xAF\xC6\x20\xB2\xAB\xD7\xD8\x60\xC2\x23\xD9\xB2\xC4\xDA\xB3\x81\x2A\xC1\xB4\x86\x25\xDA\xBD\xC9\x20\x78\x46\xDF\x3B\x69\xC0\x00\xDB\xC2\xDA\xDA\xB7\xDB\xD9\xD9\xED\x1E\xD8\xDC\x31\x2A\xC0\xB9\xCC\xDD\xDA\x6E\xE6\xDE\xDD\x02\x2B\xC9\x4C\x50\xD3\xA7\x6C\xCA\xCE\x2C\xF4\xCB\x3C\x50\x79\xDD\xAD\x79\xDA\xD2\xC1\xF2\xCD\x24\xBF\xFD\xDC\x24\x80\xF8\xDA\xD3\x03\xE4\xE3\x3F\x09\xE4\xE0\x05\xC3\xCB\x59\x0C\xFD\xDE\xC3\xDE\xD1\xE0\x96\x11\xE5\xAD\x13\xF0\xDD\x40\x15\xEB\x25\x8B\xDD\xA9\xE3\xE5\xD1\xDF\xC1\xCF\xCE\xDE\x92\xC2\xE0\xE1",
			"\x28\xE6\xE5\xC1\x90\xEF\xDE\x96\xEA\xE5\xE3\x29\xFF\xCB\x4D\x1E\xEF\xA8\x9A\xD6\xDA\x46\x23\xF2\xE5\xB8\xF7\xD4\x30\x9B\xF6\xDF\xBC\xFB\xCD\xE6\xA1\xB3\xE2\xE8\x45\xE5\xE2\xE7\xE9\xDE\xBD\xD0\xAF\xEF\x1E\x5A\xCA\xE3\x25\x4E\xEF\xE9\xD4\x8A\xE3\xEA\x82\xD5\xED\xDF\x57\xED\xAD\xD6\xDD\xA1\x96\xF8\x9A\xC6\x20\x83\xD4\xD6\x4D\xF9\xDA\xDC\x57\xC3\x21\xD6\x01\x35\xAC\x00\x17\x49\x20\x11\x49\x26\x44\x09\x31\x46\x40\x3F\x49\x21\x08\x0A\x27\x48\x09\x24\x4C\xA9\x8A\x2A\xEF\x54\xCA\x27\x4C\x09\x32\x4E\x41\x75\x46\x42\x85\x04\xF6\x20\x6E\xE6\x23\x9F\x09\x29\x51\x84\x14\x21\xEE\x13\x2A\x20\xDD\x86\x23\x53\x84\x1B\x02\x21\xA5\x49\x20\xDE\x86\x29\xF2\x83\x3D\xEB\x20\xA5\xC2\x21\xE7\x83\x2F\xF2\x81\x28\xE8\x00\xA8\x46\x21\xAE\x09\x2F\x02\x85\x0A\x59\x21\xCD\x46\x21\xB7\x09\x23\x04\x85\x2E\x59\xF0\xB6\xE6\xF2\x42\x6C\xE6\x21\xDB\xC3\xF2\x21\x89\xE3\x21\xBC\x06\x20\x61\x84\x27\x07\x24\x1B\x28\x51\xF2\x8E\xFF\x21\xE5\xC6\x27\xF1\x06\x33\xF3\x40\x16\x69\x21\x92\x49\x24\x05\x1D\x2A\x21\xCD\x37\x6A\x21\xA2\x49\x21\x06\x0A\x32\x07",
			"\x47\x0A\x26\x6B\x84\x20\x69\x21\x70\x69\x23\x0D\x0A\x28\x07\x90\x0A\x21\x6F\x09\x3C\x6D\x42\x02\x79\x20\xC2\x49\x22\x71\x09\x30\x73\xE7\x0A\x22\x75\x84\x29\x71\x21\xAB\x39\x10\xB1\x39\x10\xB8\x39\x10\x46\x0A\x10\x47\x0A\x10\x48\x0A\x10\xBE\x39\x10\xCB\x39\x10\xCD\x39\x10\xD3\x39\x10\xD5\x39\x10\xDB\x39\x10\xE2\x39\x10\x50\x0A\x10\x51\x0A\x10\x52\x0A\x10\xE8\x39\x10\x54\x0A\x10\x55\x0A\x10\x56\x0A\x10\xEB\x39\x10\x58\x0A\x10\x59\x0A\x10\x5A\x0A\x10\xF8\x39\x10\x5C\x0A\x10\x00\x49\x10\x5E\x0A\x10\x08\x49\x10\x0A\x4A\x83\x0A\x1B\x83\x06\x1E\x83\x03\x10\x84\x02\x12\x84\x01\x14\x84\x00\x06\x84\x15\x40\x5F\xF9\x6F\x12\xB8\x03\x22\x2F\x1B\x6E\xE5\x59\x0B\x4E\x8A\x10\x50\x8C\x52\xBA\x03\x85\x6D\x7E\x5F\xBB\x08\x85\x88\x7E\x5F\xBC\x0C\x85\x59\x53\x22\xBD\x00\x86\x02\x15\x7A\x2C\x5E\x0B\x64\x81\x10\x66\x86\x14\xBF\x09\x86\x00\x06\x77\x2A\x49\x10\xC0\x0E\x86\x8B\x79\x5E\xC1\x0E\x86\x8D\x79\x5E\xC2\x08\x87\xFE\x53\x0C\x6E\x87\x79\xCE\x24\x0C\x6E\x83\x7A\x1B\x5A\x10\xC5\x03\x88\xFE\x56\x0C\x6E\x8D\x7A\x71\x86\x10\xC7\x0E",
			"\x86\xAF\x7C\x73\x06\x18\x0C\x90\x8E\x5F\xC9\x0E\x86\xBE\x77\x5E\xCA\x03\x22\xB4\x65\x7B\x43\x73\x1B\x2F\x19\x89\xE5\x5B\x0C\x6E\x88\x02\x22\x4C\x0C\x23\x26\x53\xC7\x78\x60\xB1\x1F\x12\xA6\x80\x5F\xCD\x0E\x86\xD8\x7E\x2C\xCE\x03\x22\xF9\x66\x7D\x06\x1D\x61\xAD\x1F\x12\xB3\x89\x5E\xCF\x0E\x86\xE0\x70\x5F\xD0\x03\x22\x0A\x6E\x7D\x46\x7B\x8B\x0A\x11\x8C\xE9\x51\x0D\x6E\x82\x7E\xF0\x52\x0D\xCD\x8E\x5F\xD3\x0E\x86\xE9\x79\x5E\xD4\x0E\x86\xEB\x70\x5F\xD5\x08\x8D\xFE\x56\x0D\xD4\x82\x42\xD7\x03\x22\x55\x80\x00\xE7\x72\x89\xAC\x2F\x12\xF4\x79\x5E\xD8\x0E\x86\xF6\x79\x5E\xD9\x0C\x8E\xFE\x5A\x0D\x6E\x89\x8E\x38\x79\x10\xDB\x03\x22\xA1\x7B\x37\xDA\x4E\x5F\x00\x01\x80\xE6\x82\x10\xDC\x0E\x86\x03\x89\x8B\x0A\x1D\x0D\x6E\x85\x80\x04\x99\x10\xDE\x0E\x86\x07\x8E\x2C\xDF\x02\x90\xFE\x50\x0E\x0C\x9E\x5F\xE1\x0E\x86\x0D\x8F\x8F\x01\x12\x0E\x6E\x8F\x80\x09\x96\x10\xE3\x0E\x86\x11\x8D\x91\x03\x14\x0E\x6E\x83\x81\x18\x90\x00\xE5\x0B\x91\xFE\x56\x0E\x25\x9E\x5F\xE7\x0E\x86\xFD\x77\x92\xE8\x0E\x86\xFE\x85\x8F\x06\x19\x0E\x10\x9D\x88",
			"\x03\x1A\x0E\x6E\x8F\x7F\x27\x9B\x0E\x07\x92\x42\xEC\x03\x91\xCE\x2D\x0E\x6E\x89\x80\x3A\x92\x10\xEE\x06\x91\x23\x2F\x0E\x2A\x9E\x2C\xF0\x0E\x86\x0B\x89\x94\x01\x11\x0F\x20\x93\x22\xF2\x0D\x92\xCE\x23\x0F\x6E\x89\x82\xE9\x54\x0F\x6E\x8B\x82\xF0\x55\x0F\x6E\x83\x82\xF0\x56\x0F\x6E\x87\x82\xF0\x57\x0F\x6E\x81\x82\x27\x98\x0F\x65\x92\x42\xF9\x0E\x86\x25\x84\x95\x00\x0A\x0F\x69\x93\x22\xFB\x0E\x86\x39\x89\x5E\xFC\x0E\x86\x46\x8F\x12\xFD\x0E\x86\x33\x80\x5F\xFE\x0E\x86\x37\x86\x68\x6E\x81\x83\x27\x98\x54\xCE\x2F\x12\x85\x92\x92\xF1\x68\x53\x42\x64\x83\x22\x42\x00\x94\x9E\x5F\x89\x97\x92\x03\x09\x99\xF0\x5D\x81\xCE\x24\x00\x9E\x99\x5E\x5E\x9F\x17\x35\x53\x9A\xE7\x5F\x81\xCE\x26\x00\xA8\x95\x5E\x62\x92\x99\xD4\x6D\x9A\x2C\x5D\x82\x76\x98\x00\xB2\x96\x14\x7D\x96\x93\xA0\x77\x9B\x2F\x1F\x82\x76\x9A\x00\xBC\x9D\x83\x23\x2B\x00\xB7\x97\x54\x32\x40\x5F\x0C\x07\x9B\x51\x5D\x06\xFE\x5D\x00\xB7\x93\x68\x3D\x40\x5F\x0E\x07\x9B\xA7\x79\x44\xF0\x5F\x00\xB7\x9A\x76\x6C\x0E\x5F\x10\x07\x9B\xBC\x73\x10\x3F\x40\x5F\x11\x07\x9B\xC1",
			"\x72\x10\x30\x40\x5F\x12\x07\x9B\xA8\x0E\x5F\xEE\x5E\x5F\x1C\x77\x3A\x51\x55\x99\xCE\x2F\x9E\x4E\x23\x68\x36\x5F\x12\xF1\x9D\x32\x36\x5D\x9E\x09\x13\x68\xF4\x9E\x9E\x8F\x50\x72\xF0\x4F\x12\x64\x7A\x74\x92\x4F\x6B\xF0\x54\x6B\x83\x6A\x34\x5D\x67\x5E\x06\x76\x1F\x55\x54\x85\xBA\x6F\x84\x23\x6A\x34\xE3\x8C\x9F\x3C\x5D\x37\xF9\x9B\x77\x6F\x7E\x5F\xDF\x92\x72\x4D\x3A\x76\x1F\xA9\x53\x92\x43\xA2\x00\x07\x7A\x2F\x15\x9E\x01\x1B\xA0\xE2\x26\xA2\x18\xA3\x10\xD2\x70\xA2\x1F\x2E\x9F\xC0\x7A\x10\x28\xAA\x10\x70\x80\x76\x2D\x3A\xA2\x0B\x6E\x5F\x80\x77\x92\xEA\x14\x6B\x47\x50\x77\xB0\x96\x14\x82\x7A\x9B\x5A\x26\x53\x43\xAB\x7B\xFB\x8D\x32\x72\x71\x10\x3F\xA7\x5E\x87\x78\xA4\x03\x49\xA3\x03\x1B\x79\x40\x72\x49\x58\xA3\x77\xFE\x55\x87\x62\x6D\x34\x5B\xA1\x60\xFE\x55\x79\x40\xAD\x1F\xF9\x67\x54\x6B\x81\xA3\x2C\x50\x88\x3A\xAD\x34\x6B\x8F\xA2\x02\x1B\x7A\x65\xA3\x1B\x0F\xA6\x10\x51\xA5\x88\xF0\x5C\x88\x73\xA5\x1B\xE3\x87\x54\x77\xA1\x10\x61\xAE\x98\x11\x53\x10\x47\xA8\xA7\xE9\x51\x89\x54\xAD\x2A\xF9\x82\xA8\x11\x12\x42\x2F\x11",
			"\x7B\x89\xA2\x1F\x23\x2E\xA5\x86\xA7\x5E\xB3\x7B\xA7\x12\x23\x22\x79\x83\x10\x53\xAC\x68\x92\x40\x7D\xA6\x90\x5F\x9E\x88\xA9\xB1\x16\xA2\x47\x50\xAA\x95\xA5\x5E\xA2\x8B\x71\xE7\x1C\xA3\x47\x5C\xA6\xA1\xA9\x5E\xC3\x71\xA9\xFD\x14\xA4\x89\xA4\x88\x01\x14\xA6\x59\xAC\x4B\xA9\x71\xAB\xE7\x55\x7C\xA4\xA1\x1C\x4F\xAC\xA8\x03\x1D\xAB\xA9\xAC\x52\xAB\x81\xAC\xC6\x1A\xA6\xC4\xA2\x10\x7A\xAE\xAB\xE5\x5F\x8A\xCA\xAF\x12\x56\xA2\xA3\x03\x18\xA8\x71\xA6\xA0\xBC\x40\xA9\xC7\xA6\x14\x13\x33\xAD\x77\x73\x22\xDC\xA2\xA6\xF0\x54\x7D\xE0\xA9\x77\x22\x43\xAE\x3D\xA0\x5F\xB8\x84\xAB\xB3\x15\xA8\xE4\xA6\x10\xA3\xA0\xAD\x2C\x5D\x8B\xEE\xA5\x1B\x94\xAC\xAA\x09\x1B\xAA\x00\x07\xA9\xBB\xA7\x4A\xB3\xAD\xAD\x2F\x1E\x11\xAC\x81\x1C\x9B\xA6\xAD\x02\x11\xB0\xF1\xA7\x5E\xDB\x77\xAE\xCF\x72\x42\x0A\xBB\xAE\xE9\x58\x33\x05\xB6\x1C\xB0\xAD\xAD\xC9\xA4\xAF\x46\x16\x8C\xF7\xAD\x1A\xC6\xAA\xAF\x06\x12\xAD\x03\x10\xAC\xFF\xA7\x50\x12\x3E\xA8\xC9\x8D\x37\x72\xA9\xA8\xDF\xAA\xB1\x2F\x1E\x8C\x0E\xB3\x10\xCF\xAD\xAD\x2D\xB2\xB0\xE3\x75\xB1\x8F\xA2\x42",
			"\xED\xA6\xB3\x09\x15\x7E\x31\xB2\x10\xF3\xA8\xB0\x01\x16\xAF\x02\x16\xAE\x25\xB9\x4A\x04\xB6\x10\x14\xB9\x5E\xE5\x8D\xB1\x0F\x3B\xB4\x2E\xBA\x10\xD5\x8E\xB4\xC1\x1C\xAF\x47\x50\xB5\x3C\xB6\x10\xD9\x8F\xB3\x01\x11\xB1\x51\x58\xB5\x0B\xB5\x5E\xED\x78\xB3\x0A\x19\xB1\xD2\x5C\x7D\x76\x9F\x12\x22\x14\xB6\x09\x16\xB4\x67\xB6\x10\x1C\xB9\xB5\x03\x10\x7F\x5C\xB0\x00\x49\xB9\xA8\xCA\x83\x10\x0D\xB7\x5E\xF2\x75\xB7\xEA\x19\xB7\x72\xB2\x10\xF4\x82\xB4\xAD\x2B\xB7\x84\xB0\xB3\x7A\xBE\x5F\xED\x84\xB5\xA7\x38\xB8\x81\xB1\x10\xF8\x75\xB7\x60\xBD\xAC\x01\x13\x35\x06\x13\xB6\xE9\x5A\x7F\x8C\xBE\x24\x4D\xBF\xB8\x00\x00\x3A\x6C\xB0\xB7\x23\x23\xB5\x02\x1E\xB3\xE7\x51\x93\x9B\xB7\x1E\xA4\xB1\xB6\x2C\x5E\x93\xA9\xBF\x7D\x23\x2B\xB5\x03\x16\xBA\xE5\x55\x93\x84\xBA\x34\xB2\xBE\xB9\x03\x9F\xBA\x06\x1E\xB8\x20\xB3\x10\x98\xB1\xB5\x04\x8D\x37\x96\xB9\xA8\xC1\xBE\xB9\x0D\x95\xB7\xB4\xBC\xBA\x00\x07\xBC\xCC\xBF\x12\x48\x95\xB7\xAB\xB6\x1B\xEC\x78\xB2\x09\x13\x95\x75\xBB\xB6\x6D\xA6\x10\xDA\xB3\x10\x91\xB7\x5E\x17\x9C\xBB\xAC\x2D\xB7\xC2",
			"\xB6\x10\x1C\x92\xBE\x82\xB3\x22\x83\xB1\x10\x74\xB7\x5E\x21\x98\xBE\x58\x2B\xBE\x12\xB7\x5E\x26\x90\xBF\x00\x0B\xB8\x84\xB8\xBF\xEC\xBE\x5F\x15\x8E\xB7\xFD\x1A\xBF\xF3\xB5\x5E\x17\x85\xB7\xDF\xB4\xB8\x05\xCF\xBC\x0A\x19\x81\x75\xBA\xB9\x06\xC6\xBD\x06\x1B\x81\xA1\xB3\x10\xA0\xB5\xA4\x07\xC1\xC0\x2C\x50\x9A\x75\xBE\xBA\x6F\xBE\xBD\x0E\xC3\x10\xAA\x95\xB7\x08\x9F\xA5\x06\x1C\xC0\x01\x1D\xBF\xE7\x5E\x96\xF6\xBA\x1E\x24\xC0\x00\x03\xC7\x5E\x66\x9E\xBF\xB3\x1B\xC2\x0A\xC7\x5E\x75\x90\xC3\xB5\x1B\xC2\x10\xC9\x5E\x6A\x96\xC3\xAD\x1B\xC2\x49\x84\x9A\x74\x4B\xC2\x17\x40\x5F\xAF\x99\xC2\xFD\x1B\xC2\x21\x40\x5F\xB4\x9C\xC3\xB1\x1B\xC2\x64\x0E\x5F\xBE\x9C\xC4\xC1\x18\xBA\x9E\xBC\x98\xF6\xB8\xBD\x89\xA4\xC5\x08\xC2\x83\x7D\x31\xBE\x84\xBA\xC1\x5B\xC6\x10\x35\x85\xB7\xE7\xBF\xC5\x1D\xC2\x10\x9B\x96\xBF\xEF\xB4\xB8\xB6\xB1\xC6\x03\x19\x9B\xB7\xBD\x1F\xF5\xB4\xB8\xBB\xB2\x10\x13\xC7\x5E\x46\x8C\xA2\xFC\x21\xC2\x9E\xB9\xC4\x75\xB6\xC2\x84\xB9\xBC\x12\xCE\x5F\x4F\xCD\x9F\x2D\x31\xBD\xE5\xB3\x10\xE7\x95\xB7\x2D\xC4\xB8\x88\xCE",
			"\xB9\xC7\x95\xB7\x33\xC4\xB8\x58\xCE\xB9\xD1\x95\xB7\x39\xC9\xA8\x95\xCE\xC6\x02\x11\x9E\x75\xB8\xC1\x89\xAE\xC5\x9C\xC1\x10\xD6\x95\xB7\x1F\xC9\xA8\x65\xC1\x10\x77\xC5\x5E\xDB\x96\xC8\x4D\x3B\xC6\xA3\xC0\x00\x6F\x0D\x37\x28\xC4\xB8\x73\xCA\xCA\xFE\x50\x07\x15\xA2\x2E\x80\xC1\xCB\x73\x0D\x37\x2F\xC9\xA8\xBD\xC6\xC1\x46\x1E\x45\x11\xC2\x10\x35\xC2\xCC\x67\xC1\x10\x75\x0D\x37\x3B\xC9\xA8\x8D\xC1\xCB\x76\x0D\x37\xA5\x94\xB8\xD1\xC4\xCC\x2F\x15\x46\xC7\xC1\x10\x45\xC6\xCD\xCB\xC0\x00\x6B\x4B\xCD\x00\x0B\xC4\x89\xA3\xC9\xB1\xC1\x47\xE2\xC1\xC5\xE5\xCF\xCD\x73\x42\xCE\x56\xC4\xB8\xE6\xC8\xCD\x0A\x1D\x47\xE2\xC1\x99\x89\xA9\xC9\x9E\xBF\x47\xE2\xC3\xC6\xF7\xCF\xCD\x89\x42\xCE\x69\xC4\xB8\xF8\xC1\xCB\x7E\x0D\x37\x70\xCF\xBB\x02\x10\xCA\x9E\xB0\x49\xE2\xC6\x84\x47\x57\xCA\x9E\xB0\x08\x7D\x3F\xC3\x89\xA5\xCB\xB1\xC7\x49\xE2\xC3\xC4\x27\x91\xCC\x76\xCE\x5F\x9D\x4E\xCA\x3A\x39\xCC\x9E\xBF\x4A\xE2\xCE\xC7\x89\xAF\xCC\x1D\xD0\x5F\x5D\x7B\xBD\x2C\x45\xCD\xB1\xC1\x4C\xE2\xC5\xC8\x27\x9E\xD2\xF2\xC9\x10\x8A\x0D\x37\x29\x47\x92",
			"\xDD\xC1\xCB\xC7\x42\xCE\x66\x03\x22\x3B\xD5\xD3\x06\x1C\x08\x7D\x3B\xC8\x89\xA4\xCE\x9E\xBD\x4C\xE2\xC1\xC9\x89\xAA\xCE\x9E\xBE\x08\x7D\x37\xC9\x89\xAF\xCE\xB1\xC3\x4D\xE2\xCE\xC9\x89\xA6\xCF\x29\xD9\x5E\x90\x0B\xCB\xFC\x2C\xCF\x9E\xBD\x4D\xE2\xC5\xCA\x89\xA1\xD0\xB8\xC0\x5F\xDF\x40\xD2\x2C\x47\xD0\x42\xD3\x10\xE5\x42\xCE\xAD\xC7\x92\x6C\xD0\xA7\x01\x17\x4E\xE2\xCC\x9C\xCE\x26\x84\x74\xD0\x00\xE9\x42\xCE\x50\x49\xD7\xDF\xCA\x09\x7D\x33\xCB\xCE\x24\xD1\x9E\xBB\x09\x7D\x3A\xCB\x85\xDF\xCD\x9C\x0D\x37\x57\x4E\x2C\x1A\xD9\xC8\xEB\x4D\x37\x72\x03\x22\x91\xDE\xB9\x9E\x0D\x37\xBF\xCE\x2C\x26\xDE\xB9\x9F\x0D\x37\xC6\xC7\x92\x9D\xD1\xCB\xA0\x0D\x37\xCD\xCE\x2C\x32\xD2\xD9\x01\x14\x4F\xE2\xC3\xCD\xA8\xDF\xCD\xF9\x42\xCE\xDA\xC7\x92\x39\xDC\x62\x2F\x1E\x4F\xE2\xC1\xCE\xB4\xDA\x10\xB6\xA5\x5E\x04\x52\xCE\xE8\xCB\xDB\x09\x1F\xA7\x46\x1A\x50\xE2\xCD\xCE\xC2\xDA\xB4\xFE\x5F\x50\xE2\xC4\xCF\xC9\xD0\xBC\xFE\x54\x51\xE2\xCA\xCF\xCF\xD2\x10\x15\xCF\x12\xEB\x92\xCE\xFF\xC5\xDD\x25\xCE\x5F\xA9\x0D\x37\x05\xDE\x2C\xB5\xD2\x10\xD7",
			"\xCF\x12\xAA\x0D\x37\x0C\xDC\xDD\x00\x01\xCF\x2F\x1B\x0A\x7D\x32\xD1\xE2\xDA\x10\x03\xD6\x14\xAC\x0D\x37\x18\xDA\xDE\x86\xDC\x52\xAD\x0D\x37\x1F\xDA\xDE\x97\xDC\x52\xAE\x0D\x37\xA3\x41\xDF\x09\x13\xDA\x46\x1F\x0A\xA4\x43\x22\xE3\xD1\x10\xA9\xD5\x5E\xB0\x0D\x37\x24\xD7\x92\x46\xD2\x10\x3F\xD0\x5F\xB1\x04\x47\x4C\xD4\xE1\xFE\x52\x0B\x74\x42\xD5\x1A\xE0\x5F\xB3\x04\x47\x58\xDF\xE1\xE9\x54\x0B\x74\x44\xD6\x24\xE7\x5E\xB5\x04\x47\x71\xD3\x10\x15\xE9\x5E\xB6\x04\x47\x78\xD6\x10\x2F\xE7\x5E\xB7\x04\x47\x7F\xD7\x8C\xAD\x8F\x54\xFC\x84\xB9\xF7\x1F\x9E\xFF\x02\x9F\x8F\x9F\x12\x42\xED\x98\xF8\x92\x17\xBA\x87\x62\xE9\x5B\xD7\x6D\xDA\xDA\x2B\xA2\x17\x7A\xC4\x13\x83\x66\x14\x53\xEF\x12\x55\xE3\x62\x46\x1B\x75\x38\x1A\xE5\x4D\x7C\x8F\xB4\x66\x14\x9A\x58\x65\x40\x17\x9F\x2F\x14\xE6\xD2\x6A\x18\x36\x7B\x84\x04\xAC\x8F\xE8\x62\x13\x6D\xE7\x6B\xFE\x52\xA0\x03\x13\x8E\x5A\x14\xE7\x40\x13\x8E\x46\x18\xE7\x2F\x1B\xA8\x5A\x1C\xE7\x40\x1B\xA8\x46\x10\xE8\x2F\x17\x7A\x5A\x14\xE8\x40\x17\xA3\x36\xAC\x8F\x88\xE0\x6B\xFC\x8A\x76\x5A\x1E",
			"\xE8\x40\x1A\x76\x46\x12\xE9\x2F\x14\xE9\x4B\x5C\x8F\x26\xAA\x15\x99\xE0\x14\x26\xA6\x14\x9D\xEF\x12\x9F\xEC\xA4\xCD\x92\x17\x3C\xAF\x54\x3C\xA6\x14\xAE\xA9\xA2\xFC\x87\xEA\xAA\xEF\x98\xA9\xE5\xA3\x69\xBC\xA3\x53\xEC\xA3\xEE\x54\xEB\xAD\xEC\xD2\x03\x12\xEB\xB7\xE9\x5E\xAF\xE9\x85\xB1\xE8\xE5\x3C\xAF\xE5\x3C\xA7\x9F\xC1\xEB\xEB\x24\x56\xEC\x3A\x60\x00\xC3\xE8\xEC\x00\x02\xEC\x8F\x5A\xEC\x67\xEE\xEB\xD7\x6C\xEC\x4B\x8C\xA3\xD5\xEA\x10\x0E\x7C\xA3\xD9\xE1\xED\x5D\x89\x10\xDB\xE9\x10\xCE\xEC\x5D\xD0\xED\x6C\xB0\xE3\xED\xBC\xD2\x17\xBD\xD3\x53\xE9\xE0\x00\x4B\x8B\xEE\x46\x1B\xEE\xEE\x5B\xEE\xF7\x9B\xEE\x53\xEB\xEE\x5F\xEB\xEE\x42\x60",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"Plus",
			L"EqualOptional",
			L"PositiveOptional",
			L"NegativeOptional",
			L"NO1",
			L"PositiveNO1",
			L"NegativeNO1",
			L"NO2",
			L"PositiveNO2",
			L"NegativeNO2",
			L"NestedOptional",
			L"NestedPositiveOptional",
			L"NestedNegativeOptional",
			L"BranchedOptional",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][Plus] BEGIN ",
			L"[1][Plus] END [ENDING]",
			L"[2][Plus]< \"+\" @ >",
			L"[3][EqualOptional] BEGIN ",
			L"[4][EqualOptional] END [ENDING]",
			L"[5][EqualOptional]< \"optional\" @ [ Plus ] \"+\" { Plus } >",
			L"[6][EqualOptional]< \"optional\" [ Plus @ ] \"+\" { Plus } >",
			L"[7][EqualOptional]< \"optional\" [ Plus ] \"+\" @ { Plus } >",
			L"[8][EqualOptional]< \"optional\" [ Plus ] \"+\" { Plus @ } >",
			L"[9][PositiveOptional] BEGIN ",
			L"[10][PositiveOptional] END [ENDING]",
			L"[11][PositiveOptional]< \"positive_optional\" +[ Plus @ ] \"+\" { Plus } >",
			L"[12][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" @ { Plus } >",
			L"[13][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" { Plus @ } >",
			L"[14][PositiveOptional]< \"positive_optional\" @ +[ Plus ] \"+\" { Plus } >",
			L"[15][NegativeOptional] BEGIN ",
			L"[16][NegativeOptional] END [ENDING]",
			L"[17][NegativeOptional]< \"negative_optional\" -[ Plus @ ] \"+\" { Plus } >",
			L"[18][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" @ { Plus } >",
			L"[19][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" { Plus @ } >",
			L"[20][NegativeOptional]< \"negative_optional\" @ -[ Plus ] \"+\" { Plus } >",
			L"[21][NO1] BEGIN ",
			L"[22][NO1] END [ENDING]",
			L"[23][NO1][ Plus @ ] Plus",
			L"[24][NO1][ Plus ] Plus @",
			L"[25][PositiveNO1] BEGIN ",
			L"[26][PositiveNO1] END [ENDING]",
			L"[27][PositiveNO1]+[ Plus @ ] Plus",
			L"[28][PositiveNO1]+[ Plus ] Plus @",
			L"[29][NegativeNO1] BEGIN ",
			L"[30][NegativeNO1] END [ENDING]",
			L"[31][NegativeNO1]-[ Plus @ ] Plus",
			L"[32][NegativeNO1]-[ Plus ] Plus @",
			L"[33][NO2] BEGIN ",
			L"[34][NO2] END [ENDING]",
			L"[35][NO2][ NO1 @ ] Plus",
			L"[36][NO2][ NO1 ] Plus @",
			L"[37][PositiveNO2] BEGIN ",
			L"[38][PositiveNO2] END [ENDING]",
			L"[39][PositiveNO2]+[ PositiveNO1 @ ] Plus",
			L"[40][PositiveNO2]+[ PositiveNO1 ] Plus @",
			L"[41][NegativeNO2] BEGIN ",
			L"[42][NegativeNO2] END [ENDING]",
			L"[43][NegativeNO2]-[ NegativeNO1 @ ] Plus",
			L"[44][NegativeNO2]-[ NegativeNO1 ] Plus @",
			L"[45][NestedOptional] BEGIN ",
			L"[46][NestedOptional] END [ENDING]",
			L"[47][NestedOptional]< \"nested_optional\" @ [ NO2 ] Plus { Plus } >",
			L"[48][NestedOptional]< \"nested_optional\" [ NO2 @ ] Plus { Plus } >",
			L"[49][NestedOptional]< \"nested_optional\" [ NO2 ] Plus @ { Plus } >",
			L"[50][NestedOptional]< \"nested_optional\" [ NO2 ] Plus { Plus @ } >",
			L"[51][NestedPositiveOptional] BEGIN ",
			L"[52][NestedPositiveOptional] END [ENDING]",
			L"[53][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 @ ] Plus { Plus } >",
			L"[54][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus @ { Plus } >",
			L"[55][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus { Plus @ } >",
			L"[56][NestedPositiveOptional]< \"nested_positive_optional\" @ +[ PositiveNO2 ] Plus { Plus } >",
			L"[57][NestedNegativeOptional] BEGIN ",
			L"[58][NestedNegativeOptional] END [ENDING]",
			L"[59][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 @ ] Plus { Plus } >",
			L"[60][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus @ { Plus } >",
			L"[61][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus { Plus @ } >",
			L"[62][NestedNegativeOptional]< \"nested_negative_optional\" @ -[ NegativeNO2 ] Plus { Plus } >",
			L"[63][BranchedOptional] BEGIN ",
			L"[64][BranchedOptional] END [ENDING]",
			L"[65][BranchedOptional]< \"branched_optional\" +[ Plus @ ] +[ Plus ] Plus >",
			L"[66][BranchedOptional]< \"branched_optional\" +[ Plus @ ] -[ Plus ] Plus >",
			L"[67][BranchedOptional]< \"branched_optional\" +[ Plus ] +[ Plus @ ] Plus >",
			L"[68][BranchedOptional]< \"branched_optional\" +[ Plus ] +[ Plus ] Plus @ >",
			L"[69][BranchedOptional]< \"branched_optional\" +[ Plus ] -[ Plus @ ] Plus >",
			L"[70][BranchedOptional]< \"branched_optional\" +[ Plus ] -[ Plus ] Plus @ >",
			L"[71][BranchedOptional]< \"branched_optional\" -[ Plus @ ] +[ Plus ] Plus >",
			L"[72][BranchedOptional]< \"branched_optional\" -[ Plus @ ] -[ Plus ] Plus >",
			L"[73][BranchedOptional]< \"branched_optional\" -[ Plus ] +[ Plus @ ] Plus >",
			L"[74][BranchedOptional]< \"branched_optional\" -[ Plus ] +[ Plus ] Plus @ >",
			L"[75][BranchedOptional]< \"branched_optional\" -[ Plus ] -[ Plus @ ] Plus >",
			L"[76][BranchedOptional]< \"branched_optional\" -[ Plus ] -[ Plus ] Plus @ >",
			L"[77][BranchedOptional]< \"branched_optional\" @ +[ Plus ] +[ Plus ] Plus >",
			L"[78][BranchedOptional]< \"branched_optional\" @ +[ Plus ] -[ Plus ] Plus >",
			L"[79][BranchedOptional]< \"branched_optional\" @ -[ Plus ] +[ Plus ] Plus >",
			L"[80][BranchedOptional]< \"branched_optional\" @ -[ Plus ] -[ Plus ] Plus >",
			L"[81][BranchedOptional]< \"branched_optional_2\" +[ Plus @ ] Plus +[ Plus ] Plus >",
			L"[82][BranchedOptional]< \"branched_optional_2\" +[ Plus @ ] Plus -[ Plus ] Plus >",
			L"[83][BranchedOptional]< \"branched_optional_2\" +[ Plus ] Plus +[ Plus @ ] Plus >",
			L"[84][BranchedOptional]< \"branched_optional_2\" +[ Plus ] Plus +[ Plus ] Plus @ >",
			L"[85][BranchedOptional]< \"branched_optional_2\" +[ Plus ] Plus -[ Plus @ ] Plus >",
			L"[86][BranchedOptional]< \"branched_optional_2\" +[ Plus ] Plus -[ Plus ] Plus @ >",
			L"[87][BranchedOptional]< \"branched_optional_2\" +[ Plus ] Plus @ +[ Plus ] Plus >",
			L"[88][BranchedOptional]< \"branched_optional_2\" +[ Plus ] Plus @ -[ Plus ] Plus >",
			L"[89][BranchedOptional]< \"branched_optional_2\" -[ Plus @ ] Plus +[ Plus ] Plus >",
			L"[90][BranchedOptional]< \"branched_optional_2\" -[ Plus @ ] Plus -[ Plus ] Plus >",
			L"[91][BranchedOptional]< \"branched_optional_2\" -[ Plus ] Plus +[ Plus @ ] Plus >",
			L"[92][BranchedOptional]< \"branched_optional_2\" -[ Plus ] Plus +[ Plus ] Plus @ >",
			L"[93][BranchedOptional]< \"branched_optional_2\" -[ Plus ] Plus -[ Plus @ ] Plus >",
			L"[94][BranchedOptional]< \"branched_optional_2\" -[ Plus ] Plus -[ Plus ] Plus @ >",
			L"[95][BranchedOptional]< \"branched_optional_2\" -[ Plus ] Plus @ +[ Plus ] Plus >",
			L"[96][BranchedOptional]< \"branched_optional_2\" -[ Plus ] Plus @ -[ Plus ] Plus >",
			L"[97][BranchedOptional]< \"branched_optional_2\" @ +[ Plus ] Plus +[ Plus ] Plus >",
			L"[98][BranchedOptional]< \"branched_optional_2\" @ +[ Plus ] Plus -[ Plus ] Plus >",
			L"[99][BranchedOptional]< \"branched_optional_2\" @ -[ Plus ] Plus +[ Plus ] Plus >",
			L"[100][BranchedOptional]< \"branched_optional_2\" @ -[ Plus ] Plus -[ Plus ] Plus >",
			L"[101][Module] BEGIN ",
			L"[102][Module] END [ENDING]",
			L"[103][Module]<< !BranchedOptional @ >>",
			L"[104][Module]<< !EqualOptional @ >>",
			L"[105][Module]<< !NegativeOptional @ >>",
			L"[106][Module]<< !NestedNegativeOptional @ >>",
			L"[107][Module]<< !NestedOptional @ >>",
			L"[108][Module]<< !NestedPositiveOptional @ >>",
			L"[109][Module]<< !PositiveOptional @ >>",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<FeatureTestTokens, ModuleParserStates, FeatureTestAstInsReceiver, ModuleParserStateTypes>(&FeatureTestTokenDeleter, &FeatureTestLexerData, &FeatureTestModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2)
	{
		static vl::vint32_t results[6][6] = {
			{0, 1, 1, 1, 1, -1, },
			{1, 1, 1, 1, 1, -1, },
			{1, 1, 2, 1, 1, -1, },
			{1, 1, 1, 3, 1, -1, },
			{1, 1, 1, 1, 4, -1, },
			{-1, -1, -1, -1, -1, 5, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<featuretest::Feature> ModuleParser::ParseModule(const vl::WString & input, vl::vint codeIndex)
	{
		 return Parse<ModuleParserStates::Module>(input, this, codeIndex);
	};
}
