/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "FeatureTestModuleParser.h"

namespace featuretest
{
	void FeatureTestModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 4028; // 35802 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 188;
		static const vl::vint dataSolidRows = 15;
		static const vl::vint dataRows = 16;
		static const char* compressed[] = {
			"\xDA\x8B\x00\x00\xB4\x0F\x00\x00\x09\x00\x01\x82\x80\x0F\x03\x82\x81\x82\x06\x89\x82\x83\x0A\x80\x81\x84\x84\x06\x95\x0A\x99\x0A\x85\x0E\x85\x10\x0A\xA5\x0A\x89\x1A\x85\x16\x85\x19\x0A\xB9\x0A\x9F\x1A\x81\x2A\x84\x6F\x0C\x86\xBF\x6B\x9C\x93\x96\x84\x00\x2D\xAD\xAF\x91\x9C\x93\x98\x9B\x7F\x36\xB4\xB9\x91\x9B\x9A\x9A\x85\x9B\x38\xBF\xB7\x8F\x9F\x91\x02\xA0\x9D\x47\xBC\x89\xBE\x99\x80\xA1\x9F\x9A\x4B\xD0\x8D\xA3\xA1\xAE\x95\xAB\xA0\x53\xC8\x99\xAA\xAB\xAC\xA6\x82\xA3\x09\xE0\xAA\x94\xAD\xAA\xAB\xB0\xAD\x67\xDC\xA9\xBE\xA3\x86\xA7\xAB\xA7\x56\xE5\xB1\xAB\xB6\xB5\xB4\xB2\xBA\x73\x83\x82\x0A\x82\xB6\xB8\xB4\xBF\x6A\x80\xEC\xA2\x8E\xB2\xB8\xAC\xBC\x87\x82\xF5\xA4\xC7\xBA\xC5\xBC\xC6\x7F\x90\xC1\xD2\xC3\xC1\x81\xC2\xC4\x70\x89\xD4\xCB\xC6\xCD\xC7\xCD\xC7\x9D\x91\xE1\xD3\xC3\xD5\xC8\x98\xCF\xA5\x9C\xE7\xC2\xDB\xD4\xD1\xD6\xD3\x97\x8E\xDA\xC1\x89\x96\x83\xBC\xC3\x99\xB9\xEF\xBB\xD8\xDC\xDC\xCC\xDF\xB2\xAF\x85\x1C\xB0\xE2\x82\x02\xE2\xBD\xC9\xFF\xCA\xE1\xE5\xE1\xD4\xD0\xAF\xAA\xC7\x08\xEB\xE6\x80\x04\xEA\xCD\xCC\xDF\xD3",
			"\xD1\xE8\xE9\xD9\xED\xBA\xDA\xC1\x8E\x8F\xAE\xE5\xEE\xEE\xDF\xCF\xDC\xEA\x08\xE8\xF2\xF3\xF4\xE7\xE1\xD5\xF9\xE3\xFE\xF6\xF1\xF8\xEF\xA8\xF8\xF7\xF0\xFD\xFE\xFC\xFF\xAC\x40\x8E\x6A\x80\xB0\x7F\x76\x80\x6B\x0B\x2D\x7A\x7B\x4B\x0C\x0A\x8B\x7D\x7D\x0B\xB9\x71\x83\x81\x03\xBA\x7D\x02\x83\xF0\x4E\x08\x84\x85\x05\x93\x8E\x85\x85\x1F\x9D\x8E\x68\x44\x03\x7D\x56\x7C\x84\x0F\xB4\x7A\x8B\x89\x2B\x91\x8C\x7E\x7E\x10\x0A\x47\x6C\x8A\x04\xAA\x65\x8C\x74\x12\x1B\x81\x8A\x8D\x1C\xBC\x8B\x8E\x77\x3D\x80\x9F\x8C\x7A\x41\x84\x93\x92\x7C\x2D\xA9\x8C\x8B\x92\x2E\xB4\x85\x90\x92\x4C\x8A\x91\x43\x04\x3A\xAE\x64\x05\x95\x22\x99\x9E\x8C\x88\x5C\x9A\x92\x92\x6B\x12\x61\x56\x7A\x05\x58\x9B\x9E\x96\x91\x5D\xA6\x9A\x9B\x97\xA6\x57\x05\x98\x9B\x6B\xA8\x97\x98\x94\x4D\x89\x97\x8C\x77\x18\x32\x82\x85\x9A\x70\xBD\x92\x9D\x9C\x74\x92\x92\xA2\x06\x7A\xAF\x87\x93\x9E\x73\x88\xA0\xA2\xA2\x7E\x81\xA7\x9E\xA3\x4F\x8C\xAF\x9C\x74\x1C\x2F\x9C\x76\x45\x62\x86\xAC\x9F\xA4\x9C\x90\xA7\xA2\xA6\x89\xA0\xAB\xA2\xA8\x8D\x92\xAF\x4A\x07\x85\x8E\x9F\xA6\xAA",
			"\x9B\x9E\xAD\xAA\xA9\xB0\xA4\xAD\xA5\xAC\xAC\xA1\xA6\x40\x08\x96\xAF\x48\x45\xA6\xB5\xA3\xAD\xAD\xA9\xB2\xAE\xA6\xAE\x9D\x91\x81\xB4\xAD\x92\x22\x29\xA4\xB3\xAA\xCB\xAF\xA6\xB3\xB3\xBF\xB3\xA0\xB5\xB3\xC3\x91\x9F\xA2\x42\x24\x39\xA9\x46\xB6\xD3\x96\xB5\xB1\xB4\xC2\xBE\xA4\xB6\xB8\xDE\x8C\xB5\xBA\x6B\x26\x0A\x45\x6F\xB8\xC0\xA0\xB7\xB3\xB9\xD5\xB5\x90\xBC\xB9\xF2\xB5\xB2\xA3\xB5\xDD\x81\x4C\x44\xAF\x49\xAA\x0C\xB6\xBB\xF9\xB7\xBF\xB4\xBB\xD2\x80\xC6\xC0\xC1\xE1\x90\x7B\x0A\xBA\xEF\xB6\xB8\xBF\xC1\xF3\xAD\xB8\xC1\xC3\x02\xE6\xBE\xC3\xC0\x51\xAE\x0F\xBF\x40\x2F\x1B\xC1\xC5\xC1\x13\xC1\xCF\xC1\xC8\x10\xD7\xC6\xC5\xC5\xAE\x70\x0C\xC2\xC8\x18\xE6\xCE\xB1\xC9\x28\xF1\xB1\xCC\xBD\x33\xD2\xCF\xC5\xA0\x20\x7C\xB1\x94\x0D\x1E\xEE\xC2\xCF\xC8\x37\xD4\xC0\xD2\xCF\x34\xF5\x0D\xCD\xCD\x20\xC1\xDC\xCB\xC9\x43\xC8\xD9\xC1\xD2\x44\xF6\xC1\xD4\xD4\x4E\xCA\x46\x0E\x42\x04\x02\xDD\xC9\xD5\x4B\xEF\xC3\x42\x0E\x47\xFB\x07\xD1\xD3\x64\xDB\xD0\x7C\x0F\x47\xFD\x03\xDA\xD9\x6C\xCC\xDA\x7E\x0F\x6B\xEE\xD2\xDE\xD7\x02\x64\x4A\xCF\xD4\x4F",
			"\xF9\xDA\xD7\xDC\x3F\xED\xD4\xDC\xDE\x7B\xFF\xDC\xD6\x41\x40\x07\xD1\x11\xDC\x82\xE5\xDC\xDE\x6A\x42\x07\xD3\x10\xE2\x7D\xCB\xE2\xD6\xA0\x44\x10\xE4\xCE\xE2\x89\xFE\xD6\x69\x11\x58\xC1\xE1\xE5\xE6\x27\xC9\x16\xE7\xE4\x98\xDF\xE6\xEB\xE5\x9A\xE8\xE2\xE4\xD5\xA5\xF4\xCA\x13\xD1\x4B\x23\xEC\xE9\xEA\xA4\xFA\x7C\x13\xD1\x4D\x32\xEA\xDD\xD7\x32\xCE\x1A\xEE\xE7\xAA\xE0\xE2\xE3\x13\x9D\xFC\xE1\xF3\xE9\xB5\xEC\x63\x15\xF1\x30\xED\xE9\xF2\xF0\xC8\xF3\xEB\xEB\xEE\xCD\xF4\xEC\x77\x15\xCA\x8A\xD5\xF7\xF4\xC0\xD0\x79\x15\xF6\x80\xC6\xFF\xF1\xF4\x81\x9B\x17\xD0\x17\xBF\xE2\xF2\xF4\xF4\xC7\xED\xF3\xFA\xFB\xEB\xE6\x6D\x17\xD1\x5E\x29\xFB\xF4\xFB\xEF\xF9\xF1\xFC\xFC\xD4\xE4\xC3\x43\x17\xE0\x63\x72\xFF\x5A\x73\x81\xF0\x46\x21\x0C\x01\x8E\x7B\xFE\x7A\x7D\x7F\x28\x63\x0F\x68\x64\x16\x7D\x01\x82\x84\x81\x0A\x86\x83\x82\x0A\x8D\x81\x40\x65\x07\x68\x33\x12\x86\x82\x14\x97\x80\x08\x99\x8D\x7B\x05\x94\x6F\x0C\x2B\x77\x7C\xF9\x25\x8A\x82\x00\x2A\x09\x85\x18\x96\x79\x0B\xA4\x89\x21\x36\x30\x83\x84\x32\x8C\x84\xC5\x70\x07\x86\x11\xB6\x5B",
			"\x0E\x0E\x54\x0E\x83\x75\x0E\x40\x3B\x0E\x47\x0E\x0E\x58\x0E\x83\x79\x0C\x79\x18\x9C\x7A\x7D\x33\x99\x85\x42\x7D\x0F\x82\x1F\xA1\x87\x8A\x4D\x7E\x0D\x15\xD8\x82\x8A\x15\xAA\x37\x0F\x5B\x94\x86\x17\x8C\x8A\x20\x40\x21\x8D\x8B\x4E\x98\x7C\x77\x01\x17\x8D\x27\xA3\x8E\x84\x2F\x22\x11\x1B\xEA\x81\x8A\x37\x83\x23\x10\x73\x8B\x84\x14\x94\x6F\x19\x00\x83\x3E\x30\x7F\x88\x30\x50\x33\x43\x21\xAC\x46\x34\x90\x02\x21\x92\x6C\x26\x44\x29\xF3\x13\x39\x21\x09\x40\x93\x55\x03\x9A\x20\x45\x9B\x3C\x91\x44\x20\x2B\x23\x86\x21\x92\xC4\x16\x92\x3D\x94\x89\x23\x27\xE7\x38\x91\x80\x06\x90\x31\x98\x98\x92\x26\x8A\x2D\x92\xD9\x23\x90\x28\xA1\x86\x23\x2B\xB7\x29\x95\xAB\x1B\x93\x20\xAD\x9B\x3B\x2C\xB0\x91\x27\x52\x80\x03\x97\xBD\x95\x93\x55\x3E\x97\x95\x45\x89\x87\x26\xB7\x82\x21\x2E\xEA\x30\x98\x5E\xAB\x26\x97\xCD\x8C\x24\x26\xBE\x9B\x94\x48\x97\x29\x9A\xBC\x90\x9B\x30\xC2\x97\x90\x6E\x88\x32\x9B\xDD\x82\x97\x36\xE2\x91\x9C\x59\xA3\x9E\x9C\xE5\x83\x20\x36\xFF\x10\x9D\x6F\x9E\x9A\x36\xED\x90\x9F\x3B\xDB\x31\x9E\x7A\xB3\x9A\x3D\xF5\x98",
			"\x9F\x3D\xA4\x9B\x9F\x58\xAA\x9F\x9C\xFF\x89\x9D\x22\x80\xA3\xA0\x81\x81\x23\x9D\xBE\x8B\x5E\x3D\xE4\x9E\x9C\x86\xB2\x9E\xA1\x0B\xA8\x9D\x43\x92\xAE\x95\x49\xB7\x21\x9F\xE7\x2B\x9E\x3F\x85\xA3\xA3\x81\x0A\xA2\x9F\x10\xAC\x9A\x45\xB4\x28\xA2\xA0\x1A\xA7\xA2\xFD\x88\xA5\x48\xFC\x9B\xA5\x8D\x87\xA4\xA0\x2F\xA6\xA0\x00\x1F\xAC\xA4\x8A\xBA\x93\xA4\xC1\x8D\xA7\x4D\x27\xA4\xA5\x94\xBD\xA2\xA7\x3F\xB6\xA4\x48\xC2\xA5\xA7\x80\x9D\xA5\x91\x45\xA8\xAA\x4B\x99\x9A\xA4\xA4\x83\xAE\xA8\x0F\xA4\xAB\x52\x88\xAE\xA7\x9C\x92\xAC\x96\x4E\xBB\x39\x32\x81\x24\x9B\x9D\xB8\xA5\x25\x25\xB8\xAB\xDD\x0E\x97\x98\x9A\x3C\xA6\xAA\x50\xB1\xA1\x5A\xCF\xAC\xA3\xA8\xAB\xA9\xA9\x31\xA8\x95\x59\xB1\x2B\xAA\x00\x1D\xAE\xAC\x5F\xAC\x25\x58\xB4\x28\x92\x9A\x95\x9E\x36\xD7\x99\xAF\x33\xD5\xA0\xAC\xC2\xBA\xAE\xB0\x83\xA0\xA8\x5A\xED\xAA\xAC\xC6\xAC\xA9\xAE\x6E\xAE\xB0\x5C\xBF\x90\xA6\xCA\xB2\xA4\xAA\x8A\xA5\xB1\x42\x45\x9D\xB0\x53\x95\xB4\xB3\x8F\xB3\xA5\x65\xFE\xAD\xA8\x8F\x95\xB1\x33\xBE\x88\xB5\x56\xA1\xB9\x33\xB3\xAD\x26\xB5\x2C\x30\xB7\x4A\x32",
			"\xBF\x1E\xDA\xB6\xB2\xB0\xFF\x15\xAC\x7B\x06\x35\xAE\xF2\x32\x35\xB7\xB6\x8D\x21\x70\x89\x2E\xB6\xAD\x8A\x23\xB7\x88\x20\xB8\x6F\xC2\xBB\xB9\x84\x08\xBF\xB7\x4D\x86\xB9\x66\xAC\x25\xAF\x75\xB5\xA8\xB4\x64\xB3\xBB\x4A\x55\xB3\xB8\x83\x18\xBF\xAF\x6F\xA0\xBE\x64\xE2\xB1\x21\xE3\x0D\xBE\x20\xE6\xA9\xBA\x42\x69\xB0\xBB\x84\x2C\xBA\xBA\xE8\xBD\xBB\x40\x6F\xBA\x3D\xBA\xB5\xAC\xBC\x00\x17\xBC\x32\x8A\x27\x3B\xF3\x83\x25\xBF\xEA\xA9\x22\x7E\xB4\x25\xAE\x00\xED\xBE\x3A\xF2\xA2\x23\x80\xF4\xAA\x21\x05\xED\x25\xC0\x09\xC1\x22\x81\xF0\xB3\x20\x07\xD4\xBE\x52\xF4\xA7\x3C\x7E\xAA\x97\x27\x0C\xCE\x99\x26\x1E\xDF\xC0\x4B\x21\xC2\xC5\xDC\x98\xC0\xB7\x75\xBC\xC0\x4D\x24\xC2\xC4\x16\xDF\xC6\xC5\xCE\x95\xAD\x66\x29\xC7\x2A\x18\xFC\x92\xC6\x11\xC0\x02\x8A\xA0\xC8\xC5\xD5\x99\xBD\x3C\x86\x36\xC4\x2C\xB8\xCE\xBE\x81\x3B\xC5\x25\x42\xC0\x2B\x77\xA5\xCF\x1F\x25\xE5\xC6\xC9\x22\xD0\xCB\x87\xD2\xCE\x98\x2A\xFC\x96\xCA\xB0\x8F\x87\x6A\xD3\x9D\x86\x00\x18\xBB\x94\x19\xD0\xC0\x71\xC7\xBC\x94\x85\x0D\x41\x21\x17\x49\x22\x86\x0F\x2A\x21\x18",
			"\x49\x21\x02\x0A\x39\x45\x42\x54\x43\xCD\x39\xE4\xC9\x21\x57\x49\x21\x98\x06\x24\x4D\x84\x27\xCC\xCF\x0A\x29\xCE\x41\x6E\x49\x21\x3C\x49\x24\x22\x6C\xC7\xD1\x9B\x8A\x24\x51\x84\x1B\x02\x21\x95\x49\x22\x9C\x86\x21\xD2\x83\x34\xCE\x20\xC5\xA1\x21\xA5\x83\x27\xD3\x81\x0F\xBA\x20\x98\x46\x20\xAA\x09\x2F\x02\x85\x38\x51\x21\xBB\x46\x21\xB2\x09\x23\x04\x6C\x4A\x23\xCF\x03\x39\x59\x42\x7D\xC6\x21\x3F\xF1\xD2\x21\xB4\xC3\x22\xA0\x83\x2A\x23\x84\x29\x59\x21\x27\x0A\x20\x0A\x1B\x2A\x20\x43\xC6\x23\x5F\x06\x28\xD2\x41\x24\x42\x20\x64\xC3\x22\xD9\x03\x2E\xCE\x41\x7E\x59\x21\x85\x49\x24\x05\x1D\x2A\x22\xC6\x09\x2D\x63\x84\x2A\x61\x21\x31\x0A\x22\x0C\x1F\x2A\x20\x9E\x49\x26\x68\x09\x37\x69\x42\x37\x0A\x20\x1C\x21\x22\x21\x60\x69\x22\xD8\x09\x28\x6D\x84\x2A\x69\x21\x70\x69\x22\xDD\x04\x7A\x21\xC3\x49\x25\x71\x09\x2F\x71\x42\x15\x79\x20\xCE\x49\x26\x08\x0A\x27\x0A\x42\x48\x0B\xE1\x86\xC9\x24\xE1\x09\x22\x77\x6A\x99\xCF\x24\x46\x0E\x47\x25\x13\xCD\x91\x23\x17\xEC\xBE\x1F\xCE\x14\xE3\x68\xDE\xC7\x23\x20\xE6\x21\x5D\xC8\xA8\x12",
			"\x24\xF8\x96\x83\x11\x19\xE4\x81\x1D\xD0\xA9\x92\x0D\xE7\x94\x3E\xC3\x12\x99\xC0\x00\xCE\x09\x3E\x94\x25\x36\xE4\xD1\xAC\x95\x16\xE6\xC6\xCE\xAA\x25\x40\xEE\xC7\x4B\x36\xE7\xD1\x63\xB8\x12\xCD\x9B\xD2\x20\x5F\x99\x13\xE9\x3E\xDA\x12\xCD\xA5\xD9\xE6\x85\x1B\x16\xE6\xA7\xC0\xCA\x41\x1C\x18\xEA\x1F\xDD\x16\xE6\xB2\xD9\xAA\x27\x0E\x48\xBB\x56\xEB\xB0\x3E\x2F\x21\xEE\x53\x9F\x16\xE7\x61\xD5\xE9\x21\xA0\x0E\x43\x28\xC1\xD3\xAC\xB4\xC2\xDE\xC7\xA1\x16\xE4\xB6\xE3\xA2\x14\x07\x59\xC6\xDA\x80\xB7\x3F\x4B\x7B\xE9\xAB\x51\x36\xE1\xDC\xAB\xA4\x16\x83\x75\xAF\xDB\xAC\xB6\xE8\xDC\x3E\xC5\x16\xCD\xE3\xDB\xB4\x53\x13\xF6\xC7\xA7\x16\xE6\xBA\xD9\xA8\x14\x9B\xEC\xDB\xB5\xA9\x1E\xF2\x8F\xAA\x1A\xF3\x00\xAB\x16\x41\x19\xE0\x00\xBA\xDA\xE9\x49\x97\x35\xD9\xAB\xAC\x16\xE7\xBD\xD9\xAD\x14\xD9\xFE\xC6\x15\x36\xEF\xF5\x89\x0A\x2F\x14\x07\x59\xD0\x00\xF3\xC1\xF0\x8A\x2F\x22\xE0\xD6\xC2\x20\x16\x36\xE4\xE2\xF0\x83\x21\x16\x9B\xC6\xE3\xF9\x02\x32\x16\xCD\x88\xE3\xAD\x59\x09\xFE\xC7\xB4\x13\xFA\x8F\xB5\x16\xE6\x89\xC6\xF9\x20\xB6\x16\xE7",
			"\xEB\x6F\xE6\x21\x5B\x36\xE1\x76\xE4\xE3\x20\x2E\x36\xE7\x77\xB1\xB9\x12\xFC\x3E\xDA\x14\xFB\xBE\xCB\x16\x9B\xFE\xDF\xFB\x00\x1C\x16\xCD\xC5\xFB\xF7\x84\x3D\x17\xFA\xE9\x72\x10\xBE\x06\x73\x00\x78\x7F\xBF\x0E\x7C\x01\x40\x0C\xDA\x73\x56\xC1\x06\x73\x0A\x71\x80\x01\x12\x0C\xDD\x7E\x20\xC3\x00\x7F\x63\x54\x0C\x36\x70\x71\xD0\x71\x10\xC5\x07\x7E\x0E\x26\x0C\xF3\x73\x56\xC7\x0E\x20\x98\x44\x05\x3E\x68\x0C\x0E\x2E\x4B\xDF\x3B\x5A\xC9\x0E\x20\x34\x55\x05\x3E\x6A\x0C\x0E\x2F\x69\x01\x18\x3D\xAB\x5B\x0C\x0E\x2B\x4C\x00\x08\x05\x3E\x6C\x0C\x0E\x26\x6B\x02\x16\x05\x3E\x6D\x0C\x0E\x26\x72\x01\x1B\x3C\xAB\x5E\x0C\x0E\x24\x08\x3E\x69\x5A\x3E\x67\x64\x34\x3E\x4B\x98\x45\x14\x5B\x44\x53\xA3\x4F\x12\x52\x84\x31\xA3\x4E\x84\x09\x14\x53\x50\x80\x1D\x54\x8B\x52\x44\x6F\x46\x2F\x11\x66\x3E\x62\x46\x15\x61\x5D\x8D\x48\x5D\xA4\x57\x32\x75\x5C\x85\x06\x14\x63\xF7\x15\x4B\x09\x19\x7A\xD8\x58\x71\x5D\x6D\x34\xA9\x70\x87\x2A\x75\x77\xFA\x19\x85\x75\x66\x10\x6B\x69\x55\x40\x81\x10\x5F\x84\x35\x3A\x85\x88\x4C\x56\x47\x02\x1A\x88\x34\x84",
			"\x14\x46\x82\x5A\x01\x3A\x88\x7C\x82\x10\xD2\x6D\x7F\x28\x2E\x85\x81\x67\x67\x59\x58\x73\x06\x1D\x86\x82\x31\x89\x95\x81\x10\x79\x68\x7F\xF0\x18\x5D\x98\x43\x88\x7A\x1E\x63\xB0\x66\x64\xE6\x13\x4A\xA9\x86\x66\x73\x5A\x47\xCB\x6A\x10\xA5\x8E\x54\xB9\x6E\x8A\x01\x3E\x89\x03\x13\x69\x4E\x58\x86\x02\x1E\x8B\x96\x8E\x63\x3D\x76\x5A\x01\x32\x8C\x5C\x5E\x63\x8D\x66\x8A\xFA\x19\x61\x98\x4F\x72\x01\x17\x89\x48\x58\x74\x9F\x84\x31\xD0\x86\x57\x3E\x63\x6A\xCC\x8C\x1A\x72\x86\x10\xB7\x8D\x74\x3E\x64\x75\xDB\x8E\x1A\xA9\x78\x49\xDF\x81\x10\xC8\x8A\x63\x3A\x4A\x67\x01\x4F\x12\x59\x78\x89\x49\x2F\x7B\x98\x4D\x8A\xC9\x8B\x5A\xA9\x60\x8F\x51\x2F\x88\x98\x45\x8C\xE0\x8B\x5A\xAB\x63\x8E\xA6\x1A\x83\x98\x41\x74\x02\x19\x8B\x8D\x40\x8C\x01\x10\x6D\xFD\x89\x55\x66\x70\x90\xAA\x1A\x88\x98\x4A\x90\xF5\x89\x55\x6A\x7A\x8B\x28\x21\x89\x98\x44\x8D\xAB\x8B\x5A\xBD\x6E\x90\xD0\x1A\x8A\x16\x93\x10\x4C\x71\x10\xCB\x8F\x8B\x68\x40\x6A\xED\x8A\x10\xBF\x6E\x91\xDC\x1C\x6C\x86\x85\x11\x29\x90\x6C\x47\x32\x8D\x2F\x94\x6A\x31\x96\x10\x6E\x7C\x92",
			"\x2F\x1C\x8B\x21\x92\x10\xEF\x82\x10\xDA\x86\x92\x8C\x81\x10\xF7\x8B\x90\x4E\x5E\x6C\x3D\x96\x2F\xE9\x88\x49\x45\x93\x91\x4E\x54\x6D\x3A\x9A\x10\xD7\x8E\x4B\x4D\x98\x8D\xAB\x50\x78\xF8\x86\x2F\xF4\x86\x95\x06\x1D\x90\x1B\x99\x55\x84\x79\x95\x82\x2C\x8F\x35\x96\x10\x15\x91\x10\xFF\x82\x94\x74\x4B\x2D\x10\x84\x14\x1E\x1E\x87\xAC\x14\x90\x65\x9C\x6B\x37\x93\x10\xDB\x61\x95\x8A\x6D\x96\x1D\x9F\x95\x4E\x5D\x6D\x78\x96\x10\x1A\x96\x94\x02\x14\x77\x1B\x84\x14\x8D\x72\x96\xF0\x11\x6A\x62\x99\x93\x03\x1B\x92\x6A\x94\x8B\x03\x18\x94\x4E\x98\x54\x88\x7F\x97\x03\x11\x94\x49\x90\x00\x92\x9C\x95\x4E\x54\x79\x96\x92\x10\xE2\x8C\x97\xCD\x65\x97\x02\x19\x33\x9F\x94\x94\x01\x48\x95\x82\x9D\x48\xE6\x67\x9A\x00\x0E\x95\x99\x91\x96\x02\x10\x95\x8F\x9C\x3F\xD9\x6C\x6D\x3E\x6B\x7A\x88\x9B\x35\x7E\x92\x9A\x8D\x4B\x79\xBB\x9C\x1A\x67\x9A\x8E\xB8\x9D\x96\x2F\x1F\x79\xAE\x9B\x97\xAB\x90\x00\xBD\x9B\x9C\x2F\x1E\x6E\x70\x9E\x1A\x84\x96\x8C\x06\x1D\x9C\x93\x9D\x48\x22\x11\x9D\xA6\x14\x9B\x0B\x1A\x10\x87\x9E\x9C\xF0\x67\x34\x6F\x98\x7F\x95",
			"\x96\x97\x3E\x61\x7C\xC1\x92\x38\xE5\x90\x9E\xF4\x67\x34\x77\x92\x96\x9E\x96\x9E\xAB\x53\x7B\xE9\x92\x33\xF1\x9C\x9E\x06\x19\x6F\xAE\x96\x9D\xC4\x96\x10\xA6\x93\x10\xD0\x99\x55\xFB\x65\x9F\x45\x34\x9A\x01\x15\x38\xDA\x9A\x1A\xDF\x93\x97\x02\x10\x9C\x02\x1D\x9A\x4E\x57\x7F\x04\xA3\x39\x0E\xA7\x9D\x44\x15\x80\x13\xAC\x1D\xEB\x9C\xA0\x01\x18\x9C\x03\x10\xA1\x48\x5C\x7F\x99\x9D\x34\x1E\xA8\x9F\x03\x1A\x7C\x19\xAF\x12\xF7\x9C\xA1\x00\x01\xA0\xBE\x94\x14\xCF\x79\xA2\xE4\x63\x56\x2E\xA6\xA2\x02\x14\x7D\xAE\x90\xA2\x16\xA5\xA3\x16\xAF\x12\x0F\x8E\x9A\x15\xA2\x89\x06\x1C\xA3\x9C\x98\x54\x1A\x82\xA3\x09\x19\x9D\xD5\x89\xA4\x0A\x1A\x9F\x4E\x5E\x7D\x48\xA8\x22\xE8\x96\xA3\x01\x13\x7E\xAE\x9A\x7B\x99\x98\xA5\x01\x11\x6F\x59\x58\x7E\xAE\x97\x36\x06\xA0\x00\xED\x7E\x9A\xF4\x99\x99\x65\xAB\xA5\x3E\x69\x3B\x09\xA3\x39\x67\xA5\xA4\x8D\x4E\x3B\x6B\xAC\x1D\x4E\xA9\x99\x73\xAD\xA3\x0A\x14\x3C\x71\xAF\x12\x03\xA4\xA7\x61\xA0\x05\x47\x38\xA0\x85\x95\xA7\x6E\xA4\x14\x26\x19\xA7\x0A\x18\xA1\xDD\x98\x6F\x61\xA2\x05\x47\x31\xA3\x89\xA6",
			"\x10\x7B\xA1\x10\x6A\xA9\x55\x48\x8F\xA5\xFA\x11\xA9\x00\x00\xA7\x59\x56\x82\x86\xA7\x1F\x98\xA8\xA7\x59\x50\x83\x9D\xA8\x22\x98\xAE\xA7\xAB\x52\x84\xA3\xA9\x24\x12\xA4\xA5\x00\x06\x83\xAE\x97\xA4\x99\x9B\xAA\x76\xA9\x10\x3C\x89\xAA\x02\x10\xA5\x99\x98\xA8\xB3\xA6\x10\x2B\x8E\x9A\x56\xA2\x96\xBA\xA3\xA8\x2F\x1A\x05\xB0\x3E\x20\x22\xAB\xAB\x03\x16\x3E\xB6\xA1\x10\x63\xA2\x96\x28\xA2\x10\x80\xAE\x54\xE8\x3D\x85\x14\x3E\xA8\xC8\xA2\x10\x00\x4B\xAC\x00\x03\xA9\x62\x98\xA3\x03\x11\xAD\x48\x50\x06\x79\x8B\x35\x3F\xAF\xA2\x2F\x1F\x40\xDA\xAA\xA9\x62\x95\xAE\xAC\xA1\x41\xDA\xA0\xAA\x62\x90\xAB\xD7\xAB\x41\x47\x36\xAA\xF8\x72\xAF\xC2\xAA\x10\x1E\x4A\xAD\x85\xA8\x7F\xB8\xA3\xAF\x00\x08\x42\xDA\xAC\xA8\x63\x5F\xAB\xD0\xAE\x63\x68\x03\xAE\x27\x3E\xA5\xE6\xAA\x10\x6B\x07\x34\x95\xA2\x96\xCD\xA7\xB0\xAB\x5C\x06\x0A\xB2\x38\xDC\xAC\xAA\x6F\x07\x34\x9C\xA8\x7F\x19\xB0\xB0\x3C\x4A\xAD\xA2\xAE\xB1\x61\xA1\x07\x47\x38\xAA\xF8\x7A\xAE\xAC\xA2\x07\x47\x3E\xAA\x62\x9A\xB2\x00\xB0\x44\xDA\xA5\xAB\x29\xB1\xA6\x42\x4A\xAD\xBD\xA2\x96",
			"\xF0\xAC\xAA\x44\x4A\xAD\xC4\xA3\x56\x3B\xB0\xB0\x46\x4A\xAD\xCA\xA8\x7F\x41\xB9\xAF\x09\x18\x44\xDA\xA3\xAD\xF8\x76\xAF\x0D\xB9\x10\x4A\x4A\xAD\xF3\x33\x56\x4E\xBC\xAA\x4C\x4A\xAD\xF5\x34\xB5\x61\xAA\x07\x47\x39\xAD\xF8\x7D\xAF\x6F\x5F\x12\x7B\x07\x34\xE2\xA3\x56\x60\xB2\x10\x20\x9D\x48\x7C\x07\x34\x08\x46\xB6\xB6\x8E\x63\x54\x4A\xAD\x62\x0E\x20\x67\xB1\x10\xFC\x9F\x12\x5A\x4A\xAD\xE8\xAF\xB5\xED\x6E\x63\x60\x4A\xAD\xEE\xAC\xB7\x8A\xAB\x5A\x66\x4A\xAD\x1C\x4E\xB6\x09\x1F\xB1\x44\x1C\x46\xDA\xAB\xAF\x82\xB6\x10\x30\xB4\x14\x72\x4A\xAD\x02\xBF\xB8\x03\x17\xB4\x2F\x18\x47\xDA\xA9\xB0\x88\xB6\x10\x55\xBD\x48\x4C\x8A\xAD\x69\x0E\x20\x11\xB2\x10\x04\xB9\x55\x85\x0B\x45\x1D\xB3\x10\xA7\xBE\x54\x86\x0B\x45\x23\xBC\xBA\x3E\x67\x08\x5B\x48\xB2\xB2\xBB\x5A\x88\x0B\x45\x2E\xB6\xBA\x3E\x69\x08\x5B\x44\xB3\xB7\xB9\x55\x8A\x0B\x45\x39\xBC\xBB\xAB\x5B\x08\x5B\x4F\xB3\x8E\x7A\x1F\x1A\x6E\x63\x2C\xAE\x14\x87\x8F\x0F\x53\x81\x86\x5B\x6E\xBC\xD3\xB3\x8B\x35\x17\x57\x41\x59\x55\xA3\x80\xB0\x48\xB4\xAD\xB8\x10\x8A\x31\x14\x53\x44",
			"\x14\xBE\x2F\x16\xBE\x5D\x64\x14\x58\x6E\x65\x93\x47\x87\x2F\x1E\xBE\x88\x58\x13\x1A\x57\x85\xC2\x1E\xBC\x42\x60\x00\x49\x64\x71\x65\x8E\xBC\x16\x6E\x12\xFD\xBB\x5D\xFC\xBE\xBC\xA9\x7E\x14\x03\xC0\x14\xA9\x74\x14\x07\xCF\x12\xBF\x7E\x14\x0B\xC0\x14\xBF\x74\x14\x0F\xCF\x12\x8F\x8E\x14\x13\xC0\x14\x8F\x84\x14\x17\xC2\xC1\xCE\xB9\xC1\x65\x68\x1B\x3A\x80\x4B\x3A\x84\x14\x21\xCF\x12\x23\xCD\xC1\xAB\x5A\x88\x4E\x18\xC2\x40\x1A\x88\x44\x1C\xC2\x0C\x2E\xBC\x2E\xCB\x89\xB8\x11\x89\xB0\x41\x89\x90\x87\x71\x36\xCF\x12\x39\xC2\xC3\xF8\x70\x00\x18\x9A\xC3\xED\x81\x89\xE4\xB2\x8A\x40\xC6\x9C\x42\xC5\xC4\x4B\xA1\x72\x3E\x6F\xC3\x3C\xC6\xAE\x47\xCA\x10\x69\xB1\x1F\x51\xC0\x4B\x51\xC4\x71\x51\xC4\x14\x51\xC9\x5A\x51\xC7\x85\x51\xC4\xBE\x51\xC7\x87\x51\xC3\x85",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"Plus",
			L"EqualOptional",
			L"PositiveOptional",
			L"NegativeOptional",
			L"NO1",
			L"PositiveNO1",
			L"NegativeNO1",
			L"NO2",
			L"PositiveNO2",
			L"NegativeNO2",
			L"NestedOptional",
			L"NestedPositiveOptional",
			L"NestedNegativeOptional",
			L"BranchedOptional",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][Plus] BEGIN ",
			L"[1][Plus] END [ENDING]",
			L"[2][Plus]< \"+\" @ >",
			L"[3][EqualOptional] BEGIN ",
			L"[4][EqualOptional] END [ENDING]",
			L"[5][EqualOptional]< \"optional\" @ [ Plus ] \"+\" { Plus } >",
			L"[6][EqualOptional]< \"optional\" [ Plus @ ] \"+\" { Plus } >",
			L"[7][EqualOptional]< \"optional\" [ Plus ] \"+\" @ { Plus } >",
			L"[8][EqualOptional]< \"optional\" [ Plus ] \"+\" { Plus @ } >",
			L"[9][PositiveOptional] BEGIN ",
			L"[10][PositiveOptional] END [ENDING]",
			L"[11][PositiveOptional]< \"positive_optional\" +[ Plus @ ] \"+\" { Plus } >",
			L"[12][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" @ { Plus } >",
			L"[13][PositiveOptional]< \"positive_optional\" +[ Plus ] \"+\" { Plus @ } >",
			L"[14][PositiveOptional]< \"positive_optional\" @ +[ Plus ] \"+\" { Plus } >",
			L"[15][NegativeOptional] BEGIN ",
			L"[16][NegativeOptional] END [ENDING]",
			L"[17][NegativeOptional]< \"negative_optional\" -[ Plus @ ] \"+\" { Plus } >",
			L"[18][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" @ { Plus } >",
			L"[19][NegativeOptional]< \"negative_optional\" -[ Plus ] \"+\" { Plus @ } >",
			L"[20][NegativeOptional]< \"negative_optional\" @ -[ Plus ] \"+\" { Plus } >",
			L"[21][NO1] BEGIN ",
			L"[22][NO1] END [ENDING]",
			L"[23][NO1][ Plus @ ] Plus",
			L"[24][NO1][ Plus ] Plus @",
			L"[25][PositiveNO1] BEGIN ",
			L"[26][PositiveNO1] END [ENDING]",
			L"[27][PositiveNO1]+[ Plus @ ] Plus",
			L"[28][PositiveNO1]+[ Plus ] Plus @",
			L"[29][NegativeNO1] BEGIN ",
			L"[30][NegativeNO1] END [ENDING]",
			L"[31][NegativeNO1]-[ Plus @ ] Plus",
			L"[32][NegativeNO1]-[ Plus ] Plus @",
			L"[33][NO2] BEGIN ",
			L"[34][NO2] END [ENDING]",
			L"[35][NO2][ NO1 @ ] Plus",
			L"[36][NO2][ NO1 ] Plus @",
			L"[37][PositiveNO2] BEGIN ",
			L"[38][PositiveNO2] END [ENDING]",
			L"[39][PositiveNO2]+[ PositiveNO1 @ ] Plus",
			L"[40][PositiveNO2]+[ PositiveNO1 ] Plus @",
			L"[41][NegativeNO2] BEGIN ",
			L"[42][NegativeNO2] END [ENDING]",
			L"[43][NegativeNO2]-[ NegativeNO1 @ ] Plus",
			L"[44][NegativeNO2]-[ NegativeNO1 ] Plus @",
			L"[45][NestedOptional] BEGIN ",
			L"[46][NestedOptional] END [ENDING]",
			L"[47][NestedOptional]< \"nested_optional\" @ [ NO2 ] Plus { Plus } >",
			L"[48][NestedOptional]< \"nested_optional\" [ NO2 @ ] Plus { Plus } >",
			L"[49][NestedOptional]< \"nested_optional\" [ NO2 ] Plus @ { Plus } >",
			L"[50][NestedOptional]< \"nested_optional\" [ NO2 ] Plus { Plus @ } >",
			L"[51][NestedPositiveOptional] BEGIN ",
			L"[52][NestedPositiveOptional] END [ENDING]",
			L"[53][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 @ ] Plus { Plus } >",
			L"[54][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus @ { Plus } >",
			L"[55][NestedPositiveOptional]< \"nested_positive_optional\" +[ PositiveNO2 ] Plus { Plus @ } >",
			L"[56][NestedPositiveOptional]< \"nested_positive_optional\" @ +[ PositiveNO2 ] Plus { Plus } >",
			L"[57][NestedNegativeOptional] BEGIN ",
			L"[58][NestedNegativeOptional] END [ENDING]",
			L"[59][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 @ ] Plus { Plus } >",
			L"[60][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus @ { Plus } >",
			L"[61][NestedNegativeOptional]< \"nested_negative_optional\" -[ NegativeNO2 ] Plus { Plus @ } >",
			L"[62][NestedNegativeOptional]< \"nested_negative_optional\" @ -[ NegativeNO2 ] Plus { Plus } >",
			L"[63][BranchedOptional] BEGIN ",
			L"[64][BranchedOptional] END [ENDING]",
			L"[65][BranchedOptional]< \"branched_optional\" +[ Plus @ ] +[ Plus ] Plus >",
			L"[66][BranchedOptional]< \"branched_optional\" +[ Plus @ ] -[ Plus ] Plus >",
			L"[67][BranchedOptional]< \"branched_optional\" +[ Plus ] +[ Plus @ ] Plus >",
			L"[68][BranchedOptional]< \"branched_optional\" +[ Plus ] +[ Plus ] Plus @ >",
			L"[69][BranchedOptional]< \"branched_optional\" +[ Plus ] -[ Plus @ ] Plus >",
			L"[70][BranchedOptional]< \"branched_optional\" +[ Plus ] -[ Plus ] Plus @ >",
			L"[71][BranchedOptional]< \"branched_optional\" -[ Plus @ ] +[ Plus ] Plus >",
			L"[72][BranchedOptional]< \"branched_optional\" -[ Plus @ ] -[ Plus ] Plus >",
			L"[73][BranchedOptional]< \"branched_optional\" -[ Plus ] +[ Plus @ ] Plus >",
			L"[74][BranchedOptional]< \"branched_optional\" -[ Plus ] +[ Plus ] Plus @ >",
			L"[75][BranchedOptional]< \"branched_optional\" -[ Plus ] -[ Plus @ ] Plus >",
			L"[76][BranchedOptional]< \"branched_optional\" -[ Plus ] -[ Plus ] Plus @ >",
			L"[77][BranchedOptional]< \"branched_optional\" @ +[ Plus ] +[ Plus ] Plus >",
			L"[78][BranchedOptional]< \"branched_optional\" @ +[ Plus ] -[ Plus ] Plus >",
			L"[79][BranchedOptional]< \"branched_optional\" @ -[ Plus ] +[ Plus ] Plus >",
			L"[80][BranchedOptional]< \"branched_optional\" @ -[ Plus ] -[ Plus ] Plus >",
			L"[81][Module] BEGIN ",
			L"[82][Module] END [ENDING]",
			L"[83][Module]<< !BranchedOptional @ >>",
			L"[84][Module]<< !EqualOptional @ >>",
			L"[85][Module]<< !NegativeOptional @ >>",
			L"[86][Module]<< !NestedNegativeOptional @ >>",
			L"[87][Module]<< !NestedOptional @ >>",
			L"[88][Module]<< !NestedPositiveOptional @ >>",
			L"[89][Module]<< !PositiveOptional @ >>",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<FeatureTestTokens, ModuleParserStates, FeatureTestAstInsReceiver, ModuleParserStateTypes>(&FeatureTestTokenDeleter, &FeatureTestLexerData, &FeatureTestModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2)
	{
		static vl::vint32_t results[6][6] = {
			{0, 1, 1, 1, 1, -1, },
			{1, 1, 1, 1, 1, -1, },
			{1, 1, 2, 1, 1, -1, },
			{1, 1, 1, 3, 1, -1, },
			{1, 1, 1, 1, 4, -1, },
			{-1, -1, -1, -1, -1, 5, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<featuretest::Feature> ModuleParser::ParseModule(const vl::WString & input, vl::vint codeIndex)
	{
		 return Parse<ModuleParserStates::Module>(input, this, codeIndex);
	};
}
