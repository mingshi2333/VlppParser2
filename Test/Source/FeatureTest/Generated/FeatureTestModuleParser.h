/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_FEATURETEST_MODULEPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_FEATURETEST_MODULEPARSER_SYNTAX

#include "FeatureTest_Assembler.h"
#include "FeatureTest_Lexer.h"

namespace featuretest
{
	enum class ModuleParserStates
	{
		Plus = 0,
		Lt = 3,
		Gt = 6,
		EqualOptional = 9,
		PositiveOptional = 15,
		NegativeOptional = 21,
		NO1 = 27,
		PositiveNO1 = 31,
		NegativeNO1 = 35,
		NO2 = 39,
		PositiveNO2 = 43,
		NegativeNO2 = 47,
		NestedOptional = 51,
		NestedPositiveOptional = 57,
		NestedNegativeOptional = 63,
		BranchedOptional = 69,
		PbaGts = 83,
		PbaBody = 87,
		Pba = 92,
		Pwa1Prefix = 98,
		Pwa1Body = 103,
		Pwa1 = 108,
		Pwa2Body = 113,
		Pwa2 = 118,
		Pwl1_P = 125,
		Pwl1 = 130,
		Pwl2_P = 135,
		Pwl2 = 140,
		FaPrefix = 144,
		Fa = 147,
		Module = 151,
	};

	const wchar_t* ModuleParserRuleName(vl::vint index);
	const wchar_t* ModuleParserStateLabel(vl::vint index);
	const wchar_t* ModuleParserSwitchName(vl::vint index);
	extern void FeatureTestModuleParserData(vl::stream::IStream& outputStream);

	class ModuleParser
		: public vl::glr::ParserBase<FeatureTestTokens, ModuleParserStates, FeatureTestAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		ModuleParser();

		vl::Ptr<featuretest::Feature> ParseModule(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<featuretest::Feature> ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif