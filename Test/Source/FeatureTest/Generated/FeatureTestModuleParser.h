/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_FEATURETEST_MODULEPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_FEATURETEST_MODULEPARSER_SYNTAX

#include "FeatureTest_Assembler.h"
#include "FeatureTest_Lexer.h"

namespace featuretest
{
	enum class ModuleParserStates
	{
		Plus = 0,
		EqualOptional = 3,
		PositiveOptional = 8,
		NegativeOptional = 13,
		Module = 18,
	};

	template<ModuleParserStates> struct ModuleParserStateTypes;
	template<> struct ModuleParserStateTypes<ModuleParserStates::Module> { using Type = featuretest::OptionalFeature; };

	const wchar_t* ModuleParserRuleName(vl::vint index);
	const wchar_t* ModuleParserStateLabel(vl::vint index);
	extern void FeatureTestModuleParserData(vl::stream::IStream& outputStream);

	class ModuleParser
		: public vl::glr::ParserBase<FeatureTestTokens, ModuleParserStates, FeatureTestAstInsReceiver, ModuleParserStateTypes>
		, protected vl::glr::automaton::TraceManager::ITypeCallback
	{
	protected:
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) override;
	public:
		ModuleParser();

		vl::Ptr<featuretest::OptionalFeature> ParseModule(const vl::WString & input, vl::vint codeIndex = -1);
	};
}
#endif