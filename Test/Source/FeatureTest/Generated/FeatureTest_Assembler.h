/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_FEATURETEST_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_FEATURETEST_AST_ASSEMBLER

#include "FeatureTestFeatureAst.h"

namespace featuretest
{
	enum class FeatureTestClasses : vl::vint32_t
	{
		Feature = 0,
		FeatureToResolve = 1,
		OptionalFeature = 2,
		Plus = 3,
	};

	enum class FeatureTestFields : vl::vint32_t
	{
		FeatureToResolve_candidates = 0,
		OptionalFeature_loop = 1,
		OptionalFeature_optional = 2,
		OptionalFeature_priority = 3,
	};

	extern const wchar_t* FeatureTestTypeName(FeatureTestClasses type);
	extern const wchar_t* FeatureTestCppTypeName(FeatureTestClasses type);
	extern const wchar_t* FeatureTestFieldName(FeatureTestFields field);
	extern const wchar_t* FeatureTestCppFieldName(FeatureTestFields field);

	class FeatureTestAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif