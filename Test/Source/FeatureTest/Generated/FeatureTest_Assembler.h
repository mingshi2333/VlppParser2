/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:FeatureTest
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_FEATURETEST_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_FEATURETEST_AST_ASSEMBLER

#include "FeatureTestFeatureAst.h"

namespace featuretest
{
	enum class FeatureTestClasses : vl::vint32_t
	{
		BranchedOptionalFeature = 0,
		ClFeature = 1,
		Feature = 2,
		FeatureToResolve = 3,
		Gt = 4,
		Lt = 5,
		NestedOptionalFeature = 6,
		OptionalFeature = 7,
		PbaFeature = 8,
		Plus = 9,
		Pwa1Feature = 10,
		PwlFeature = 11,
	};

	enum class FeatureTestFields : vl::vint32_t
	{
		BranchedOptionalFeature_optional = 0,
		BranchedOptionalFeature_tails = 1,
		BranchedOptionalFeature_type = 2,
		ClFeature_id = 3,
		FeatureToResolve_candidates = 4,
		NestedOptionalFeature_optional = 5,
		NestedOptionalFeature_tail1 = 6,
		NestedOptionalFeature_tail2 = 7,
		NestedOptionalFeature_tail3 = 8,
		NestedOptionalFeature_tails = 9,
		OptionalFeature_loop = 10,
		OptionalFeature_optional = 11,
		OptionalFeature_priority = 12,
		PbaFeature_gts = 13,
		PbaFeature_lts = 14,
		PbaFeature_optional = 15,
		PbaFeature_tail = 16,
		PbaFeature_tails = 17,
		Pwa1Feature_gts = 18,
		Pwa1Feature_lts = 19,
		Pwa1Feature_pba = 20,
		PwlFeature_one = 21,
		PwlFeature_prefix = 22,
		PwlFeature_prev = 23,
		PwlFeature_two = 24,
	};

	extern const wchar_t* FeatureTestTypeName(FeatureTestClasses type);
	extern const wchar_t* FeatureTestCppTypeName(FeatureTestClasses type);
	extern const wchar_t* FeatureTestFieldName(FeatureTestFields field);
	extern const wchar_t* FeatureTestCppFieldName(FeatureTestFields field);

	class FeatureTestAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif