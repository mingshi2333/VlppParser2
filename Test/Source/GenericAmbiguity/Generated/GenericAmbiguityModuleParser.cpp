/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:GenericAmbiguity
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "GenericAmbiguityModuleParser.h"

namespace genericambiguity
{
	void GenericAmbiguityModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 2156; // 17415 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 108;
		static const vl::vint dataSolidRows = 8;
		static const vl::vint dataRows = 9;
		static const char* compressed[] = {
			"\x07\x44\x00\x00\x64\x08\x00\x00\x08\x00\x01\x82\x80\x05\x03\x82\x81\x82\x06\x89\x82\x8B\x0A\x83\x0A\x85\x0D\x0A\xA4\x0A\x86\x41\x01\x87\x7F\x8B\x18\x97\x8A\x80\x09\x89\x8F\x8D\x8D\x15\x96\x9D\x9A\x8A\x83\x90\x92\x91\x23\x9B\xA6\x9F\x7A\x96\x90\x90\x85\x02\x25\xAE\x92\x99\x94\x99\x8F\x96\x35\xA8\xB7\x96\x9E\x8C\x9C\x8C\x9C\x3B\xBA\xBD\x82\xAF\x9E\x9F\x92\x83\x2B\xC0\x83\xA6\x83\x02\x85\x90\xA4\x33\xC4\x87\xA3\x84\x06\xA6\xA2\x96\x57\x9B\x88\x86\x81\x9A\xA8\xAC\xAF\x4A\xC5\x89\x87\x06\xA8\xB1\xAD\xB3\x66\xE9\x86\x80\x89\x85\xAC\xA9\x9C\x06\x8A\x25\xAF\xB1\xA4\xBB\xA5\x81\x49\xE8\xB6\xA2\xBB\xBB\xAA\x81\xBC\x6A\xF8\x91\xBD\xBF\xAC\xC1\xB0\xBF\x01\x80\xC6\xCA\x8C\x81\x87\xA7\x81\x0C\x73\x82\xD0\xB3\xCD\xB9\xCB\xBB\x7F\x83\xD7\xDC\xBB\xC8\xC4\x8E\xCD\x02\x8D\x12\xD9\xC4\xCC\xD2\xCA\xD3\x98\x89\xE0\xCA\xD5\xD1\x82\x07\xD1\xAC\xA7\xF1\xC9\xDF\xCD\xD5\xDA\xD9\xB7\xB4\xCA\xDD\xC5\xC4\xDF\xC3\xDE\x02\x8F\x30\xD9\xDC\xC8\xD5\xE3\xD9\xC7\xC4\xDE\xDB\xD6\xE3\xE7\xD4\xE5\xC0\xC8\xCE\xF6\xDC\xE2\xE9\xE8\x00\x10\x43\xD5\xF0",
			"\xEF\xDD\xEE\xBC\xDF\xDF\xCD\xD7\xF1\x0A\xEF\xE7\xED\xF3\xE6\xCF\xD2\x10\x91\xF6\xEA\xEF\x84\x14\x65\xD4\xE9\xF3\xFD\xF8\xDD\x0A\xEC\x81\xE2\xEF\xFB\xC2\xFE\xF7\xF6\xDC\x40\x88\x7A\x7D\xBA\x4F\x77\x07\x70\x18\x32\x78\x6F\x80\x0B\x8F\x79\x05\x7E\xFD\x51\x80\x79\x42\x10\x4E\x62\x80\x7D\x0D\x84\x89\x70\x07\x10\x93\x86\x42\x07\xC3\x5F\x0A\x81\x81\x1A\x93\x79\x87\x89\x24\xA8\x89\x70\x83\x29\xB4\x60\x0B\x88\x2B\x8F\x71\x08\x8C\x26\xAD\x81\x8D\x89\xD7\x62\x04\x8F\x75\x2C\xB7\x8A\x89\x8D\x3E\xB4\x63\x0B\x70\x12\x56\x8E\x7D\x80\x47\xBD\x80\x93\x92\x3C\x98\x86\x8E\x67\x25\x3B\x8C\x7E\x87\x54\xBB\x7A\x42\x09\x1D\x96\x99\x92\x93\x41\x9D\x9C\x93\x94\x5A\x92\x81\x9B\x40\x28\x03\x79\x09\x96\xFF\x5B\x98\x8C\x98\x69\xA2\x9D\x99\x95\x6F\xA3\x92\x9D\x9C\x74\x88\x96\x43\x0A\x52\x80\x8C\x0B\x70\x2D\x28\x96\x9C\x9C\x7F\xB3\x91\xA1\x9D\x4A\x8D\x9B\x9B\x85\x87\xAA\x98\x6F\x0B\x79\x8A\xAF\x92\xA1\x3F\x90\xAF\xA0\x9B\x00\x30\x0D\xA2\x9B\x00\x31\x03\x72\x0C\x7E\x85\xA4\xA6\xA7\x88\x91\xAF\xA7\x73\x34\x17\xA0\xA0\xA8\x47\xB5\x0D\xA4\x97",
			"\x5F\xA1\xA3\xA6\xAB\x5E\x92\xA1\xAF\xA8\xB6\x77\x06\xAA\xA0\xA8\x98\xA8\x0F\xAA\xB6\x7A\x03\x73\x0E\xBC\xA2\xA0\xAD\xAB\x8E\xB3\xA3\xB3\x75\x3D\x37\xA4\xA0\xAB\xB2\x9E\x6E\x0D\xB0\xB4\x40\x13\x71\x10\xD0\x86\xB5\xB0\xB1\x98\xB9\xA7\xA8\xB3\x94\x83\x1A\xB3\xA0\xE0\x9A\xB8\xAC\xB7\xC7\x9B\x44\x13\xB7\xE2\xB5\x95\x13\x70\x46\x15\xB8\xB7\xB6\x89\x99\xB4\xBB\xB5\xD7\x48\x18\xBB\xBC\xF2\xB6\x69\x12\xBB\xCD\xBD\xB4\xAE\xB0\xF4\xBF\xBF\xA9\x42\x4B\x37\xB1\xBC\xBC\x00\xF9\xB9\xC3\x40\xA4\x3E\x95\x54\xBD\x2B\x64\x5E\x63\xC3\xBC\x6E\x53\x42\xC4\x0A\xEB\x49\x44\xC6\x06\x5C\xC6\x76\xC5\x02\x54\xC8\xC2\xC6\x18\x5E\xC1\x41\x00\x22\xDF\xCA\x42\xC9\xE1\xA4\xCD\x44\xCB\x00\x26\xCB\x48\xC8\x01\x69\xCB\xB2\xCB\x25\xCE\x56\xCF\xCC\x2B\xC7\xB1\xC7\x46\x32\xE6\x4B\x54\x6F\x2B\x43\xD2\x79\xD1\x57\x7C\xC9\x42\xCD\x2D\xF8\xC7\x44\xCB\x28\xDE\x54\xCD\xCC\x3E\xE6\x40\xCD\xD0\x23\x53\xDC\xD1\xA1\x3F\xD3\xC2\xD5\xCF\x10\xD6\xD0\xD3\xD7\x4B\xD5\xD3\x48\xD4\x3B\xE6\x43\xD4\xCB\x5C\xE2\xD0\xD9\xC5\x0A\x5B\xDC\xB1\xD7\x06\x51\xD4\x63\xDA\x66",
			"\xEF\xC3\xD8\x61\x46\xD6\x78\xD2\x57\x2B\x4D\x56\x90\x61\x50\xCF\x66\x75\xDF\xD0\x7F\xD4\x61\xE0\x3B\x85\xE4\xDA\x41\x72\xF8\x84\xDF\x40\x76\xF0\xD3\x59\xDE\x1B\xFB\xDC\x6E\xE1\x27\xD7\x50\xD6\x01\x5E\x48\xEE\xD0\x46\x9C\xC0\x05\xEB\xE4\x02\x41\x00\xE8\xDF\x49\xE6\x42\xE2\x41\xAB\xC4\xEB\x45\xEC\xE2\x65\xE7\xEA\xDB\x75\xF4\xE7\xE1\xEB\x23\x6F\xE3\x42\xEE\xD6\x70\xC0\xF3\x4A\xA5\xFF\x6F\xE5\xE8\xBC\xDD\x45\xF2\xE7\x4E\x43\xF2\xD1\xF2\x19\x7E\xE2\x40\xF0\xD0\x42\xFE\x57\xF2\x5E\x47\xFC\xE8\xE0\xAE\xCA\x44\xF4\xEA\xD3\xC8\xFC\xF7\x48\xA2\xE3\xEF\x3E\xF4\x01\x5F\xF8\xEC\xEC\xE2\xCB\xED\xF5\x42\xEA\xE7\xD3\xEF\xE3\x54\x58\xE9\xCE\xD7\x77\xEF\xD3\xCA\xCB\x57\xF4\xF1\xCA\xFD\x4F\x7A\x66\xFF\x01\x2C\x6D\xB9\x6B\x7F\x62\xD7\x7F\x21\xF6\x3B\x45\x7D\xD1\x58\x7A\x76\x83\x7C\x35\x03\xCE\x68\x7D\x8F\x20\x7E\x82\x26\x2F\x80\x6F\x50\x67\x2B\x09\xB8\x65\x82\xC6\x6A\x81\xFE\x65\x61\x6C\xF9\x78\x7E\x72\x1D\x60\x83\x3F\x7D\x74\x30\xDB\x4C\x79\x82\xE2\x3E\x82\xCB\x2E\x8B\x80\x18\xBB\x73\x7C\x1D\x20\x87\x0B\xA2\x86\x3A\x1A\x90\x85",
			"\x6E\x1D\x90\x78\x46\x3A\x85\x86\x1E\x90\x3A\x86\x24\x68\x8A\xC6\x44\x8F\x86\x1E\x8A\x74\x68\xEF\x66\x8B\x05\xBF\x33\x6A\x25\x95\x8F\x2A\x5A\x6A\x84\xDA\x03\x84\x20\x2C\xBA\x7B\x5C\xA3\x6C\x86\x04\xC2\x81\x81\xB8\x5E\x29\x72\x4E\x68\x8C\xCE\x6A\x8C\x7F\x8D\x29\x6B\x24\x6C\x84\x64\xCC\x1C\x73\x8A\x3A\x87\x81\x20\x53\x77\x81\x1E\xF7\x81\x21\xBE\x6B\x24\x0D\x46\x9D\x71\x5B\x0A\x2C\x88\xCA\x7E\x4D\x90\xA9\x67\x92\x19\xB6\x80\x01\xA9\x55\x84\x69\xA5\x6E\x93\x22\xC0\x83\x91\x84\x15\x80\x71\x91\x84\x92\x42\x18\x9A\x91\x84\x1C\x95\x92\x4C\x3A\x92\x25\xA2\x9C\x7C\x46\x92\x90\x7E\xC3\x27\x95\x29\x94\x9C\x2A\x52\x88\x86\x94\xAE\x82\x20\x07\xA0\x93\x21\x0A\xB3\x95\x95\xA3\x94\x96\x40\x15\x8A\x95\x81\x3D\x91\x91\xBA\x81\x21\x05\x99\x99\x96\x56\xBE\x91\x96\x01\x2C\x2C\x2E\xA1\x99\x20\x65\x87\x9D\x98\x03\x2E\x9A\x40\x3F\x91\x21\x04\x1D\x96\x20\xD6\x81\x98\x00\x15\x89\x9B\x65\xB5\x92\x21\x72\x30\x94\x34\x82\x21\x9C\x63\x93\x98\x99\x00\x05\x9E\x21\xDA\x95\x83\xC6\x0C\x9E\x20\x88\x7B\x21\x26\x29\x9A\x21\x21\x41\x92\x13\xC3\x25",
			"\x76\x06\x01\x90\x01\x4D\x03\x3B\x23\xEB\x21\x90\x27\x43\x37\x92\x7E\x9D\x14\xA0\x0A\x3D\x98\x0F\x9E\x18\xA1\x84\x19\x39\x90\x9F\x0D\xA2\x41\x0F\xA6\x88\x50\x34\x99\x21\x20\x41\x91\x28\x17\xA6\x21\x17\x41\x92\x14\x12\xA3\x20\x96\x01\x93\x15\xE1\x0C\x0C\x9F\xEA\x82\x85\xBA\x60\x53\x7E\x7E\xB9\x9C\x5F\x2E\xB0\x64\x3A\xA5\x7C\x69\x3D\xB6\x33\x6A\x29\xAA\x83\x4A\xEE\x8E\x60\x7E\xAB\xA3\x3B\x53\x74\x79\x4B\xE6\x94\x81\x9E\xA4\x86\x9B\xB2\x9C\x9E\x42\xC0\x91\x2E\x3F\x52\x9D\x66\xE8\x99\xA4\x06\x87\x62\x21\xC8\x07\xAF\x9B\xA8\x81\x92\x55\xC4\xA0\x00\xD1\x1A\x9C\xA2\xF5\x63\x9D\x51\x81\x92\x38\x46\xA0\xAF\x9C\xF0\x33\x91\x58\xDC\xA0\xA0\x83\x78\x30\x71\x4C\x62\x62\xB5\x70\x98\x9C\xB9\xAF\x59\x7C\xDA\x96\xAE\xBF\x5F\x82\x90\x23\x8E\x24\x91\x2B\xAF\xAA\xE9\x7C\x91\x3E\xC0\xB8\x5B\x20\x4B\xA9\x9A\x4F\x87\xB2\x50\xA9\x92\xAA\xAF\x1B\x29\x43\x55\xE4\x9E\x7A\x7E\xB8\x3C\x91\x16\x1E\x4C\x87\x13\xB1\x20\xA9\xB2\xA1\x21\x92\xBC\xAB\x83\x5A\x9E\xA2\xC8\x4C\x30\x9C\x8B\xB4\xA9\x40\x45\x4C\xAA\x77\xBF\x74\x9F\x15\x5C\xAB\x66\xC8",
			"\xA1\x21\x28\x4C\x96\xB5\x49\xA1\x91\x46\xDC\xA2\x44\x6D\xA3\xA4\xAB\x5E\xAD\xA9\x20\xAB\xA7\x04\xB5\xA1\x32\x21\x65\xB2\x88\x63\xF5\x41\xB9\xD7\x81\x93\x46\x8C\x9A\x46\x36\xF8\x4C\xB3\xAE\xBC\xAF\x23\xAC\xAB\x9E\x41\x36\xB4\xB6\x00\x0C\x55\xBA\xAF\x29\x23\x63\xE5\x5A\x21\x19\x06\xBE\x35\x95\xA1\x91\x71\x8C\x95\x4C\x6D\xB6\x50\xBC\xD7\xBB\x22\x0A\x43\x34\xBB\xEE\x80\x5D\xBA\xC9\xB0\x30\x3F\xFD\x46\xB0\xD5\x80\x01\xBF\x02\x24\x3D\x20\xAE\x0E\x4E\x4B\x7D\xB8\x37\x67\xA1\x20\x80\xBA\xAB\xB8\x70\x49\xC0\x00\xE1\xAA\xBA\x7F\xDB\x32\xC0\x83\x0D\xBA\xA5\x0D\xDB\x39\x40\x86\x2B\xAA\x1E\x9A\x57\xC0\x03\x66\x23\x86\x83\x25\xC2\x1E\x9C\x52\x9B\xA5\x40\xC5\x72\x7F\xA2\xB8\x09\xCB\x62\x20\x3F\x1E\x4C\x8B\xCE\xB6\x88\x55\x4C\x96\x06\x7E\x54\x5A\x36\xB3\xC9\xB6\x23\xBB\x54\x91\x39\x1E\x4E\xB7\x5A\x97\xB2\x83\x05\xB6\x88\xF7\xAF\x9F\xFE\x1E\x35\xC9\x81\x21\xB4\x87\xCF\x55\xBA\x10\x5F\x5D\xC8\x81\x23\xB6\x88\x43\xC6\xB5\x42\x47\x0F\x5B\xCC\x89\x25\xCA\x0C\xD3\xC2\x81\x0A\x27\xC8\x1E\xB6\x5A\xAC\x4D\x78\x37\x81\x20\xBC\x9F\x82",
			"\x55\xBF\x09\xDF\x4B\xCE\x41\x57\xCC\x86\x28\x27\xB8\x00\x54\x1F\x5B\x93\x82\x2E\xCA\x17\xE1\xC0\x50\x74\xC2\x22\x9C\xCE\x89\xC3\xE7\x3B\x99\xAD\x81\x95\x0A\x5B\xB4\x37\xD0\x83\x3B\xCA\x81\x56\x1E\x4C\x16\x5F\x5D\xD1\x81\x01\xD2\x81\x59\x1E\x4F\x16\x5F\x51\xB7\x81\x23\xB9\x60\x0A\x2B\x5C\x9A\x9D\xD8\xAE\x23\x9C\x0B\x38\x5D\x1E\x4F\x99\xCA\xC2\x20\x52\xE3\xAE\x88\x5F\x03\x38\x18\x7E\x4E\xCC\x56\xC1\x25\x03\xA8\xA3\xB9\x83\xCE\x08\x9C\x5C\xD9\xAE\x88\x62\x03\x3B\x18\x7E\x41\x0B\x5E\xF1\xBA\x21\x65\x03\x3A\x19\x7E\x49\xCE\x34\xFB\xB3\x20\xB3\xBC\x84\x1A\x68\x9B\xA5\x67\xC2\x20\xBA\x46\x8B\x0F\x9D\xEF\x0F\x5A\x6B\xC1\x22\xBA\x46\x90\x0F\x9D\xF4\x0F\x5B\xDE\xAD\xC4\xD0\xFE\xB7\x08\x3A\xE6\xD4\xC6\x1E\xB5\x0B\x38\x76\x1E\x4E\x16\x6B\xD7\xD9\x84\x38\x0B\x38\x79\x1E\x4D\xAA\xE8\xC5\xB4\x68\xFC\x9B\x0F\xD4\xCD\xC1\xBF\xD7\xDC\x9E\x3F\x37\xCA\x10\xDF\x43\xE3\xB7\xFC\x93\x11\x3B\xC7\x17\x5B\xD8\xC3\x22\xAF\xFE\xC3\xAE\x40\x60\xDB\x20\xEC\xD8\xC2\x98\xB6\x36\x9E\x83\x11\xDA\x84\x88\x0B\xD1\x72\x1D\xE3\x21\x88\xE2\x81\x11",
			"\x7E\x4B\x13\xB7\x24\xE2\x21\x8B\xE2\x84\x11\x7E\x4E\x13\xB7\x59\xB4\xB3\x40\x8F\x17\x5B\xB3\xD5\xB8\xCD\xE9\x7C\x9E\x48\x3E\x4A\x12\x7E\x44\x0F\x9D\xBB\xE4\x6B\x40\x94\x16\x4F\x96\x1E\x4F\xB4\xD5\xBF\xB7\x81\x1C\xBC\x87\x98\x02\xE6\x67\x6B\xBE\xA4\x8B\x15\xEF\xEA\x58\xF9\xEB\x3F\xA7\x75\x79\xAE\xEF\x23\xEB\x1B\x33\x69\x23\xA5\x22\xED\xB2\xE1\xEF\xEC\x7E\x5B\x9B\x46\x15\x87\x7D\xB5\xEE\xED\xAE\x20\x91\xEC\x4F\xF7\xCF\x1F\xB8\x80",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"Exp0",
			L"Exp1",
			L"Exp2",
			L"Exp",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][Exp0] BEGIN ",
			L"[1][Exp0] END [ENDING]",
			L"[2][Exp0]< ID \"<\" @ { Exp ; \",\" } \">\" >",
			L"[3][Exp0]< ID \"<\" { Exp ; \",\" @ } \">\" >",
			L"[4][Exp0]< ID \"<\" { Exp ; \",\" } \">\" @ >",
			L"[5][Exp0]< ID \"<\" { Exp @ ; \",\" } \">\" >",
			L"[6][Exp0]< ID @ \"<\" { Exp ; \",\" } \">\" >",
			L"[7][Exp0]< ID @ >",
			L"[8][Exp0]<< \"(\" !Exp \")\" @ >>",
			L"[9][Exp0]<< \"(\" !Exp @ \")\" >>",
			L"[10][Exp0]<< \"(\" @ !Exp \")\" >>",
			L"[11][Exp1] BEGIN ",
			L"[12][Exp1] END [ENDING]",
			L"[13][Exp1]< Exp1 \"(\" @ { Exp ; \",\" } \")\" >",
			L"[14][Exp1]< Exp1 \"(\" { Exp ; \",\" @ } \")\" >",
			L"[15][Exp1]< Exp1 \"(\" { Exp ; \",\" } \")\" @ >",
			L"[16][Exp1]< Exp1 \"(\" { Exp @ ; \",\" } \")\" >",
			L"[17][Exp1]< Exp1 @ \"(\" { Exp ; \",\" } \")\" >",
			L"[18][Exp1]<< !Exp0 @ >>",
			L"[19][Exp2] BEGIN ",
			L"[20][Exp2] END [ENDING]",
			L"[21][Exp2]< Exp2 \"+\" \"+\" @ >",
			L"[22][Exp2]< Exp2 \"+\" @ \"+\" >",
			L"[23][Exp2]< Exp2 \"+\" @ >",
			L"[24][Exp2]< Exp2 @ \"+\" \"+\" >",
			L"[25][Exp2]< Exp2 @ \"+\" >",
			L"[26][Exp2]<< !Exp1 @ >>",
			L"[27][Exp] BEGIN ",
			L"[28][Exp] END [ENDING]",
			L"[29][Exp]< Exp \"<\" @ Exp2 >",
			L"[30][Exp]< Exp \"<\" Exp2 @ >",
			L"[31][Exp]< Exp \">\" @ Exp2 >",
			L"[32][Exp]< Exp \">\" Exp2 @ >",
			L"[33][Exp]< Exp @ \"<\" Exp2 >",
			L"[34][Exp]< Exp @ \">\" Exp2 >",
			L"[35][Exp]<< !Exp2 @ >>",
			L"[36][Module] BEGIN ",
			L"[37][Module] END [ENDING]",
			L"[38][Module]< Exp @ >",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<GenericAmbiguityTokens, ModuleParserStates, GenericAmbiguityAstInsReceiver, ModuleParserStateTypes>(&GenericAmbiguityTokenDeleter, &GenericAmbiguityLexerData, &GenericAmbiguityModuleParserData)
	{
	};

	vl::Ptr<genericambiguity::Module> ModuleParser::ParseModule(const vl::WString & input, vl::vint codeIndex)
	{
		 return Parse<ModuleParserStates::Module>(input, codeIndex);
	};
}
