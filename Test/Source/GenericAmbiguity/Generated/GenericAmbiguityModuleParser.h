/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:GenericAmbiguity
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_GENERICAMBIGUITY_MODULEPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_GENERICAMBIGUITY_MODULEPARSER_SYNTAX

#include "GenericAmbiguity_Assembler.h"
#include "GenericAmbiguity_Lexer.h"

namespace genericambiguity
{
	enum class ModuleParserStates
	{
		Exp0 = 0,
		Exp1 = 11,
		Exp = 19,
		Module = 28,
	};

	template<ModuleParserStates> struct ModuleParserStateTypes;
	template<> struct ModuleParserStateTypes<ModuleParserStates::Module> { using Type = genericambiguity::Module; };

	const wchar_t* ModuleParserRuleName(vl::vint index);
	const wchar_t* ModuleParserStateLabel(vl::vint index);
	extern void GenericAmbiguityModuleParserData(vl::stream::IStream& outputStream);

	class ModuleParser: public vl::glr::ParserBase<GenericAmbiguityTokens, ModuleParserStates, GenericAmbiguityAstInsReceiver, ModuleParserStateTypes>
	{
	public:
		ModuleParser();

		vl::Ptr<genericambiguity::Module> ParseModule(const vl::WString & input, vl::vint codeIndex = -1);
	};
}
#endif