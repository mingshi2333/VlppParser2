/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:GenericAmbiguity
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_GENERICAMBIGUITY_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_GENERICAMBIGUITY_AST_ASSEMBLER

#include "GenericAmbiguityExprAst.h"

namespace genericambiguity
{
	enum class GenericAmbiguityClasses : vl::vint32_t
	{
		BinaryExpr = 0,
		CallExpr = 1,
		Expr = 2,
		ExprToResolve = 3,
		GenericExpr = 4,
		Module = 5,
		PostfixExpr = 6,
		RefExpr = 7,
	};

	enum class GenericAmbiguityFields : vl::vint32_t
	{
		BinaryExpr_left = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::BinaryExpr) << 8) + 0,
		BinaryExpr_op = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::BinaryExpr) << 8) + 1,
		BinaryExpr_right = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::BinaryExpr) << 8) + 2,
		CallExpr_args = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::CallExpr) << 8) + 0,
		CallExpr_func = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::CallExpr) << 8) + 1,
		ExprToResolve_candidates = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::ExprToResolve) << 8) + 0,
		GenericExpr_args = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::GenericExpr) << 8) + 0,
		GenericExpr_name = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::GenericExpr) << 8) + 1,
		Module_expr = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::Module) << 8) + 0,
		PostfixExpr_expr = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::PostfixExpr) << 8) + 0,
		PostfixExpr_op = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::PostfixExpr) << 8) + 1,
		RefExpr_name = (static_cast<vl::vint32_t>(GenericAmbiguityClasses::RefExpr) << 8) + 0,
	};

	extern const wchar_t* GenericAmbiguityTypeName(GenericAmbiguityClasses type);
	extern const wchar_t* GenericAmbiguityFieldName(GenericAmbiguityFields field);

	class GenericAmbiguityAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif