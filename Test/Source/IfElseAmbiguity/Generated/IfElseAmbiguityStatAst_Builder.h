/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:StatAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_IFELSEAMBIGUITY_STATAST_AST_BUILDER
#define VCZH_PARSER2_UNITTEST_IFELSEAMBIGUITY_STATAST_AST_BUILDER

#include "IfElseAmbiguityStatAst.h"

namespace ifelseambiguity
{
	namespace builder
	{
		class BlockStatBuilder
		{
		private:
			BlockStat* node;
		public:
			BlockStatBuilder(BlockStat* _node) : node(_node) {}
			BlockStatBuilder& stats(const vl::Ptr<Stat>& value);
		};

		class IfStatBuilder
		{
		private:
			IfStat* node;
		public:
			IfStatBuilder(IfStat* _node) : node(_node) {}
			IfStatBuilder& elseBranch(const vl::Ptr<Stat>& value);
			IfStatBuilder& thenBranch(const vl::Ptr<Stat>& value);
		};

		class ModuleBuilder
		{
		private:
			Module* node;
		public:
			ModuleBuilder(Module* _node) : node(_node) {}
			ModuleBuilder& stat(const vl::Ptr<Stat>& value);
		};

		using MakeBlockStat = vl::glr::ParsingAstBuilder<BlockStat, BlockStatBuilder>;
		using MakeDoStat = vl::glr::ParsingAstBuilder<DoStat>;
		using MakeIfStat = vl::glr::ParsingAstBuilder<IfStat, IfStatBuilder>;
		using MakeModule = vl::glr::ParsingAstBuilder<Module, ModuleBuilder>;
	}
}
#endif