/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:StatAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_IFELSEAMBIGUITY_STATAST_AST_COPY_VISITOR
#define VCZH_PARSER2_UNITTEST_IFELSEAMBIGUITY_STATAST_AST_COPY_VISITOR

#include "IfElseAmbiguityStatAst.h"

namespace ifelseambiguity
{
	namespace copy_visitor
	{
		/// <summary>A copy visitor, overriding all abstract methods with AST copying code.</summary>
		class StatAstVisitor
			: public virtual vl::glr::CopyVisitorBase
			, protected virtual Stat::IVisitor
		{
		protected:
			void CopyFields(BlockStat* from, BlockStat* to);
			void CopyFields(DoStat* from, DoStat* to);
			void CopyFields(IfContent* from, IfContent* to);
			void CopyFields(IfStat* from, IfStat* to);
			void CopyFields(Module* from, Module* to);
			void CopyFields(Stat* from, Stat* to);

		protected:
			virtual void Visit(IfContent* node);
			virtual void Visit(Module* node);

			void Visit(DoStat* node) override;
			void Visit(IfStat* node) override;
			void Visit(BlockStat* node) override;

		public:
			virtual vl::Ptr<Stat> CopyNode(Stat* node);
			virtual vl::Ptr<IfContent> CopyNode(IfContent* node);
			virtual vl::Ptr<Module> CopyNode(Module* node);
		};
	}
}
#endif