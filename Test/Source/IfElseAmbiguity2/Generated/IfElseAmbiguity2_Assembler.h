/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:IfElseAmbiguity2
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_IFELSEAMBIGUITY2_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_IFELSEAMBIGUITY2_AST_ASSEMBLER

#include "IfElseAmbiguity2StatAst.h"

namespace ifelseambiguity2
{
	enum class IfElseAmbiguity2Classes : vl::vint32_t
	{
		BlockStat = 0,
		DoStat = 1,
		IfContent = 2,
		IfContentCandidate = 3,
		IfContentToResolve = 4,
		IfStat = 5,
		Module = 6,
		Stat = 7,
	};

	enum class IfElseAmbiguity2Fields : vl::vint32_t
	{
		BlockStat_stats = 0,
		IfContentCandidate_elseBranch = 1,
		IfContentCandidate_thenBranch = 2,
		IfContentToResolve_candidates = 3,
		IfStat_content = 4,
		Module_stat = 5,
	};

	extern const wchar_t* IfElseAmbiguity2TypeName(IfElseAmbiguity2Classes type);
	extern const wchar_t* IfElseAmbiguity2CppTypeName(IfElseAmbiguity2Classes type);
	extern const wchar_t* IfElseAmbiguity2FieldName(IfElseAmbiguity2Fields field);
	extern const wchar_t* IfElseAmbiguity2CppFieldName(IfElseAmbiguity2Fields field);

	class IfElseAmbiguity2AstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif