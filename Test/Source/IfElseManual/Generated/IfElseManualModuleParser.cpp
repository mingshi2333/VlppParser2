/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:IfElseManual
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "IfElseManualModuleParser.h"

namespace ifelsemanual
{
	void IfElseManualModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 2244; // 20378 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 196;
		static const vl::vint dataSolidRows = 8;
		static const vl::vint dataRows = 9;
		static const char* compressed[] = {
			"\x9A\x4F\x00\x00\xBC\x08\x00\x00\x09\x00\x01\x82\x80\x0A\x03\x82\x81\x82\x06\x89\x82\x84\x0A\x80\x81\x85\x07\x0A\x97\x0A\x9D\x0A\x83\x12\x85\x13\x0A\xAB\x0A\x8F\x1A\x86\x12\x01\x84\xFF\x21\xA2\x81\x9A\x80\x03\x91\x91\x25\xA7\xA2\x89\x9A\x97\x7C\x96\x95\x2F\xA7\xB1\x88\x9A\x85\x96\x97\x9A\x2D\xA5\xA5\x81\x08\x98\x99\x9E\x99\x3F\xB4\xA0\x99\x91\xA3\x95\xA2\x92\x47\xB7\x83\xBE\x9B\xA0\xA1\xA6\xA1\x06\xB6\xB3\x86\xA9\x84\x9D\xAB\xA4\x53\xC8\x8F\xB4\xA1\xAC\xA3\xAC\xAD\x5D\xCC\xA1\xAE\xA3\xB0\xAB\x80\xA9\x58\xE9\x9F\xAA\xA5\xB4\xAF\xB2\xAF\x06\x9F\x97\xAB\xB9\xAC\xB7\xB6\xB1\x77\xE4\xB9\xA6\xB2\x80\xB4\xBA\xB5\x06\x83\x0A\x96\xAD\xB0\xB3\xBC\xB7\x7D\xF0\x87\xC6\xC9\xC0\xBD\xC6\xBD\x8F\xFC\x81\x9E\xB5\xC6\xB9\xC8\xC4\x93\x8A\xD7\xCC\xC9\xCE\xC5\xCE\xC8\x9F\x92\xE6\x9A\xC1\xD0\xCF\xD0\xCF\xA7\xA0\xE9\xC2\xD4\xCB\x80\x87\xB9\x06\x85\x03\xC0\xC3\x86\x03\xD9\xBF\xB8\x95\xE5\x87\x07\xDA\xDC\xDB\xCD\x96\x81\x88\x1D\xD3\x86\x86\x82\xC2\x8B\xC1\xC4\x84\xE0\xE5\xBA\xE6\x85\x0B\x4C\xE5\xDC\xC0\x04\x06\xE9\xD5\xA6\xAD\xCD\xFF",
			"\xD3\xEA\xE6\xED\xEE\xCF\xB9\xC9\xE1\xFE\xDA\xF3\xEC\xF3\x01\x8D\x17\xFF\xE8\xEC\xE8\xF7\xF7\xA4\xED\xDE\xF1\xF0\xF8\xD5\xFA\xD5\xF7\xAC\xF4\xFB\xF6\xFC\xFE\xD4\x07\xEB\x7E\x72\x68\x44\xB0\x63\x7C\x76\x7C\x25\x50\x01\x80\x6A\x11\x0B\x88\x7E\x80\xD9\x50\x8E\x7A\x84\xF3\x7D\x76\x87\x83\x17\xBA\x79\x85\x84\x1B\x93\x88\x6A\x04\x0E\x9A\x88\x87\x88\x22\xA5\x8C\x84\x89\x27\xA2\x63\x05\x88\x29\xAD\x8E\x84\x8A\x2F\xA6\x81\x8E\x8B\xCA\x54\x0C\x8B\x8C\x38\x95\x80\x8E\x8E\x32\xBC\x84\x8C\x79\x06\xA8\x78\x83\x81\xF9\x7F\x87\x81\x05\x37\xBE\x84\x76\x05\x49\x80\x97\x7A\x41\x12\x45\x8F\x91\x90\xE5\x46\x48\x05\x93\x07\x99\x08\x96\x90\xEC\x5A\x0B\x96\x41\x1B\x1F\x94\x97\x98\x53\xA5\x90\x78\x91\x14\x8E\x97\x98\x97\x69\xA8\x9D\x86\x92\xCA\x5C\x02\x9A\x99\x43\xAC\x9F\x9A\x9A\x75\x95\x93\x40\x45\x52\xAB\x9A\x9C\x9D\x45\xB9\x88\x9D\xA0\xCA\x5E\x03\x9E\x9F\x64\x88\xA0\xA1\x7C\x1F\x07\xA9\x9F\x40\x20\x0A\x42\x5F\x9F\x8A\x95\xA0\x02\x08\x8E\x84\xA3\xA1\x9B\x76\xBB\x8B\xA7\x9D\x15\x59\xAC\xA4\xA5\x8F\x8B\xA8\x68\x09\xA2\xA0\xA2\x91\x09",
			"\xA9\xAA\x66\x09\xAB\x3D\xA5\x48\x45\x9F\xA5\x81\x48\x08\xAC\x46\x9D\xA1\xAE\x9B\x9E\x87\x89\x08\xAE\x82\xBC\xAB\xAE\xAE\xB9\xA4\xAA\xA6\xB0\xC5\x83\x4A\x08\xB0\x70\x9F\xAD\xAC\xB1\xC1\x90\xBD\xB0\xB2\xD1\x86\xB3\xAB\x40\x1A\x74\xA7\xB1\x42\x2C\x12\xA4\xB7\xB4\x09\x6E\x0E\xA0\x47\xDA\x97\xB6\xAB\xB3\xD6\xAA\xA9\xB8\xBA\x89\xB5\xAE\xBB\xB6\xA4\xB0\x0C\xB2\xB3\xC3\xAB\xB5\xBD\xBB\x31\x33\xBF\xB4\xBD\xA6\x72\x0A\xBE\xB4\xFC\x94\x73\x0F\xBF\xF6\x89\xB7\xBB\xBD\x07\xC6\xC6\xA4\x0D\x04\xED\xB0\xBE\xC3\xE6\x96\xAC\x79\x0D\x0D\xC9\xC5\xB4\xC4\xEA\x98\xCC\xB8\x9D\x36\x15\xC1\x43\x0D\x1E\xEE\xB8\x0D\xC8\x0F\xD6\xC0\xB9\xC1\x17\xE6\xC5\x49\x0E\x24\xD1\xCF\xBA\xCB\x25\xD6\xAA\x0D\xCB\x19\xEA\xCB\xBF\xCD\x00\xCA\x4B\x0D\xC8\x3C\x34\xCA\x69\x0F\x3E\xC8\xC2\xC4\xCC\x44\xF5\xC6\xA6\x0F\x41\xCA\xCF\xCA\xD1\x4B\xDB\xC1\x43\x0F\x49\xE9\xC3\xD0\xD3\x31\xCD\xD2\xD0\x00\x40\x21\xC1\x11\xD4\xCA\x42\x1C\xD5\xC0\x27\xDA\xC7\xD5\xD5\xEC\x43\x1F\xD4\xCE\x28\xE1\xD6\xCD\x42\x81\x1E\xB5\xBA\x4A\xB2\x6B\x56\x4F\xA4\x3A\x40\x72\x62\xDC\x2D",
			"\x77\xD5\x67\xDC\x75\xD5\x6A\xDD\x72\x7C\xC9\x44\xDE\xDD\x49\x76\x4F\xDC\x70\x81\xC7\x79\x53\xE1\xDD\x46\xE5\xE1\x4B\x83\xF5\xDE\xE0\xDE\x2A\x51\xE0\x02\xE5\x93\xFB\xD9\xDF\xE3\x95\xC9\x91\xDE\xE6\x9D\xC2\xEB\xE0\xE7\x27\x4C\xE2\x7D\xE2\x7D\xF2\x76\xEA\x4D\xA8\xC2\x48\xE7\xE6\x94\xE5\xE4\xEB\x48\x96\xC8\x70\x73\xE7\x80\xD0\xEE\xDA\xDF\xB3\xE2\x4B\xE8\xEB\xA1\xE9\xEA\xE9\xEF\x21\x56\xEF\xEA\x4A\xBF\xC0\xF3\x49\xF2\xCA\xC5\xF9\x90\xF3\xCD\xD0\xFA\xF2\xE5\x75\x52\xF0\xF2\xF1\xA3\xF1\xEB\xF0\xF1\xFF\x35\xE9\x50\xEE\x88\xF0\xE0\xEA\xEC\xDA\xE2\x44\xF5\x52\xD8\xEB\x56\xF4\xEB\xE9\xFC\xE5\xF9\x48\xEB\xED\xE1\x42\xED\xDD\x71\xF2\xF9\xEE\xC1\xE9\xE9\xE4\xFE\x27\x6D\xF9\x72\xFD\xC8\x7C\x7A\xF7\x6B\x26\x39\x81\x07\x7D\x7F\xBB\x7F\x7C\xF7\x00\x88\x80\xE1\x72\x3E\x7F\x84\x6F\x7D\xF7\x09\x81\x83\xF1\x5B\x7A\x82\x03\x95\x30\xF8\x0D\x77\x7F\xF0\x79\x7D\x6F\xFB\x7E\x81\x03\x8A\x7B\x2D\xD7\x16\x82\x24\x1B\x87\x75\x4B\x26\x8C\x7F\x91\x29\x85\x79\x17\x87\x84\xFC\x02\x8E\x81\xE1\x58\x84\x82\xF5\x6B\x80\x0D\xEF\x67\x24\x16\xA2\x86",
			"\x85\xDC\x7E\x84\x07\xF0\x6A\x86\x09\x8C\x84\x76\x35\x81\x87\x10\xA3\x86\x81\xEC\x72\x87\x1F\x47\x86\x7D\x92\x42\x8A\x84\x22\x92\x84\x8A\x30\x88\x87\x0E\x81\x3E\x89\x16\xBE\x73\x8B\xFA\x7A\x75\x42\x6B\x71\x8A\xE7\x62\x73\x2D\x96\x64\x8D\x11\xCF\x89\x83\xE4\x05\x82\x20\xEB\x6F\x85\x16\xFF\x1F\x8C\xC9\x6D\x25\x8E\x3A\x36\x24\x1E\x87\x83\x25\x3D\x89\x28\x8F\xF4\x72\x3E\x1F\x84\x89\x48\x2D\x35\x81\x90\xE7\x63\x8F\x21\x8A\x24\x8B\x14\x88\x92\x21\x29\x86\x76\x23\x8C\x9A\x20\xDB\x34\x56\x72\x96\x9C\x89\x42\x19\x93\x21\x40\x94\x8C\x37\x09\x23\x3B\x19\x86\x20\x94\x83\x38\x8D\x94\x03\x22\x96\x41\x54\x88\x20\x12\xB1\x2A\x21\xAD\x83\x22\xE9\x31\x92\x20\x4F\x90\x3A\x21\xAA\x8D\x89\x42\x56\x39\x21\xE8\x09\x20\x8F\xBE\x86\x21\x2E\x8B\x2A\x20\xF5\x17\x95\x98\x0A\x26\x76\x31\xAE\x9E\x34\x85\x00\x45\x97\xB8\x98\x84\x00\x4F\x96\x20\x5E\x86\x24\x9A\x03\x21\x99\x71\x4E\x97\x97\x50\x94\x93\x94\xCD\x9E\x98\x38\x82\x28\x8F\x61\x81\x24\x8A\x8F\x8A\x90\xAD\x54\x84\x40\x66\xAE\x72\x21\xED\x92\x94\x3C\xD7\x34\x8A\x05\x62\x9C\x94\x35\x85",
			"\x26\x1E\x57\x3C\x92\x81\x2D\x05\x86\xEB\x7B\x25\x47\x00\xA7\x41\x14\xA2\x5E\x81\x01\xB5\x84\xAB\x08\xA7\x40\x73\x80\x00\x95\xF9\x82\x23\x1E\x57\x3E\xA0\x6B\x91\xA2\x20\x7C\x17\x38\x44\x81\x26\x47\x8B\x83\x25\x0F\xFC\x8A\x23\xAF\x0C\xA2\x48\xD3\x4B\x5C\xA4\xA4\x4E\xA3\x8A\x1E\xA2\x20\x3F\x1A\xA2\x21\x5A\x4C\xA5\x40\x7F\x07\x3A\xCB\x72\x4A\xA6\xEE\x4E\xA1\x98\x38\xA0\x10\x7A\x8A\x21\x52\x0E\x81\x90\x7B\x0E\xA9\x5E\x9C\xAC\x3C\x08\x04\xA2\x49\x3E\xC2\xAE\x65\x36\xB4\x4A\xA0\x3C\x97\x6A\xE9\x7C\x86\x34\xB0\x78\x4C\x8A\xFD\x96\x51\x49\x4E\xA3\x6A\xD5\x19\xA8\x00\x5F\xAC\x3D\x49\x26\x79\xA0\x94\xB5\x31\x9A\x4A\xA8\x6D\xBB\x5F\xA8\x53\xB4\x9B\x92\x9A\xEC\x33\xA9\x25\xC9\x97\x41\x92\x0E\xA5\xAC\xB1\x34\xAD\x42\x1B\xA0\xAD\xBA\x9D\x9A\x93\x29\xBA\xAC\x3E\xF7\x9D\x5C\xAB\x87\x44\xAF\x6D\xA4\x55\x49\x58\x9F\x9C\x21\x5A\x9D\xB1\x83\xA0\xB1\x61\x8A\x26\x9E\xC9\xB4\x4B\x99\xF2\x84\xB2\x40\x72\x88\x35\x92\x2B\xA6\x9D\x5D\xA2\x34\x1E\x8C\xBA\xAA\x85\x1D\xA0\xB4\x56\x66\x37\x63\x81\x21\xAD\xF8\x25\x20\x49\xEA\x84\x55\x65\x99",
			"\xB6\x21\xD5\x97\x56\xAF\x09\x37\x4B\x38\x96\x5F\xB2\x5D\xB5\xB2\xB0\x93\xA9\x22\x97\x31\xBD\x5C\xD8\x96\xB1\x20\x16\xA7\x20\x6E\x86\x2C\x4E\xD4\x95\x68\xB3\x02\x36\xB6\x58\xEA\xA4\x4E\xD2\x80\x00\xBA\xA5\xB9\x66\x90\x71\x92\x20\x26\x6E\xAE\x20\x86\x51\xAA\xD2\x0D\x4F\xAD\xEF\x83\x25\x51\xC4\xB4\x4E\x6E\xC7\xB0\x00\xF2\x86\x26\xBB\x8A\xAA\x21\x62\xBE\xBD\x5D\x9D\xAF\x91\x21\xEE\xB4\xB5\x70\x86\x28\x55\xF4\x96\x55\xB9\xFA\xA2\x20\x88\x65\xB1\xBF\x84\x33\x54\xBD\xEC\x20\xA8\x7B\x83\xC6\x21\xF9\x8F\xAA\x21\x27\xB7\xBC\xA9\x16\x2B\xB6\x00\x0C\xC1\xC0\xD9\xA6\x21\xB7\x7E\xBE\x5D\x85\xAC\xBD\xB7\x02\x33\xB7\x83\x89\x24\x5C\xE7\xAE\x67\xB4\x03\x37\xC3\x88\xE9\x68\x4E\xE3\x83\x21\xBF\x2B\xC2\x6E\xD2\x70\xB3\x20\x17\xF1\xC3\x6D\xA4\x51\x4A\x41\x2D\xBD\xB2\x85\x32\x5C\xC3\xEC\x37\x54\x87\xBA\xC3\x20\xEB\x93\xB9\x21\x03\x62\xBC\x75\x59\x58\xB4\x22\xDD\xBB\xB9\x03\x2C\x61\x85\xEC\x3B\xC2\x09\xC3\x26\xC9\x01\x38\xAD\xEA\x1D\x60\xC9\xF8\x07\xA4\xBD\x31\xB6\x48\x94\xB8\xCD\x5D\x30\xC3\x23\xB8\x05\xCC\xC7\x81\x68\xC7\xAC\xF3",
			"\x82\x24\x65\x5D\xC8\x35\x51\xEC\xBC\xCC\x81\x0E\xC1\xC3\x03\x3D\x67\x94\xF1\x32\xCA\x2B\xC2\x25\xCE\x59\xC3\xCD\x40\x48\x61\xCE\xD5\x1C\xCC\xBD\xF6\xA3\x23\x7A\xFB\xB2\xC6\xA9\x40\x07\xA6\x62\xCE\xCD\x40\x5B\x6A\xC8\xB5\x41\x20\xC0\x76\xC2\xD0\x00\x5E\x65\xD2\x3C\x68\xBB\xC7\x9A\xC6\x6D\xA1\xA2\x30\xCF\x55\x8A\x27\xD3\x45\xDA\xD2\x11\x0E\x50\x69\x0A\xE8\xD7\xC9\x92\xC0\x03\x11\x70\xA1\x3E\xA8\x5C\xC7\xD5\x81\xD1\xD5\x12\x40\xB4\x4E\x4E\xE6\xD1\x21\x0A\xC3\x21\x78\xE9\xC3\x20\x26\x21\x61\x04\xA7\xDA\xD0\xD9\x71\x37\xCE\x00\x08\xD9\xD6\xCB\xC8\x34\x85\xA0\xD1\xD7\x26\x34\xD0\x35\xAB\xD4\x57\xB4\x98\xCE\x5D\x92\x0F\x0F\xDA\xAA\x33\xD4\xAD\x1E\xC3\x21\xFE\x84\xDA\x20\x51\x00\xDF\xD5\x2F\x59\x20\x73\xCC\xD2\x20\x53\x0A\xDE\xD2\x07\xCD\xCD\x73\xC1\x25\x0A\xBC\xD6\x50\x12\x52\x94\xDE\x58\xF6\xD8\x00\x58\x12\xDC\x75\x4A\x07\x3B\x7E\xF9\xD7\xDF\x86\x83\xD6\x69\x4B\x02\x9B\x91\x86\x22\xC8\xFF\xDD\x0A\xC0\x96\xD0\x01\x08\xC3\x20\xE2\xEF\xC1\x23\x17\x13\xE8\x4E\x26\xF5\xD9\xE3\x00\x01\x0D\xBE\xEE\x56\xDB\x0A\xDE\xE1\xD3",
			"\xB1\xC4\x0C\xC7\x8A\x2F\xDA\x5A\x67\xE7\xE0\x20\xE6\x0F\xC8\xEC\x30\x0A\x69\xBF\x9C\x5B\x9A\xC9\x0F\xCA\xC2\x4F\xCB\x81\x15\xC8\xE4\x6B\x1B\xE4\xA9\x25\xCF\xE3\x1B\xC1\x25\x0D\xDF\x84\x56\x14\x23\xE4\xE8\x94\xFF\xD9\x0E\x33\xF1\x3C\xBE\x95\xCD\xE8\x98\xC6\xE8\x00\x74\x09\xE9\xBB\x57\x03\xE5\x39\xC3\x27\xC7\xFF\xD8\x0E\xD0\xED\x5E\x5E\x07\xA2\xAC\x75\x38\xA9\x74\x53\xB0\x2B\xEC\x95\x01\x92\x27\x6F\xF0\xAA\x03\xD4\xA4\x24\xBA\xE6\x8B\xEE\xF9\x89\x91\x85\xBA\x21\xA1\xF8\x66\x74\xEF\xF9\x9F\xEF\x58\x81\xF4\xF1\x1A\x98\x89\x27\x87\xEB\x85\x3E\xD4\x8A\x26\xC6\xE5\x26\xF1\x90\x98\x28\x67\xD6\x8E\x81\x14\xBA\x26\xF2\x25\x38\xF3\x5C\xF4\x2C\xC6\x95\x1F\xAA\x27\x9F\xFB\x34\x56\x7C\xAC\x74\xBE\xBA\x26\xF4\x76\xB8\x2A\x43\xAC\x7E\xA0\x9D\x2D\xF5\x24\x78\x92\x29\xEC\xFA\x89\xEC\x00\x00",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"Do",
			L"Block",
			L"HalfIf",
			L"CompleteIf",
			L"IfTail",
			L"If",
			L"OtherStat",
			L"CompleteStat",
			L"Stat",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][Do] BEGIN ",
			L"[1][Do] END [ENDING]",
			L"[2][Do]< \"do\" \";\" @ >",
			L"[3][Do]< \"do\" @ \";\" >",
			L"[4][Block] BEGIN ",
			L"[5][Block] END [ENDING]",
			L"[6][Block]< \"{\" @ { Stat } \"}\" >",
			L"[7][Block]< \"{\" { Stat @ } \"}\" >",
			L"[8][Block]< \"{\" { Stat } \"}\" @ >",
			L"[9][HalfIf] BEGIN ",
			L"[10][HalfIf] END [ENDING]",
			L"[11][HalfIf]< \"if\" \"cond\" \"then\" @ Stat >",
			L"[12][HalfIf]< \"if\" \"cond\" \"then\" Stat @ >",
			L"[13][HalfIf]< \"if\" \"cond\" @ \"then\" Stat >",
			L"[14][HalfIf]< \"if\" @ \"cond\" \"then\" Stat >",
			L"[15][CompleteIf] BEGIN ",
			L"[16][CompleteIf] END [ENDING]",
			L"[17][CompleteIf]< \"if\" \"cond\" \"then\" @ CompleteStat \"else\" Stat >",
			L"[18][CompleteIf]< \"if\" \"cond\" \"then\" CompleteStat \"else\" @ Stat >",
			L"[19][CompleteIf]< \"if\" \"cond\" \"then\" CompleteStat \"else\" Stat @ >",
			L"[20][CompleteIf]< \"if\" \"cond\" \"then\" CompleteStat @ \"else\" Stat >",
			L"[21][CompleteIf]< \"if\" \"cond\" @ \"then\" CompleteStat \"else\" Stat >",
			L"[22][CompleteIf]< \"if\" @ \"cond\" \"then\" CompleteStat \"else\" Stat >",
			L"[23][IfTail] BEGIN ",
			L"[24][IfTail] END [ENDING]",
			L"[25][IfTail]( CompleteStat @ [ \"else\" Stat ] | HalfIf )",
			L"[26][IfTail]( CompleteStat [ \"else\" @ Stat ] | HalfIf )",
			L"[27][IfTail]( CompleteStat [ \"else\" Stat @ ] | HalfIf )",
			L"[28][IfTail]( CompleteStat [ \"else\" Stat ] | HalfIf @ )",
			L"[29][If] BEGIN ",
			L"[30][If] END [ENDING]",
			L"[31][If]< \"if\" \"cond\" \"then\" @ IfTail >",
			L"[32][If]< \"if\" \"cond\" \"then\" IfTail @ >",
			L"[33][If]< \"if\" \"cond\" @ \"then\" IfTail >",
			L"[34][If]< \"if\" @ \"cond\" \"then\" IfTail >",
			L"[35][OtherStat] BEGIN ",
			L"[36][OtherStat] END [ENDING]",
			L"[37][OtherStat]<< ( !Do @ | !Block ) >>",
			L"[38][OtherStat]<< ( !Do | !Block @ ) >>",
			L"[39][CompleteStat] BEGIN ",
			L"[40][CompleteStat] END [ENDING]",
			L"[41][CompleteStat]<< ( !OtherStat @ | !CompleteIf ) >>",
			L"[42][CompleteStat]<< ( !OtherStat | !CompleteIf @ ) >>",
			L"[43][Stat] BEGIN ",
			L"[44][Stat] END [ENDING]",
			L"[45][Stat]<< ( !OtherStat @ | !If ) >>",
			L"[46][Stat]<< ( !OtherStat | !If @ ) >>",
			L"[47][Module] BEGIN ",
			L"[48][Module] END [ENDING]",
			L"[49][Module]< Stat @ >",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<IfElseManualTokens, ModuleParserStates, IfElseManualAstInsReceiver>(&IfElseManualTokenDeleter, &IfElseManualLexerData, &IfElseManualModuleParserData)
	{
	}

	vl::WString ModuleParser::GetClassName(vl::vint32_t classIndex) const
	{
		return vl::WString::Unmanaged(IfElseManualTypeName((IfElseManualClasses)classIndex));
	}

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		return -1;
	}

	vl::Ptr<ifelsemanual::Module> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<ifelsemanual::Module, ModuleParserStates::Module>(input, this, codeIndex);
	}

	vl::Ptr<ifelsemanual::Module> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<ifelsemanual::Module, ModuleParserStates::Module>(tokens, this, codeIndex);
	}
}
