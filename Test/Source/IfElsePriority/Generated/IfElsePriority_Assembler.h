/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:IfElsePriority
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_IFELSEPRIORITY_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_IFELSEPRIORITY_AST_ASSEMBLER

#include "IfElsePriorityStatAst.h"

namespace ifelsepriority
{
	enum class IfElsePriorityClasses : vl::vint32_t
	{
		BlockStat = 0,
		DoStat = 1,
		IfStat = 2,
		Module = 3,
		Stat = 4,
	};

	enum class IfElsePriorityFields : vl::vint32_t
	{
		BlockStat_stats = (static_cast<vl::vint32_t>(IfElsePriorityClasses::BlockStat) << 8) + 0,
		IfStat_elseBranch = (static_cast<vl::vint32_t>(IfElsePriorityClasses::IfStat) << 8) + 0,
		IfStat_thenBranch = (static_cast<vl::vint32_t>(IfElsePriorityClasses::IfStat) << 8) + 1,
		Module_stat = (static_cast<vl::vint32_t>(IfElsePriorityClasses::Module) << 8) + 0,
	};

	extern const wchar_t* IfElsePriorityTypeName(IfElsePriorityClasses type);
	extern const wchar_t* IfElsePriorityCppTypeName(IfElsePriorityClasses type);
	extern const wchar_t* IfElsePriorityFieldName(IfElsePriorityFields field);
	extern const wchar_t* IfElsePriorityCppFieldName(IfElsePriorityFields field);

	class IfElsePriorityAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif