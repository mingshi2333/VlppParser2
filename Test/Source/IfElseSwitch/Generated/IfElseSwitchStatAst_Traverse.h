/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:StatAst
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_IFELSESWITCH_STATAST_AST_TRAVERSE_VISITOR
#define VCZH_PARSER2_UNITTEST_IFELSESWITCH_STATAST_AST_TRAVERSE_VISITOR

#include "IfElseSwitchStatAst.h"

namespace ifelseswitch::traverse_visitor
{
	/// <summary>A traverse visitor, overriding all abstract methods with AST visiting code.</summary>
	class StatAstVisitor
		: public vl::Object
		, protected virtual Stat::IVisitor
	{
	protected:
		virtual void Traverse(vl::glr::ParsingToken& token);
		virtual void Traverse(vl::glr::ParsingAstBase* node);
		virtual void Traverse(BlockStat* node);
		virtual void Traverse(DoStat* node);
		virtual void Traverse(IfStat* node);
		virtual void Traverse(Module* node);
		virtual void Traverse(Stat* node);

	protected:
		virtual void Finishing(vl::glr::ParsingAstBase* node);
		virtual void Finishing(BlockStat* node);
		virtual void Finishing(DoStat* node);
		virtual void Finishing(IfStat* node);
		virtual void Finishing(Module* node);
		virtual void Finishing(Stat* node);

	protected:
		void Visit(DoStat* node) override;
		void Visit(IfStat* node) override;
		void Visit(BlockStat* node) override;

	public:
		void InspectInto(Stat* node);
		void InspectInto(Module* node);
	};
}
#endif