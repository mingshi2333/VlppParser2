Do
  ::= "do" ";" as DoStat
  ;

Block
  ::= "{" { Stat:stats } "}" as BlockStat
  ;

IfTail_SWITCH_2allow_half_if
  ::= If_SWITCH_0allow_half_if:thenBranch "else" Stat:elseBranch as partial IfStat
  ;

IfTail_SWITCH_0allow_half_if
  ::= OtherStat:thenBranch "else" Stat:elseBranch as partial IfStat
  ::= !IfTail_SWITCH_2allow_half_if
  ;

IfTail_SWITCH_1allow_half_if
  ::= OtherStat:thenBranch ["else" Stat:elseBranch] as partial IfStat
  ::= If_SWITCH_1allow_half_if:thenBranch as partial IfStat
  ::= !IfTail_SWITCH_2allow_half_if
  ;

If_SWITCH_0allow_half_if
  ::= "if" "cond" "then" IfTail_SWITCH_0allow_half_if as IfStat
  ;

If_SWITCH_1allow_half_if
  ::= "if" "cond" "then" IfTail_SWITCH_1allow_half_if as IfStat
  ;

OtherStat
  ::= !Do
  ::= !Block
  ;

Stat
  ::= !OtherStat
  ::= !If_SWITCH_1allow_half_if
  ;

Module
  ::= Stat:stat as Module
  ;