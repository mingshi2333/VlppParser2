/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge1_Lri
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge1_LriModuleParser.h"

namespace prefixmerge1_lri
{
	void PrefixMerge1_LriModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3547; // 31104 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 219;
		static const vl::vint dataSolidRows = 13;
		static const vl::vint dataRows = 14;
		static const char* compressed[] = {
			"\x80\x79\x00\x00\xD3\x0D\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xC6\x12\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF7\xCA\x79\xFB\xFC\x2B\x35\x7C\x00\x4B\x7A\x38\x01\x84\x81\x3C\xF2\x76\x79\x00\xE4\x74\x5F\xFC\x46\x23\x7F\xE1\x26\x80\x56\x12\x80\x2C\xF8\x74\x27\x7F\x0A\x88\x25\x02\xD9\x7B\x24\x0B\x97\x82\x83\xEA\x6B\x27\x06\xFE\x72\x85\x10\xA0\x80\x80\x27\x99\x81\x49\x23\x88\x7D\x12\xA8\x83\x85\x26\x85\x26\x00\xFD\x79\x76\x07\x83\x20\x82\xF1\x71\x85\x48\x14\x8F\x2E\x16\xA4\x3C",
			"\x7E\xBF\x5E\x87\x07\xA9\x8C\x82\x94\x33\x85\x81\x2B\x2E\x7F\x0D\xD8\x2D\x7A\xE6\x58\x2A\x89\x02\x22\x8B\x4A\x4D\x81\x20\x0F\xA8\x20\x8A\x01\x38\x88\x79\x54\x83\x81\x27\xB8\x73\x8B\x5F\x96\x85\x14\xCC\x8A\x20\x2B\xA5\x22\x8B\x5A\x8B\x7E\xB4\x49\x81\x8C\x17\xAA\x83\x87\x41\x9A\x84\x48\x3C\x8D\x34\x29\x83\x88\x24\x76\x97\x8F\x3F\x47\x80\x7A\x36\xBA\x78\x2B\x79\x97\x8C\x1D\xCA\x31\x91\x21\x83\x90\x81\x72\x9F\x21\x21\x9F\x8C\x8E\x7D\x62\x8D\x3A\xD4\x69\x93\x3F\x66\x87\x8E\x2E\x82\x87\x91\x00\x0B\x93\x24\x92\x9C\x8A\x4A\xA0\x20\x8D\x91\x8F\x85\x48\x5C\x87\x81\xF6\x6D\x88\x25\x9E\x9F\x81\x2A\x97\x86\x92\x2F\x89\x22\x93\xAB\x8A\x8F\xFB\x2E\x96\x21\x34\x9D\x84\x93\xBF\x5A\x8B\x25\xB7\x92\x94\x90\x31\x93\x8A\xA7\x87\x8D\x5E\x21\x9F\x8C\x90\x1D\x94\x96\x03\x36\x94\x2A\xB8\x9B\x8D\x2B\x81\x99\x24\xBF\x8B\x99\x2F\x9F\x2D\x94\xB0\x1A\x88\x96\xCC\x93\x96\x35\x8A\x2A\x99\x92\x11\x9D\x24\xA4\x88\x9A\x13\x95\x82\x93\x6F\xA3\x97\x99\x9F\x83\x98\x39\xD3\x9F\x1F\x63\x9B\x99\x21\xDD\x90\x99\x36\x83\x25\x94\x4C\xBB\x94\x88\x24\x98",
			"\x9D\x0B\xFA\x9F\x86\x37\x85\x8A\x86\x0C\x9D\x8E\x33\xFF\x80\x2C\x1A\xBD\x9A\x9A\xC5\x9F\x22\x41\xFA\x8E\x96\x49\x9A\x94\x26\x0F\xBE\x9D\x3E\xB0\x8C\x9D\x88\xBC\x9C\xA1\x1F\x2D\x90\xFE\x7E\x8F\x80\x40\x8E\xA7\xA3\x15\xA0\xA5\x42\xFF\x16\xA2\x8A\xA3\xA5\xA4\x70\x9C\x2C\x12\x83\xAD\xA2\xB0\x28\xA0\x8F\x22\xBF\x9D\x48\x2F\xAA\x91\x98\x93\xA3\xA6\x36\xBB\x9C\x40\xAA\xA2\xA0\x61\x84\xA6\x7C\xE5\x93\x9E\x4D\x61\x3A\x8B\x7A\xBC\x93\xA4\xE6\x86\x9B\x50\xFF\x25\xA8\x8F\xA1\xA7\xA9\x27\xB9\xA7\x41\xA6\xA2\xA6\x98\x90\xAD\xAA\x19\xA1\xA2\x23\x9C\xAB\x88\x97\x92\xA8\xA3\x24\xBF\xA8\x46\xB4\xA1\xAC\x76\x9A\xA2\x7C\x5C\xA7\x20\x31\xD8\xAB\x92\x76\x9C\x8A\x93\x5A\x8B\x37\x3A\xC8\xA2\xA9\x80\x30\xAA\x21\x72\xBD\x86\x58\x8C\xA4\xAD\x43\xB9\x86\xAC\x71\x97\xAB\x4D\xF3\x8A\xAB\x8D\xAC\xA5\xAB\x40\xAC\x9D\x52\x9F\x2B\xB1\x7F\x02\x39\xAA\x82\xBA\xA4\x4E\xEC\x98\x86\xB0\x8B\xA0\xA3\x8D\xBC\x88\x62\x4D\xA3\xAE\xB6\x8F\xB4\xAD\x64\xA1\xB6\x24\x95\xB8\xA3\xCB\x8C\xA5\xB1\xA6\xBA\x8D\x66\xEA\x9C\xA8\xBC\xAB\xAB\xB0\x8C\xA1\xAA\x62\x92",
			"\x9F\xB2\xD8\xA5\xAB\xA4\xA4\xAC\xA1\x35\xAD\xBF\x95\xD7\x92\xB0\x24\xB5\xBF\xB5\x4D\x91\xB3\xAB\xC9\xB8\xB2\x92\xA9\xB7\x8F\x6A\xCB\xAA\x38\xCE\x89\xB3\xA4\xC1\xA5\xBA\x55\xC7\xBE\xAD\x5C\xA8\x99\xB6\xEC\x91\xB8\x58\xE4\xA9\xB6\x3D\xAE\x9C\xB7\xB5\x9E\xB6\x74\x9F\x2A\xBB\xB1\xBB\xAA\x8F\xDC\xA8\xBA\x6C\xA3\xA9\xB9\x21\x8B\xBE\x20\x77\xA9\x21\x5E\xAD\x3D\xB1\xFA\xB4\xB7\xBC\x77\x9D\xB9\x25\xD7\xBF\x1F\x6B\xA2\xB8\xAC\xE5\xBC\xAF\x68\xF5\xAD\x8B\x77\x93\x2F\xBF\x18\xA1\xC0\x7A\x83\xC5\xBA\xF0\x62\x99\x8B\x0F\xC0\x03\x3D\xBE\xA7\xC1\x82\xAA\xBC\x9D\xED\xBF\x81\x86\x97\x8B\xC2\x4C\x9C\x8E\xC3\x11\xDB\xB0\x73\xCD\xBA\x20\x05\xE1\x25\xC3\x2B\x28\xC4\x4A\x2A\xC5\x24\x16\xE7\xC7\xC2\xEC\xB2\x90\xDC\x23\xC5\xC1\x11\xC2\x82\x80\x6F\xA5\xB3\x42\x6C\x7E\x86\x83\xB3\xBB\xA9\xD1\xB1\xB8\x0E\xA3\x2A\x8B\xE8\x85\xCC\x9B\xD3\x74\xC6\x7C\x09\x21\xBB\x25\xC6\x25\xC9\x49\xC3\xC4\xFC\x3F\xC3\xA8\x83\xB0\x7E\xC7\x34\xC0\x03\x7E\x3D\xBC\xA6\x6D\x86\x23\xCB\xF0\xBA\xC6\x6A\x59\xCD\x00\xD6\x83\x26\xCA\x0A\x25\xCC\x97\x86\x28\xCA\x1A",
			"\xFD\xC5\x8C\x66\xCE\x7A\x6B\xB4\xC1\x41\x2E\xC3\x20\x7E\x75\xCC\xCF\x9C\xA3\xCC\x40\x83\x19\x41\x21\x7F\xC6\x20\x8B\x34\xCA\x47\x35\xC3\x25\xD0\x06\x24\x49\x42\x4A\x41\xCD\x84\x0A\xD1\xD1\x11\x2A\x23\x94\x09\x23\xD2\x83\x15\xD3\x20\x16\x19\xC9\x74\xA3\x2F\xC2\xF3\x25\x92\xCD\x59\xC9\x23\x0C\x07\x85\x94\x01\xB9\xC9\xD4\x03\x34\x04\xA9\xFB\xC7\xD1\x2C\xDC\x8D\x06\xAB\xCE\xC1\x42\x4A\x54\xC6\x2E\xB6\x01\xD6\x7A\xC9\x20\x0C\x2E\xD9\x22\x5C\xF5\x2A\x21\x92\x55\xD7\x7A\x25\x94\x52\x61\xE9\x3A\x80\x22\x1C\xD5\x42\x38\x0E\xD6\x81\x25\x90\x50\xC6\xC6\x21\x0E\x4D\xD6\xAE\x85\x1B\x00\xD5\x09\x3A\x04\xB5\x99\x96\xDA\x6C\xC6\x23\x07\xDB\xD4\xC8\x00\x29\x5E\xDA\x81\x3C\x01\xDC\x0A\x24\xDD\xB9\x80\x0D\x07\x6D\xF0\x7C\x06\xEB\xC1\x22\x0F\x5B\xDC\x8A\x1D\x0A\xDE\x20\x3F\x1B\xDA\x00\xBF\x07\xDF\x81\x00\x0B\xDB\xA5\x81\x5D\xB4\x83\x21\x08\x74\xC9\x27\x5A\x03\xE2\x22\x10\x5B\xDE\x87\x1D\x3D\xDA\x20\x43\x06\xE2\x41\x5F\x59\xE1\x80\x04\x0C\xE1\x0A\x3E\x07\xC3\x81\x25\x09\x6D\xF2\x09\xCB\x13\xD4\x35\xA8\xA5\x95\xD5\xF5\x3E\xAB\x3C",
			"\x9C\xCD\x73\x59\x86\x53\x24\x1F\x82\x80\x7E\x46\xBA\x35\x8E\xE9\x3A\x56\x71\xE1\xE0\x37\x3E\x91\xE4\x6F\x23\x28\x86\x9D\xFC\x67\xCD\x34\xE8\xC9\x42\x02\x80\xCC\x7A\xAB\x3E\xA0\x9D\xDA\x37\xDD\x54\x60\x7F\x9B\xDD\x3B\x24\xA0\xD7\x3A\x42\x7D\xC2\xEA\x1A\xE5\x91\xBA\xE2\xC8\xE6\x42\x03\xD5\xC3\xC1\x50\x91\x21\x4E\xDC\x43\x48\x0F\xD6\xE8\xB5\x44\x22\x21\x45\xEC\x4B\x48\x0C\xD5\xEC\xAF\xC0\x01\xEC\xE3\x98\x3F\x48\x17\xD1\xEF\x81\x16\x4B\xE8\x1A\x44\xEA\x42\x70\xEC\xE4\x85\x25\x4D\x99\xBC\x21\x9D\x42\x69\xE1\x20\xC2\xC7\x53\x24\x1A\x19\x61\xCE\xE9\xC2\xE8\xB9\xDD\xD8\xF0\x3C\x67\xD6\x40\x71\x98\x37\x91\x2E\x48\xF2\x92\x60\x00\xD5\x82\x24\xEC\xB5\xCA\x20\x4E\x98\xF8\x71\x40\x5C\xE3\x21\x40\xE2\xEA\x21\x1E\x0D\x70\xA2\x83\x24\xF4\xCF\xE6\xEB\x3C\x9D\xE1\x21\xEC\x87\xFA\x21\x0F\x31\xCE\x50\x06\xBE\x87\xEC\xCE\xEB\x39\x91\x03\x51\xD7\x06\x25\xD9\xD7\x88\xB7\xCD\x48\xE0\xEB\x3D\x23\x2A\x04\x7F\xA3\x22\xF3\x80\x25\x94\xED\x02\x26\xF2\xD6\x89\x20\x54\xBC\xE9\x3B\xF3\xCE\xE6\xFB\xF0\xAE\xF6\x20\x75\xFF\xD1\x21\xB1\x5B\xF9",
			"\x40\x26\xF5\xEE\x81\x19\xD4\xD2\xC8\xE2\x70\x87\x67\xF6\x21\xD4\xC1\xEA\xD4\x1A\x50\xDD\xE8\xCB\x3C\xFD\x81\x36\xF7\xFD\x06\x3E\x56\xAC\x34\xD6\x20\x9F\xF8\x35\xFE\x02\x1C\x27\xF8\x73\x10\xD1\x2D\x7F\x0A\x15\x2D\xF3\x73\x12\x77\x76\x69\xE9\x7F\x7A\xE6\x1B\x80\x03\x1E\x7E\x8E\x77\x70\x1A\x26\x6F\x09\x8A\x10\x10\x82\x10\xF7\x73\x81\xDF\x6A\x21\x14\x76\x80\xE9\x19\x81\x01\x12\x80\x1C\x83\x10\x02\x70\x82\x06\x1A\x71\x17\x89\x10\x63\x29\x10\x89\x73\x80\xB3\x3C\x24\x2D\x86\x10\x7C\x74\x7B\x09\x1C\x6F\xD6\x78\x1F\xAB\x75\x7E\x01\x13\x83\x03\x12\x7D\xE6\x13\x12\xEF\x29\x83\x1C\x20\x7D\x01\x12\x40\x3E\x8C\x83\x36\x86\x10\x00\x39\x10\x5C\x48\x31\x44\x86\x7E\xEC\x3F\x77\x34\x8D\x80\x06\x17\x32\x51\x86\x28\x54\x85\x75\x06\x1B\x85\xD1\x76\x85\x03\x1D\x32\x59\x87\x28\xD7\x63\x86\x5E\x87\x84\x60\x82\x10\x36\x3E\x84\x0A\x12\x34\x63\x80\x7A\xDC\x3A\x10\x2F\x8C\x80\x30\x81\x10\x4A\x3B\x82\xF8\x13\x87\x11\x89\x86\x01\x10\x35\x63\x8A\x35\x78\x83\x10\x7A\x8A\x81\x7C\x80\x00\x5F\x33\x86\x6C\x31\x88\x02\x13\x88\x23\x85\x88\x6E\x33",
			"\x86\x7A\x3A\x88\x01\x15\x86\x06\x1C\x88\x4B\x80\x39\x64\x8E\x77\x85\x8F\x3B\xE6\x17\x79\x74\x85\x82\x02\x1D\x37\x92\x87\x28\x9E\x8B\x87\x75\x80\x00\x7F\x33\x86\x89\x33\x8A\xA5\x84\x88\xA7\x8F\x05\x5F\x44\x39\xAC\x8A\x10\x24\x87\x7A\x09\x1B\x39\x63\x81\x3A\xA3\x80\x87\x03\x14\x77\x7D\x79\x10\xA3\x33\x8A\xE3\x1C\x8B\x02\x12\x81\xB6\x86\x10\xA9\x33\x86\xB1\x3B\x8B\xB5\x75\x88\x69\x0F\x45\xB7\x3C\x8C\x09\x15\x8B\xDC\x73\x10\x6C\x0F\x45\xC1\x33\x8A\xC6\x82\x10\x49\x8F\x8B\x6E\x73\x1E\x1B\x83\x10\xAD\x8E\x8D\x98\x83\x1E\xD4\x81\x10\xC4\x84\x8E\x31\x86\x28\xD0\x6F\x89\xC7\x83\x10\xC3\x32\x8C\xE6\x1D\x8E\xA6\x80\x8A\x01\x16\x3C\x63\x8F\x71\xA3\x84\x8F\xAE\x86\x8F\x00\x03\x07\x5F\x45\x07\x19\x3C\x8F\x8D\x87\x8A\x76\x0F\x45\x78\x09\x31\xC9\x68\x7E\xA7\x89\x07\x8D\x3B\x90\xED\x75\x88\x7A\x0F\x45\x7C\x0A\x90\xCD\x87\x8A\x7D\x0F\x45\x7F\x06\x91\xD3\x85\x88\x80\x0F\x45\x82\x09\x31\xBF\x73\x10\xB3\x73\x7D\x06\x13\x08\xCB\x74\x8B\x1A\x23\x92\x4A\x86\x92\x03\x15\x08\xEC\x38\x08\x5F\x44\x90\x12\x6A\x10\x25\x0A\x10\x8C\x27\x8A",
			"\x9C\x8A\x1B\x8F\x29\x10\x39\x9E\x8F\x3B\x9C\x1B\xC1\x66\x10\x3F\x9F\x8E\x02\x1A\x08\x29\x99\x1E\xC2\x73\x10\x45\x95\x8D\x02\x1C\x08\x49\x98\x1F\x16\x1E\x68\x85\x8E\x08\xEC\x33\x1E\x2C\x98\x86\x09\x13\x95\xE2\x77\x89\x02\x11\x09\xB7\x70\x00\x95\x0F\x45\x37\x9C\x86\x09\x1E\x29\x54\x97\x8A\x97\x01\x96\xE3\x1B\x94\x63\x47\x96\x0A\x17\x2A\x3A\x9E\x3B\xE6\x18\x96\x5D\x9E\x92\x02\x1B\x09\x62\x60\x00\xA0\x0F\x45\xD5\x70\x7C\x03\x1F\x97\x24\x95\x88\xA2\x0C\x96\xE6\x11\x7E\x03\x1E\x43\x82\x9D\x92\x41\x8A\x10\xA6\x0B\x97\xAB\x0F\x45\xFA\x70\x98\x02\x12\x97\x06\x1A\x7C\xA7\x8D\x0A\x8D\x36\x99\x03\x1F\x02\x85\x8E\x0A\x5F\x40\x0B\x19\x3E\x7D\x95\x9B\x89\x74\x9A\x1B\xA4\x91\x10\x8B\x9A\x8E\xB9\x3A\x2B\x9E\x90\x97\x73\x95\x3A\xE3\x1B\x6B\x09\x18\x99\xFE\x81\x0B\x8D\x34\x9B\x06\x1F\x9A\xFE\x82\x0B\x5F\x44\x0B\x19\x38\x98\x9C\x75\x88\xB5\x06\x98\xBA\x16\x81\x71\x80\x7E\x51\x9C\x5C\xB9\x0B\x97\xBE\x0F\x45\x27\x89\x98\x0A\x13\x03\x0A\x15\x92\x8D\x99\x10\xC0\x07\x95\xE6\x13\x84\xC9\x96\x10\xD4\x93\x86\x78\x91\x10\xC3\x01\x96\xC7",
			"\x0F\x45\x08\x36\x68\x02\x12\x7F\x06\x14\x2B\xA7\x89\x0C\x8D\x3A\x9E\x03\x13\x99\x46\x91\x10\xCA\x0F\x45\xCC\x09\x31\xF2\x92\x10\xDF\x90\x94\xA7\x9C\x1B\xFC\x73\x10\xEC\x9E\x8F\xCD\x0D\x38\xFF\x92\x10\xF9\x9C\x9A\x00\x0E\x0C\x5F\x40\x0D\x19\x35\x80\x83\x97\x8A\xD1\x0B\x9C\x02\x18\x85\x28\x84\x80\x7B\x75\x88\xD3\x02\xA1\x01\x19\x32\xB2\x2E\xA0\x5F\x87\x8A\xD5\x0A\xA1\x00\x02\x86\x15\xA2\x10\x1E\xAA\x95\xFE\x87\x0D\xEC\x3A\x0D\x5F\x41\x33\x63\x88\x70\x06\x18\x80\xFE\x8C\x0D\x8D\x38\x9C\x03\x12\xA3\xF3\x90\x00\xDD\x05\xA3\x0A\x16\x97\x39\xAE\x0D\x8D\x7C\x21\x38\x33\x86\x36\xAA\x9F\x85\x88\x0E\x68\x71\x34\x1A\x2E\x70\xCB\x65\x88\xF4\x0D\x38\x1F\x87\xA3\x85\x85\x0F\x8D\x31\x9D\x02\x18\xA3\x4E\x91\x10\xF6\x05\xA5\x0A\x1D\x8D\x5E\x91\x10\xF7\x00\x67\xE9\x14\x34\xB2\x26\xA5\x01\x1E\xA3\x59\xA0\x00\xFD\x01\xA4\x4C\x27\x87\x5D\x96\xA6\x00\x09\x8E\x5F\xA0\x00\x07\x07\x40\xAB\x43\x12\x52\x35\xA6\x0A\x13\x8E\x73\xAD\x00\x76\xAB\x1E\x80\x85\xA2\x01\x10\xA7\xFB\x99\xA3\x13\x07\x40\x40\x8A\x1B\x87\x82\xA8\x00\x0A\x82\x31\xA5",
			"\x88\x1F\x0B\x6D\xAC\x38\x83\x8F\xA7\x8A\x20\x02\xA9\x9F\x34\xA9\x03\x1E\xA5\xE1\x90\x00\x21\x0F\xA7\xE9\x18\x36\xB2\x2A\xA9\x02\x12\xA7\x9D\xA7\x02\xA0\xA8\x1F\x89\x8C\xA8\xA4\xA1\x10\x7C\xAD\xA9\x2D\x09\xAA\x1C\x2F\x88\x8C\xAA\x2E\x34\x68\x72\x17\x41\x6F\xCE\x63\x72\xBC\xAB\x2C\xFE\x70\x12\xA5\x46\x13\xBC\x75\x93\xF3\x32\x40\xC2\xAA\x21\xC4\xA4\x63\x7E\x50\x00\x49\x70\x13\xCD\xA0\x4E\xA1\x6A\x59\x29\x79\x65\x9A\x4C\x6D\xF3\x3E\x43\x36\x18\xAD\x2D\x7B\x97\xD6\xA4\x99\x6F\x9E\xAD\xD5\x66\x67\xD2\x98\x9E\xDF\xAF\x7D\xE4\xA0\x00\x06\x5D\xAD\xE3\xA7\xAE\x9A\x5B\x78\x61\x96\xAC\x1B\x68\xAE\xEA\x36\x50\xF0\xAF\x45\xF2\xA2\x2B\xF7\xA4\x63\x77\xA1\x4B\x30\x77\x19\xC8\xAD\xAF\x62\xAC\xA8\x00\x00\xB0\xB2\x64\x63\x59\x7A\x13\x07\xBB\x12\xE2\x61\xAC\x0B\xB3\x12\x0D\xBC\x6A\xCC\x56\x62\x29\x12\xB1\xC0\x56\xAF\xD1\x56\xAC\x9B\x61\x1C\xA1\x69\xB1\x25\x68\xAC\xD1\x51\xAC\x23\x10",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> ) >>",
			L"[62][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> ) >>",
			L"[63][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixMerge1_LriTokens, ModuleParserStates, PrefixMerge1_LriAstInsReceiver>(&PrefixMerge1_LriTokenDeleter, &PrefixMerge1_LriLexerData, &PrefixMerge1_LriModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixmerge1_lri::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixmerge1_lri::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixmerge1_lri::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixmerge1_lri::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
