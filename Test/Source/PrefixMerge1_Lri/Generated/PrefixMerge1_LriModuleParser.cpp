/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge1_Lri
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge1_LriModuleParser.h"

namespace prefixmerge1_lri
{
	void PrefixMerge1_LriModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3584; // 31798 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 0;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 14;
		static const char* compressed[] = {
			"\x36\x7C\x00\x00\xF8\x0D\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x82\x1A\x87\x12\x85\x17\x0A\xB5\x0A\x8C\x32\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\x91\x9E\x90\x93\x18\x17\x91\x9A\x42\x19\x14\x99\x7B\x06\x66\xA0\x9E\x99\x97\x6F\x9F\x90\x9D\x77\x1C\x2A\x98\x7E\x07\x6D\x9D\x7F\x06\x86\x20\x0A\x46\x5F\x84\x46\x84\x80\x96\xA0\x81\x80\xAC\x6F\x08\x1A\xA4\x09\x9E\x9C\x8C\xA2\x9D\x90\x00\x25\x1A\x86\x0A\x9F\x84\x9A\x9E\xA2\x8B\x73\x8D\xAA\x41\x0A\x1A\xAA\x04\xA6\xA1\x67\xA0\xA1\x9F\xA5\x83\xA9\x7D\x0B\xA2\xA4\x85\xA1\x8A\xAA",
			"\x4F\xAC\xAC\x90\xA6\x9A\x89\x4E\x08\xAA\x95\xA1\xAB\xAA\xA5\xEB\x58\x4B\x93\x98\xBC\x8F\xA0\x0E\x86\x31\x1F\xA7\xAE\xAD\xAD\xB8\xA2\xA9\x77\x34\x1A\x8A\x45\x42\x7F\x83\xB3\xA9\xAD\xCF\x87\xBB\x70\x0E\x1A\xB9\x02\xB1\xB1\xC4\xAF\xA5\xAA\xB3\x99\x8E\xAC\x0C\xAD\xD2\xA9\xAC\x6D\x0F\xE0\x9C\xB1\xAE\xB9\xE2\x99\xBD\xAF\x78\x3E\x25\xB8\xB5\xB4\xE8\x90\xBD\xB6\x42\x3F\x2E\xBA\xB6\xAB\xEB\x9B\xBF\xB9\x77\x40\x36\xB9\xBC\xBE\x8F\xB0\xA9\xB8\xBC\x1C\x81\x1E\xBD\xC0\xFA\x8C\x92\x13\xC1\x02\xF2\xB7\xBB\xBE\x0F\xF7\xB6\xB0\x7E\x43\x1A\x84\x10\xC3\x09\xFD\xA5\x10\xC6\x00\xC6\x1C\xC7\xC4\x10\xE3\x47\x13\xC1\x48\x1A\x89\x13\xC7\xEA\x88\xC0\xC1\xC3\xE1\xAB\x7A\x12\x86\x4B\x28\xC4\xC2\xC4\x29\xE3\x7C\x12\xCC\xF3\xAD\xCA\xCE\x41\x4D\x1A\x8E\x10\xCE\x11\xFF\xB0\xC8\xCD\x33\xFD\xAF\x10\xD0\x03\xF9\xC6\x40\x14\x48\xCE\xC9\xD1\xD0\x2A\xC3\xD2\xD1\xCA\x51\x0D\xDB\xCC\x87\x52\x07\xC3\x16\x86\x54\x16\xD1\xBF\xD5\x44\xCA\xD1\xCA\xD3\x64\xC9\x45\x16\xD7\x03\x56\x1A\x87\x15\x68\xE1\xD0\xD4\xCB\x5F\xF8\x78\x15\xDB\xBD\x99\x16\x9C\x87\x5B",
			"\x34\xD1\xD5\xCD\x19\xFB\xD5\xD3\xA3\x5C\x3A\xD0\xDF\xD8\x60\xFD\xAD\x17\xC1\x5E\x02\xED\xDF\x17\x7A\xE0\x1A\xE3\xCA\x7D\xC3\xEC\x91\x18\x8F\xD2\xDE\xDE\xD8\x6E\xE3\x42\x1B\xC1\x63\x37\xD9\xE7\x7A\x65\x1A\x86\x1A\xE7\x53\xF8\x68\x19\xE5\x7C\xD0\xEA\xE8\x6F\x69\x07\xCA\x18\xEA\xB8\x6B\x1A\x84\x1B\x7A\xC4\x22\x56\x40\xFD\x42\x4D\x5E\xB4\x34\x56\x77\x40\x56\xBB\xFF\x54\x4D\xF0\xAD\x74\x4B\x68\x58\x34\x79\xE1\x41\xB3\xAD\x42\x72\xF3\x4A\xBE\xC1\x48\x66\xB9\xBD\xCA\x44\xF2\x72\xD7\xE1\x73\xF0\x56\xC6\xDC\xFB\x4A\xF2\x00\x0C\xFA\x72\xF3\xC5\xD0\xFA\x43\xF4\xAD\x62\xFA\xF7\xF7\xD6\xCE\xC5\xF5\x42\xD1\xE4\x7A\x5C\xF2\x2B\x59\xF4\x79\xF2\x8B\xA0\xF7\xEE\x72\xEA\xF7\xFC\xF8\x5F\xEE\x66\x7C\xFC\x58\x2A\x7E\x02\x8B\x56\x7E\x34\x3B\x78\xFD\x28\x2D\x7F\x04\xB5\x7E\x7B\x0C\x90\x81\x49\x0D\x8E\x81\x09\x92\x81\x24\x14\x95\x80\x48\x19\x8A\x83\x7F\x1C\x82\x83\x1F\x95\x81\x08\x8E\x80\x7C\x04\xBC\x47\x7D\x06\x31\x7C\x4D\x23\x89\x81\x02\xA0\x2C\x85\xF8\x7B\x54\x79\x30\x8B\x24\x1A\xA8\x25\x84\x01\x88\x25\xFC\x2A\x85\x87\x0B\xA0\x26",
			"\x85\x7F\x36\x85\x49\x40\x89\x7C\x1F\x9F\x22\x88\x21\x38\x84\xEF\x02\x89\x84\xAC\x08\x8F\x87\x8B\x4F\x8B\x47\x44\x8C\x7E\x23\x9E\x86\x8A\x4A\x94\x78\x13\x83\x2C\x86\x94\x26\x85\x83\xFF\x1F\x89\x07\xC7\x7F\x79\x1B\xA4\x74\x3C\xE4\x6A\x38\x0A\x83\x23\x7F\xBF\x22\x8A\x83\x64\x85\x7E\x19\x89\x28\x7D\xF1\x56\x89\x7E\x0A\x00\x7A\x15\xF1\x8A\x8D\xFF\x46\x23\x7F\xE1\x29\x8F\xFA\x3A\x87\x8C\x05\xA5\x8D\x24\x6F\x95\x80\x1F\x83\x93\x89\x42\xAB\x22\x90\xFE\x64\x91\x42\x6D\x8D\x35\x44\x8E\x83\x91\x91\x8D\x90\x1D\xD8\x20\x92\x30\x9F\x20\x8F\x7A\x8B\x81\x49\x18\x9E\x93\x7F\x14\x89\x90\x77\x8E\x92\x17\xD6\x86\x93\x04\xA4\x96\x93\xE0\x60\x7C\x4D\x1D\x9E\x93\xF8\x54\x90\x7B\x7B\x98\x8B\xF9\x1C\x99\x95\x84\x39\x88\x2C\xAD\x9D\x7A\x28\xC9\x8B\x50\x5A\xA0\x89\x7E\xB2\x8F\x83\x30\xA0\x21\x99\x95\x2F\x90\x8C\xB1\x9C\x97\x32\x9F\x99\x2F\x50\x87\x91\x24\xCF\x9D\x80\xF8\x75\x88\x95\x69\xBF\x18\x94\xC0\x99\x96\x37\xA7\x98\x8D\x5E\x93\x2E\x9A\x72\x88\x92\x38\xD7\x90\x8B\x84\x09\x98\x25\xC6\x9D\x82\x2D\xE8\x9D\x8E\x94\x19\x9A\x83\xDB\x92",
			"\x98\x3B\xD4\x9E\x96\x7A\x8C\x90\x9B\xBA\x92\x87\x2C\xE6\x97\x3A\xAC\x37\x9D\x82\xD1\x80\x2D\x3C\x9A\x83\x9E\xB0\x07\xA4\x84\xBB\x8A\xA0\x41\x82\x2F\x97\xBF\x0F\xA5\x85\xC5\x93\xA1\x40\x6F\x96\x82\x6F\x92\x8F\x8A\x1E\xA1\xA2\x41\x2D\x98\x31\x35\xBF\x70\x2C\xB7\x9F\x9C\x33\xD6\x89\xA5\x4C\xA1\x25\x99\x11\x81\xA6\x4C\xFB\x90\xA4\x9A\x9F\xA7\xA3\x59\x90\x62\x49\xD5\x3E\x88\x2B\xB7\xA6\xA7\x40\xB3\xA5\x3A\x98\x81\xA8\x9A\xB9\xA6\x6D\x3B\xA4\x21\x4F\xC2\xA5\x9F\x8E\xB6\xA5\xA8\x43\xBB\x80\x54\xCD\xA4\xA9\x71\xAD\x7B\x89\x92\x8D\x89\x38\xDE\x90\xA7\x51\xA2\xA6\x26\x76\x9E\x99\xFC\x00\x94\x3D\xAE\xAF\xA3\x9D\x51\xB3\x88\x58\xFF\x2B\xA1\x0A\xA3\xAB\xA9\x4F\xAC\xAA\x4A\xC7\x83\xAB\xB9\xB5\xA1\xAD\x77\xB4\xAA\x54\xD6\xA0\x80\xAC\xA5\x23\x87\x70\xB8\xAF\x4F\xF2\xAE\xA5\xBD\xB1\xAE\xA8\x57\xBA\x89\x56\xDC\x8E\x9F\xC2\x9F\x26\xAC\x20\x37\xA1\x0C\x86\x2D\xA5\x81\xA2\xAA\x21\x17\xB0\xB3\x63\xE8\xAA\xAE\xB5\x93\x92\x9F\x78\xB1\x7F\x45\x83\xB7\xB0\xBC\xA4\x9B\x85\x5F\xA2\x20\x59\xA8\xB4\xB1\x52\x87\xAD\x74\x0E\x80\xB3\x56\xB4",
			"\xAA\xB3\x30\x9C\xB6\xAE\xA4\xA2\xB2\x15\xED\xAE\x81\xCA\x9E\x95\xB6\x92\xBE\x8F\x5A\xE5\x97\xB2\x81\x8A\x9C\xA6\xC1\xB1\xA5\x69\x9D\xB9\xAE\xBB\xBC\xB1\x81\xBE\xA0\x8D\x6D\xD1\xBD\x82\xE0\xA9\xB1\x20\xD4\xA1\x27\x73\xC9\xA9\xB2\x56\x9E\xBC\xAB\xB7\xAE\xB1\x73\xE2\xBB\xBA\x67\x97\xB8\x00\x1C\xBA\xBA\x46\x80\x09\xBB\x95\x9E\x99\xB9\x4E\xBA\xB5\x6B\x9E\x95\xBC\x94\x2D\xBE\x81\xD6\xBC\xAF\x70\xC4\xB4\xA7\xB7\xB3\xB0\xAF\xF0\xB5\xA8\x4D\xF5\xBE\xAA\xFD\x83\x23\xB5\x8F\x8B\xBD\x7A\xEE\xB8\xB9\xBA\xA4\xB9\xBC\xAE\xB1\xA0\x5B\xEB\xB5\xA3\x4A\x90\xC6\x93\xB9\xAC\xBB\x47\x84\xC1\x25\xFB\x89\x83\xBA\xDF\xAD\xC2\x81\x82\x2E\xC2\x0E\xE0\x22\xB4\x8D\xA5\x95\x6D\xF9\xBB\xB8\xE7\x97\xC0\x9A\xAA\x85\x26\x89\xFC\x94\xB3\x14\xDE\x91\xC0\x86\xB8\xAF\x8C\xFF\x18\xC6\xCF\xBF\x88\xB4\xCC\xA8\x9A\x8D\xE0\x8D\xC7\xF1\xA5\x93\xC7\x45\xD9\x9E\x44\xC5\xB6\x21\x0A\xCA\x3A\xC8\x60\x30\xCB\x5F\x1E\xC4\x26\x2A\xEB\x26\xCA\xF6\xAC\xA7\x7A\xAC\x81\x7E\x2E\xFB\xB9\x3C\xF1\x68\x31\xFC\x4F\xB8\xCB\x92\x25\xCD\xC3\x5A\xDE\x9B\x99\xA0\x2B\xCD\x8F",
			"\x2D\xCF\x1F\x76\x7F\xC8\x59\xA3\x29\xA0\x83\x3D\x7D\xA5\xF6\x7C\x99\xF8\x55\x9D\xAE\x83\x18\x91\x38\x0A\x30\x91\x98\x8A\x2E\xC9\x80\x10\x95\xD0\x00\x07\xD1\x43\x5F\xC0\x00\xF9\x09\x20\x92\x8E\xC6\x20\xA4\x8B\xDF\xCA\x3D\xFF\xC9\xB1\x03\x3A\xCE\xFD\x17\xD9\x21\xFD\x1F\xB5\xCF\x99\xCA\x22\xA7\xB5\xC0\xD4\x81\x1C\xD6\x20\x0D\x1C\xCF\x48\x92\xC3\x21\x54\xDF\xD3\xD5\x09\x27\xD4\x1B\x98\xDB\x20\x55\xC3\x23\xD3\x8C\xC1\x41\xA9\xD2\x7A\x20\x5D\xF0\xD6\xCF\x8C\xCC\x42\x41\x19\x49\x20\x62\xC6\x24\x45\x5F\xDA\x47\xAB\x83\x2A\xD8\x83\x04\x49\x21\x4A\x44\xD6\xB3\x8A\x2F\xD8\x83\x11\xDB\x20\x53\x49\x21\xB6\x86\x2B\xDB\x81\x16\x04\xD1\x90\x83\x24\x0B\xCF\x2A\x20\x57\xCC\xD1\x21\x71\x00\x90\x59\xE0\x7E\xD7\x73\xC3\x22\x0E\xEA\xD8\xB2\x42\x4D\xD3\xB9\xFE\x73\x09\xDE\x9B\x89\x21\xB2\x5F\xCD\x7E\x3A\x38\xDF\xD7\x03\x33\x54\xBF\x8A\x25\x0F\x7F\xF5\x2A\x21\x8A\x43\xE1\x7A\x64\xA1\x52\x85\xF8\x38\x7C\x7D\x4E\xE3\x40\x76\x06\xE0\xD5\x8A\x23\x4F\x12\xE2\x23\x1D\x15\xE8\xBA\x34\x6E\xD9\x21\x78\x1C\xE0\x7B\x9E\xEF\xE3\x81\x39\x0A\xE4",
			"\x98\x8C\x05\xC9\x83\x2A\x0E\x94\xCA\x22\xE5\x2B\xE1\x23\x1E\x22\xEA\xCE\x19\x31\xE1\x20\x7C\x02\xE5\xFF\x54\x59\xE3\x80\x3D\x0A\xE4\xE0\x64\x5D\xCF\x80\x0E\x0E\x91\xE4\xAB\x07\x8C\xDD\x7F\x1F\x2E\xE9\x21\x1B\x09\xEA\x21\x80\x02\xE5\x4B\xD6\x53\xE9\x40\x0C\xEE\x20\x3A\x0F\xE9\x42\x02\x12\xEA\x85\x1F\x5B\xE8\x83\x02\xE5\x1B\x0C\xDB\xC1\xEE\x27\xDC\xAC\xEB\xCB\x3F\x69\xE6\x32\xDC\xBD\x6F\xB7\x51\x23\x2D\xA5\x4B\x90\x98\xC0\xDD\x37\xCB\x3D\x8E\x52\xC8\x87\x2D\xA5\xEE\xDE\x23\x21\xD2\x07\xC5\x6E\xB4\xB7\xD8\xEE\x51\xF6\xD2\x20\xC6\xC1\xF1\x7A\x76\x73\xDC\x46\xD2\x75\x57\x7A\xC5\xEF\x72\x23\x28\xD9\x73\x89\x25\xDA\x05\xB2\xCD\xA0\xF2\xD9\x3D\x91\x1D\xD8\x77\x82\xEC\xB1\x42\x00\xFC\x49\x91\x16\x4E\xB8\x00\x71\x7F\xA8\x9C\x43\x25\x32\x68\xF6\x72\xA4\xFB\xA1\xE1\x89\x29\x4C\x77\x8A\x24\x4D\xB6\xF2\x84\xF8\x2B\xF2\x21\xD8\xF0\xEA\x21\x1D\x07\x61\xFF\x64\xAC\xF7\x80\x05\xFF\xF7\x09\x38\x4F\xEB\xB4\x3C\xEF\x72\xC4\xD3\xF6\x06\x38\xE3\x8F\x85\x70\x01\x76\xD4\xA0\xFA\x03\x31\xE3\xF4\xF1\x63\x20\x61\xC3\x20\xF3\xA5\xEA\x21",
			"\x08\x7A\x65\xF3\x81\x09\xF1\xFC\x09\x34\x23\xF2\xFF\x64\xDE\x81\x25\xF8\xFD\xDC\xEC\x48\xF8\x81\x23\xFE\xE4\xC6\x20\x51\xCB\xCC\x4A\xFD\x2D\xA5\xFE\xC9\xE7\xDE\x22\xBB\x60\x00\x30\x76\x79\x5A\x50\x70\x02\x17\x6D\xBD\x78\x7D\x02\x12\x70\x04\x8C\x21\xD6\x71\x10\x64\x58\x80\xC6\x7A\x80\x01\x1F\x2B\xB9\x78\x1F\xDE\x76\x71\xD0\x61\x63\xB4\x13\x12\x36\x7C\x2C\x19\x17\x46\xE7\x72\x7B\x09\x1F\x6D\x09\x1E\x7A\xF8\x1F\x34\x8E\x26\x82\x06\x1E\x7B\xE3\x13\x12\x4E\x77\x81\x1C\x2D\x7E\x24\x86\x10\x2C\x83\x10\xC7\x7F\x82\x0A\x14\x75\x0D\x8C\x24\x12\x88\x5E\x0A\x17\x83\xA0\x7D\x79\x0A\x18\x74\x20\x89\x10\xED\x22\x83\x02\x12\x84\xCB\x3A\x10\xA7\x7D\x82\x14\x80\x00\xFD\x2A\x84\xBD\x25\x7B\x3D\x81\x10\x4F\x88\x83\x51\x8B\x30\x54\x8F\x28\xB8\x77\x85\x00\x09\x85\x43\x89\x82\x0A\x17\x31\x47\x86\x10\x23\x3D\x85\xC1\x77\x86\x03\x18\x82\xD8\x61\x85\x27\x3B\x7E\x98\x31\x10\x6E\x82\x10\x75\x24\x84\x09\x1F\x32\xF9\x71\x10\x3F\x32\x87\xCB\x15\x87\x01\x1B\x86\x64\x89\x10\x47\x3B\x87\x00\x0B\x35\x7E\x8D\x7A\x0A\x1A\x7C\x83\x86\x10\x5D\x36",
			"\x88\x73\x39\x88\x24\x76\x10\x80\x86\x7F\x84\x38\x1F\x56\x83\x10\x62\x8D\x2B\x2A\x8B\x1E\x1A\x0A\x10\x9F\x7C\x89\x0A\x11\x67\xDB\x77\x89\x03\x1F\x89\x09\x17\x87\x8D\x83\x10\x5A\x07\x78\x01\x19\x38\x92\x89\x10\xA8\x86\x10\x82\x8C\x7A\x0A\x1C\x38\x86\x8D\x39\xB1\x86\x10\xB3\x83\x10\x8C\x86\x8B\x09\x14\x06\xAE\x80\x00\xA7\x3B\x8B\x03\x1F\x85\x6F\x88\x87\x06\x1D\x3A\xC6\x8C\x24\xC8\x86\x87\x51\x8F\x3A\x86\x8E\x06\x07\x3F\x8C\x81\x81\x85\x6F\x03\x8C\x73\x05\x8D\x8B\x81\x85\x74\x03\x8C\x78\x07\x30\xAA\x8E\x6D\x51\x8F\x78\x8F\x25\x8B\x02\x1D\x8B\xF0\x76\x8A\x4C\x2F\x8B\x02\x16\x8D\x96\x8F\x39\xE9\x12\x7D\xC9\x8B\x8A\x02\x19\x07\x7A\x34\x8F\xD0\x8A\x8C\x2C\x73\x8C\x7E\x07\x30\xFA\x87\x8D\xFC\x82\x10\x7F\x03\x8C\x83\x00\x90\xDD\x83\x90\x01\x14\x08\xC3\x88\x08\x07\x3A\x7D\xF5\x80\x8C\x06\x19\x08\x7A\x30\x91\xFB\x86\x8F\x01\x1A\x08\xC3\x8E\x08\x0F\x90\x7C\x51\x8F\x08\xC3\x83\x09\x1D\x99\x7C\x51\x84\x09\xC3\x88\x09\x07\x33\x7E\xDA\x65\x8E\x91\x36\x1E\x2A\x96\x10\xE3\x8B\x8E\x02\x19\x09\xD7\x22\x10\x9C\x09\x92\x1E\x9A\x90",
			"\x00\x0D\x09\x35\x91\x10\xA0\x08\x93\x24\x9A\x93\xA1\x0D\x93\x00\x04\x0A\x07\x3A\x7E\xD3\x6A\x93\xA5\x0C\x81\xB8\x16\x91\x10\x83\x11\x4C\x96\x76\x0A\x17\x0A\x44\x9A\x0A\x67\x4F\x92\x99\x76\x10\x09\x77\x7F\x51\x8C\x0A\x51\x90\x35\x0D\x7C\x95\x3A\x9E\x0A\x5F\x9E\x28\x93\x29\x10\xF8\x78\x91\x97\x30\x35\x00\x89\x94\x6A\x90\x0B\x44\x93\x1E\x69\x99\x95\x03\x1D\x96\x74\x92\x93\x01\x13\x0B\xC3\x87\x0B\x67\x41\x96\x07\x79\x10\x9C\x27\x79\x51\x89\x0B\xC3\x83\x1E\x28\x03\x8C\x81\x96\x10\x2B\x0C\x92\xAB\x34\x1B\x89\x97\x97\xA2\x89\x10\xBD\x04\x6B\x01\x12\x0C\x67\x43\x80\x84\x79\x10\x9E\x22\x98\x3A\x94\x0C\x85\x96\x1E\xC1\x26\x88\x9B\x90\x86\x3A\x89\x10\xC8\x04\x99\x00\x0D\x0C\x67\x4B\x2C\x06\x81\x10\x8B\x99\x10\x87\x9A\x93\xCF\x0A\x37\xAF\x96\x10\xA7\x2A\x93\xD0\x03\x8C\xD4\x07\x30\x98\x92\x10\xB5\x92\x91\xEC\x8D\x2B\xBD\x91\x10\xA3\x90\x9C\xF2\x88\x1F\xB7\x96\x10\x8F\x98\x97\x6B\x9E\x28\x0C\x83\x10\xB1\x9A\x96\xD5\x0A\x37\xCF\x92\x10\xC9\x96\x9C\x01\x16\x0D\xC3\x8A\x0D\x07\x3A\x2B\x6E\x98\x9D\x00\x0B\x0D\x9F\x9A\x1B\x59",
			"\x7C\x86\x02\x1E\x9D\x90\x91\x8F\x01\x1F\x0D\xA8\x94\x0E\x67\x42\x74\x83\x72\x10\xA1\x9F\x9D\xCC\x96\x0E\x71\x96\x1E\x06\x36\x9E\x01\x13\x9F\xE9\x95\x9A\x06\x19\x0E\xC3\x8D\x0E\x67\x46\x86\xF1\x91\x10\x1F\x86\x10\x16\x8A\x96\xEF\x0A\x37\x07\xA3\x10\x33\x01\x85\xF0\x03\x8C\xF4\x07\x30\x0F\xA9\x10\xFC\x9C\x9C\xE6\x83\x1E\xFB\x68\xA0\x51\x85\x0F\x7A\x3B\xA1\x0E\xA1\x85\xF6\x03\x8C\xFA\x07\x30\xAC\x9F\x7D\x51\x8B\x0F\x65\x9A\x10\x25\x32\x43\x27\xA9\x80\x3A\x9D\x0F\x2B\xA9\x10\x71\x85\x8A\x02\x1F\xA2\x13\x8A\x93\xAE\x1E\x7F\x0A\x1A\x87\x36\xA1\x10\x38\xA0\x84\x3A\x91\x00\x80\x47\x67\x80\x40\x3E\x31\x3D\x85\x31\x86\x10\x36\x01\x85\x06\x02\x72\xE6\x8C\x73\x4C\xA1\x85\x07\x00\xA5\x7D\x32\xA5\x03\x1B\x9C\x91\x92\x69\x80\x49\x83\xE6\x1D\x33\x5D\x88\xA5\xF2\x91\x85\x14\x00\x48\x0F\x8F\x28\x85\x8F\xA3\x00\x0C\x83\x03\x1D\xA4\x3A\x92\x02\x56\xA0\x30\xE5\x93\xA5\x3A\x93\x02\x71\xA6\x39\x46\x84\xA7\x6A\x94\x02\x77\xA9\x32\x79\xA4\x8E\x3A\x95\x02\x80\x4F\x5C\x23\x1C\x34\x32\x4F\xA7\x02\x1A\xA5\xEA\x90\x00\x2D\x0D\xA5\xEB\x15",
			"\x35\x5D\x88\xA8\x01\x10\x8F\xFE\x93\x10\x39\x03\xA8\xEB\x18\x88\x6A\xA2\xA9\x00\x0A\x8E\x5B\xA3\x10\x41\x08\xA9\xE9\x1F\x88\x9B\xAA\x10\x17\xAF\xA9\x02\x19\x04\x66\xAB\x1E\x67\x32\x43\x5F\x7A\xA7\xE0\x97\x05\x7D\xAF\x37\xF0\x9D\xA6\x51\x88\x05\xB3\xA3\x87\x00\x05\xAB\x4B\x81\x85\x59\x02\xAA\xF8\x1A\x36\x32\x4C\xAB\x93\xA1\x85\x61\x00\xAC\x1C\x2C\x36\xC3\xAA\x10\x9E\xAB\xA8\x69\x08\xAC\x4C\x21\x89\x6A\xA9\x84\xFB\x5F\x82\x09\x47\x73\x1A\x8A\x79\x8C\x63\x67\x7D\x76\x12\xDD\xA1\x12\x73\x64\x67\x6A\x12\x79\xA6\x47\x6E\xE4\x42\xA4\x5F\x67\xAE\xE3\x60\x43\xFD\x36\x13\xED\xAD\x76\x8C\x6E\x61\x23\x78\x3C\x78\x61\x77\xA8\x93\xAF\xAD\x9D\x71\x01\x88\xAF\xB3\x63\x8C\xED\xA5\xAF\xC3\x8D\x52\xFC\xA2\x10\xFF\xAA\x21\x03\xB5\x83\x05\xA0\x56\x24\x51\x4C\xF6\x33\x67\xF6\x36\x13\xF6\x30\x3E\x00\x0A\x67\x4E\x14\xB1\x34\x1A\x67\x73\x68\xB1\x97\x16\xB0\x1A\xBC\x6A\xD9\xA6\x10\x7A\x66\x13\x17\x50\x00\x92\x58\x49\x73\x66\xB2\x23\x18\xB2\x9C\x7F\x65\x84\xAB\x5D\x90\x42\xB1\x2F\xB0\x68\xE0\x67\x6E\xE1\x62\xB3\x6A\xA9\x68\x06\xB3\x12",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[23][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[24][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[25][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[26][_LongType]< _LongType \"*\" @ >",
			L"[27][_LongType]< _LongType \"const\" @ >",
			L"[28][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[29][_LongType]< _LongType @ \"*\" >",
			L"[30][_LongType]< _LongType @ \"const\" >",
			L"[31][_LongType]<< !_PrimitiveShared @ >>",
			L"[32][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[33][_LongType]lrp:(Shared,Type) @",
			L"[34][_Expr0] BEGIN ",
			L"[35][_Expr0] END [ENDING]",
			L"[36][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[37][_Expr0]<< !_PrimitiveShared @ >>",
			L"[38][_Expr0]lrp:(Expr,Shared) @",
			L"[39][_Expr1] BEGIN ",
			L"[40][_Expr1] END [ENDING]",
			L"[41][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[42][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[43][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[45][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[46][_Expr1]<< !_Expr0 @ >>",
			L"[47][_Expr] BEGIN ",
			L"[48][_Expr] END [ENDING]",
			L"[49][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[50][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[51][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[52][_Expr]<< !_Expr1 @ >>",
			L"[53][Module] BEGIN ",
			L"[54][Module] END [ENDING]",
			L"[55][Module]<< !_PrimitiveExprOnly ( lri:(Expr)->_Expr @ | lri:<skip> ) >>",
			L"[56][Module]<< !_PrimitiveExprOnly @ ( lri:(Expr)->_Expr | lri:<skip> ) >>",
			L"[57][Module]<< !_PrimitiveShared ( lri:(Shared)->_LongType @ | lri:(Shared)->_Expr | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveShared ( lri:(Shared)->_LongType | lri:(Shared)->_Expr @ | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared @ ( lri:(Shared)->_LongType | lri:(Shared)->_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveTypeOnly ( lri:(Type)->_LongType @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveTypeOnly @ ( lri:(Type)->_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixMerge1_LriTokens, ModuleParserStates, PrefixMerge1_LriAstInsReceiver>(&PrefixMerge1_LriTokenDeleter, &PrefixMerge1_LriLexerData, &PrefixMerge1_LriModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixmerge1_lri::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixmerge1_lri::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixmerge1_lri::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixmerge1_lri::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
