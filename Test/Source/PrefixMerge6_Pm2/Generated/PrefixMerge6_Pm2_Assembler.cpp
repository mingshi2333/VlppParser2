/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge6_Pm2
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge6_Pm2_Assembler.h"

namespace prefixmerge6_pm2
{

/***********************************************************************
PrefixMerge6_Pm2AstInsReceiver : public vl::glr::AstInsReceiverBase
***********************************************************************/

	vl::Ptr<vl::glr::ParsingAstBase> PrefixMerge6_Pm2AstInsReceiver::CreateAstNode(vl::vint32_t type)
	{
		auto cppTypeName = PrefixMerge6_Pm2CppTypeName((PrefixMerge6_Pm2Classes)type);
		switch((PrefixMerge6_Pm2Classes)type)
		{
		case PrefixMerge6_Pm2Classes::CallExpr:
			return new prefixmerge6_pm2::CallExpr();
		case PrefixMerge6_Pm2Classes::CommaExpr:
			return new prefixmerge6_pm2::CommaExpr();
		case PrefixMerge6_Pm2Classes::ConstType:
			return new prefixmerge6_pm2::ConstType();
		case PrefixMerge6_Pm2Classes::CtorExpr:
			return new prefixmerge6_pm2::CtorExpr();
		case PrefixMerge6_Pm2Classes::FunctionType:
			return new prefixmerge6_pm2::FunctionType();
		case PrefixMerge6_Pm2Classes::MemberName:
			return new prefixmerge6_pm2::MemberName();
		case PrefixMerge6_Pm2Classes::MulExpr:
			return new prefixmerge6_pm2::MulExpr();
		case PrefixMerge6_Pm2Classes::Name:
			return new prefixmerge6_pm2::Name();
		case PrefixMerge6_Pm2Classes::PointerType:
			return new prefixmerge6_pm2::PointerType();
		case PrefixMerge6_Pm2Classes::ThrowExpr:
			return new prefixmerge6_pm2::ThrowExpr();
		case PrefixMerge6_Pm2Classes::TypeOrExprToResolve:
			return new prefixmerge6_pm2::TypeOrExprToResolve();
		default:
			return vl::glr::AssemblyThrowCannotCreateAbstractType(type, cppTypeName);
		}
	}

	void PrefixMerge6_Pm2AstInsReceiver::SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value)
	{
		auto cppFieldName = PrefixMerge6_Pm2CppFieldName((PrefixMerge6_Pm2Fields)field);
		switch((PrefixMerge6_Pm2Fields)field)
		{
		case PrefixMerge6_Pm2Fields::CallExpr_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::CallExpr::args, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::CallExpr_func:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::CallExpr::func, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::CommaExpr_first:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::CommaExpr::first, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::CommaExpr_second:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::CommaExpr::second, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::ConstType_type:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::ConstType::type, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::CtorExpr_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::CtorExpr::args, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::CtorExpr_type:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::CtorExpr::type, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::FunctionType_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::FunctionType::args, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::FunctionType_returnType:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::FunctionType::returnType, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::MemberName_parent:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::MemberName::parent, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::MulExpr_first:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::MulExpr::first, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::MulExpr_second:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::MulExpr::second, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::PointerType_type:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::PointerType::type, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::ThrowExpr_arg:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::ThrowExpr::arg, object, field, value, cppFieldName);
		case PrefixMerge6_Pm2Fields::TypeOrExprToResolve_candidates:
			return vl::glr::AssemblerSetObjectField(&prefixmerge6_pm2::TypeOrExprToResolve::candidates, object, field, value, cppFieldName);
		default:
			return vl::glr::AssemblyThrowFieldNotObject(field, cppFieldName);
		}
	}

	void PrefixMerge6_Pm2AstInsReceiver::SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex)
	{
		auto cppFieldName = PrefixMerge6_Pm2CppFieldName((PrefixMerge6_Pm2Fields)field);
		switch((PrefixMerge6_Pm2Fields)field)
		{
		case PrefixMerge6_Pm2Fields::MemberName_member:
			return vl::glr::AssemblerSetTokenField(&prefixmerge6_pm2::MemberName::member, object, field, token, tokenIndex, cppFieldName);
		case PrefixMerge6_Pm2Fields::Name_name:
			return vl::glr::AssemblerSetTokenField(&prefixmerge6_pm2::Name::name, object, field, token, tokenIndex, cppFieldName);
		default:
			return vl::glr::AssemblyThrowFieldNotToken(field, cppFieldName);
		}
	}

	void PrefixMerge6_Pm2AstInsReceiver::SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment)
	{
		auto cppFieldName = PrefixMerge6_Pm2CppFieldName((PrefixMerge6_Pm2Fields)field);
		return vl::glr::AssemblyThrowFieldNotEnum(field, cppFieldName);
	}

	const wchar_t* PrefixMerge6_Pm2TypeName(PrefixMerge6_Pm2Classes type)
	{
		const wchar_t* results[] = {
			L"CallExpr",
			L"CommaExpr",
			L"ConstType",
			L"CtorExpr",
			L"FunctionType",
			L"MemberName",
			L"MulExpr",
			L"Name",
			L"PointerType",
			L"QualifiedName",
			L"ThrowExpr",
			L"TypeOrExpr",
			L"TypeOrExprToResolve",
		};
		vl::vint index = (vl::vint)type;
		return 0 <= index && index < 13 ? results[index] : nullptr;
	}

	const wchar_t* PrefixMerge6_Pm2CppTypeName(PrefixMerge6_Pm2Classes type)
	{
		const wchar_t* results[] = {
			L"prefixmerge6_pm2::CallExpr",
			L"prefixmerge6_pm2::CommaExpr",
			L"prefixmerge6_pm2::ConstType",
			L"prefixmerge6_pm2::CtorExpr",
			L"prefixmerge6_pm2::FunctionType",
			L"prefixmerge6_pm2::MemberName",
			L"prefixmerge6_pm2::MulExpr",
			L"prefixmerge6_pm2::Name",
			L"prefixmerge6_pm2::PointerType",
			L"prefixmerge6_pm2::QualifiedName",
			L"prefixmerge6_pm2::ThrowExpr",
			L"prefixmerge6_pm2::TypeOrExpr",
			L"prefixmerge6_pm2::TypeOrExprToResolve",
		};
		vl::vint index = (vl::vint)type;
		return 0 <= index && index < 13 ? results[index] : nullptr;
	}

	const wchar_t* PrefixMerge6_Pm2FieldName(PrefixMerge6_Pm2Fields field)
	{
		const wchar_t* results[] = {
			L"CallExpr::args",
			L"CallExpr::func",
			L"CommaExpr::first",
			L"CommaExpr::second",
			L"ConstType::type",
			L"CtorExpr::args",
			L"CtorExpr::type",
			L"FunctionType::args",
			L"FunctionType::returnType",
			L"MemberName::member",
			L"MemberName::parent",
			L"MulExpr::first",
			L"MulExpr::second",
			L"Name::name",
			L"PointerType::type",
			L"ThrowExpr::arg",
			L"TypeOrExprToResolve::candidates",
		};
		vl::vint index = (vl::vint)field;
		return 0 <= index && index < 17 ? results[index] : nullptr;
	}

	const wchar_t* PrefixMerge6_Pm2CppFieldName(PrefixMerge6_Pm2Fields field)
	{
		const wchar_t* results[] = {
			L"prefixmerge6_pm2::CallExpr::args",
			L"prefixmerge6_pm2::CallExpr::func",
			L"prefixmerge6_pm2::CommaExpr::first",
			L"prefixmerge6_pm2::CommaExpr::second",
			L"prefixmerge6_pm2::ConstType::type",
			L"prefixmerge6_pm2::CtorExpr::args",
			L"prefixmerge6_pm2::CtorExpr::type",
			L"prefixmerge6_pm2::FunctionType::args",
			L"prefixmerge6_pm2::FunctionType::returnType",
			L"prefixmerge6_pm2::MemberName::member",
			L"prefixmerge6_pm2::MemberName::parent",
			L"prefixmerge6_pm2::MulExpr::first",
			L"prefixmerge6_pm2::MulExpr::second",
			L"prefixmerge6_pm2::Name::name",
			L"prefixmerge6_pm2::PointerType::type",
			L"prefixmerge6_pm2::ThrowExpr::arg",
			L"prefixmerge6_pm2::TypeOrExprToResolve::candidates",
		};
		vl::vint index = (vl::vint)field;
		return 0 <= index && index < 17 ? results[index] : nullptr;
	}

	vl::Ptr<vl::glr::ParsingAstBase> PrefixMerge6_Pm2AstInsReceiver::ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates)
	{
		auto cppTypeName = PrefixMerge6_Pm2CppTypeName((PrefixMerge6_Pm2Classes)type);
		switch((PrefixMerge6_Pm2Classes)type)
		{
		case PrefixMerge6_Pm2Classes::CallExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::CallExpr, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::CommaExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::CommaExpr, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::ConstType:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::ConstType, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::CtorExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::CtorExpr, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::FunctionType:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::FunctionType, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::MemberName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::MemberName, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::MulExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::MulExpr, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::Name:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::Name, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::PointerType:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::PointerType, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::QualifiedName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::QualifiedName, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::ThrowExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::ThrowExpr, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::TypeOrExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::TypeOrExpr, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge6_Pm2Classes::TypeOrExprToResolve:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge6_pm2::TypeOrExprToResolve, prefixmerge6_pm2::TypeOrExprToResolve>(type, candidates, cppTypeName);
		default:
			return vl::glr::AssemblyThrowTypeNotAllowAmbiguity(type, cppTypeName);
		}
	}
}
