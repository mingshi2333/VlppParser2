////////////////////////////////////////
// Left Recursive (Primitives)
////////////////////////////////////////

_Name : QualifiedName
  ::= ID:name as Name
  ::= _Name:parent "." ID:member as MemberName
  ;

_PrimitiveShared : QualifiedName
  ::= !_Name
  ;

_PrimitiveTypeOnly : ConstType
  ::= "const" _PrimitiveShared:type as ConstType
  ::= "const" _PrimitiveTypeOnly:type as ConstType
  ;

_PrimitiveExprOnly : TypeOrExpr
  ::= "(" !_Expr ")"
  ;

////////////////////////////////////////
// Left Recursive (Types)
////////////////////////////////////////

_LongType_LRI_Original : TypeOrExpr
  ::= left_recursion_placeholder(LRI__LongType)
  ::= !_PrimitiveShared
  ::= !_PrimitiveTypeOnly
  ::= _LongType_LRI_Original:type "const" as ConstType
  ::= _LongType_LRI_Original:type "*" as PointerType
  ::= _LongType_LRI_Original:returnType "(" {_LongType:args ; ","} ")" as FunctionType
  ;

////////////////////////////////////////
// Left Recursive (Expressions)
////////////////////////////////////////

_Expr0__LongType_LRI_Prefix : TypeOrExpr
  ::= left_recursion_placeholder(LRIP__Expr0__LongType)
  ::= !_LongType_LRI_Original
  ;

_Expr0_LRI_Original : TypeOrExpr
  ::= left_recursion_placeholder(LRI__Expr0)
  ::= !_PrimitiveShared
  ::= !_PrimitiveExprOnly
  ::= _Expr0__LongType_LRI_Prefix:type "{" {_ExprNoComma:args ; ","} "}" as CtorExpr
  ;

_Expr1_LRI_Original : TypeOrExpr
  ::= !_Expr0_LRI_Original
  ::= _Expr1_LRI_Original:func "(" {_ExprNoComma:args ; ","} ")" as CallExpr
  ;

_Expr2_LRI_Original : TypeOrExpr
  ::= !_Expr1_LRI_Original
  ::= _Expr2_LRI_Original:first "*" _Expr1:second as MulExpr
  ;

_ExprNoComma_LRI_Isolated_1 : ThrowExpr
  ::= "throw" [_Expr2:arg] as ThrowExpr
  ;

_ExprNoComma_LRI_Original : TypeOrExpr
  ::= left_recursion_placeholder(LRI__ExprNoComma)
  ::= !_Expr2_LRI_Original
  ::= !_ExprNoComma_LRI_Isolated_1
  ;

_Expr_LRI_Original : TypeOrExpr
  ::= !_ExprNoComma_LRI_Original
  ::= _Expr_LRI_Original:first "," _ExprNoComma:second as CommaExpr
  ;

////////////////////////////////////////
// Left Recursive (Module)
////////////////////////////////////////

Module_LRI_Original : TypeOrExpr
  ::= !_Expr_LRI_Original
  ::= !_LongType_LRI_Original
  ;

ExprModule_LRI_Original : TypeOrExpr
  ::= !_Expr_LRI_Original
  ;

TypeModule_LRI_Original : TypeOrExpr
  ::= !_LongType_LRI_Original
  ;

////////////////////////////////////////
// Left Recursive (Rewritten)
////////////////////////////////////////

_LongType : TypeOrExpr
  ::= !_PrimitiveShared [left_recursion_inject(LRI__LongType) _LongType_LRI_Original]
  ::= !_PrimitiveTypeOnly [left_recursion_inject(LRI__LongType) _LongType_LRI_Original]
  ;

_Expr0 : TypeOrExpr
  ::= !_PrimitiveExprOnly
  ::= !_PrimitiveShared [left_recursion_inject(LRI__LongType) _Expr0_LRI_Original]
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRI__LongType) _Expr0_LRI_Original
  ;

_Expr1 : TypeOrExpr
  ::= !_PrimitiveExprOnly [left_recursion_inject(LRI__Expr0) _Expr1_LRI_Original]
  ::= !_PrimitiveShared [left_recursion_inject(LRI__Expr0, LRI__LongType) _Expr1_LRI_Original]
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRI__LongType) _Expr1_LRI_Original
  ;

_Expr2 : TypeOrExpr
  ::= !_PrimitiveExprOnly [left_recursion_inject(LRI__Expr0) _Expr2_LRI_Original]
  ::= !_PrimitiveShared [left_recursion_inject(LRI__Expr0, LRI__LongType) _Expr2_LRI_Original]
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRI__LongType) _Expr2_LRI_Original
  ;

_ExprNoComma : TypeOrExpr
  ::= !_ExprNoComma_LRI_Isolated_1
  ::= !_PrimitiveExprOnly [left_recursion_inject(LRI__Expr0) _ExprNoComma_LRI_Original]
  ::= !_PrimitiveShared [left_recursion_inject(LRI__Expr0, LRI__LongType) _ExprNoComma_LRI_Original]
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRI__LongType) _ExprNoComma_LRI_Original
  ;

_Expr : TypeOrExpr
  ::= !_ExprNoComma_LRI_Isolated_1 [left_recursion_inject(LRI__ExprNoComma) _Expr_LRI_Original]
  ::= !_PrimitiveExprOnly [left_recursion_inject(LRI__Expr0) _Expr_LRI_Original]
  ::= !_PrimitiveShared [left_recursion_inject(LRI__Expr0, LRI__LongType) _Expr_LRI_Original]
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRI__LongType) _Expr_LRI_Original
  ;

@parser Module : TypeOrExpr
  // throw
  // throw X
  ::= !_ExprNoComma_LRI_Isolated_1 [left_recursion_inject(LRI__ExprNoComma) _Expr_LRI_Original]
  // (X)
  // (X) * Y
  ::= !_PrimitiveExprOnly [left_recursion_inject(LRI__Expr0) _Expr_LRI_Original]
  // X
  // X * Y
  // X {}
  ::= !_PrimitiveShared [left_recursion_inject(LRI__Expr0, LRIP__Expr0__LongType) _Expr_LRI_Original]
  // X*
  // X* {}
  ::= !_PrimitiveShared left_recursion_inject(LRI__LongType) (_LongType_LRI_Original [left_recursion_inject(LRIP__Expr0__LongType) _Expr_LRI_Original])
  // const X{}
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRIP__Expr0__LongType) _Expr_LRI_Original
  // const X
  // const X*
  // const X* {}
  ::= !_PrimitiveTypeOnly [left_recursion_inject(LRI__LongType) (_LongType_LRI_Original [left_recursion_inject(LRIP__Expr0__LongType) _Expr_LRI_Original])]
  ;

@parser ExprModule : TypeOrExpr
  ::= !_ExprNoComma_LRI_Isolated_1 [left_recursion_inject(LRI__ExprNoComma) ExprModule_LRI_Original]
  ::= !_PrimitiveExprOnly [left_recursion_inject(LRI__Expr0) ExprModule_LRI_Original]
  ::= !_PrimitiveShared [left_recursion_inject(LRI__Expr0, LRI__LongType) ExprModule_LRI_Original]
  ::= !_PrimitiveTypeOnly left_recursion_inject(LRI__LongType) ExprModule_LRI_Original
  ;

@parser TypeModule : TypeOrExpr
  ::= !_PrimitiveShared [left_recursion_inject(LRI__LongType) TypeModule_LRI_Original]
  ::= !_PrimitiveTypeOnly [left_recursion_inject(LRI__LongType) TypeModule_LRI_Original]
  ;