/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge7_PmSwitch
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_PREFIXMERGE7_PMSWITCH_MODULEPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_PREFIXMERGE7_PMSWITCH_MODULEPARSER_SYNTAX

#include "PrefixMerge7_PmSwitch_Assembler.h"
#include "PrefixMerge7_PmSwitch_Lexer.h"

namespace prefixmerge7_pmswitch
{
	enum class ModuleParserStates
	{
		_GenericArguments = 0,
		_Name = 6,
		_PrimitiveShared = 18,
		_PrimitiveTypeOnly = 21,
		_PrimitiveExprOnly = 27,
		_LongType = 32,
		_Expr0 = 38,
		_Expr1 = 45,
		_Expr2 = 55,
		_Expr_NoComma = 65,
		_Expr_NoGT_NoComma = 76,
		_Expr = 87,
		Module = 99,
		Module_NoGT_NoComma = 117,
		_Expr3_SWITCH_COMBINED = 134,
		_Expr3_SWITCH_0allow_gt = 144,
		_Expr3_SWITCH_1allow_gt = 154,
		_Expr4_SWITCH_0allow_gt = 164,
		_Expr4_SWITCH_1allow_gt = 175,
		_Expr4_SWITCH_0allow_gt_LRI_Isolated_1 = 186,
		_Expr4_SWITCH_1allow_gt_LRI_Isolated_1 = 190,
		_LongType_LRI_Original = 194,
		_Expr0_LRI_Original = 208,
		_Expr1_LRI_Original = 218,
		_Expr2_LRI_Original = 226,
		_Expr3_SWITCH_COMBINED_LRI_Original = 232,
		_Expr3_SWITCH_0allow_gt_LRI_Original = 235,
		_Expr3_SWITCH_1allow_gt_LRI_Original = 241,
		_Expr4_SWITCH_0allow_gt_LRI_Original = 250,
		_Expr4_SWITCH_1allow_gt_LRI_Original = 255,
		_Expr_NoComma_LRI_Original = 260,
		_Expr_NoGT_NoComma_LRI_Original = 263,
		_Expr_LRI_Original = 266,
		Module_LRI_Original = 272,
		Module_NoGT_NoComma_LRI_Original = 276,
		_Expr0__LongType_LRI_Prefix = 280,
	};

	const wchar_t* ModuleParserRuleName(vl::vint index);
	const wchar_t* ModuleParserStateLabel(vl::vint index);
	extern void PrefixMerge7_PmSwitchModuleParserData(vl::stream::IStream& outputStream);

	class ModuleParser
		: public vl::glr::ParserBase<PrefixMerge7_PmSwitchTokens, ModuleParserStates, PrefixMerge7_PmSwitchAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		ModuleParser();

		vl::Ptr<prefixmerge7_pmswitch::TypeOrExpr> ParseModule(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<prefixmerge7_pmswitch::TypeOrExpr> ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif