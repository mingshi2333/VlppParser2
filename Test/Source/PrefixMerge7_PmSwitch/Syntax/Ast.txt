@ambiguous class TypeOrExpr
{
}

class QualifiedName : TypeOrExpr
{
}

class Name : QualifiedName
{
    var name : token;
}

class MemberName : QualifiedName
{
    var parent : QualifiedName;
    var member : token;
}

class GenericQualifiedName : QualifiedName
{
    var args : TypeOrExpr[];
}

class GenericName : GenericQualifiedName
{
    var name : token;
}

class GenericMemberName : GenericQualifiedName
{
    var parent : QualifiedName;
    var member : token;
}

class CallExpr : TypeOrExpr
{
    var func : TypeOrExpr;
    var args : TypeOrExpr[];
}

class CtorExpr : TypeOrExpr
{
    var type : TypeOrExpr;
    var args : TypeOrExpr[];
}

class MulExpr : TypeOrExpr
{
    var first : TypeOrExpr;
    var second : TypeOrExpr;
}

class LtExpr : TypeOrExpr
{
    var first : TypeOrExpr;
    var second : TypeOrExpr;
}

class GtExpr : TypeOrExpr
{
    var first : TypeOrExpr;
    var second : TypeOrExpr;
}

class ThrowExpr : TypeOrExpr
{
    var arg : TypeOrExpr[];
}

class CommaExpr : TypeOrExpr
{
    var first : TypeOrExpr;
    var second : TypeOrExpr;
}

class ConstType : TypeOrExpr
{
    var type : TypeOrExpr;
}

class PointerType : TypeOrExpr
{
    var type : TypeOrExpr;
}

class FunctionType : TypeOrExpr
{
    var returnType : TypeOrExpr;
    var args : TypeOrExpr[];
}