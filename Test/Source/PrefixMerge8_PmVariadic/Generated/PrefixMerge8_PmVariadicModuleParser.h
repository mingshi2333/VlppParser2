/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge8_PmVariadic
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_PREFIXMERGE8_PMVARIADIC_MODULEPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_PREFIXMERGE8_PMVARIADIC_MODULEPARSER_SYNTAX

#include "PrefixMerge8_PmVariadic_Assembler.h"
#include "PrefixMerge8_PmVariadic_Lexer.h"

namespace prefixmerge8_pmvariadic
{
	enum class ModuleParserStates
	{
		_Name = 0,
		_PrimitiveShared = 6,
		_PrimitiveTypeOnly = 9,
		_PrimitiveExprOnly = 15,
		_LongType = 20,
		_ExprArg = 26,
		_Expr0 = 35,
		_Expr1 = 42,
		_Expr = 51,
		Module = 60,
		_LongType_LRI_Original = 75,
		_ExprArg_LRI_Original = 89,
		_Expr0_LRI_Original = 94,
		_Expr1_LRI_Original = 104,
		_Expr_LRI_Original = 112,
		Module_LRI_Original = 118,
		_Expr0__LongType_LRI_Prefix = 122,
	};

	const wchar_t* ModuleParserRuleName(vl::vint index);
	const wchar_t* ModuleParserStateLabel(vl::vint index);
	extern void PrefixMerge8_PmVariadicModuleParserData(vl::stream::IStream& outputStream);

	class ModuleParser
		: public vl::glr::ParserBase<PrefixMerge8_PmVariadicTokens, ModuleParserStates, PrefixMerge8_PmVariadicAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		ModuleParser();

		vl::Ptr<prefixmerge8_pmvariadic::TypeOrExpr> ParseModule(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<prefixmerge8_pmvariadic::TypeOrExpr> ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif