/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge8_PmVariadic
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_PREFIXMERGE8_PMVARIADIC_MODULEPARSER_SYNTAX
#define VCZH_PARSER2_UNITTEST_PREFIXMERGE8_PMVARIADIC_MODULEPARSER_SYNTAX

#include "PrefixMerge8_PmVariadic_Assembler.h"
#include "PrefixMerge8_PmVariadic_Lexer.h"

namespace prefixmerge8_pmvariadic
{
	enum class ModuleParserStates
	{
		_GenericArgument = 0,
		_GenericArguments = 8,
		_Name = 14,
		_PrimitiveShared = 26,
		_PrimitiveTypeOnly = 29,
		_PrimitiveExprOnly = 35,
		_LongTypeArg = 40,
		_LongType = 46,
		_ExprArg = 52,
		_Expr0 = 60,
		_Expr1 = 67,
		_Expr = 75,
		Module = 83,
		_GenericArgument_LRI_Original = 97,
		_LongTypeArg_LRI_Original = 102,
		_LongType_LRI_Original = 107,
		_ExprArg_LRI_Original = 121,
		_Expr0_LRI_Original = 126,
		_Expr1_LRI_Original = 136,
		_Expr_LRI_Original = 144,
		Module_LRI_Original = 150,
		_Expr0__LongType_LRI_Prefix = 154,
	};

	const wchar_t* ModuleParserRuleName(vl::vint index);
	const wchar_t* ModuleParserStateLabel(vl::vint index);
	extern void PrefixMerge8_PmVariadicModuleParserData(vl::stream::IStream& outputStream);

	class ModuleParser
		: public vl::glr::ParserBase<PrefixMerge8_PmVariadicTokens, ModuleParserStates, PrefixMerge8_PmVariadicAstInsReceiver>
		, protected vl::glr::automaton::IExecutor::ITypeCallback
	{
	protected:
		vl::WString GetClassName(vl::vint32_t classIndex) const override;
		vl::vint32_t FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const override;
	public:
		ModuleParser();

		vl::Ptr<prefixmerge8_pmvariadic::TypeOrExpr> ParseModule(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<prefixmerge8_pmvariadic::TypeOrExpr> ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
		vl::Ptr<prefixmerge8_pmvariadic::TypeOrExpr> ParseModule_LRI_Original(const vl::WString& input, vl::vint codeIndex = -1) const;
		vl::Ptr<prefixmerge8_pmvariadic::TypeOrExpr> ParseModule_LRI_Original(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex = -1) const;
	};
}
#endif