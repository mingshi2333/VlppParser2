/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:TypeOrExpr
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge8_PmVariadicTypeOrExpr_Builder.h"

namespace prefixmerge8_pmvariadic
{
	namespace builder
	{

/***********************************************************************
MakeCallExpr
***********************************************************************/

		MakeCallExpr& MakeCallExpr::args(const vl::Ptr<TypeOrExprOrOthers>& value)
		{
			node->args.Add(value);
			return *this;
		}

		MakeCallExpr& MakeCallExpr::func(const vl::Ptr<TypeOrExpr>& value)
		{
			node->func = value;
			return *this;
		}

/***********************************************************************
MakeConstType
***********************************************************************/

		MakeConstType& MakeConstType::type(const vl::Ptr<TypeOrExpr>& value)
		{
			node->type = value;
			return *this;
		}

/***********************************************************************
MakeCtorExpr
***********************************************************************/

		MakeCtorExpr& MakeCtorExpr::args(const vl::Ptr<TypeOrExprOrOthers>& value)
		{
			node->args.Add(value);
			return *this;
		}

		MakeCtorExpr& MakeCtorExpr::type(const vl::Ptr<TypeOrExpr>& value)
		{
			node->type = value;
			return *this;
		}

/***********************************************************************
MakeFunctionType
***********************************************************************/

		MakeFunctionType& MakeFunctionType::args(const vl::Ptr<TypeOrExpr>& value)
		{
			node->args.Add(value);
			return *this;
		}

		MakeFunctionType& MakeFunctionType::returnType(const vl::Ptr<TypeOrExpr>& value)
		{
			node->returnType = value;
			return *this;
		}

/***********************************************************************
MakeGenericMemberName
***********************************************************************/

		MakeGenericMemberName& MakeGenericMemberName::member(const vl::WString& value)
		{
			node->member.value = value;
			return *this;
		}

		MakeGenericMemberName& MakeGenericMemberName::parent(const vl::Ptr<QualifiedName>& value)
		{
			node->parent = value;
			return *this;
		}

		MakeGenericMemberName& MakeGenericMemberName::args(const vl::Ptr<TypeOrExpr>& value)
		{
			node->args.Add(value);
			return *this;
		}

/***********************************************************************
MakeGenericName
***********************************************************************/

		MakeGenericName& MakeGenericName::name(const vl::WString& value)
		{
			node->name.value = value;
			return *this;
		}

		MakeGenericName& MakeGenericName::args(const vl::Ptr<TypeOrExpr>& value)
		{
			node->args.Add(value);
			return *this;
		}

/***********************************************************************
MakeGenericQualifiedName
***********************************************************************/

		MakeGenericQualifiedName& MakeGenericQualifiedName::args(const vl::Ptr<TypeOrExpr>& value)
		{
			node->args.Add(value);
			return *this;
		}

/***********************************************************************
MakeMemberName
***********************************************************************/

		MakeMemberName& MakeMemberName::member(const vl::WString& value)
		{
			node->member.value = value;
			return *this;
		}

		MakeMemberName& MakeMemberName::parent(const vl::Ptr<QualifiedName>& value)
		{
			node->parent = value;
			return *this;
		}

/***********************************************************************
MakeMulExpr
***********************************************************************/

		MakeMulExpr& MakeMulExpr::first(const vl::Ptr<TypeOrExpr>& value)
		{
			node->first = value;
			return *this;
		}

		MakeMulExpr& MakeMulExpr::second(const vl::Ptr<TypeOrExpr>& value)
		{
			node->second = value;
			return *this;
		}

/***********************************************************************
MakeName
***********************************************************************/

		MakeName& MakeName::name(const vl::WString& value)
		{
			node->name.value = value;
			return *this;
		}

/***********************************************************************
MakePointerType
***********************************************************************/

		MakePointerType& MakePointerType::type(const vl::Ptr<TypeOrExpr>& value)
		{
			node->type = value;
			return *this;
		}

/***********************************************************************
MakeTypeOrExprToResolve
***********************************************************************/

		MakeTypeOrExprToResolve& MakeTypeOrExprToResolve::candidates(const vl::Ptr<TypeOrExpr>& value)
		{
			node->candidates.Add(value);
			return *this;
		}

/***********************************************************************
MakeVariadicArgument
***********************************************************************/

		MakeVariadicArgument& MakeVariadicArgument::operand(const vl::Ptr<TypeOrExpr>& value)
		{
			node->operand = value;
			return *this;
		}
	}
}
