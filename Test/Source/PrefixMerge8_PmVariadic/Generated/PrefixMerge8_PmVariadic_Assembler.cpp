/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge8_PmVariadic
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge8_PmVariadic_Assembler.h"

namespace prefixmerge8_pmvariadic
{

/***********************************************************************
PrefixMerge8_PmVariadicAstInsReceiver : public vl::glr::AstInsReceiverBase
***********************************************************************/

	vl::Ptr<vl::glr::ParsingAstBase> PrefixMerge8_PmVariadicAstInsReceiver::CreateAstNode(vl::vint32_t type)
	{
		auto cppTypeName = PrefixMerge8_PmVariadicCppTypeName((PrefixMerge8_PmVariadicClasses)type);
		switch((PrefixMerge8_PmVariadicClasses)type)
		{
		case PrefixMerge8_PmVariadicClasses::CallExpr:
			return vl::Ptr(new prefixmerge8_pmvariadic::CallExpr);
		case PrefixMerge8_PmVariadicClasses::ConstType:
			return vl::Ptr(new prefixmerge8_pmvariadic::ConstType);
		case PrefixMerge8_PmVariadicClasses::CtorExpr:
			return vl::Ptr(new prefixmerge8_pmvariadic::CtorExpr);
		case PrefixMerge8_PmVariadicClasses::FunctionType:
			return vl::Ptr(new prefixmerge8_pmvariadic::FunctionType);
		case PrefixMerge8_PmVariadicClasses::GenericMemberName:
			return vl::Ptr(new prefixmerge8_pmvariadic::GenericMemberName);
		case PrefixMerge8_PmVariadicClasses::GenericName:
			return vl::Ptr(new prefixmerge8_pmvariadic::GenericName);
		case PrefixMerge8_PmVariadicClasses::MemberName:
			return vl::Ptr(new prefixmerge8_pmvariadic::MemberName);
		case PrefixMerge8_PmVariadicClasses::MulExpr:
			return vl::Ptr(new prefixmerge8_pmvariadic::MulExpr);
		case PrefixMerge8_PmVariadicClasses::Name:
			return vl::Ptr(new prefixmerge8_pmvariadic::Name);
		case PrefixMerge8_PmVariadicClasses::PointerType:
			return vl::Ptr(new prefixmerge8_pmvariadic::PointerType);
		case PrefixMerge8_PmVariadicClasses::TypeOrExprToResolve:
			return vl::Ptr(new prefixmerge8_pmvariadic::TypeOrExprToResolve);
		case PrefixMerge8_PmVariadicClasses::VariadicArgument:
			return vl::Ptr(new prefixmerge8_pmvariadic::VariadicArgument);
		default:
			return vl::glr::AssemblyThrowCannotCreateAbstractType(type, cppTypeName);
		}
	}

	void PrefixMerge8_PmVariadicAstInsReceiver::SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value)
	{
		auto cppFieldName = PrefixMerge8_PmVariadicCppFieldName((PrefixMerge8_PmVariadicFields)field);
		switch((PrefixMerge8_PmVariadicFields)field)
		{
		case PrefixMerge8_PmVariadicFields::CallExpr_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::CallExpr::args, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::CallExpr_func:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::CallExpr::func, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::ConstType_type:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::ConstType::type, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::CtorExpr_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::CtorExpr::args, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::CtorExpr_type:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::CtorExpr::type, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::FunctionType_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::FunctionType::args, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::FunctionType_returnType:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::FunctionType::returnType, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::GenericMemberName_parent:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::GenericMemberName::parent, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::GenericQualifiedName_args:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::GenericQualifiedName::args, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::MemberName_parent:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::MemberName::parent, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::MulExpr_first:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::MulExpr::first, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::MulExpr_second:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::MulExpr::second, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::PointerType_type:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::PointerType::type, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::TypeOrExprToResolve_candidates:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::TypeOrExprToResolve::candidates, object, field, value, cppFieldName);
		case PrefixMerge8_PmVariadicFields::VariadicArgument_operand:
			return vl::glr::AssemblerSetObjectField(&prefixmerge8_pmvariadic::VariadicArgument::operand, object, field, value, cppFieldName);
		default:
			return vl::glr::AssemblyThrowFieldNotObject(field, cppFieldName);
		}
	}

	void PrefixMerge8_PmVariadicAstInsReceiver::SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex)
	{
		auto cppFieldName = PrefixMerge8_PmVariadicCppFieldName((PrefixMerge8_PmVariadicFields)field);
		switch((PrefixMerge8_PmVariadicFields)field)
		{
		case PrefixMerge8_PmVariadicFields::GenericMemberName_member:
			return vl::glr::AssemblerSetTokenField(&prefixmerge8_pmvariadic::GenericMemberName::member, object, field, token, tokenIndex, cppFieldName);
		case PrefixMerge8_PmVariadicFields::GenericName_name:
			return vl::glr::AssemblerSetTokenField(&prefixmerge8_pmvariadic::GenericName::name, object, field, token, tokenIndex, cppFieldName);
		case PrefixMerge8_PmVariadicFields::MemberName_member:
			return vl::glr::AssemblerSetTokenField(&prefixmerge8_pmvariadic::MemberName::member, object, field, token, tokenIndex, cppFieldName);
		case PrefixMerge8_PmVariadicFields::Name_name:
			return vl::glr::AssemblerSetTokenField(&prefixmerge8_pmvariadic::Name::name, object, field, token, tokenIndex, cppFieldName);
		default:
			return vl::glr::AssemblyThrowFieldNotToken(field, cppFieldName);
		}
	}

	void PrefixMerge8_PmVariadicAstInsReceiver::SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment)
	{
		auto cppFieldName = PrefixMerge8_PmVariadicCppFieldName((PrefixMerge8_PmVariadicFields)field);
		return vl::glr::AssemblyThrowFieldNotEnum(field, cppFieldName);
	}

	const wchar_t* PrefixMerge8_PmVariadicTypeName(PrefixMerge8_PmVariadicClasses type)
	{
		const wchar_t* results[] = {
			L"CallExpr",
			L"ConstType",
			L"CtorExpr",
			L"FunctionType",
			L"GenericMemberName",
			L"GenericName",
			L"GenericQualifiedName",
			L"MemberName",
			L"MulExpr",
			L"Name",
			L"PointerType",
			L"QualifiedName",
			L"TypeOrExpr",
			L"TypeOrExprOrOthers",
			L"TypeOrExprToResolve",
			L"VariadicArgument",
		};
		vl::vint index = (vl::vint)type;
		return 0 <= index && index < 16 ? results[index] : nullptr;
	}

	const wchar_t* PrefixMerge8_PmVariadicCppTypeName(PrefixMerge8_PmVariadicClasses type)
	{
		const wchar_t* results[] = {
			L"prefixmerge8_pmvariadic::CallExpr",
			L"prefixmerge8_pmvariadic::ConstType",
			L"prefixmerge8_pmvariadic::CtorExpr",
			L"prefixmerge8_pmvariadic::FunctionType",
			L"prefixmerge8_pmvariadic::GenericMemberName",
			L"prefixmerge8_pmvariadic::GenericName",
			L"prefixmerge8_pmvariadic::GenericQualifiedName",
			L"prefixmerge8_pmvariadic::MemberName",
			L"prefixmerge8_pmvariadic::MulExpr",
			L"prefixmerge8_pmvariadic::Name",
			L"prefixmerge8_pmvariadic::PointerType",
			L"prefixmerge8_pmvariadic::QualifiedName",
			L"prefixmerge8_pmvariadic::TypeOrExpr",
			L"prefixmerge8_pmvariadic::TypeOrExprOrOthers",
			L"prefixmerge8_pmvariadic::TypeOrExprToResolve",
			L"prefixmerge8_pmvariadic::VariadicArgument",
		};
		vl::vint index = (vl::vint)type;
		return 0 <= index && index < 16 ? results[index] : nullptr;
	}

	const wchar_t* PrefixMerge8_PmVariadicFieldName(PrefixMerge8_PmVariadicFields field)
	{
		const wchar_t* results[] = {
			L"CallExpr::args",
			L"CallExpr::func",
			L"ConstType::type",
			L"CtorExpr::args",
			L"CtorExpr::type",
			L"FunctionType::args",
			L"FunctionType::returnType",
			L"GenericMemberName::member",
			L"GenericMemberName::parent",
			L"GenericName::name",
			L"GenericQualifiedName::args",
			L"MemberName::member",
			L"MemberName::parent",
			L"MulExpr::first",
			L"MulExpr::second",
			L"Name::name",
			L"PointerType::type",
			L"TypeOrExprToResolve::candidates",
			L"VariadicArgument::operand",
		};
		vl::vint index = (vl::vint)field;
		return 0 <= index && index < 19 ? results[index] : nullptr;
	}

	const wchar_t* PrefixMerge8_PmVariadicCppFieldName(PrefixMerge8_PmVariadicFields field)
	{
		const wchar_t* results[] = {
			L"prefixmerge8_pmvariadic::CallExpr::args",
			L"prefixmerge8_pmvariadic::CallExpr::func",
			L"prefixmerge8_pmvariadic::ConstType::type",
			L"prefixmerge8_pmvariadic::CtorExpr::args",
			L"prefixmerge8_pmvariadic::CtorExpr::type",
			L"prefixmerge8_pmvariadic::FunctionType::args",
			L"prefixmerge8_pmvariadic::FunctionType::returnType",
			L"prefixmerge8_pmvariadic::GenericMemberName::member",
			L"prefixmerge8_pmvariadic::GenericMemberName::parent",
			L"prefixmerge8_pmvariadic::GenericName::name",
			L"prefixmerge8_pmvariadic::GenericQualifiedName::args",
			L"prefixmerge8_pmvariadic::MemberName::member",
			L"prefixmerge8_pmvariadic::MemberName::parent",
			L"prefixmerge8_pmvariadic::MulExpr::first",
			L"prefixmerge8_pmvariadic::MulExpr::second",
			L"prefixmerge8_pmvariadic::Name::name",
			L"prefixmerge8_pmvariadic::PointerType::type",
			L"prefixmerge8_pmvariadic::TypeOrExprToResolve::candidates",
			L"prefixmerge8_pmvariadic::VariadicArgument::operand",
		};
		vl::vint index = (vl::vint)field;
		return 0 <= index && index < 19 ? results[index] : nullptr;
	}

	vl::Ptr<vl::glr::ParsingAstBase> PrefixMerge8_PmVariadicAstInsReceiver::ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates)
	{
		auto cppTypeName = PrefixMerge8_PmVariadicCppTypeName((PrefixMerge8_PmVariadicClasses)type);
		switch((PrefixMerge8_PmVariadicClasses)type)
		{
		case PrefixMerge8_PmVariadicClasses::CallExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::CallExpr, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::ConstType:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::ConstType, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::CtorExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::CtorExpr, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::FunctionType:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::FunctionType, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::GenericMemberName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::GenericMemberName, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::GenericName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::GenericName, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::GenericQualifiedName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::GenericQualifiedName, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::MemberName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::MemberName, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::MulExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::MulExpr, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::Name:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::Name, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::PointerType:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::PointerType, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::QualifiedName:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::QualifiedName, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::TypeOrExpr:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::TypeOrExpr, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		case PrefixMerge8_PmVariadicClasses::TypeOrExprToResolve:
			return vl::glr::AssemblerResolveAmbiguity<prefixmerge8_pmvariadic::TypeOrExprToResolve, prefixmerge8_pmvariadic::TypeOrExprToResolve>(type, candidates, cppTypeName);
		default:
			return vl::glr::AssemblyThrowTypeNotAllowAmbiguity(type, cppTypeName);
		}
	}
}
