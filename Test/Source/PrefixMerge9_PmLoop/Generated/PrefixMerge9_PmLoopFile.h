/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:File
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_PREFIXMERGE9_PMLOOP_FILE_AST
#define VCZH_PARSER2_UNITTEST_PREFIXMERGE9_PMLOOP_FILE_AST

#include "../../../../Source/AstBase.h"
#include "../../../../Source/SyntaxBase.h"

namespace prefixmerge9_pmloop
{
	class ClassItem;
	class File;
	class IntCommaItem;
	class IntDotItem;
	class IntItem;
	class IntQuestionItem;
	class Item;
	class ItemToResolve;
	class QuestionItem;

	class Item abstract : public vl::glr::ParsingAstBase, vl::reflection::Description<Item>
	{
	public:
		class IVisitor : public virtual vl::reflection::IDescriptable, vl::reflection::Description<IVisitor>
		{
		public:
			virtual void Visit(ItemToResolve* node) = 0;
			virtual void Visit(IntItem* node) = 0;
			virtual void Visit(IntCommaItem* node) = 0;
			virtual void Visit(IntDotItem* node) = 0;
			virtual void Visit(IntQuestionItem* node) = 0;
			virtual void Visit(ClassItem* node) = 0;
			virtual void Visit(QuestionItem* node) = 0;
		};

		virtual void Accept(Item::IVisitor* visitor) = 0;

	};

	class IntItem : public Item, vl::reflection::Description<IntItem>
	{
	public:

		void Accept(Item::IVisitor* visitor) override;
	};

	class IntCommaItem : public Item, vl::reflection::Description<IntCommaItem>
	{
	public:

		void Accept(Item::IVisitor* visitor) override;
	};

	class IntDotItem : public Item, vl::reflection::Description<IntDotItem>
	{
	public:

		void Accept(Item::IVisitor* visitor) override;
	};

	class IntQuestionItem : public Item, vl::reflection::Description<IntQuestionItem>
	{
	public:

		void Accept(Item::IVisitor* visitor) override;
	};

	class ClassItem : public Item, vl::reflection::Description<ClassItem>
	{
	public:

		void Accept(Item::IVisitor* visitor) override;
	};

	class QuestionItem : public Item, vl::reflection::Description<QuestionItem>
	{
	public:
		vl::Ptr<Item> item;

		void Accept(Item::IVisitor* visitor) override;
	};

	class File : public vl::glr::ParsingAstBase, vl::reflection::Description<File>
	{
	public:
		vl::collections::List<vl::Ptr<Item>> items;
	};

	class ItemToResolve : public Item, vl::reflection::Description<ItemToResolve>
	{
	public:
		vl::collections::List<vl::Ptr<Item>> candidates;

		void Accept(Item::IVisitor* visitor) override;
	};
}
namespace vl::reflection::description
{
#ifndef VCZH_DEBUG_NO_REFLECTION
	DECL_TYPE_INFO(prefixmerge9_pmloop::Item)
	DECL_TYPE_INFO(prefixmerge9_pmloop::Item::IVisitor)
	DECL_TYPE_INFO(prefixmerge9_pmloop::IntItem)
	DECL_TYPE_INFO(prefixmerge9_pmloop::IntCommaItem)
	DECL_TYPE_INFO(prefixmerge9_pmloop::IntDotItem)
	DECL_TYPE_INFO(prefixmerge9_pmloop::IntQuestionItem)
	DECL_TYPE_INFO(prefixmerge9_pmloop::ClassItem)
	DECL_TYPE_INFO(prefixmerge9_pmloop::QuestionItem)
	DECL_TYPE_INFO(prefixmerge9_pmloop::File)
	DECL_TYPE_INFO(prefixmerge9_pmloop::ItemToResolve)

#ifdef VCZH_DESCRIPTABLEOBJECT_WITH_METADATA

	BEGIN_INTERFACE_PROXY_NOPARENT_SHAREDPTR(prefixmerge9_pmloop::Item::IVisitor)
		void Visit(prefixmerge9_pmloop::ItemToResolve* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

		void Visit(prefixmerge9_pmloop::IntItem* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

		void Visit(prefixmerge9_pmloop::IntCommaItem* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

		void Visit(prefixmerge9_pmloop::IntDotItem* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

		void Visit(prefixmerge9_pmloop::IntQuestionItem* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

		void Visit(prefixmerge9_pmloop::ClassItem* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

		void Visit(prefixmerge9_pmloop::QuestionItem* node) override
		{
			INVOKE_INTERFACE_PROXY(Visit, node);
		}

	END_INTERFACE_PROXY(prefixmerge9_pmloop::Item::IVisitor)

#endif
#endif
	/// <summary>Load all reflectable AST types, only available when <b>VCZH_DEBUG_NO_REFLECTION</b> is off.</summary>
	/// <returns>Returns true if this operation succeeded.</returns>
	extern bool PrefixMerge9_PmLoopFileLoadTypes();
}
#endif