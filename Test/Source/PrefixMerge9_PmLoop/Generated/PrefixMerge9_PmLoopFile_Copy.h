/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:File
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_PREFIXMERGE9_PMLOOP_FILE_AST_COPY_VISITOR
#define VCZH_PARSER2_UNITTEST_PREFIXMERGE9_PMLOOP_FILE_AST_COPY_VISITOR

#include "PrefixMerge9_PmLoopFile.h"

namespace prefixmerge9_pmloop::copy_visitor
{
	/// <summary>A copy visitor, overriding all abstract methods with AST copying code.</summary>
	class FileVisitor
		: public virtual vl::glr::CopyVisitorBase
		, protected virtual Item::IVisitor
	{
	protected:
		void CopyFields(ClassItem* from, ClassItem* to);
		void CopyFields(ClassQuestionItem* from, ClassQuestionItem* to);
		void CopyFields(File* from, File* to);
		void CopyFields(IntCommaItem* from, IntCommaItem* to);
		void CopyFields(IntDotItem* from, IntDotItem* to);
		void CopyFields(IntItem* from, IntItem* to);
		void CopyFields(Item* from, Item* to);
		void CopyFields(ItemToResolve* from, ItemToResolve* to);
		void CopyFields(QuestionItem* from, QuestionItem* to);

	protected:
		virtual void Visit(File* node);

		void Visit(ItemToResolve* node) override;
		void Visit(IntItem* node) override;
		void Visit(IntCommaItem* node) override;
		void Visit(IntDotItem* node) override;
		void Visit(ClassItem* node) override;
		void Visit(ClassQuestionItem* node) override;
		void Visit(QuestionItem* node) override;

	public:
		virtual vl::Ptr<Item> CopyNode(Item* node);
		virtual vl::Ptr<File> CopyNode(File* node);

		vl::Ptr<ClassItem> CopyNode(ClassItem* node);
		vl::Ptr<ClassQuestionItem> CopyNode(ClassQuestionItem* node);
		vl::Ptr<IntCommaItem> CopyNode(IntCommaItem* node);
		vl::Ptr<IntDotItem> CopyNode(IntDotItem* node);
		vl::Ptr<IntItem> CopyNode(IntItem* node);
		vl::Ptr<ItemToResolve> CopyNode(ItemToResolve* node);
		vl::Ptr<QuestionItem> CopyNode(QuestionItem* node);
	};
}
#endif