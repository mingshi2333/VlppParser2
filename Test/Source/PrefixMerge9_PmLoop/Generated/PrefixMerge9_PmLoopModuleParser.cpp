/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixMerge9_PmLoop
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixMerge9_PmLoopModuleParser.h"

namespace prefixmerge9_pmloop
{
	void PrefixMerge9_PmLoopModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 2175; // 17899 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 127;
		static const vl::vint dataSolidRows = 8;
		static const vl::vint dataRows = 9;
		static const char* compressed[] = {
			"\xEB\x45\x00\x00\x77\x08\x00\x00\x06\x00\x01\x82\x80\x08\x03\x82\x81\x82\x06\x89\x82\x83\x0A\x80\x81\x84\x07\x0A\x92\x0A\x95\x0A\x81\x0E\x85\x0E\x0A\xD8\x01\x09\x8F\x7D\x8E\x8F\x8E\x0A\x80\x1F\x9F\x81\x93\x92\x8F\x90\x21\x9B\x9C\x86\x9F\x7D\x90\x96\x97\x26\xB0\xA3\x92\x94\x92\x84\x97\x96\x36\xAF\xB9\x91\x9B\x9B\x99\x9F\x9A\x2B\xBC\x81\xBE\x99\x82\x96\x82\xA3\x03\xB7\xB4\x87\x9F\x9C\xA7\xA0\xA0\x06\xCA\x8D\xA0\x93\xA8\x9F\xA6\xA7\x51\xBA\x97\xB4\xA9\x82\x02\x84\xA4\x02\xD2\x9B\xB6\xA9\xAA\xA1\xB2\xA2\x67\xD0\x89\xBA\xA9\xB0\xAF\xB4\xB3\x6F\xE8\xB1\xAA\xB1\xB4\xB7\xB8\xB7\x0B\xDF\x95\xAB\xAC\xAD\xB5\xBF\xBB\x7F\xF5\xB0\xA2\xC2\xBC\xC0\xBB\x80\x62\xFE\xA4\xA3\x84\x02\x86\xAF\x84\x0E\xC7\xBB\xB3\xC3\xB4\xBF\xC4\xC3\x78\x88\xF6\xB8\xC1\xC2\xCF\xC0\xCF\x85\xA0\xC7\xC2\x9B\xCA\xD1\xCC\x00\x07\x7A\x95\xD4\xCA\xC6\xCA\xD6\xD6\x80\x97\xC1\x88\x82\xCB\xD6\xDB\xD6\x0A\x89\x2A\xC6\x8A\x03\xDF\x81\x05\x8E\xB0\xC2\x8D\x0E\xDC\xCE\xD8\xD2\x9F\xC8\xE1\xCA\xE3\xD1\xC5\xD9\xD7\x0F\xC5\xE6\xDD\xCC\xE7\xD2\xE6\xE3\xD0\x86\x8F\x12",
			"\xE5\xEC\xE8\x08\xEE\xD7\xD3\xC7\xE1\xFD\xEB\xF1\xD3\xF2\xD9\x83\x91\x00\xF7\xF4\xF2\xF7\xF6\xE7\x92\x85\xA2\xE2\xF1\xF6\x81\x09\xC1\x89\x94\x89\x8D\xC7\xDB\xE6\xFA\xE8\x40\x8F\x79\x72\x03\x8B\x75\x81\x73\xE7\x56\x43\x7E\x7F\x02\x5A\x09\x7E\x41\x1C\x2C\x74\x80\x7C\x13\x89\x78\x47\x82\xB8\x49\x4E\x07\x83\x03\x60\x02\x86\x81\x14\xA0\x85\x86\x88\xCB\x61\x0F\x84\x82\x23\xA8\x84\x8A\x8A\x2C\x96\x71\x89\x8B\xD4\x47\x8E\x89\x72\x22\x27\x83\x8F\x8A\x37\xB0\x86\x79\x8A\x39\xBD\x84\x77\x08\x36\xB1\x8F\x8A\x8F\x3B\xB8\x82\x90\x8F\x47\x86\x95\x92\x8E\xF6\x41\x44\x09\x90\x4B\x84\x9D\x91\x80\x0C\xB5\x72\x83\x90\x49\x8C\x90\x81\x09\x50\x93\x92\x8C\x75\x26\x1D\x97\x94\x92\x51\x99\x92\x97\x98\x4A\x9E\x97\x7B\x09\x62\x95\x94\x95\x86\x70\xBF\x7E\x98\x0A\x6D\xB1\x98\x74\x9A\x5A\xAE\x9F\x97\x71\x29\x1C\x82\x43\x0A\x0A\x7D\x76\x9E\x95\x7A\x98\x95\x9B\xA1\x6A\xA4\x99\xA3\x72\x2F\x1C\x70\x0D\x9D\x72\x83\xAF\x99\xA4\x94\x82\x41\x0C\x77\x32\x10\xA7\x9D\xA1\x8A\x80\x83\x0C\x77\x34\x1A\xA4\xA2\xA4\x7B\x8B\xA9\x9C\xA9\xE7\x75\x02\xAB\xA4",
			"\x9B\xA8\xAD\xA4\xA7\xCB\x76\x0B\xA9\xA9\x78\xA7\x90\xAF\x68\x37\x2B\xA8\x0C\x77\x39\x33\xA6\xA2\xA9\xB6\xAE\xA9\x99\xAD\x66\x94\x7A\x0F\xAA\x3B\x1C\x7C\x0E\xAF\xAF\x82\xB7\xAB\x40\x3D\x1C\x7E\x0C\xB3\xC3\xB7\xA1\xB3\x40\x3F\x1C\x70\x10\xB5\xCF\xAD\xA5\xA7\xA8\x03\x41\x1C\x76\x10\xDC\x97\xBE\xB7\xB9\xE0\x82\x48\x2E\x9F\x01\x45\x05\x56\xBB\x63\x77\x4C\x41\xBC\x2C\x4F\x66\x40\xBC\x8A\x42\xA1\x6F\x4D\xF8\xBB\xBC\x4B\xBC\x8A\x77\x46\xBC\x4A\xC6\x40\xCE\xBE\x49\x03\xC2\x40\x5A\x78\x06\xC6\x72\xC2\x42\xFD\x86\x71\xC6\x78\xFC\x95\x55\xC4\xBD\x26\x69\x68\xC7\x48\x0D\xD4\xC5\xBE\x42\x1D\xE5\x74\x6F\xC1\x23\x51\x64\xCB\x47\x13\xE5\x77\x4E\xC6\x01\xFF\xB6\xC7\xC7\xFC\x55\x53\xCA\xC3\x2C\x66\xC4\xCE\x49\x29\xF7\x4B\xCB\xCB\x26\x61\xCA\xCC\xCC\x06\x76\xC2\x7B\xCC\x1E\xE6\x42\xD2\xCA\x2C\x79\xCF\xCF\x48\x2C\xE7\xCE\x46\xCF\x4B\xDF\x40\xD5\xD4\x1D\x44\xD8\xD2\x49\xFA\xB7\xC3\x4A\xD2\x54\xFF\x3D\xD2\xD6\x1F\x49\xC1\x42\x6E\x63\x56\xDD\xD5\x47\x64\xC6\x42\xD9\x79\x5C\xD4\xDD\xD9\xD4\x6F\xCB\xDF\xD5\xD1\x1C\xFC\xC3\x4A\xD9\x67",
			"\xF3\xD7\xD7\x48\x6B\xE9\xD1\x6C\xDE\x5D\xFE\xD2\x43\xDA\x17\xED\xC8\xCE\xDD\x28\xC8\xEE\x46\xDE\x67\xFF\x33\xD4\xD5\x80\xD4\xDC\xE3\xD9\x7D\xF2\xCA\xE0\xDA\xEC\xA5\x7B\xD8\xE1\x2E\xDB\xC1\xD8\xC1\x8A\x5B\xE5\x57\xE3\x51\xEB\xDB\xC2\xE6\x99\xCF\xC9\x40\xE9\x4F\xD7\xEF\x3F\xDA\x71\xDD\x42\xEB\x58\x6B\xD9\xDC\xC2\xEB\xB0\xD5\x53\xED\xE8\x0D\x63\xE8\xEC\xC4\xBA\xE9\xED\xE6\xE1\x75\xDE\xEE\x45\xEE\x63\x71\xEA\xCC\xEB\x3F\xEB\xD6\x64\xF3\x3A\xE6\xEE\xEE\xF1\xB2\xC0\xF9\xF2\xEB\xD0\xEA\xE0\xEB\xED\xD4\xEF\xE0\x95\xF6\x40\xC3\x4A\xF2\xF3\xEF\xBF\xE8\x85\x6C\xCA\xF2\xB6\xFB\xBD\x55\x76\xEB\xDD\xE2\xDD\xE0\xF8\xC3\xF6\x05\xEB\xF3\x43\xE9\xDA\xC3\x40\xF6\xFC\x7C\xD6\xFC\xED\xCC\x63\x3C\x7F\xE7\x09\x23\x7D\xDE\x41\x86\x7E\x02\x2A\x7A\x00\xAD\x7D\x7A\xE4\x4A\x31\x7D\x49\x6E\x77\xE4\x5D\x65\x73\xB2\x6E\x72\x70\x01\x3C\x73\xE1\x5D\x70\x83\x8C\x48\x83\x6C\x96\x7D\x78\x06\x80\x0A\x83\xAD\x6E\x75\x83\x4C\x7F\x80\x00\x23\x87\x27\xC8\x51\x6B\x84\x25\x90\x7C\xF1\x32\x8E\x69\x8E\x13\x84\x6A\x15\x8A\x32\x0B\xCB\x60\x87\xF2\x5C\x82",
			"\x82\x2A\x8C\x84\x4B\x3B\x8F\x67\x1E\x97\x7F\x87\xDD\x77\x85\xE9\x39\x31\x85\x19\x9E\x26\x88\x0F\x87\x84\x10\x8D\x8C\x88\x0B\xA2\x82\x78\x1E\x94\x89\x42\x42\x86\x24\x22\xBA\x60\x8A\xB1\x2E\x7D\xE3\x62\x87\x6C\x32\x9D\x6E\x8C\x54\x68\x8D\xD4\x6A\x8C\x86\xFA\x62\x3C\x8D\x3F\x70\x8E\xCE\x47\x6D\x70\x3A\xA7\x6E\x8E\x67\x97\x82\x1B\xE5\x33\x84\xCB\x17\x56\x8D\xA7\x6B\x6D\xC8\x6E\x74\x91\x40\x7E\x7B\x20\x47\x7A\x6E\xD5\x7A\x63\x84\xBD\x7D\x31\x21\xC0\x29\x22\xDE\x0C\x0A\x21\x48\x86\x22\x6F\xC4\x30\x92\x42\x7A\x60\x22\x4D\x89\x23\x3B\xE7\x62\x20\x28\xEA\x6A\x21\x51\xBA\x7A\x21\xDF\x21\x95\x40\x29\x94\x95\x84\x2C\x97\x94\x9E\x86\x22\xD5\x23\x8F\x90\x83\x16\x93\x20\x94\x91\x97\x40\x19\x96\x96\x85\x1D\x95\x97\x09\x2B\x3E\x1B\xA9\x61\x24\xE8\x61\x26\x7D\xB7\x80\x75\xC8\x29\x1C\x3B\x94\x7C\x93\x7B\x21\x6A\x14\x77\x21\x2D\x8E\x90\x4A\x23\x15\xDC\x2A\x93\x1E\xA1\x6C\x15\x6C\x8A\x25\x96\xD0\x8A\x21\x2B\x5E\x99\x21\x5C\xB4\x79\x64\xAE\x04\x9E\x41\x2F\x9B\x8F\x81\x2F\x14\x3B\xEE\x74\x4E\x1B\xA1\x60\x17\x66\x8A\x25\x4F\xF3\x8A",
			"\x21\x2C\x5C\x37\x69\x1A\x6E\x8B\x6D\xB2\x13\x9A\x42\x1B\x0B\x9A\x00\x47\x68\x48\xFF\x8A\x23\x2C\x7C\x9A\x21\x27\x49\xA1\x21\xB4\x0C\xA1\x42\x6C\x49\x9F\x84\x35\x14\x3B\x6B\x62\x99\x3B\x86\x26\x16\x8C\x8A\x22\xA3\x1B\xA2\x23\x2D\x5C\x33\x09\x3D\xB1\x87\x34\xED\x98\x7F\xAF\x19\x7A\xA5\xE4\x29\x25\x5C\xD4\x21\x67\x49\xD4\x31\x25\xDD\x5F\x58\x25\xA7\x69\x66\x1C\xED\x9E\x7D\x99\x88\x56\x80\x06\x34\x00\x80\x21\x27\x68\x9F\xAF\xA2\x95\x00\x07\x68\x06\x43\xAA\x20\xAB\x46\xAC\xA5\x40\xA3\x23\x53\xEE\x80\x9D\xC1\x40\x41\x64\xA7\x6B\x90\x53\xE5\x90\xA7\xE3\x0D\x93\xAB\x06\x2F\x9A\xC2\x44\x5E\xAA\x85\x1F\x00\xAC\x03\x3F\x94\x22\x80\x4E\x7D\xD3\x63\x86\x43\x6E\x41\x26\x50\x90\x30\x41\x94\x6E\xAA\x21\x26\x51\xAE\x42\x0E\x44\xAE\x37\x47\x6F\xAE\x09\x3C\x4A\x5E\x89\x20\xAE\x60\x92\x52\x6F\xA7\x75\xA9\x40\x4A\x88\xA4\x85\x00\x50\xA9\xB4\x5A\x96\x40\x0C\xB4\xA6\x85\x2C\x05\xAB\x21\x29\x99\x40\x02\xB2\x53\x90\x2D\x05\xA9\x00\x56\x6B\xE9\x66\x93\x20\xCA\x87\x39\x24\xAA\x50\xB3\x4A\x89\x22\xAD\xC5\xA8\xAA\x20\xB2\x4A\xB5\xB3\x3B",
			"\x9A\x20\xCE\xB7\xA1\x24\xB9\x49\x22\x17\xD4\x9C\x3A\xB5\x82\x23\xAE\x9D\xAA\x21\xB6\x2B\x70\x40\xC5\xA4\x86\x97\x0A\x2B\xAB\x60\x86\x24\x5C\xE2\xAE\x4C\xB4\x56\xB1\x39\x57\x2F\xB1\x21\x22\x06\x96\x4D\xBE\xA1\x21\xC8\x59\xB7\xB9\xE5\x83\x21\x09\xD7\xB2\x50\x48\xF9\x22\xBB\x56\x81\xB9\x21\x4D\x01\xBF\x4D\xC0\xB0\x96\x83\x1C\xBB\xAA\xF4\x71\x0A\x7A\xE8\x50\x01\x0B\x16\x9E\x95\xA5\x94\xB8\x00\x55\x08\xB2\x54\x8A\x24\xBD\xF4\xA1\x26\x15\x58\x8B\x38\xBE\xA6\xBB\x20\xEC\x81\x22\x72\xE7\xB6\x20\x2C\x04\xC3\x34\x11\x53\xB8\x7E\x92\xCC\xC1\x81\x1A\x0F\xC1\xA7\x3B\x40\x85\xEA\x39\xBE\xEF\x82\x24\x0B\xFD\xA1\x9B\x7F\xFA\xBD\x0A\x0C\xD4\x3D\xB0\x52\xBF\xA1\x72\xFA\xBF\x0A\x13\xC7\x3E\x9F\x07\xC2\x23\x78\x99\x8A\xBF\x30\x2E\xC1\x24\x0E\xB1\xC5\x40\x72\x31\xA8\xFD\xA3\x09\xC4\x3D\xC9\x20\x7E\x1E\xC1\x20\x32\x00\xCB\x20\xFB\x26\x23\x82\xB7\xBA\x21\x32\x07\xCA\x20\xF6\xA9\x22\x05\x7A\xB6\x0D\x27\xCA\xC2\x21\x51\xD5\xC0\x7D\x91\xB6\x20\x05\x7A\xC4\x55\x04\x67\x0F\x8D\x8A\x21\x4C\xA4\x84\xA1\x21\x06\xCC\xC9\x42\x69\x03\xCC\x37",
			"\x51\xC6\x20\x69\xC1\xC0\x59\xD3\x47\x43\x20\xDA\xC9\x20\x6B\x0D\xCE\x41\x14\xA5\x36\x83\x35\xCB\x20\x4B\xD2\xCD\x42\x6D\x0A\xCF\x81\x32\x9D\xCF\x03\x3F\xCD\x74\xF7\xC0\x01\x37\x37\xBA\x52\xF8\x9F\xCA\xA2\xB4\xC4\xC8\x00\x32\x0F\xD1\x37\xAF\xB2\xA4\x85\xD0\x75\x3A\x18\xD4\xBE\x9F\xBB\xC2\x40\x13\xDD\xBA\x46\xF8\x0F\xD3\xE9\x41\x21\xA3\x22\xD1\x21\xB3\x9A\x42\xBF\x7B\x16\xC8\x00\x2E\xD6\x21\x32\xCC\xD4\x0F\xF3\xA1\x20\x20\x2B\x58\xC4\x81\x1A\xC4\xD1\x81\x12\xD5\xAF\x81\x26\xD6\x35\xC6\x22\x10\xB9\xC0\x02\x21\x2B\x59\xAE\x83\x3F\xD6\xD8\x03\x27\x12\xAC\xCD\xD3\x21\x62\xC2\xD6\x20\x88\x09\xD8\x23\x2B\x50\xC7\x81\x34\xD0\xDA\x5B\xCB\xB6\x41\x08\xA6\x21\x61\xE0\xC8\x25\x5C\xD7\xA5\x8E\x83\x24\xDB\x6B\xF7\xA1\xDD\x02\x36\xB6\xAF\xFA\xBD\x10\x59\xF2\xDC\xD8\xFA\xAE\x11\xB2\x92\x1B\x54\x6B\xDB\xB2\xBF\xF0\xC9\xD4\x00\x7C\xC3\x21\x67\xEE\xDA\x20\x93\x12\xD4\xC1\x82\x2E\xDF\x73\xE1\x24\x12\xC9\xD8\x13\xAA\x07\xD5\xE0\xFD\x99\x12\xD6\x14\xEC\xE2\x7E\x9A\x19\xD8\x4F\x2B\x51\xD2\x15\xF5\xD3\x27\x32\xD0\xE4\x8D\xD5\xD0\x14",
			"\xC9\xC4\x17\xAA\x2A\x0A\x20\x83\xC2\xE0\x58\xC5\x47\x38\xCB\x89\x2D\xE0\xF2\x21\x25\x14\xA8\xC0\x00\x2A\x2B\x5A\xD3\xED\x76\xE2\x67\x1B\xAD\xA7\x4C\x42\xE3\x25\xD3\x68\x26\xA8\x3E\xBE\x7A\x49\xED\x92\x7A\xA8\x99\x76\x79\x36\xAD\xBF\x73\x59\x71\x64\x94\x15\xEF\x98\x7B\x32\x8F\x3F\x6E\x78\x24\xE5\x40\x01\x7D\xC4\x81\x25\xD8\xD1\xA8\x3A\x3C\x86\x6B\x9A\x47\x68\x26\x69\xA8\x36\x62\xBD\x4E\x7A\x6F\x55\xFA\x6C\xD7\xEE\xE1\x24\xB8\xF5\xE9\xD9\x6C\xF2\x93\xDD\xFA\xEB\x93\x69\xBA\x6C\x98\x7A\x69\xEE\xDE\x1B\xA0",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Int",
			L"_IntItem",
			L"_Item",
			L"Module",
			L"_Item_LRI_Isolated_4",
			L"_Item_LRI_Isolated_5",
			L"_IntItem_LRI_Original",
			L"_Item_LRI_Original",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Int] BEGIN ",
			L"[1][_Int] END [ENDING]",
			L"[2][_Int]< \"int\" @ >",
			L"[3][_IntItem] BEGIN ",
			L"[4][_IntItem] END [ENDING]",
			L"[5][_IntItem]<< !_Int @ >>",
			L"[6][_Item] BEGIN ",
			L"[7][_Item] END [ENDING]",
			L"[8][_Item]<< !_Int ( lri:(LRI__IntItem)->_Item_LRI_Original @ | lri:<skip> ) >>",
			L"[9][_Item]<< !_Int @ ( lri:(LRI__IntItem)->_Item_LRI_Original | lri:<skip> ) >>",
			L"[10][_Item]<< !_Item_LRI_Isolated_4 ( lri:(LRI__Item)->_Item_LRI_Original @ | lri:<skip> ) >>",
			L"[11][_Item]<< !_Item_LRI_Isolated_4 @ ( lri:(LRI__Item)->_Item_LRI_Original | lri:<skip> ) >>",
			L"[12][_Item]<< !_Item_LRI_Isolated_5 ( lri:(LRI__Item)->_Item_LRI_Original @ | lri:<skip> ) >>",
			L"[13][_Item]<< !_Item_LRI_Isolated_5 @ ( lri:(LRI__Item)->_Item_LRI_Original | lri:<skip> ) >>",
			L"[14][Module] BEGIN ",
			L"[15][Module] END [ENDING]",
			L"[16][Module]< _Item_LRI_Original @ { _Item } >",
			L"[17][Module]< _Item_LRI_Original { _Item @ } >",
			L"[18][_Item_LRI_Isolated_4] BEGIN ",
			L"[19][_Item_LRI_Isolated_4] END [ENDING]",
			L"[20][_Item_LRI_Isolated_4]< \"class\" @ >",
			L"[21][_Item_LRI_Isolated_5] BEGIN ",
			L"[22][_Item_LRI_Isolated_5] END [ENDING]",
			L"[23][_Item_LRI_Isolated_5]< \"class\" \"?\" @ >",
			L"[24][_Item_LRI_Isolated_5]< \"class\" @ \"?\" >",
			L"[25][_IntItem_LRI_Original] BEGIN ",
			L"[26][_IntItem_LRI_Original] END [ENDING]",
			L"[27][_IntItem_LRI_Original]<< !_Int @ >>",
			L"[28][_IntItem_LRI_Original]lrp:(LRI__IntItem) @",
			L"[29][_Item_LRI_Original] BEGIN ",
			L"[30][_Item_LRI_Original] END [ENDING]",
			L"[31][_Item_LRI_Original]< _IntItem_LRI_Original \",\" @ >",
			L"[32][_Item_LRI_Original]< _IntItem_LRI_Original \".\" @ >",
			L"[33][_Item_LRI_Original]< _IntItem_LRI_Original \"?\" @ >",
			L"[34][_Item_LRI_Original]< _IntItem_LRI_Original @ \",\" >",
			L"[35][_Item_LRI_Original]< _IntItem_LRI_Original @ \".\" >",
			L"[36][_Item_LRI_Original]< _IntItem_LRI_Original @ \"?\" >",
			L"[37][_Item_LRI_Original]< _Item_LRI_Original \"?\" @ >",
			L"[38][_Item_LRI_Original]< _Item_LRI_Original @ \"?\" >",
			L"[39][_Item_LRI_Original]<< !_IntItem_LRI_Original @ >>",
			L"[40][_Item_LRI_Original]<< !_Item_LRI_Isolated_4 @ >>",
			L"[41][_Item_LRI_Original]<< !_Item_LRI_Isolated_5 @ >>",
			L"[42][_Item_LRI_Original]lrp:(LRI__Item) @",
		};
		return results[index];
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixMerge9_PmLoopTokens, ModuleParserStates, PrefixMerge9_PmLoopAstInsReceiver>(&PrefixMerge9_PmLoopTokenDeleter, &PrefixMerge9_PmLoopLexerData, &PrefixMerge9_PmLoopModuleParserData)
	{
	}

	vl::WString ModuleParser::GetClassName(vl::vint32_t classIndex) const
	{
		return vl::WString::Unmanaged(PrefixMerge9_PmLoopTypeName((PrefixMerge9_PmLoopClasses)classIndex));
	}

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 7, -1, 7, 7, 7, 7, 7, 7, 7, },
			{7, 1, -1, 7, 7, 7, 7, 7, 7, 7, },
			{-1, -1, 2, -1, -1, -1, -1, -1, -1, -1, },
			{7, 7, -1, 3, 7, 7, 7, 7, 7, 7, },
			{7, 7, -1, 7, 4, 7, 7, 7, 7, 7, },
			{7, 7, -1, 7, 7, 5, 7, 7, 7, 7, },
			{7, 7, -1, 7, 7, 7, 6, 7, 7, 7, },
			{7, 7, -1, 7, 7, 7, 7, 7, 7, 7, },
			{7, 7, -1, 7, 7, 7, 7, 7, 8, 7, },
			{7, 7, -1, 7, 7, 7, 7, 7, 7, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	}

	vl::Ptr<prefixmerge9_pmloop::File> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixmerge9_pmloop::File, ModuleParserStates::Module>(input, this, codeIndex);
	}

	vl::Ptr<prefixmerge9_pmloop::File> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixmerge9_pmloop::File, ModuleParserStates::Module>(tokens, this, codeIndex);
	}
}
