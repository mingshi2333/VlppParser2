/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubsetModuleParser.h"

namespace prefixsubset
{
	void PrefixSubsetModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3614; // 32544 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 30;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 15;
		static const char* compressed[] = {
			"\x20\x7F\x00\x00\x16\x0E\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xF2\x02\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF0\xF4\x44\xFF\xAF\xF5\x60\x03\xF2\x4A\x32\x7E\xEB\x6B\x21\x80\xF7\x62\x7F\x4A\x6E\x73\x21\xFD\x61\x39\x80\x03\x8F\x83\xAF\x7D\x7E\x7E\x94\x14\x85\x82\x21\x25\x81\xF6\x2B\x27\x82\x0C\x9F\x22\x83\xCA\x34\x24\x08\xE8\x7B\x25\x11\xA4\x3A\x84\xEA\x65\x85\x0A\xA8\x26\x84\x0F\x99\x83\x85\x25\x2D\x86\x0B\x9F\x28\x80\x7A\x79\x7E\x20\x0E\x91\x7C\x0C\xA1\x20\x82\xAC\x32\x83",
			"\x86\x3D\x80\x2F\x0F\xAE\x83\x88\x0F\xB5\x80\x7A\x0B\x93\x78\x58\x5D\x7C\x78\xAC\x0C\x82\x20\x45\x80\x24\x13\x81\x2D\x83\x90\x0F\x89\x20\x57\x84\x3F\x14\x82\x8E\x88\xDC\x5A\x8E\x8B\x37\x83\x21\x14\x9F\x2B\x8B\x2A\xA0\x21\x8B\x59\x8B\x7E\xB4\x49\x89\x21\x00\xA8\x83\x7E\x07\x9F\x57\x18\xFE\x71\x89\xBF\x33\x8F\x8D\x06\x88\x27\x11\xFA\x51\x8D\x83\x3E\x83\x87\x20\x35\x8D\x6B\x77\x81\x8F\x35\xAC\x80\x90\x1F\x88\x93\x3F\x7B\x88\x7E\x36\xB8\x84\x7A\x8A\x86\x8D\x05\xDB\x8E\x8C\x47\xA2\x88\x92\x70\x88\x25\x19\xDD\x89\x21\x34\x9C\x82\x91\x5B\x91\x81\xFB\x60\x8F\x93\x4C\xA5\x22\x92\xFE\x74\x90\x27\x86\x23\x8E\x54\xAA\x8F\x7D\xAB\x83\x22\x27\x96\x80\x95\x5F\x59\x8D\x92\xB4\x86\x95\x48\x2E\x9B\x24\x55\xA0\x29\x8B\xAD\x95\x94\xF8\x31\x92\x21\x59\xA7\x92\x98\x06\x22\x95\x1F\x81\x28\x97\x63\xBA\x90\x24\xBC\x9A\x90\x29\xA8\x20\x98\x4C\xB9\x8D\x24\x9B\x9F\x96\x42\x46\x9B\x96\x64\x83\x22\x99\x96\x8D\x88\x58\x51\x9E\x99\x6B\xA1\x26\x97\x7F\x35\x9B\x38\xDE\x9B\x20\x62\x98\x8E\x9A\x1B\x92\x9A\x21\xA5\x27\x97\x3F\x8F\x99\x91\xF7\x9F",
			"\x1C\x21\x87\x99\x9E\x46\x8A\x84\x9A\x4A\x86\x7D\x24\x8A\x9B\x9F\x18\x84\xA7\xA0\xF9\x85\xA3\x0B\xFD\x94\x7C\x1B\xA1\x9D\x3A\xF6\x86\x9C\x48\x0A\xA3\xA2\x84\x92\xA0\x9F\x17\xBA\x9E\x45\xF1\x96\xA0\x86\xBC\x2E\xA1\x00\xBA\x7D\x44\x9C\xAB\xA1\x8C\x94\xA0\xA3\x24\xB5\xA1\x42\x9B\xA1\x84\x15\x9E\xA6\x20\x09\x99\x77\x32\x84\x20\x9F\x96\xB9\x91\xA3\x5B\x88\x31\x16\xE0\x97\xA7\x94\x9F\x24\x9C\xE7\x96\x26\x36\xF3\x95\xA4\x9F\x9A\xA3\xA5\x48\xA6\xA4\x4B\xA4\x8C\x9E\xA5\xAF\xA3\x20\x31\xA6\x77\x4C\xB9\x88\x8E\xA3\xA7\xA7\xA8\x4E\xB9\xAA\x55\x8A\x9E\x9E\x99\x8F\xA4\xA6\xEB\x99\x9C\x50\xD2\x89\x2E\x77\x80\x03\x35\x61\xB9\xA3\x58\xE4\x85\xAD\xA1\x86\x20\xAD\x76\x8B\xAB\x09\xAE\xA9\xA2\x41\x84\x84\xAB\x72\x92\xAF\x0C\xB4\x8D\xA0\x24\xA1\xA7\x91\x69\xA6\xA9\x54\xFB\xAF\x1F\xB5\xBF\x1A\x38\x5A\xB6\xA5\x47\x99\xA4\xAB\xBD\x83\xB3\xAF\x86\xB9\xA6\x59\xBC\xA5\x24\xC4\x9B\xA9\xA9\x46\xAD\xB3\x0C\x8F\xB3\x86\xC3\x9C\xB6\x85\x91\xAD\xAD\x3A\x8A\x20\xAF\xD6\x06\xB6\xB3\x03\xB9\x9E\x65\x8A\xB1\x24\xCD\xAE\x80\x9D\xDE\x62\xB5\x6B\x2B",
			"\xBC\xA9\xC5\x97\xB4\xB1\x8A\x9F\xB2\x07\xA1\xB2\xA9\xD8\x84\xA8\x24\xB4\xB3\xAC\x4A\x2E\xBE\x83\x50\xA6\xAD\x99\x21\x21\xB8\x61\xC4\xB8\x83\x6C\xA3\xB5\x93\x58\x2A\xBB\x5E\xD7\xA7\xAA\xE6\x95\x82\xB7\x18\x88\xB6\x58\xEC\x91\x21\x39\x99\x8D\xB4\xFC\x79\xB5\x6A\x99\xA2\xBB\x19\x96\xB9\x95\xD3\x94\x9E\x6C\xCA\x35\xBC\x17\xA7\xBF\x95\xDF\x87\xB9\x74\x8A\x9F\xBD\x5E\x8A\x20\x95\x68\x98\x28\x76\x95\x85\x9E\xB7\x97\x3A\xBF\xE2\xB9\x9F\x7E\xFE\x73\xC0\x9A\x05\xC3\x25\x07\xC8\x25\x82\xEA\xB9\x21\x2D\xB3\xA6\xC1\x5F\xBA\xA5\x6F\xBE\xB6\x21\xF6\xA1\x23\xC1\x17\xC1\xC1\x46\x98\xC8\x37\xCE\x53\xC1\x20\xA2\x83\x25\x00\x81\x8B\x8A\x13\x91\xA8\x7E\x25\xDD\xAF\x5B\x9F\xC1\x21\xE0\x81\xB9\x87\x23\x39\x89\x70\xB2\xCB\x9B\x80\x93\xC2\x3E\x09\x21\xB8\x8E\x95\xCA\x21\x1D\xCD\x84\xC5\x00\x10\x7C\x78\xC2\xA7\xC4\x15\xC3\x23\xC8\x36\x3B\x3D\x42\x26\xC7\xBE\x85\x0A\xCC\x95\x46\xC2\x20\x92\xA3\x2D\x01\xF5\xB6\x7D\xC9\x09\x35\xCB\x92\xD1\xCA\x34\x20\xCC\xCB\x98\x5B\xDF\xA1\x42\x53\xCA\x21\x00\x62\xC8\x96\x09\x26\xCC\x4C\xA4\xB0\xC8\x06",
			"\x46\x21\x43\x09\x30\xCE\x41\x2C\x4C\xC4\x1D\x61\xCE\x20\x76\xD8\xCE\x42\x79\xC3\x20\x22\x49\x26\xCF\x06\x2A\x48\x94\x89\x22\xD1\x3E\xCA\x20\xD0\x86\xDF\xCD\x44\x0B\xD9\x21\x29\x4D\xD2\x21\x8E\xC6\x21\xA4\x83\x23\xD2\x29\x4A\x26\x02\x40\xC1\xBB\x48\x5B\x8F\x03\x08\xA2\x92\x94\x5A\xC0\xC9\x42\x20\x0E\xD2\x2F\xAA\xCA\xD4\x03\x21\x05\xA9\xE3\xCB\xCE\x20\xDB\x8A\x04\xAB\xC8\xCE\x41\x4A\x5C\xC5\x2D\xA3\x01\xD6\x50\xAA\x20\x0C\x2E\xDA\x20\x12\x38\xD2\x20\x5B\x92\x51\xAD\x8A\x25\x05\x5F\xE0\xC2\x21\x94\x43\xD9\x42\x26\x06\xD8\x00\x01\x82\x04\xBC\xC9\x23\x09\x4D\xD2\x94\x40\x4A\xDE\x20\x28\x0D\xDA\x09\x9B\x08\xD5\x84\x29\x02\xDB\x0A\x3C\xD9\xB7\x83\x2A\x05\x66\xC8\xC9\x55\xE3\xC2\x23\x0A\x66\xDA\x20\x74\xE9\xD8\x00\x2C\x0D\xD8\xFC\x34\x0F\xDD\x80\x2D\x05\xD9\x5B\x9A\x05\xB4\xF8\x31\x81\x1F\x3B\xDC\x43\xA2\x81\x5F\xB5\x9C\x48\xC9\x6B\x43\xE2\x20\x2E\x00\xDD\x42\x3B\x0F\xDE\x81\x2F\x04\xDD\x09\x3F\x5B\xC1\x81\x20\x06\x85\xC6\x26\x07\x0D\xE1\x21\x0C\x4D\xD2\x0E\x20\xC8\xB8\x37\xBA\x4F\x2A\x86\x1F\xED\x3A\xBB\x86\x52\x57",
			"\xC6\xAA\x6E\xB3\xDC\xC7\x50\x5D\x66\x81\x80\xF0\x74\xB0\x6D\x29\xC9\x3D\xBB\x4B\x38\xC9\x24\xEB\x3A\x09\xB2\xE0\xE5\xF5\x39\x84\xE7\x98\x7D\xB8\xCB\xE3\x3A\x57\xFE\x86\x27\xC9\xF1\xA9\x3D\x54\x90\xCA\x36\x9B\xCE\xE8\xCB\x53\x2B\x3E\xAE\x21\xDF\xBF\x84\x2E\xCD\xEA\x1F\xC2\x95\x70\xC8\xC4\xE9\xF5\x34\xC9\x99\x82\x7F\xC5\x42\x3E\xCC\x48\x5D\x7C\xCA\x20\x40\xF4\x69\x0E\xC8\xE5\xED\xF5\x08\xD0\xED\x61\xE2\x20\xD9\xCC\x92\xEB\xF5\x05\xD2\x9C\x06\x38\xD1\x1B\xA3\xEE\xC9\x1E\xF5\xE9\x3D\x63\x5F\xB5\x77\x29\xE7\xE9\xBE\xF5\xE3\x3D\x65\x42\xF2\xCE\x9A\x44\xEB\x62\xBF\xE8\x3F\x1A\x0D\x73\xA9\x8E\xF7\xF1\xF4\x22\xD8\xEC\x2A\xF7\xEA\x40\x6F\xE7\xE5\xF5\x2E\x4A\xF1\xBA\x5F\xEB\x40\x72\xCC\x42\x5D\x70\x48\xF4\xEB\x27\xED\x40\x22\xFD\xEC\x95\xEC\x74\xF3\x00\x10\xF5\xD7\xE9\x3E\x02\x2B\xC7\x51\xAA\x26\x90\xF5\xCE\xA2\xD3\x3C\x68\xE7\xCB\x20\xC2\xD1\xEA\x48\xBF\xF2\x21\xBB\xC1\x23\xEE\x2D\xEB\x3E\x45\x7B\xE9\x3D\xC9\xC7\xDC\xD0\x86\xF8\x3E\xAE\x1E\x5C\xF8\xFC\x1A\xF7\xF9\x81\xC9\xBC\x6D\x3A\x57\x55\x06\xFA\xD6\x8B\xA4\xF8\xEF",
			"\x40\x7A\xE2\xD3\xC7\xD0\x75\x75\x97\xCA\x21\xED\x95\xF8\x3E\x5A\x72\x53\x06\x19\x64\xFF\x40\x1F\x06\xFC\x26\x74\xDA\x56\xBE\x48\xF5\x42\x72\xF2\x20\x3E\x6C\xFC\x43\xB4\x68\x79\x06\x11\x2D\x02\x8C\x21\x56\x2F\x68\xFF\x73\x3B\x0A\x81\x10\x07\x86\x10\xEB\x72\x7D\xD4\x26\x2D\x19\x3D\x80\xF3\x75\x7F\x86\x2A\x6F\xB2\x2C\x70\xFA\x76\x10\x14\x8D\x7F\x16\x87\x28\x12\x75\x80\x02\x12\x70\x22\x86\x28\x81\x76\x10\x91\x79\x80\xB9\x3F\x74\x09\x17\x82\x03\x18\x7C\xB3\x78\x1F\x18\x75\x7D\x1C\x2A\x7A\x2B\x7D\x82\xD1\x75\x7A\xEB\x1A\x2E\x34\x8C\x24\xC6\x77\x83\x06\x1E\x82\xE2\x7D\x7A\xF8\x18\x2F\xDE\x79\x10\x0F\x3D\x83\x01\x1C\x7F\x01\x1B\x45\x89\x76\x10\x30\x86\x1E\xBA\x2D\x31\x4A\x87\x28\x4F\x88\x75\x03\x17\x85\x02\x1C\x76\x9D\x79\x1E\x29\x35\x85\xE3\x17\x79\x58\x82\x10\x5A\x84\x77\x2A\x87\x28\x31\x37\x84\x06\x1A\x33\x55\x87\x7A\xDC\x3A\x10\x29\x85\x7E\x67\x83\x1E\x44\x3B\x81\x1C\x21\x87\x03\x1F\x80\x3A\x89\x1E\x4A\x35\x85\x52\x36\x87\x02\x18\x87\x02\x14\x7F\x73\x86\x1E\x5A\x35\x85\x68\x30\x88\x01\x12\x88\x01\x1E\x7F\x10\x89",
			"\x1E\x6C\x35\x85\x70\x3A\x88\x00\x02\x86\x81\x8F\x81\xBF\x3F\x39\x96\x81\x10\x65\x89\x7C\xAE\x7F\x39\x9F\x72\x87\x8F\x88\x1F\x7A\x34\x89\xE3\x11\x8A\x79\x88\x89\xE6\x1D\x37\x55\x86\x38\x94\x88\x8A\x83\x8A\x8A\xBA\x19\x38\x55\x8C\x38\xAF\x8A\x10\x8E\x8B\x87\xF8\x14\x39\x55\x8E\x61\x25\x87\x28\x6E\x84\x69\xB2\x8C\x1B\xA1\x36\x8A\xE6\x11\x8C\x02\x1A\x87\x44\x8C\x21\xA3\x35\x85\xAF\x34\x89\xC8\x81\x10\x84\x83\x8A\x1C\x21\x3B\x55\x85\x3B\xD0\x88\x8B\xC3\x84\x1B\xB7\x35\x85\xBB\x34\x89\xCA\x81\x10\x42\x8D\x85\x83\x3B\x82\x0A\x13\x8D\x03\x10\x8B\xE4\x87\x7E\xAC\x39\x8B\x02\x11\x8D\x9E\x85\x8E\xE8\x79\x10\xD6\x62\x8A\xBA\x8C\x21\xC1\x36\x8C\xBA\x15\x8F\xA9\x85\x88\xBA\x13\x3C\x55\x88\x3C\x94\x8C\x8F\xB1\x8E\x8F\xBC\x1D\x71\x55\x84\x07\x19\x34\x90\x8D\x8B\x8D\xB8\x15\x07\x5E\x47\x07\x19\x3E\x7B\xF6\x8B\x8C\x4C\x28\x07\x8D\x34\x91\xFD\x84\x8D\x4C\x29\x07\x5E\x4B\x07\x13\x97\x8E\x0E\x9D\x1D\x7C\x0E\x45\x7E\x01\x92\xA3\x63\x92\xCB\x1F\x07\x5E\x41\x08\x19\x33\x28\x06\x12\x7B\x52\x8B\x1E\x82\x0A\x7D\xB8\x1E\x8E\xD8\x73\x10",
			"\x30\x93\x86\xEB\x8C\x24\x84\x0C\x3E\x87\x0E\x45\x0C\x90\x84\x03\x15\x02\xBD\x6A\x92\x2C\x8E\x28\x47\x96\x90\xBD\x35\x3A\xC1\x73\x10\x8C\x2C\x94\xB8\x19\x08\x8D\x39\x6C\x06\x11\x95\x1C\x96\x28\x8A\x0D\x38\xCB\x71\x93\x48\x9A\x10\x8B\x0C\x3E\xE3\x1B\x93\x43\x81\x10\x5D\x9C\x93\xF1\x8C\x21\x8E\x06\x7B\x92\x0E\x45\x46\x9A\x86\x03\x14\x7D\x5E\x92\x95\xDD\x14\x09\xB6\x73\x1E\x56\x97\x49\x09\x12\x97\x03\x1D\x7D\x59\x93\x8F\xF2\x8C\x97\x65\x99\x96\x4C\x28\x09\x2C\x7D\x09\x5E\x40\x2A\xC4\x71\x10\x8A\x93\x97\x7F\x93\x1E\x9F\x07\x97\xE6\x11\x2B\x83\x66\x10\x8D\x98\x96\x31\x8C\x21\xA3\x0C\x72\xA8\x0E\x45\xF9\x7B\x66\x09\x1E\x97\xE4\x6F\x95\x09\x1A\x0A\x8D\x32\x9A\x0E\x74\x9A\x06\x1B\x0A\x5E\x4D\x0A\x19\x3E\x6E\x7D\x9A\x9A\xEC\x86\x1E\xB0\x92\x10\x97\x96\x91\xE6\x8A\x72\x2F\x0A\x10\x82\x9D\x93\xB9\x92\x8F\xBB\x69\x10\x2A\x02\x9B\x02\x1E\x0A\x8D\x31\x9C\x06\x1B\x9B\x74\x9B\x1C\xAF\x0E\x45\xB1\x09\x31\x94\x99\x68\x8F\x96\x1E\xB2\x02\x99\xBA\x18\x81\x6F\x89\x10\xD1\x93\x98\x99\x9C\x24\xB6\x0C\x72\xBB\x0E\x45\x24\x8A\x97\x06",
			"\x10\x7F\x8A\x6B\x9C\x23\x1D\x0B\x62\x96\x1E\xEF\x20\x97\x02\x16\x9E\xC2\x73\x9D\xBA\x10\x0C\xB6\x74\x0C\x5E\x48\x30\x77\x63\x10\xF7\x76\x10\xEE\x72\x9F\xBC\x16\x0C\x8D\x3B\x9F\x03\x1F\x99\xF7\x8C\x24\xC7\x0E\x45\xC9\x09\x31\x04\xAF\x9E\xC4\x9F\x9B\x00\x8A\x10\xFD\x95\xA0\x86\x2A\x0C\x8D\x31\x80\x03\xAD\xA0\x00\x0B\x0C\x5E\x4D\x0C\x19\x34\x80\xD2\x92\xA1\x87\x2E\x0C\x36\x9D\x1D\x27\x32\x2B\x1E\xA2\x77\x18\xA0\x0D\x23\xAB\x1C\x5F\x8F\x8B\x27\xA1\x10\x5C\x84\x98\x86\x22\x0D\x2B\xA3\x12\x2D\x36\xA2\x35\xA0\x64\xE3\x14\x0D\xEC\x37\x0D\x5E\x49\x86\xF1\x93\x10\x06\x76\x10\xD5\x28\x9E\x0A\x19\x0D\x8D\x38\x9D\x03\x15\xA4\xFE\x94\x1B\xDA\x09\xA3\xE9\x1A\xA4\xEA\x68\xA1\xDC\x0C\x66\x09\x13\x0E\x1A\x28\x33\xEE\x91\x10\x52\xA1\x10\xF0\x90\xA2\xE3\x14\x0E\x36\x62\x10\xED\x03\x34\x5E\x4A\x81\x44\xA8\xA1\xEE\x0D\x38\x21\x8B\xA4\x18\xAF\x0E\x8D\x33\x9E\x02\x1C\xA4\x60\xA6\x1E\xF0\x00\xA5\xF8\x12\xA7\xE2\x88\xA1\xF2\x0C\x3E\xF5\x0A\x21\x50\x35\x85\x7A\xA0\x00\xBD\x92\xA3\x87\x26\x0F\x56\xA6\x10\xFD\x0A\x21\x87\x89\x9D\x06\x13",
			"\xA8\xF0\x8D\x9D\x86\x2E\x0F\xEC\x31\x00\xCD\x61\x89\x41\xA3\x82\x0A\x1A\x8E\x86\xA3\x1E\x02\x01\x41\x5B\x45\x00\xCD\x63\x89\x99\xA1\x10\x83\xAF\xA5\xB8\x97\x28\x06\x01\x41\x39\x4F\x00\xCD\x6C\x8A\xA5\xA0\x00\x33\x89\xA6\x46\xA1\x67\xCD\x6C\x3A\xFE\x69\x10\x74\xA9\xAA\xE3\x11\x01\x11\x4B\x7B\xEB\x19\xAB\x41\x88\xA1\x13\x00\xAA\x97\x6D\x6C\xAE\x81\xAB\xC2\xA3\x10\x91\xA3\x93\xE9\x17\x01\xC6\xA9\x10\x1A\x0D\x6C\x5F\x0E\x45\xCB\xA2\x10\x9C\xA2\xA9\x87\x2B\x01\xD1\xAE\x80\xCD\x6C\x8B\xB1\xAC\x83\x1F\x64\x74\xFE\x35\x6F\x70\x70\x64\x21\x62\x72\xCB\x29\x76\xFF\x09\xAE\x35\xA9\x73\x8B\x42\x6A\x26\x76\x86\x2C\x63\xAF\x00\x0C\x74\x30\x18\xAF\xD8\x42\x6A\x92\x5C\x3E\x36\x13\x47\x00\x07\x47\x26\x4F\xAF\xA2\x6F\x65\xF9\x9E\x3C\x23\x16\xB0\x95\x99\x6B\xB6\x73\xB0\x26\x49\x53\x0A\xB4\x9E\x12\xB3\xB1\x4D\x89\xB0\x1A\x21\xB0\x5E\x40\x00\x03\x6A\xB1\xEA\x31\x55\x01\x4C\xB1\x55\x80\xB2\xBF\x82\xB2\x1F\x68\x4A\x41\x6A\x3E\x31\x77\x19\x17\xB9\xB2\x50\x79\x74\x60\x63\xB2\xF0\x36\x13\x5C\x7A\x13\x33\xBB\x12\x48\x61\x62\x37\xB3\x12",
			"\x39\xB9\xA8\x1F\x66\x61\x29\x1E\xB3\xC0\x59\xB1\xC1\x5F\xB1\x9A\x61\x1C\xA2\x65\xB4\x0A\x11\x5C\x21\x6A\xB4\xE6\xA0\x00",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> ) >>",
			L"[62][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> ) >>",
			L"[63][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubsetTokens, ModuleParserStates, PrefixSubsetAstInsReceiver>(&PrefixSubsetTokenDeleter, &PrefixSubsetLexerData, &PrefixSubsetModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
