/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubsetModuleParser.h"

namespace prefixsubset
{
	void PrefixSubsetModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3617; // 32944 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 33;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 15;
		static const char* compressed[] = {
			"\xB0\x80\x00\x00\x19\x0E\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xC6\x12\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF0\xF4\x44\xFF\xAF\xF5\x60\x03\xF2\x4A\x32\x7E\xEB\x6B\x21\x80\xF7\x62\x7F\x4A\x6E\x73\x21\xFD\x61\x39\x80\x03\x8F\x83\xAF\x7D\x7E\x7E\x94\x14\x85\x82\x21\x25\x81\xF6\x2B\x27\x82\x0C\x9F\x22\x83\xCA\x34\x24\x08\xE8\x7B\x25\x11\xA4\x3A\x84\xEA\x65\x85\x0A\xA8\x26\x84\x0F\x99\x83\x85\x25\x2D\x86\x0B\x9F\x28\x80\x7A\x79\x7E\x20\x0E\x91\x7C\x0C\xA1\x20\x82\xAC\x32\x83",
			"\x86\x3D\x80\x2F\x0F\xAE\x83\x88\x0F\xB5\x80\x7A\x0B\x93\x78\x58\x5D\x7C\x78\xAC\x0C\x82\x20\x45\x80\x24\x13\x81\x2D\x83\x90\x0F\x89\x20\x57\x84\x3F\x14\x82\x8E\x88\xDC\x5A\x8E\x8B\x37\x83\x21\x14\x9F\x2B\x8B\x2A\xA0\x21\x8B\x59\x8B\x7E\xB4\x49\x89\x21\x00\xA8\x83\x7E\x07\x9F\x57\x18\xFE\x71\x89\xBF\x33\x8F\x8D\x06\x88\x27\x11\xFA\x51\x8D\x83\x3E\x83\x87\x20\x35\x8D\x6B\x77\x81\x8F\x35\xAC\x80\x90\x1F\x88\x93\x3F\x7B\x88\x7E\x36\xB8\x84\x7A\x8A\x86\x8D\x05\xDB\x8E\x8C\x47\xA2\x88\x92\x70\x88\x25\x19\xDD\x89\x21\x34\x9C\x82\x91\x5B\x91\x81\xFB\x60\x8F\x93\x4C\xA5\x22\x92\xFE\x74\x90\x27\x86\x23\x8E\x54\xAA\x8F\x7D\xAB\x83\x22\x27\x96\x80\x95\x5F\x59\x8D\x92\xB4\x86\x95\x48\x2E\x9B\x24\x55\xA0\x29\x8B\xAD\x95\x94\xF8\x31\x92\x21\x59\xA7\x92\x98\x06\x22\x95\x1F\x81\x28\x97\x63\xBA\x90\x24\xBC\x9A\x90\x29\xA8\x20\x98\x4C\xB9\x8D\x24\x9B\x9F\x96\x42\x46\x9B\x96\x64\x83\x22\x99\x96\x8D\x88\x58\x51\x9E\x99\x6B\xA1\x26\x97\x7F\x35\x9B\x38\xDE\x9B\x20\x62\x98\x8E\x9A\x1B\x92\x9A\x21\xA5\x27\x97\x3F\x8F\x99\x91\xF7\x9F",
			"\x1C\x21\x87\x99\x9E\x46\x8A\x84\x9A\x4A\x86\x7D\x24\x8A\x9B\x9F\x18\x84\xA7\xA0\xF9\x85\xA3\x0B\xFD\x94\x7C\x1B\xA1\x9D\x3A\xF6\x86\x9C\x48\x0A\xA3\xA2\x84\x92\xA0\x9F\x17\xBA\x9E\x45\xF1\x96\xA0\x86\xBC\x2E\xA1\x00\xBA\x7D\x44\x9C\xAB\xA1\x8C\x94\xA0\xA3\x24\xB5\xA1\x42\x9B\xA1\x84\x15\x9E\xA6\x20\x09\x99\x77\x32\x84\x20\x9F\x96\xB9\x91\xA3\x5B\x88\x31\x16\xE0\x97\xA7\x94\x9F\x24\x9C\xE7\x96\x26\x36\xF3\x95\xA4\x9F\x9A\xA3\xA5\x48\xA6\xA4\x4B\xA4\x8C\x9E\xA5\xAF\xA3\x20\x31\xA6\x77\x4C\xB9\x88\x8E\xA3\xA7\xA7\xA8\x4E\xB9\xAA\x55\x8A\x9E\x9E\x99\x8F\xA4\xA6\xEB\x99\x9C\x50\xD2\x89\x2E\x77\x80\x03\x35\x61\xB9\xA3\x58\xE4\x85\xAD\xA1\x86\x20\xAD\x76\x8B\xAB\x09\xAE\xA9\xA2\x41\x84\x84\xAB\x72\x92\xAF\x0C\xB4\x8D\xA0\x24\xA1\xA7\x91\x69\xA6\xAB\x5A\xFF\x13\xB0\xE1\x1A\xAE\xA6\x1D\xA7\xB0\x53\xA5\x24\xAB\xBD\x91\xAB\xAF\x84\xAC\x9E\x50\xB3\xAC\xA7\x72\x86\xAE\xB0\x5B\xA9\xA9\x66\x99\xAD\xB1\x19\x8F\xB3\xAF\x83\xBF\xB3\x0C\x83\xBB\x8B\x39\x99\x88\xAE\xAD\x23\xB2\x6A\x83\xA9\x9E\xCC\x88\xB5\xA8\xAF\xA0\x25\x67\xAE",
			"\x88\x9C\xEF\x6D\xAA\xA0\xAD\xBA\xAF\x5E\xD7\xA7\xAB\xD9\x9E\x82\xB4\x2E\x84\xB6\x50\xE9\x93\x82\x45\xAE\xB3\xB1\xB0\xA8\xBA\x6C\x92\xBC\x8A\xB7\x97\x3D\xA6\xCA\xBF\x23\x71\xF3\xAD\xA8\xA3\xBE\xB0\x83\xD9\x84\xB9\x27\xD0\xB4\xBB\x92\x13\xB8\xB2\xBC\xBA\xB7\x0C\xD7\xB5\x82\xE0\x9E\x81\xB4\xAC\xB8\xA7\x6D\xB6\xB9\x20\xD4\xBC\x79\xBD\x82\xA6\xBA\x78\xAE\x84\xBD\x54\x93\x9C\x9E\xEB\xAF\xBD\x6E\x9A\xB1\xB7\x8F\x35\xBF\x95\xDF\x86\xAD\x33\xDD\x9B\xBE\xC5\x9D\xB9\x24\xFF\xBD\x96\x42\x28\x98\x8C\xAC\x26\xB8\x83\xF5\x8E\xBA\x38\xFF\x2F\xC1\xF2\x8A\x95\xC2\xFE\x78\xC0\x4D\x1A\xCB\x24\x0E\xE8\x26\xC3\xF8\xA9\x23\x16\xB3\xA3\xC5\xAF\xBA\xA3\xB8\xEC\xA6\x23\x77\x9D\xC7\xC3\x16\xF9\x98\xC4\x21\x30\xC4\x48\x32\xCF\x22\x1A\xCB\x38\x6E\x28\xC1\x22\x28\xA3\x21\x81\x00\xA5\xB5\xAF\xB0\x82\xC5\x7E\xF6\x7A\x20\xF7\x82\xAB\xBA\xD3\xB9\x87\x48\x59\x83\xBA\x26\xDB\x99\xA0\x28\xD2\x3D\x42\x53\xB2\xCA\x15\xCA\x25\xCA\x0D\x99\xC4\x15\xC5\xCA\xCA\x00\x11\xA8\x7E\x51\xA6\xCA\x4D\x7B\x39\x20\x13\x9F\xCA\x21\x64\xCC\x94\x90\x83\x22\xCD\x91",
			"\x0D\x03\xC8\x5E\xCB\xC2\x42\x6F\xC5\xCD\x35\xC2\x25\xCD\x70\xC7\xCD\x9D\x9F\xAD\xBD\x2E\xC1\x44\xCF\x41\xC6\x23\x9F\xB0\xAC\xCA\x2D\xCC\x46\x20\x19\x49\x21\xA2\x86\x2C\x44\x2D\xFA\x43\xCF\x06\x2F\xD2\x41\x44\x49\x20\x25\x6A\xC9\x21\x94\xD3\xD1\x44\x0A\x23\x4B\x84\x1D\xD6\x20\x9F\xC3\x22\x05\x5D\xC3\xBB\x91\x1B\x88\x06\x11\x82\x96\x28\xF4\xCD\xCB\x84\x31\x01\xD5\x5E\x83\xD1\xAB\x83\x22\x06\x58\xFD\xC9\x21\x92\xC8\xC7\x16\xB3\x06\xD7\x40\xC3\x22\x59\x5A\xDB\x88\x0D\x3D\xD0\xAA\x85\x30\x05\xCB\x5B\x95\x04\xB1\x82\x2B\x8A\x49\x41\xDA\x21\x36\x0B\xDA\x8E\x8A\x24\x53\x67\xC9\x27\x06\xD2\xC0\x01\x00\xA2\x08\xD8\x85\x38\x01\xDB\xA2\x80\x52\xB5\x86\x29\x07\x6C\xE6\x83\x03\xB3\xC9\x22\x0E\x66\xDA\x20\x74\xE9\xDB\x20\x3B\x19\xDA\x98\xA9\x5F\xDC\x81\x3C\x02\xDE\x0A\x34\xDD\xBD\x80\x0D\x07\x6C\xF0\x7C\x06\xFB\xC1\x22\x0F\x59\xDB\x8A\x1D\x1D\xD9\x21\x3F\x19\xD9\x00\xBF\x07\xE0\x83\x00\x08\xDC\x0A\x21\x5F\xB8\x83\x21\x08\x7C\xC9\x27\x5A\x13\xE2\x22\x10\x6C\xD9\x21\x1D\x0D\xE3\x20\x43\x16\xE2\x41\x5F\x59\xE3\x80\x04\x0C\xE3",
			"\x06\x3E\x07\xC7\x82\x25\x09\x6C\xF2\x0D\xCB\x03\xD8\x36\xAE\x4F\x2A\x43\x98\xDD\x3E\xAE\x86\x5A\x55\x28\x82\x7F\xB8\x40\xDC\x42\x57\x26\x81\x80\xFC\x15\xB4\x37\x1F\xE9\x3F\x6E\xCB\x22\xCE\xCD\xCB\x36\x84\xA2\xF2\xE3\x3D\x39\x8E\xE8\xE6\x01\x26\xCD\xF5\x3A\x51\xC2\x06\x29\xCD\x80\xE9\x31\xAB\x12\xFA\x30\xE9\x60\xF2\xCD\x1B\xD6\xEB\x3C\x56\xFD\xE7\x21\x5E\x94\xE7\x94\x85\xD8\x3E\x5D\x4D\xD1\x99\x3C\xFE\x8D\x42\x58\xCC\x48\x5D\x79\xD2\x20\x52\xF4\x69\x0E\xDA\xE5\xEF\xF5\x19\xD3\xEB\x83\x61\x20\xDD\xCC\x94\xED\xF4\x16\xD7\xEC\xA2\xDE\x8A\x28\x81\x8C\xEE\xC1\xC5\xF0\x3F\x63\x44\xA8\x6E\x3B\xE9\x21\xC6\xC0\x06\xF2\xE3\x3A\x55\x99\x12\xFD\x3B\xA6\xF3\xCF\xC9\x47\xEB\x3E\x06\x0D\x72\xD7\x62\x8F\xF4\x43\xEE\xD0\xEE\xDA\x00\x07\xD1\x81\x3F\xED\xEF\xE9\x2E\x4C\xE7\xD4\x6F\xED\x81\x0B\xD7\xE7\xEB\x30\x4F\xEC\xF6\xEA\x21\xDA\xF0\xF1\xF0\xAD\x6A\x23\xEB\x81\x23\xF9\x43\x7A\x56\x03\x70\xC3\x3D\x54\xA6\x85\xF9\xA5\xED\xD3\x3C\xDC\xDE\xE6\x40\x4E\xD3\x2A\x28\xCE\x7B\xD3\x73\xE7\xF4\x93\x16\x23\xED\xF4\x25\xF3\xDA\x95\xC8\xCE",
			"\xF6\x86\x5E\x53\xEE\xF8\x3D\xF5\x78\xF8\xF9\xF5\xA1\xF9\x3D\x53\x42\xC9\x21\xC7\xC6\xFE\xED\xDE\x83\xD4\x4F\xE3\xF9\xF8\xAB\xF5\xFE\x41\x48\xFC\xFC\xFC\x34\x52\x56\x33\x09\x31\xFA\x73\x10\x1F\x07\x7F\xE3\x10\x70\xB2\x2E\x2B\xBB\x7A\x10\x03\x82\x10\x7C\x2D\x7F\x1C\x20\x6C\xAA\x76\x10\xD1\x23\x81\x1C\x26\x25\xF6\x70\x81\xB3\x3B\x81\x01\x18\x81\xFB\x76\x80\xE6\x15\x2D\xB2\x28\x71\x16\x8C\x24\x1E\x84\x80\x20\x8A\x1B\x06\x72\x2B\x1E\x7B\x80\x09\x17\x82\x0E\x89\x82\xBC\x14\x72\x25\x81\x10\x12\x75\x83\x87\x21\x79\x06\x13\x7A\x1A\x89\x3B\x61\x79\x10\x3A\x83\x10\x83\x76\x7C\xEB\x1A\x72\xF2\x7C\x24\x77\x74\x78\x40\x82\x7E\x3D\x87\x28\xEA\x27\x84\x86\x27\x78\x13\x63\x10\x41\x83\x85\xBF\x7C\x21\xF8\x2F\x7E\x06\x1F\x30\x50\x80\x00\x0D\x81\x10\x5B\x4B\x79\x06\x13\x84\x99\x7B\x1E\x1D\x3D\x85\xE3\x12\x86\x88\x72\x10\x6A\x82\x10\x98\x76\x1E\xBA\x29\x32\x68\x86\x1E\xA9\x7B\x86\x01\x1D\x86\x4A\x8D\x76\xEB\x11\x33\x5A\x83\x10\x3A\x3D\x85\xBA\x7C\x3D\x0A\x1C\x83\xA0\x62\x83\xB4\x14\x34\x2E\x88\x1F\x84\x83\x10\xFC\x7A\x87\xE9\x1A",
			"\x34\x5D\x82\x35\x89\x83\x10\x8B\x82\x10\x05\x8D\x84\xE3\x1A\x35\x5D\x88\x36\x93\x82\x10\x95\x81\x10\x0F\x8E\x88\xF8\x1C\x36\x5D\x88\x63\x38\x83\x1E\x75\x8E\x89\x86\x82\x39\xF8\x76\x10\xA9\x87\x87\xAB\x83\x75\xAD\x83\x10\xB2\x75\x88\x98\x86\x1E\x7A\x3D\x89\x86\x25\x8B\x8C\x81\x8B\xCB\x1D\x37\x5D\x86\x38\xBA\x80\x00\xBC\x86\x89\xBE\x83\x12\x89\x3D\x85\x8C\x33\x8C\xC5\x80\x8A\xC7\x8A\x10\x94\x3D\x85\x9D\x33\x8C\x81\x83\x10\xA1\x67\x85\x4C\x21\x3A\xC3\x83\x1E\xD5\x82\x10\x8D\x88\x7B\xE9\x13\x3A\x5D\x8F\x3A\xD4\x8A\x10\x97\x82\x8A\x1C\x21\x3B\x5D\x85\x3B\xE5\x89\x10\xA1\x80\x8E\xF8\x17\x3B\x5D\x8B\x3B\xC3\x8F\x8D\x02\x15\x85\x39\x71\x77\x3E\x86\x8E\x0A\x1D\x8C\x44\x8B\x7A\xAC\x3F\x8E\x02\x1D\x8D\xF9\x80\x90\x9F\x32\x6E\xB6\x88\x8E\x4C\x21\x3C\xDB\x86\x1E\x08\x9D\x8B\xB7\x8A\x1B\xC3\x3D\x85\xC8\x33\x8C\x0F\x96\x8C\x11\x9C\x1B\x2F\x7D\x85\x74\x09\x31\x17\x9E\x8C\x19\x94\x1B\x75\x0E\x45\x77\x09\x31\xD1\x79\x90\xF0\x8C\x21\x78\x0D\x38\x27\x90\x91\x0A\x96\x28\x79\x0E\x45\x7B\x06\x92\xFC\x81\x92\xB8\x1C\x07\x5E\x4E\x07",
			"\x34\x9E\x8E\xCF\x89\x10\x7F\x0E\x45\x81\x09\x31\x83\x2A\x69\x36\x9D\x1D\x82\x07\x5F\xB4\x12\x90\xE0\x76\x10\x43\x96\x87\xFF\x88\x1F\x84\x0C\x3E\x87\x0E\x45\x1F\x9A\x6D\x0A\x15\x02\x0A\x1C\x28\x45\x97\x3A\xA5\x3F\x28\x09\x1A\x95\x2F\x93\x8B\x1C\x80\x00\xD4\x73\x10\x60\x99\x92\x4C\x29\x08\x8D\x35\x6D\x06\x17\x96\xD8\x86\x28\x8A\x0D\x38\xDC\x74\x94\x61\x93\x1E\x8B\x0C\x3E\xE3\x1D\x94\x56\x81\x10\x73\x9E\x94\x65\x89\x1E\x8E\x00\x67\x92\x0E\x45\x58\x9D\x87\x02\x15\x7E\x74\x98\x96\x86\x24\x09\xC9\x76\x1E\x6C\x97\x49\x09\x18\x98\x03\x1E\x7E\x75\x9E\x3B\x9F\x32\x99\x7B\x9F\x94\x1C\x28\x09\x76\x61\x10\x9D\x0E\x45\xA0\x22\x7D\x01\x11\x9A\x89\x9F\x96\x87\x2F\x09\x8D\x9A\x1B\xB1\x27\x69\x06\x14\x9A\x7E\x90\x87\xEB\x13\x0A\x9D\x90\x00\xA8\x0E\x45\x0A\x84\x68\x09\x14\x99\x03\x1A\x02\x3D\x96\x10\xAA\x0D\x38\xBA\x92\x10\x2F\x0D\x9B\x03\x1B\x0A\x5E\x4D\x0A\x19\x3A\x6F\x93\x94\x9C\x63\x93\x1E\xCA\x92\x10\xAE\x96\x9A\xBF\x3F\x39\xC3\x91\x99\xCC\x9B\x8F\xE9\x11\x7F\x06\x1C\x9B\x5B\x93\x12\xAE\x0D\x38\xDA\x93\x10\xD5\x95\x99\xBA",
			"\x1F\x0A\x5E\x41\x0B\x19\x3B\x9A\xAE\x77\x9D\x00\x02\x0B\xA9\x9C\x1B\x2B\x82\x88\xAE\x68\x94\x4F\x79\x1E\xB6\x03\x9B\xBB\x0E\x45\x37\x80\x99\x06\x11\x80\x98\x6C\x9E\xBD\x08\x97\xE6\x1F\x2E\x86\x91\x10\xFE\x9B\x7E\xE4\x9C\x1B\xC0\x00\x67\xC4\x0E\x45\x08\x30\x69\x03\x18\x80\x06\x1F\x7F\x09\xA4\x1B\xC6\x0D\x38\x12\xA3\x10\xB7\x9A\x98\x87\x27\x0C\x5E\x49\x0C\x19\x3B\xA1\x02\x17\xA0\x1C\xA3\x9D\xA5\x32\x81\xB4\x6C\x9E\xCA\x0D\x38\x28\xA2\x10\x22\xA5\x90\xF8\x1B\x0C\x5E\x4D\x0C\x19\x35\x81\xEB\x9D\x9D\x0A\x1E\x0C\xF4\x9D\x1D\x27\x32\x2B\x36\xA2\x10\x64\x80\x9B\xE9\x10\x0D\x3B\xAB\x1C\x72\x88\x83\x3F\xA1\x10\x6F\x8F\x75\xEB\x12\x0D\x45\xA3\x12\x2D\x3E\xA3\x4F\xAD\x65\xE3\x14\x0D\xEC\x37\x0D\x5E\x4C\x87\x08\xA3\x10\x24\x83\x10\x22\x85\xA1\xB8\x19\x0D\x8D\x31\x9F\x5E\xAC\x9E\xDA\x03\xA6\x0A\x18\x99\x30\xAC\x21\xDB\x00\x7A\xF8\x18\x33\x5D\x84\xA6\x23\xAC\x9E\xE5\x0C\x84\xF8\x12\x34\x2C\x8E\x6D\xEC\x91\x0F\x8D\x34\x83\x65\xA8\xA3\x09\x12\x0F\x8D\x3B\x9F\x02\x1F\xA5\x25\xA6\x1E\xF3\x03\xA8\x0A\x18\x8F\x9A\x9C\x24\xF4\x02",
			"\x76\xF8\x18\x88\x38\x84\xA8\x01\x1A\xA6\x8D\xA6\x28\xFA\x0E\xA6\x1C\x20\x89\x5B\xA2\x10\x94\xA0\x00\x04\x97\xA9\x87\x24\x00\x11\x48\x4A\x23\x12\x89\x93\xAD\x8F\xEC\x9A\x00\xA5\xAB\x1E\x9A\x89\xAA\x09\x14\xA2\xD2\x96\x1E\x10\x01\x41\x4B\xAC\x1B\x5F\x32\x2B\x46\x86\x10\x86\xA3\xAB\x6D\x29\x6D\xAC\x3C\x70\x09\x1D\xAB\x6B\xAC\x24\x1D\x00\xAC\x9F\x32\xAC\x06\x1C\xA8\x7F\x98\x1F\x1E\x0D\xAA\xE9\x1C\x89\x38\x8A\xAC\x03\x11\xAA\xCD\xAC\x21\x24\x00\xAD\xA3\x8A\x21\xD4\xA2\x10\xFE\x87\xAD\x4C\x2A\x02\xDA\xAC\x21\x6E\x32\x2B\x4F\x89\x63\x99\x7E\x3F\x01\x79\x7E\x5D\x6B\x63\x6A\x7B\x7B\x79\x7F\x0F\xEE\xAF\xA4\x4B\x7B\x48\xAD\x68\x73\x79\x89\x63\xF8\xA0\x00\x5E\x70\x13\xFD\xA8\x4D\xAD\x69\x53\xA6\x6D\x6A\x73\x40\x00\x77\x46\x42\x36\x18\xB0\x23\x15\x75\x79\x6B\xB0\xB3\x96\xB0\x0F\xB6\x42\x08\xB6\x42\x39\x5C\xB0\x10\xA0\x45\x0E\xB5\xA0\x54\x7A\x21\x10\xBD\x85\x71\x67\x18\x1A\x61\x55\x01\x4F\xB1\x9D\xA7\x7D\xB2\x24\xB2\x39\x66\xAA\xAE\x43\x74\x97\x1C\xB1\x2C\xB0\xA9\x80\x7E\x6B\xEC\xA3\x4C\x5D\x62\x66\x4E\x16\xB3\x34\x12\x66",
			"\x3B\x6A\xB3\x23\x1C\xB3\x6C\x79\x63\x2B\x6E\x12\x41\xB8\x12\xD3\x53\xB2\x45\xB1\x1C\xAD\x65\x6A\x48\xB4\x6A\x1C\xB3\x5D\xF3\xAA\x65",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> ) >>",
			L"[62][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> ) >>",
			L"[63][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubsetTokens, ModuleParserStates, PrefixSubsetAstInsReceiver>(&PrefixSubsetTokenDeleter, &PrefixSubsetLexerData, &PrefixSubsetModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
