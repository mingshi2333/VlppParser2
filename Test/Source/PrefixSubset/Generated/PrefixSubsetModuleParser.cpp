/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubsetModuleParser.h"

namespace prefixsubset
{
	void PrefixSubsetModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3568; // 32464 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 240;
		static const vl::vint dataSolidRows = 13;
		static const vl::vint dataRows = 14;
		static const char* compressed[] = {
			"\xD0\x7E\x00\x00\xE8\x0D\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xF2\x02\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF0\xF4\x44\xFF\xAF\xF5\x60\x03\xF2\x4A\x32\x7E\xEB\x6B\x21\x80\xF7\x62\x7F\x4A\x6E\x73\x21\xFD\x61\x39\x80\x03\x8F\x83\xAF\x7D\x7E\x7E\x94\x14\x85\x82\x21\x25\x81\xF6\x2B\x27\x82\x0C\x9F\x22\x83\xCA\x34\x24\x08\xE8\x7B\x25\x11\xA4\x3A\x84\xEA\x65\x85\x0A\xA8\x26\x84\x0F\x99\x83\x85\x25\x2D\x86\x0B\x9F\x28\x80\x7A\x79\x7E\x20\x0E\x91\x7C\x0C\xA1\x20\x82\xAC\x32\x83",
			"\x86\x3D\x80\x2F\x0F\xAE\x83\x88\x0F\xB5\x80\x7A\x0B\x93\x78\x58\x5D\x7C\x78\xAC\x0C\x82\x20\x45\x80\x24\x13\x81\x2D\x83\x90\x0F\x89\x20\x57\x84\x3F\x14\x82\x8E\x88\xDC\x5A\x8E\x8B\x37\x83\x21\x14\x9F\x2B\x8B\x2A\xA0\x21\x8B\x59\x8B\x7E\xB4\x49\x89\x21\x00\xA8\x83\x7E\x07\x9F\x57\x18\xFE\x71\x89\xBF\x33\x8F\x8D\x06\x88\x27\x11\xFA\x51\x8D\x83\x3E\x83\x87\x20\x35\x8D\x6B\x77\x81\x8F\x35\xAC\x80\x90\x1F\x88\x93\x3F\x7B\x88\x7E\x36\xB8\x84\x7A\x8A\x86\x8D\x05\xDB\x8E\x8C\x47\xA2\x88\x92\x70\x88\x25\x19\xDD\x89\x21\x34\x9C\x82\x91\x5B\x91\x81\xFB\x60\x8F\x93\x4C\xA5\x22\x92\xFE\x74\x90\x27\x86\x23\x8E\x54\xAA\x8F\x7D\xAB\x83\x22\x27\x96\x80\x95\x5F\x59\x8D\x92\xB4\x86\x95\x48\x2E\x9B\x24\x55\xA0\x29\x8B\xAD\x95\x94\xF8\x31\x92\x21\x59\xA7\x92\x98\x06\x22\x95\x1F\x81\x28\x97\x63\xBA\x90\x24\xBC\x9A\x90\x29\xA8\x20\x98\x4C\xB9\x8D\x24\x9B\x9F\x96\x42\x46\x9B\x96\x64\x83\x22\x99\x96\x8D\x88\x58\x51\x9E\x99\x6B\xA1\x26\x97\x7F\x35\x9B\x38\xDE\x9B\x20\x62\x98\x8E\x9A\x1B\x92\x9A\x21\xA5\x27\x97\x3F\x8F\x99\x91\xF7\x9F",
			"\x1C\x21\x87\x99\x9E\x46\x8A\x84\x9A\x4A\x86\x7D\x24\x8A\x9B\x9F\x18\x84\xA7\xA0\xF9\x85\xA3\x0B\xFD\x94\x7C\x1B\xA1\x9D\x3A\xF6\x86\x9C\x48\x0A\xA3\xA2\x84\x92\xA0\x9F\x17\xBA\x9E\x45\xF1\x96\xA0\x86\xBC\x2E\xA1\x00\xBA\x7D\x44\x9C\xAB\xA1\x8C\x94\xA0\xA3\x24\xB5\xA1\x42\x9B\xA1\x84\x15\x9E\xA6\x20\x09\x99\x77\x32\x84\x20\x9F\x96\xB9\x91\xA3\x5B\x88\x31\x16\xE0\x97\xA7\x94\x9F\x24\x9C\xE7\x96\x26\x36\xF3\x95\xA4\x9F\x9A\xA3\xA5\x48\xA6\xA4\x4B\xA4\x8C\x9E\xA5\xAF\xA3\x20\x31\xA6\x77\x4C\xB9\x88\x8E\xA3\xA7\xA7\xA8\x4E\xB9\xAA\x55\x8A\x9E\x9E\x99\x8F\xA4\xA6\xEB\x99\x9C\x50\xD2\x89\x2E\x77\x80\x03\x35\x61\xB9\xA3\x58\xE4\x85\xAD\xA1\x86\x20\xAD\x76\x8B\xAB\x09\xAE\xA9\xA2\x41\x84\x84\xAB\x72\x92\xAF\x0C\xB4\x8D\xA0\x24\xA1\xA7\x91\x69\xA6\xA9\x54\xFB\xAF\x1F\xB5\xBF\x1A\x38\x5A\xB6\xA5\x47\x99\xA4\xAB\xBD\x83\xB3\xAF\x86\xB9\xA6\x59\xBC\xA5\x24\xC4\x9B\xA9\xA9\x46\xAD\xB3\x0C\x8F\xB3\x86\xC3\x9C\xB6\x85\x91\xAD\xAD\x3A\x8A\x20\xAF\xD6\x06\xB6\xB3\x03\xB9\x9E\x65\x8A\xB1\x24\xCD\xAE\x80\x9D\xDE\x62\xB5\x6B\x2B",
			"\xBC\xA9\xC5\x97\xB4\xB1\x8A\x9F\xB2\x07\xA1\xB2\xA9\xD8\x84\xA8\x24\xB4\xB3\xAC\x4A\x2E\xBE\x83\x50\xA6\xAD\x99\x21\x21\xB8\x61\xC4\xB8\x83\x6C\xA3\xB5\x93\x58\x2A\xBB\x5E\xD7\xA7\xAA\xE6\x95\x82\xB7\x18\x88\xB6\x58\xEC\x91\x21\x39\x99\x8D\xB4\xFC\x79\xB5\x6A\x99\xA2\xBB\x19\x96\xB9\x95\xD3\x94\x9E\x6C\xCA\x35\xBC\x17\xA7\xBF\x95\xDF\x87\xB9\x74\x8A\x9F\xBD\x5E\x8A\x20\x95\x68\x98\x28\x76\x95\x85\x9E\xB7\x97\x3A\xBF\xE2\xB9\x9F\x7E\xFE\x73\xC0\x9A\x05\xC3\x25\x07\xC8\x25\x82\xEA\xB9\x21\x2D\xB3\xA6\xC1\x5F\xBA\xA5\x6F\xBE\xB6\x21\xF6\xA1\x23\xC1\x17\xC1\xC1\x46\x98\xC8\x36\xB8\x53\xC1\x20\xA2\x83\x25\x00\x81\x8B\x8A\x13\x91\xA8\x7E\x25\xDD\xAF\x5B\x9F\xC1\x21\xE0\x81\xB9\x87\x23\x39\x89\x70\xB2\xCB\x9B\x80\x93\xC2\x3E\x09\x21\xB8\x8E\x95\xCA\x21\x1D\xCD\x84\xC5\x00\x10\x7C\x78\xC2\xA7\xC4\x15\xC3\x23\xC8\x36\x3B\x3D\x42\x26\xC7\xBE\x85\x0A\xCC\x95\x46\xC2\x20\x92\xA3\x2D\x01\xF5\xB6\x7D\xC9\x09\x35\xCB\x92\xD1\xCA\x34\x20\xCC\xCB\x98\x5B\xDF\xA1\x42\x53\xCA\x21\x00\x62\xC8\x96\x09\x26\xCC\x4C\xA4\xB0\xC8\x06",
			"\x46\x21\x43\x09\x30\xCE\x41\x2C\x4C\xC4\x1D\x61\xCE\x20\x76\xC6\x20\x91\x09\x2A\x48\x28\xC9\x23\xCF\x7A\xD1\x22\x42\x53\x49\x20\x42\xC6\x26\xD0\x03\x36\x00\x90\xC1\xB3\x25\x2D\x9F\x01\x82\xA2\x82\x96\x96\xC0\xC9\x20\x10\x10\xD6\x8B\x6A\xD4\xD3\x40\x21\x07\xD3\x31\xCA\x21\xCF\x13\xDB\x8A\x08\x1D\xD8\xCC\x83\x0A\x5C\xC5\x5B\x83\x04\xA9\xD0\xAA\x20\x18\x00\xCB\x8B\x24\x0B\xD6\x40\x5B\x82\x52\x54\xCA\x25\x04\xB2\xC0\xC6\x42\x14\x56\xD7\x84\x26\x01\xD7\x00\x01\x82\x08\x2F\xDA\x21\x13\x00\xDA\x94\x80\x5D\xD6\x41\x28\x00\xD8\x13\x9B\x02\xD3\x09\x29\x05\xB3\x8A\x2F\xD8\x68\xC3\x22\x05\xC0\xC8\xC9\xAA\x56\xD2\x21\x15\x19\xDA\x21\xDB\xDC\xD8\x00\x2C\x00\xD8\xF8\x74\x02\xDC\x01\x2D\x04\xB0\xDB\x8A\x06\x62\xE9\x39\x80\x3F\x0E\xDC\x7E\x22\x91\x5C\x65\xDC\x40\xC9\xD7\x56\xDE\x40\x2E\x03\xDB\x84\x3B\x02\xDE\x03\x2F\x07\xB7\x89\x2F\x5A\x7D\xC1\x20\x06\xFD\xC6\x22\x0F\x00\xE2\x21\x18\x00\xDA\x0E\x40\xC8\xB8\x6E\x3A\x5F\x28\x0D\x52\xE5\x3B\x76\xA6\x52\xAE\x46\xBA\x6D\x60\xDC\xCF\x50\xBA\x46\x85\x00\xF0\x74\xB2\xDA\x29\xC1\x3D",
			"\x77\x6B\x38\x92\x97\xEB\x38\x13\xA5\xE3\xE2\xEB\x39\x87\xCB\x98\x7D\xBB\x8F\xE3\x3A\x57\xFD\xA6\x23\x93\xF1\xB9\x3D\xA8\x90\xC2\x37\x29\xE1\xE8\x96\xD3\x2B\x3C\x5D\x53\xD7\xBF\x09\x2E\xCC\xD2\x9F\xC2\x95\xE0\x88\xCF\xE6\xEB\x34\xCD\x32\x82\x7F\xC7\x84\x3E\xC4\x49\xBA\x40\xD6\x40\x33\xE4\x6B\x1C\xBB\xE0\xEB\xEB\x20\xD0\xCF\x83\x71\x21\xAB\xCC\x9D\xE8\xEB\x3D\xCF\xD2\x89\xDE\x8A\x51\x81\x87\xEB\x65\xE8\xED\x7A\x63\x4F\xB7\xEE\x1C\xE2\xE7\x4E\xD2\xEC\x7E\x65\x45\xEF\x96\xDA\x47\xE8\xC5\x9A\xEC\x87\x1A\x0D\x71\x4C\xC1\xF0\xE5\xEB\x35\xDB\xD4\x9D\xEA\xE8\x81\x22\xE8\xEC\xE9\x2E\x4D\xDF\xBA\x52\xEB\x81\x32\xCC\x43\xBA\x50\x4F\xE4\xEB\x3A\xEB\x80\x15\xF0\xF2\x64\xED\x76\x42\x0F\xF1\x20\xD2\xE0\xE3\x3D\x1E\x16\xCB\xA1\x51\xA6\x84\xD3\xEC\xE4\xD2\xE3\x23\xDB\x99\x83\x25\xD6\xA2\xE2\xA3\xF6\x02\x2A\xEE\x40\x66\xE7\xF5\xF4\x16\x25\x8D\xEB\x26\xF2\xAE\xFC\xC9\xEE\xC4\xE9\x3E\x53\xC0\xE9\x3D\xE3\xC3\xF6\x20\xDD\xE7\xEE\xF8\xF8\x27\x55\x83\xAD\xDE\x8B\xCB\xE2\x9E\x20\x8A\xC5\xD2\xE0\xB3\x7C\xFB\x80\x19\xFE\x20\xA9\xF0\xF8",
			"\x87\x34\x52\x57\x19\x19\x67\xFB\x03\x3F\x03\xF6\x86\x57\xDC\x59\x7E\x53\xF3\x09\x28\xFE\x40\x7C\x42\xFC\x26\x67\xD3\xF1\x06\x31\x58\xFE\x9C\x46\x4A\xED\xF5\xF9\x77\x42\x79\x10\xFD\x70\x7E\xEB\x77\x28\xD5\x22\x2B\xF9\x6B\x7F\x4C\x23\x80\xE9\x75\x80\xE3\x1D\x6E\xB2\x2F\x6F\xF0\x76\x10\x0C\x83\x7F\x0E\x86\x1E\x05\x7A\x80\x01\x15\x6F\x1A\x87\x28\x74\x76\x10\x84\x7F\x7F\xA2\x7D\x71\x1F\x83\x10\xBC\x70\x75\xE9\x1B\x70\xC9\x78\x1F\x9D\x7E\x71\x09\x15\x82\x02\x10\x77\xBD\x78\x1F\xEA\x2B\x82\x1C\x2E\x7C\x2E\x86\x10\x30\x8F\x7C\xF8\x1A\x2B\xF8\x23\x7D\x09\x1F\x30\x36\x82\x10\xF2\x71\x10\x5B\x4C\x77\x06\x17\x82\xE6\x1A\x2B\x1D\x33\x84\x86\x28\x84\x6B\x72\x10\x50\x81\x83\x17\x8A\x1B\x29\x3E\x84\x87\x2A\x78\x51\x81\x10\x53\x8C\x83\x98\x7B\x1E\x31\x30\x84\x06\x1A\x33\x58\x8A\x79\xDC\x3A\x10\x21\x87\x68\x55\x8C\x1B\x44\x33\x81\x83\x7A\x10\xE1\x7D\x83\xEB\x1A\x34\x58\x82\x35\x6E\x82\x10\x69\x8D\x80\x22\x83\x1E\x5A\x38\x85\x68\x37\x87\x01\x19\x87\x16\x8B\x87\xE6\x1C\x36\x58\x8E\x61\x1D\x83\x1E\x5A\x88\x87\x6B\x8D\x3B\xA5\x3B",
			"\x88\x5C\x8D\x88\x92\x33\x82\x06\x12\x79\x6A\x84\x88\xBA\x1A\x37\x80\x87\x28\x96\x83\x10\x71\x8F\x85\xE9\x1D\x37\x58\x86\x38\x9B\x8D\x89\x02\x1A\x7E\x98\x8C\x1B\x89\x38\x85\x8C\x35\x8A\x0A\x14\x7F\x72\x89\x1E\x94\x38\x85\x9D\x3B\x89\x66\x83\x10\x88\x60\x7A\x1C\x21\x3A\x9B\x83\x1E\xB7\x82\x10\x9F\x8A\x8B\x4C\x23\x3A\x58\x8F\x3A\xB6\x8A\x10\xA8\x81\x8B\xF8\x11\x3B\x58\x85\x3B\xC7\x85\x69\x92\x8D\x1D\xB7\x38\x85\xBB\x3B\x89\xC1\x81\x10\x3B\x83\x83\x90\x34\x89\x7A\x85\x89\xD1\x87\x3A\xA5\x30\x8B\x03\x1F\x8B\x1A\x74\x75\xDD\x70\x00\xC9\x67\x89\xCA\x8C\x21\xC1\x3D\x8B\xE6\x19\x8E\x9E\x8F\x8D\x23\x13\x3C\x58\x88\x3C\x9B\x80\x8F\xA7\x82\x8F\x0A\x10\x71\x58\x84\x07\x19\x38\x8F\x01\x12\x8E\xC2\x86\x28\x75\x0E\x45\x77\x09\x31\xB2\x7A\x8E\xA0\x88\x1F\x78\x0D\x38\x09\x91\x8F\xA9\x84\x1B\x79\x0E\x45\x7B\x08\x90\xC8\x8A\x8F\x09\x1C\x07\x5E\x4E\x07\x16\x90\x8D\x11\x98\x1B\x7F\x0E\x45\x81\x09\x31\x83\x21\x68\x1F\x9D\x1D\x82\x09\x5E\xB4\x12\x90\xCC\x73\x10\x25\x9B\x85\xDA\x8C\x24\x84\x0C\x3E\x87\x0E\x45\x00\x99\x83\x03\x15\x02",
			"\x0A\x1C\x28\x27\x90\x8E\x33\x3F\x28\x09\x1C\x93\xEB\x87\x8E\xAC\x35\x7B\x03\x12\x94\x0B\x9C\x21\x89\x0D\x38\xBC\x66\x10\x48\x93\x90\x87\x2A\x08\x8D\x3F\x7B\x26\x93\x94\x86\x2B\x08\xEC\x33\x1E\x2F\x97\x7D\x03\x14\x95\x30\x98\x82\xF8\x1E\x08\xAA\x72\x09\x5E\x4A\x93\x62\x83\x10\xC8\x75\x95\x49\x9C\x24\x94\x0A\x7A\xE3\x1D\x94\x97\x49\x10\x69\x93\x10\xD2\x76\x95\xDC\x87\x8E\x73\x9C\x95\x50\x93\x1E\x98\x0F\x71\x9D\x0E\x45\xA0\x28\x7B\x01\x11\x98\x6A\x9B\x97\xE6\x1F\x09\x6E\x96\x1E\xB1\x2E\x67\x06\x14\x98\x5F\x9B\x84\xEB\x13\x0A\x1F\x78\x0A\x5E\x4F\x7E\x6B\x69\x10\x75\x97\x6D\x18\x96\x10\xAA\x0D\x38\x99\x92\x10\x2F\x0B\x99\x03\x1B\x0A\x5E\x4D\x0A\x19\x31\x6E\x74\x92\x9A\x44\x96\x1E\xA8\x92\x10\x8E\x96\x98\xA5\x3C\x3A\xA1\x92\x97\xAA\x90\x80\xEB\x1E\x6A\x09\x1A\x02\xB5\x90\x00\xAE\x0D\x38\xB8\x96\x10\xB3\x96\x97\xE3\x1F\x0A\x5E\x41\x0B\x19\x3B\x98\x03\x16\x7A\x60\x9C\x21\xB2\x09\x98\xBA\x10\x81\x67\x89\x10\xC8\x9A\x97\xE5\x89\x1E\xB6\x0F\x71\xBB\x0E\x45\x1C\x81\x97\x06\x16\x7E\x7F\x6B\x9B\xBD\x09\x95\xE6\x1F\x2E\x67",
			"\x92\x10\xDE\x96\x7B\xC2\x96\x1E\xC0\x0A\x7A\xC4\x0E\x45\x08\x37\x67\x03\x1D\x7E\x06\x14\x7E\xE9\x9A\x1B\xC6\x0D\x38\xF2\x93\x10\x96\x9B\x96\x86\x27\x0C\x5E\x49\x0C\x19\x3B\x9F\xE6\x9B\x9B\xBF\x36\x1E\xF7\x73\x10\xF4\x9C\x9F\x87\x2A\x0C\x8D\x37\xA0\x02\x12\xA0\xD5\x98\x1F\xCB\x0E\x45\xCD\x09\x31\xFA\x79\x9C\xBB\x9E\x0C\x2A\x98\x1B\x27\x32\x2B\x17\xAB\x7B\xBB\x90\x0D\x1B\xAD\x1D\x57\x8D\x81\x1F\xA1\x10\x32\x8B\x9C\x4C\x22\x0D\x23\xAB\x1C\x2D\x3E\xA1\x2D\xA0\x7B\xE6\x14\x0D\xEC\x37\x0D\x5E\x41\x86\xE8\x93\x10\x09\x83\x10\x07\x85\x9F\xBC\x19\x0D\x8D\x30\x9D\x3C\xAB\x9B\xDA\x01\xA3\xEB\x12\xA4\xDD\x6B\x9B\xDC\x0A\x10\x16\x68\x1B\x38\x38\x85\x48\xA1\x10\xE7\x9A\xA0\xE3\x14\x0E\x35\x69\x1E\x42\x31\x81\x0A\x1D\xA3\x54\xA6\x1E\xEE\x0D\x38\x19\x83\xA4\x3D\x93\x12\xEF\x0D\x38\xDB\x92\x10\x5C\xA0\x9B\xBC\x10\x0F\x46\xA9\x1E\x67\xA8\x8D\xBB\x92\x0F\xCE\x9C\x86\xE0\x2A\x10\x79\x91\xA1\x1C\x26\x0F\x4C\xA3\x87\xDA\x9A\x10\xE4\x81\x93\x86\x2E\x0F\x73\xA4\x1B\x76\x8D\x81\x6F\xA0\x00\xA6\x88\xA7\x4C\x22\x00\x11\x43\x47\x23\x1D",
			"\x87\x86\xAA\x10\x53\xAA\xA6\xB4\x16\x00\x11\x4C\x4D\xB8\x1F\x35\xB2\x2A\x82\x06\x19\xA6\x8A\xA6\x28\x10\x00\x6C\xAC\x31\x6F\x09\x1E\xA9\x80\xA7\x28\x11\x01\x41\xAF\x7B\x1E\xA4\xAA\x83\xBB\x93\x01\x8D\xAB\x1E\x7F\x8D\x81\xAD\xA3\x8E\xBB\x97\x01\xB1\xA9\x1E\x86\x84\xAB\x0A\x19\xA8\xA7\xAA\x88\xB9\xA8\x1F\x6E\x32\x2B\x35\x8F\x61\x37\x7E\x3F\xE8\x6B\x75\x94\x61\x62\x15\x7B\x2C\x5C\x7F\x0F\xCC\xA1\xA3\x2C\x7B\x48\x94\x69\x71\x5E\x83\x61\xD6\xA0\x00\x3F\x70\x13\xDB\xA8\x4D\x94\x62\x59\xEC\x36\x13\x8E\xA7\x47\x26\x42\xAE\x94\x6F\x65\xF0\x9E\x3C\x23\x18\xAE\x8C\x9C\x6A\xAA\x75\xAE\x26\x49\x53\xEC\xAC\x9D\xF4\xA5\xAF\x46\x8B\xAE\x1A\x20\x00\x22\x73\x12\x03\x60\x00\x05\x61\x55\x01\x4E\xAF\x5E\x42\xB0\xB2\x24\xB0\x2C\x68\x4A\x41\x6A\x3E\x24\x77\x19\xF9\xAB\xB0\x43\x73\x76\xA5\x60\xB1\x03\x10\x3F\x36\x1F\x74\x3A\x16\xB1\x2B\x18\x64\x21\x6A\xB1\x23\x1C\xB1\x6C\x6B\x68\x6A\x1D\xA4\xC0\x53\xB0\xC1\x51\xB0\x8C\x61\x1C\x94\x67\xB2\x7B\xA5\xB0\xC1\x51\xAD\x2C\x60",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> ) >>",
			L"[62][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> ) >>",
			L"[63][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubsetTokens, ModuleParserStates, PrefixSubsetAstInsReceiver>(&PrefixSubsetTokenDeleter, &PrefixSubsetLexerData, &PrefixSubsetModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
