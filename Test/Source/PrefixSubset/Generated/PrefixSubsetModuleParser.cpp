/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubsetModuleParser.h"

namespace prefixsubset
{
	void PrefixSubsetModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3620; // 32944 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 36;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 15;
		static const char* compressed[] = {
			"\xB0\x80\x00\x00\x1C\x0E\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xC6\x12\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF7\xCA\x79\xFB\xFC\x2B\x35\x7C\x00\x4B\x7A\x38\x01\x84\x81\x3C\xF2\x76\x79\x00\xE4\x74\x5F\xFC\x46\x23\x7F\xE1\x26\x80\x56\x12\x80\x2C\xF8\x74\x27\x7F\x0A\x88\x25\x02\xD9\x7B\x24\x0B\x97\x82\x83\xEA\x6B\x27\x06\xFE\x72\x85\x10\xA0\x80\x80\x27\x99\x81\x49\x23\x88\x7D\x12\xA8\x83\x85\x26\x85\x26\x00\xFD\x79\x76\x07\x83\x20\x82\xF1\x71\x85\x48\x14\x8F\x2E\x16\xA4\x3C",
			"\x7E\xBF\x5E\x87\x07\xA9\x8C\x82\x94\x33\x85\x81\x2B\x2E\x7F\x0D\xD8\x2D\x7A\xE6\x58\x2A\x89\x02\x22\x8B\x4A\x4D\x81\x20\x0F\xA8\x20\x8A\x01\x38\x88\x79\x54\x83\x81\x27\xB8\x73\x8B\x5F\x96\x85\x14\xCC\x8A\x20\x2B\xA5\x22\x8B\x5A\x8B\x7E\xB4\x49\x81\x8C\x17\xAA\x83\x87\x41\x9A\x84\x48\x3C\x8D\x34\x29\x83\x88\x24\x76\x97\x8F\x3F\x47\x80\x7A\x36\xBA\x78\x2B\x79\x97\x8C\x1D\xCA\x31\x91\x21\x83\x90\x81\x72\x9F\x21\x21\x9F\x8C\x8E\x7D\x62\x8D\x3A\xD4\x69\x93\x3F\x66\x87\x8E\x2E\x82\x87\x91\x00\x0B\x93\x24\x92\x9C\x8A\x4A\xA0\x20\x8D\x91\x8F\x85\x48\x5C\x87\x81\xF6\x6D\x88\x25\x9E\x9F\x81\x2A\x97\x86\x92\x2F\x89\x22\x93\xAB\x8A\x8F\xFB\x2E\x96\x21\x34\x9D\x84\x93\xBF\x5A\x8B\x25\xB7\x92\x94\x90\x31\x93\x8A\xA7\x87\x8D\x5E\x21\x9F\x8C\x90\x1D\x94\x96\x03\x36\x94\x2A\xB8\x9B\x8D\x2B\x81\x99\x24\xBF\x8B\x99\x2F\x9F\x2D\x94\xB0\x1A\x88\x96\xCC\x93\x96\x35\x8A\x2A\x99\x92\x11\x9D\x24\xA4\x88\x9A\x13\x95\x82\x93\x6F\xA3\x97\x99\x9F\x83\x98\x39\xD3\x9F\x1F\x63\x9B\x99\x21\xDD\x90\x99\x36\x83\x25\x94\x4C\xBB\x94\x88\x24\x98",
			"\x9D\x0B\xFA\x9F\x86\x37\x85\x8A\x86\x0C\x9D\x8E\x33\xFF\x80\x2C\x1A\xBD\x9A\x9A\xC5\x9F\x22\x41\xFA\x8E\x96\x49\x9A\x94\x26\x0F\xBE\x9D\x3E\xB0\x8C\x9D\x88\xBC\x9C\xA1\x1F\x2D\x90\xFE\x7E\x8F\x80\x40\x8E\xA7\xA3\x15\xA0\xA5\x42\xFF\x16\xA2\x8A\xA3\xA5\xA4\x70\x9C\x2C\x12\x83\xAD\xA2\xB0\x28\xA0\x8F\x22\xBF\x9D\x48\x2F\xAA\x91\x98\x93\xA3\xA6\x36\xBB\x9C\x40\xAA\xA2\xA0\x61\x84\xA6\x7C\xE5\x93\x9E\x4D\x61\x3A\x8B\x7A\xBC\x93\xA4\xE6\x86\x9B\x50\xFF\x25\xA8\x8F\xA1\xA7\xA9\x27\xB9\xA7\x41\xA6\xA2\xA6\x98\x90\xAD\xAA\x19\xA1\xA2\x23\x9C\xAB\x88\x97\x92\xA8\xA3\x24\xBF\xA8\x46\xB4\xA1\xAC\x76\x9A\xA2\x7C\x5C\xA7\x20\x31\xD8\xAB\x92\x76\x9C\x8A\x93\x5A\x8B\x37\x3A\xC8\xA2\xA9\x80\x30\xAA\x21\x72\xBD\x86\x58\x8C\xA4\xAD\x43\xB9\x86\xAC\x71\x97\xAB\x4D\xF3\x8A\xAB\x8D\xAC\xA5\xAB\x40\xAC\x9D\x52\x9F\x2B\xB1\x7F\x02\x39\xAA\x82\xBA\xA4\x4E\xEC\x98\x86\xB0\x8B\xA0\xA3\x8D\xBC\x88\x62\x4D\xA3\xAE\xB6\x8F\xB4\xAD\x64\xA1\xB6\x24\x95\xB8\xA3\xCB\x8C\xA5\xB1\xA6\xBA\x8D\x66\xEA\x9C\xA8\xBC\xAB\xAB\xB0\x8C\xA1\xAA\x62\x92",
			"\x9F\xB2\xD8\xA5\xAB\xA4\xA4\xAC\xA1\x35\xAD\xBF\x95\xD7\x92\xB0\x24\xB5\xBF\xB5\x4D\x91\xB3\xAB\xC9\xB8\xB2\x92\xA9\xB7\x8F\x6A\xCB\xAA\x38\xCE\x89\xB3\xA4\xC1\xA5\xBA\x55\xC7\xBE\xAD\x5C\xA8\x99\xB6\xEC\x91\xB8\x58\xE4\xA9\xB6\x3D\xAE\x9C\xB7\xB5\x9E\xB6\x74\x9F\x2A\xBB\xB1\xBB\xAA\x8F\xDC\xA8\xBA\x6C\xA3\xA9\xB9\x21\x8B\xBE\x20\x77\xA9\x21\x5E\xAD\x3D\xB1\xFA\xB4\xB7\xBC\x77\x9D\xB9\x25\xD7\xBF\x1F\x6B\xA2\xB8\xAC\xE5\xBC\xAF\x68\xF5\xAD\x8B\x77\x93\x2F\xBF\x18\xA1\xC0\x7A\x83\xC5\xBA\xF0\x62\x99\x8B\x0F\xC0\x03\x3D\xBE\xA7\xC1\x82\xAA\xBC\x9D\xED\xBF\x81\x86\x97\x8B\xC2\x4C\x9C\x8E\xC3\x11\xDB\xB0\x73\xCD\xBA\x20\x05\xE1\x25\xC3\x2B\x28\xC4\x4A\x2A\xC5\x24\x16\xE7\xC7\xC2\xEC\xB2\x93\x48\x70\x63\xC5\x02\xE3\xC2\x80\x02\x8F\xAD\x61\x8B\x2C\x7C\x1F\x86\xA3\xBE\x4B\xB1\xB9\x74\xB8\x83\x24\x2D\x91\xBE\xC8\xDC\x93\x79\x8D\xF2\x39\x21\xE8\x8C\xCE\x20\x4E\xCA\xCB\x88\xF0\x70\xC9\xA1\x86\xA0\x7E\x3F\xD5\xC4\x00\x7B\x3D\xB6\x9E\x9A\x9E\x20\x5C\xD0\xBF\x8E\xAA\x3A\xCB\x06\x2C\xB3\x20\x57\xCA\x22\x99\xDD\xC6\x21\x2C",
			"\xF5\xC6\xC7\x65\x87\xCE\xF3\x2E\xB5\xC7\x00\x5E\xCB\x20\xF0\x76\xCD\x9B\xF4\xC3\xC4\x06\x46\x21\x43\x09\x20\xD2\x41\x2C\x45\xC6\x1D\x6C\xCB\x20\x86\xC6\x20\x91\x09\x2A\x48\x31\xC9\x23\xD1\x8A\xD1\x22\x42\x53\x49\x20\x4A\xC6\x26\xD2\x03\x36\x02\x96\xD1\xB3\x25\x0F\xE6\x3D\x94\x6B\xDA\xC9\x42\x33\x07\x81\x52\x82\x82\xCF\xA2\xC3\x20\x0D\x25\xDC\xCE\x44\xDA\xCC\x8B\x35\x0C\xD6\x83\x89\x2A\x59\x1A\xDC\x8E\x06\xB2\xDB\xCD\x42\x30\x0F\xD5\x8C\x39\xD5\x2E\x0A\x32\x52\xAD\xEB\x35\x94\x4A\x43\xD9\x3D\x02\x82\x05\xAF\x89\x28\x07\x5F\xC2\x25\x94\x80\x47\xDA\x41\x39\x0E\xD8\xBB\x8A\x23\x03\xA9\xC9\x22\x0E\x55\xD9\x93\x6B\xD9\xDE\x20\x3B\x1C\xD9\x95\x80\x09\x55\x6F\xC2\x24\x07\xE2\xCA\x21\xB9\xE6\xD0\x01\x1E\x1C\xD8\x7E\x34\x0C\xDD\x40\x3E\x0C\xDA\x2E\xBA\x03\xD9\x06\x3F\x04\xB7\x82\x8F\x06\x7C\xC3\x20\x08\xDC\xC5\x95\xB8\x52\xD3\x21\x20\x29\xD9\x21\xD7\x44\xE2\x40\x42\x0C\xDA\x1F\xBB\x06\xDF\x02\x23\x0B\xC1\x86\x2F\x5A\x85\xC1\x24\x08\x0D\xEA\x22\x0F\x10\xE1\x21\x22\x1C\xDA\x0E\x5A\xD3\xC0\x6D\x3A\x5F\x28\x0D\x62\xE0\x37",
			"\x7E\xA3\x3E\xAE\x61\x9A\x6C\x09\xE3\xCF\x50\xBA\x5E\x86\x00\xF0\x76\xA8\xDD\x3A\xC1\x3D\x77\x6B\x3B\xB8\xA7\xED\x3A\x1F\xB5\xE4\x37\xBA\x58\x87\xCF\xBC\x60\xCE\x9C\xEB\x3A\x97\x0A\x21\xCC\x3D\xEB\x36\xA0\x4F\xFA\x31\xE7\x50\xF1\xCD\x42\x3C\xEB\x38\x5D\x61\xD7\x3A\x0A\x3E\xCC\xD6\xB5\xC5\x95\xE8\xA3\xDA\xE5\xEB\x24\xD1\x85\x83\x70\x93\x84\x0F\xCC\x43\xBA\x50\xD3\xD2\xAD\xE8\x86\xA5\xCC\x4A\x57\x8D\xCB\xEC\xD9\x80\x07\xED\x71\xB8\x3A\x57\x98\xD6\xEF\x40\x56\x43\xEA\x93\xC9\xEA\x21\x75\xE6\x52\xAE\x65\x4D\x98\xDE\x2C\xE0\xCC\x7F\xE6\xE9\x7A\x1A\x09\x62\x9F\xEA\xC9\xC9\x8A\xF8\x3C\xB6\x85\xFC\x66\x54\xC2\x21\x9E\xB8\x3A\x56\x9B\x14\xF2\x72\x00\x1A\xEA\x20\x6A\xEF\xEF\x7A\x70\x4C\xF2\xCC\x41\x22\xEC\x03\x22\xD0\xDA\xEB\x3E\x03\xC6\x49\xD3\x20\xA8\xE2\xF5\xCB\xAC\x71\xF5\x80\x35\xF0\xE6\xEB\x3F\x02\x9C\x86\x56\xA0\x1F\xB7\xF4\xEA\xA2\xC3\x3F\xA0\x3A\xD6\x20\x63\xE3\xE8\xB1\x68\xD2\xD2\xD9\xEB\x3A\x56\x15\x3C\xBB\x24\x96\xE1\x21\x29\xF1\xE2\x20\xB7\xC2\xF3\x3D\xA0\x5D\xED\x7A\x1F\xF2\xFA\xE5\xC7\xFA\xF6\xF8\x2B\xDC",
			"\xB0\x89\x21\x57\xEF\xC1\x22\xF5\x7A\xE2\x22\xA6\x95\xDC\xF8\xC1\x50\x70\x00\xEB\xE6\x21\xEB\x91\xFC\x43\x19\x1A\x41\xDE\xA5\xEB\x39\xFC\x83\x2A\xF6\xFA\xCC\x4E\x57\xB2\x25\x6B\x06\x13\x74\xB8\x1B\x7F\x02\x1C\x27\xFE\x76\x28\xD1\x23\x80\x0A\x15\x2D\xF9\x73\x12\x7C\x77\x69\xED\x73\x7B\x9F\x31\x81\x03\x13\x7F\x77\x7B\x1E\x09\x7C\x80\xDA\x69\x31\x16\x82\x10\xFD\x79\x81\xE9\x1F\x70\xB2\x25\x71\x1C\x88\x1F\x1F\x81\x10\x08\x82\x82\xF8\x13\x70\x27\x83\x10\x1B\x7F\x80\x0A\x13\x26\x09\x1C\x78\x09\x8D\x3A\xEE\x72\x10\x34\x86\x10\x81\x78\x7B\xE9\x1D\x6F\xDA\x78\x1F\xAF\x79\x7E\x01\x1B\x83\x03\x16\x7D\x3E\x88\x1F\xEF\x21\x84\x1C\x24\x7D\x01\x12\x40\x46\x84\x84\x49\x8C\x21\x00\x39\x10\x5C\x48\x31\x4C\x8A\x7E\xEC\x34\x78\x3C\x83\x81\xF8\x17\x32\x59\x86\x28\x5C\x8B\x75\x06\x13\x86\xD5\x7E\x85\x1C\x2D\x32\x61\x87\x28\x93\x76\x7E\x00\x06\x86\x4F\x88\x86\x4C\x26\x33\x56\x8A\x10\x42\x3B\x86\xA4\x7C\x3D\x0A\x16\x83\x12\x87\x83\xE3\x1A\x34\x32\x8B\x78\x0A\x18\x81\xAB\x79\x1E\x50\x3B\x86\x5A\x31\x88\x06\x1C\x87\xFC\x72\x87\x86\x2F",
			"\x35\x6B\x8C\x36\x8A\x83\x10\x8C\x87\x80\x8E\x87\x28\x6E\x3B\x86\x7A\x33\x89\x02\x1D\x86\x94\x87\x89\xBF\x3F\x39\x9E\x82\x10\x70\x83\x85\xB3\x37\x8A\x01\x1B\x79\x7D\x8C\x82\x1C\x2D\x37\x9C\x86\x28\xAA\x87\x81\xA0\x86\x1E\x7F\x3B\x86\x89\x3F\x8A\x00\x01\x8B\x20\x83\x8B\xBA\x1F\x05\x5F\x44\x39\xB8\x8A\x8B\x2A\x8C\x8B\xBC\x1B\x39\x6B\x81\x3A\xB8\x89\x87\x03\x19\x77\xD7\x79\x1E\xA3\x38\x8B\xE3\x1A\x8C\x02\x14\x88\xE0\x7C\x21\xA9\x3B\x86\xB1\x39\x8C\x0A\x11\x82\x85\x88\x1F\x69\x0F\x45\xB7\x3A\x8D\x09\x1B\x82\xDD\x8C\x21\x6C\x0F\x45\xC1\x38\x8B\xD4\x85\x84\xC4\x8D\x3B\xA5\x3C\x8D\x02\x12\x8C\xA6\x89\x3B\x51\x73\x8E\x0A\x12\x8D\xCD\x83\x77\xAC\x31\x6D\xAB\x85\x8E\x4C\x23\x3C\xD0\x86\x1E\xFC\x82\x8B\x7E\x86\x1E\xC6\x3B\x86\x20\x78\x8B\x03\x9B\x8B\x05\x9A\x1B\x73\x0F\x45\x75\x09\x31\x0B\x93\x8C\x0D\x9C\x1B\x76\x0F\x45\x78\x09\x31\xCA\x6C\x7E\x15\x94\x1B\x79\x0D\x38\x1B\x92\x7F\xED\x88\x1B\x7A\x0F\x45\x7C\x0A\x91\xDB\x83\x92\xDD\x1D\x07\x5F\x4F\x07\x28\x96\x8F\x1D\x98\x1B\x80\x0F\x45\x82\x09\x31\xC3\x73\x10\xB7\x70\x76",
			"\xE9\x13\x08\xCF\x7A\x10\xE4\x8F\x6C\x13\x1D\x93\x35\x63\x1E\x85\x0C\x3E\x88\x0F\x45\x13\x9E\x72\x09\x15\x02\x0A\x1C\x28\x31\x96\x7A\x38\x89\x10\x8F\x29\x10\x4E\x9C\x8A\xA8\x81\x95\x06\x12\x6C\x06\x15\x95\xFE\x86\x28\x8A\x02\x94\xF8\x16\x7C\x03\x1C\x95\xD5\x8C\x24\x8C\x00\x96\x1C\x26\x11\x8F\x6A\x92\xCB\x1E\x08\xEC\x32\x7C\x5F\x4A\x96\x6E\x8A\x93\xF8\x11\x09\xBB\x70\x00\x95\x0F\x45\x4C\x95\x87\x09\x1E\x29\x6B\x9F\x94\xCB\x17\x09\x77\x93\x1E\x62\x93\x46\x7D\x9A\x10\xA7\x20\x98\xF5\x88\x1F\x7E\x93\x97\xE6\x1A\x2B\x9B\x0F\x72\xA0\x0F\x45\xD9\x74\x7C\x03\x15\x99\x38\x9C\x96\x23\x12\x0A\x83\x96\x1E\xE5\x73\x10\x3E\x48\x99\x52\x84\x97\x1C\x26\x0A\x2F\x7B\x0A\x5F\x40\x80\x96\x92\x10\x89\x96\x10\xCE\x7A\x98\x0A\x1D\x0A\x8D\x3D\x9A\x03\x1F\x02\x9A\x9A\x10\xAE\x0F\x45\xB0\x09\x31\xE2\x7C\x9A\xB7\x94\x81\xBA\x1D\x9B\x01\x12\x9A\xF9\x8F\x7E\xAC\x36\x9B\x87\x90\x9B\xC0\x9C\x1B\xBC\x69\x10\xAF\x96\x95\x86\x21\x0B\x8D\x3D\x9C\x06\x18\x9C\xD0\x97\x28\xB2\x0F\x45\xB4\x09\x31\x9F\x90\x7A\xBF\x96\x10\xB5\x0D\x99\xBA\x17\x6F\x7C",
			"\x96\x10\xDD\x91\x87\xCA\x96\x10\xB9\x0F\x72\xBE\x0F\x45\x2E\x80\x9A\x0A\x16\x7F\x7F\x97\x9D\xE3\x10\x0C\x6F\x96\x1E\x4B\x8A\x87\xA3\x68\x96\x4B\x53\x1E\xC3\x07\x97\xC7\x0F\x45\x08\x37\x68\x02\x18\x7F\x06\x14\x2B\xE9\x93\x10\xC9\x0D\x38\x06\xA3\x10\xAA\x9D\x95\x87\x2A\x0C\x5F\x4C\x0C\x19\x3F\xA0\x02\x12\x9F\xF4\x9E\x3B\x9F\x32\x80\x03\x18\xA0\x19\xAA\x1B\xCD\x0D\x38\x1C\xA2\x10\x16\xA5\x9C\x4C\x2E\x0C\x5F\x40\x0D\x19\x3B\x80\x99\x99\xA0\x02\x11\x0D\xFC\x91\x10\x60\x8F\x82\x02\x1C\xA2\x02\x1D\x83\xA4\x9C\x24\xD3\x01\xA3\x00\x09\x32\xB2\x26\xA3\x01\x18\x84\x39\xA6\x28\xD5\x0C\xA3\x6A\x84\xA3\x01\x10\xA4\x4A\x9F\xA1\xBC\x17\x0D\xEC\x3A\x0D\x5F\x41\x33\x6B\x8B\x81\x03\x1E\x80\x4C\xA4\x1B\xDC\x0D\x38\xE4\x96\x10\x56\xA0\xA1\xE3\x1D\x0D\x5A\xAA\x10\x8D\x9E\xA5\xE6\x1E\x0D\x90\x78\x1F\x38\x3B\x86\x5B\xA3\x10\x18\xA4\xA6\xBA\x18\x0E\x89\x78\x1F\x77\x88\xA4\x00\x04\x82\x5C\xAF\x9D\x03\x14\x0F\x8D\x36\x82\x55\xA8\xA7\x02\x15\x0F\x8D\x3F\x9E\x02\x1D\xA5\x65\x96\x28\xF6\x01\xA8\x33\x8E\xA7\x01\x17\x0F\x52\x78\x1F\x44\x32",
			"\x2B\x82\xA1\x10\x63\xA5\xA8\x87\x2D\x0F\x67\xAC\x21\x80\x8E\x86\x91\xA0\x00\xF8\x83\x8F\x87\x27\x00\x07\x4B\x4A\x23\x12\x35\x90\xAA\x10\xF2\x83\xA4\x87\x2D\x00\xA1\xAB\x1E\x89\x84\xA7\x9B\xAD\xA6\x94\xA3\x1E\x13\x07\x40\x42\xA6\x1E\x90\x84\xA7\x31\x87\xA7\x2E\xA1\x10\x1F\x0C\x6D\xAC\x30\x84\xBA\xA7\xA5\xB8\x10\x02\xBE\xAF\x39\xC0\xA3\x10\x51\x86\xA2\x86\x21\x02\xAB\xA9\x1E\x68\x32\x2B\xC7\xA2\x10\x9D\xA8\xAA\xE3\x17\x02\xCD\xA8\x1F\x92\x84\xA7\xD1\xA9\x8A\x8A\xA0\x00\x2D\x07\xAD\x1C\x29\x89\x74\xAA\x2E\x43\x9F\x98\x17\x42\x6F\x40\x9A\x65\xA5\x46\x13\xEB\xA4\x80\x22\x1E\xAE\x1F\x1B\xAE\x23\x10\x7C\x54\x7B\x47\xA2\x6E\x57\x4B\xA7\x63\x1A\x20\x00\x4E\x70\x13\xFD\xA0\x4E\xA2\x6A\x59\x9D\x62\x6A\x9A\x4D\x6D\xF3\x3E\x43\x36\x18\xB0\x23\x15\x74\x04\xA6\x3F\x0B\xBF\x72\x06\xBB\x9A\x86\x9E\x68\x0D\xBC\xAF\x0F\xB7\x67\xF0\x95\xB1\x11\xB3\x7E\x15\xBB\xAE\x32\x73\x12\x1B\x60\x00\x1D\x66\x50\x02\x42\xB2\x5F\x46\xB2\xB2\x28\xB2\x35\x62\xAA\xB1\x44\x73\x97\x1B\xAF\x2E\xBD\xA8\x72\x7F\x65\x33\xB8\x67\xA2\x6F\x75\x3A\x18\xB3",
			"\x2B\x13\x6E\xEB\xAC\xB3\x23\x1E\xB3\xAD\x6C\x5C\x26\x69\x12\x43\xB0\x5C\x27\xB1\x5D\x25\xBC\x69\xC1\x12\x6A\x4A\xB5\x62\xFB\xA1\x5D\xF2\xAA\x65",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> ) >>",
			L"[62][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> ) >>",
			L"[63][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubsetTokens, ModuleParserStates, PrefixSubsetAstInsReceiver>(&PrefixSubsetTokenDeleter, &PrefixSubsetLexerData, &PrefixSubsetModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
