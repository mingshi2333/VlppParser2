/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubsetModuleParser.h"

namespace prefixsubset
{
	void PrefixSubsetModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3547; // 32112 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 219;
		static const vl::vint dataSolidRows = 13;
		static const vl::vint dataRows = 14;
		static const char* compressed[] = {
			"\x70\x7D\x00\x00\xD3\x0D\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xE0\x02\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF0\xF4\x44\xFF\xAF\xF5\x60\x03\xF2\x4A\x32\x7E\xEB\x6B\x21\x80\xF7\x62\x7F\x4A\x6E\x73\x21\xFD\x61\x39\x80\x03\x8F\x83\xAF\x7D\x7E\x7E\x94\x14\x85\x82\x21\x25\x81\xF6\x2B\x27\x82\x0C\x9F\x22\x83\xCA\x34\x24\x08\xE8\x7B\x25\x11\xA4\x3A\x84\xEA\x65\x85\x0A\xA8\x26\x84\x0F\x99\x83\x85\x25\x2D\x86\x0B\x9F\x28\x80\x7A\x79\x7E\x20\x0E\x91\x7C\x0C\xA1\x20\x82\xAC\x32\x83",
			"\x86\x3D\x80\x2F\x0F\xAE\x83\x88\x0F\xB5\x80\x7A\x0B\x93\x78\x58\x5D\x7C\x78\xAC\x0C\x82\x20\x45\x80\x24\x13\x81\x2D\x83\x90\x0F\x89\x20\x57\x84\x3F\x14\x82\x8E\x88\xDC\x5A\x8E\x8B\x37\x83\x21\x14\x9F\x2B\x8B\x2A\xA0\x21\x8B\x59\x8B\x7E\xB4\x49\x89\x21\x00\xA8\x83\x7E\x07\x9F\x57\x18\xFE\x71\x89\xBF\x33\x8F\x8D\x06\x88\x27\x11\xFA\x51\x8D\x83\x3E\x83\x87\x20\x35\x8D\x6B\x77\x81\x8F\x35\xAC\x80\x90\x1F\x88\x93\x3F\x7B\x88\x7E\x36\xB8\x84\x7A\x8A\x86\x8D\x05\xDB\x8E\x8C\x47\xA2\x88\x92\x70\x88\x25\x19\xDD\x89\x21\x34\x9C\x82\x91\x5B\x91\x81\xFB\x60\x8F\x93\x4C\xA5\x22\x92\xFE\x74\x90\x27\x86\x23\x8E\x54\xAA\x8F\x7D\xAB\x83\x22\x27\x96\x80\x95\x5F\x59\x8D\x92\xB4\x86\x95\x48\x2E\x9B\x24\x55\xA0\x29\x8B\xAD\x95\x94\xF8\x31\x92\x21\x59\xA7\x92\x98\x06\x22\x95\x1F\x81\x28\x97\x63\xBA\x90\x24\xBC\x9A\x90\x29\xA8\x20\x98\x4C\xB9\x8D\x24\x9B\x9F\x96\x42\x46\x9B\x96\x64\x83\x22\x99\x96\x8D\x88\x58\x51\x9E\x99\x6B\xA1\x26\x97\x7F\x35\x9B\x38\xDE\x9B\x20\x62\x98\x8E\x9A\x1B\x92\x9A\x21\xA5\x27\x97\x3F\x8F\x99\x91\xF7\x9F",
			"\x1C\x21\x87\x99\x9E\x46\x8A\x84\x9A\x4A\x86\x7D\x24\x8A\x9B\x9F\x18\x84\xA7\xA0\xF9\x85\xA3\x0B\xFD\x94\x7C\x1B\xA1\x9D\x3A\xF6\x86\x9C\x48\x0A\xA3\xA2\x84\x92\xA0\x9F\x17\xBA\x9E\x45\xF1\x96\xA0\x86\xBC\x2E\xA1\x00\xBA\x7D\x44\x9C\xAB\xA1\x8C\x94\xA0\xA3\x24\xB5\xA1\x42\x9B\xA1\x84\x15\x9E\xA6\x20\x09\x99\x77\x32\x84\x20\x9F\x96\xB9\x91\xA3\x5B\x88\x31\x16\xE0\x97\xA7\x94\x9F\x24\x9C\xE7\x96\x26\x36\xF3\x95\xA4\x9F\x9A\xA3\xA5\x48\xA6\xA4\x4B\xA4\x8C\x9E\xA5\xAF\xA3\x20\x31\xA6\x77\x4C\xB9\x88\x8E\xA3\xA7\xA7\xA8\x4E\xB9\xAA\x55\x8A\x9E\x9E\x99\x8F\xA4\xA6\xEB\x99\x9C\x50\xD2\x89\x2E\x77\x80\x03\x35\x61\xB9\xA3\x58\xE4\x85\xAD\xA1\x86\x20\xAD\x76\x9C\xA8\x00\xF2\x82\xAF\x8F\x88\x89\xA4\x8F\x80\x2E\x70\x5A\xA6\xA7\x8E\x99\xA4\xAA\x33\x9F\x1D\x54\x81\xBF\x1F\xB5\xBF\x19\xA7\x66\xBC\xA5\x49\x7B\xAB\xAB\xA4\x86\xA8\xB0\x33\x83\xB1\x60\x86\xB2\xB3\x19\x86\xB3\x8B\x73\x99\x88\x5C\xAD\x3C\xB1\xBE\xA1\x20\xB2\x2E\x88\x9E\xF7\x6D\xAF\x2F\xCE\x8C\xAE\xAF\x8D\xBF\xAE\x22\x95\xBE\x85\xCB\x82\xA9\x9D\xBF\x46\xB7\x09\xAB",
			"\x20\xB4\x0F\xA1\x96\xAC\xCD\x81\x26\x6C\x84\xB5\xB6\x0C\x99\x98\xB6\x9D\x98\x2B\x6E\x81\xB7\xAB\xAB\xBD\xB5\x82\xAC\xBE\x80\x65\x83\xA9\x9E\xCC\xA6\xAB\xB3\xCA\x23\xBB\x0C\xC7\xB9\x95\x69\xB4\x9C\xB4\x9C\xAA\x90\x75\xAF\x9F\x9A\xDC\x82\xBA\xBB\xEC\x94\x8A\x59\xDC\x90\x25\xE4\x98\x85\x9E\x6E\xB7\x38\x56\x66\xB8\xB9\xD5\xAE\xB9\x9F\xEC\xBE\x7D\x7C\xB4\x23\xBF\xAF\x9B\x8B\xA6\xF7\xBF\xAA\x4E\xAF\xB3\xB5\x84\x12\xBC\x37\x9D\x7C\xBD\x40\x22\x93\x25\x00\x81\x86\xB9\x76\xB0\x95\x42\x08\xC0\xA6\x85\x10\xBA\xA8\xB2\xB2\xB5\x0E\xA3\x29\x8A\xD9\x95\xC3\x9B\x01\xBC\xBE\x7C\x7E\xBA\x21\x0D\xC6\x22\xB6\x1E\xCD\x82\x80\xE2\xB9\x21\x07\xF6\x21\xAA\xF0\x71\xAA\x89\xA3\x2B\x3F\x84\x26\x80\xC5\x0A\x2D\xC4\x2B\x8D\xA5\xC5\x11\xC0\x05\x01\xD8\xAE\x7A\x42\x70\x78\xC6\x17\xF4\xC7\xAD\x36\xCF\xC7\x8E\xB9\xC6\x7E\x07\xF6\xC1\x40\x09\xC3\x20\xFC\x48\xCD\xC1\x1A\xE3\xC4\x41\x06\x39\x41\x42\x52\xC6\x20\x16\x63\xC2\x47\x3E\xC9\x20\x96\x86\x2B\xCB\x81\x1D\xCA\x20\x44\x49\x21\x98\x86\x2A\x49\x19\xC9\x25\xCC\x03\x23\xCD\x9A\x8A\x2A\xCC\x30",
			"\xD1\x27\xCD\x09\x33\x49\x9C\x8A\x22\xCE\x83\x35\xCB\x20\x77\xD2\x4A\x42\x16\x06\xC6\xD9\xA3\x23\x8B\x11\x11\x82\x28\xA2\x9D\xC6\x1B\xDA\xCA\xD0\x5E\x8C\xCA\xA1\xE9\xC8\xD0\x27\xDC\xCE\xC6\x5B\x94\x01\xA3\x8A\xC6\x20\x65\x63\xC3\x8B\x15\x13\xD0\x54\x8A\x20\x06\x48\xFB\xCA\xD3\x02\x3B\x8A\xA4\x17\xDA\x21\x0B\x20\xD3\xC0\x0A\x34\x50\xA9\x89\x28\x03\x53\xC0\x01\x80\x22\x1E\xD1\x42\x19\x0E\xD4\x51\x80\x53\xD5\x06\x3A\x02\xAB\xA6\x8B\x03\x45\xC9\x23\x03\xBB\xCA\x21\xAF\xBE\xD3\x20\x0E\x2E\xD6\xC4\xA9\x44\xDA\x40\x1D\x07\xD8\x85\x09\xDA\xD9\x00\x1E\x02\xAB\xF0\x74\x06\x68\xC1\x27\x03\xAE\xDB\x8A\x0E\x32\xD8\x3F\x00\xBF\x04\xDB\x1C\x42\x95\xB8\x38\xDC\x42\x13\xD7\x5C\xDC\x4C\x46\x87\x0E\x60\xDC\x48\x13\xDF\x58\xDD\x86\x46\x86\x0F\x6C\xD6\x50\x39\x36\xC1\xB7\xB8\x3A\x57\x53\x1A\x48\xDF\xEE\x02\x94\x49\xBA\x57\xB6\xDA\x2F\xDF\xC6\x0E\x7A\x56\x84\x01\x90\x7E\x62\xB4\x3C\xC0\x83\xC2\x73\x20\x26\xDD\xDF\x72\x26\x8B\xE1\x7C\xEB\x39\x87\x15\xF8\x71\x40\x42\xC9\x3C\x5D\x68\xBE\x20\x32\xDD\xB9\x7A\x51\xA9\xBE\xDD\x37\x6F\x74",
			"\xBA\x30\x7E\xC4\x86\xD3\x3D\x42\xEA\xB9\x21\x50\xCF\xE6\x80\xA2\x92\xB6\x13\xE3\x3A\x57\x56\xC9\x9B\xC3\xFE\x89\x21\x10\xC0\xE3\x3D\x5F\xC8\xD7\xC0\xB9\x81\xE5\x9F\xE9\x3D\xCD\x42\xE3\x71\x40\x3E\xEC\x99\xF5\x3A\x50\xCD\xE2\x86\x20\x9F\xED\x8C\xDF\x18\xDD\xC6\xE9\xEB\x23\x4C\x51\xB8\x32\xE0\x90\xD6\xED\xE3\xEB\x25\x4F\xD6\xDD\x34\xE2\x85\x2E\xE5\x98\x58\xE9\x3E\x06\x0D\x7A\xD0\xB4\xE0\xE9\x3D\xC3\xDA\xE7\xC0\xB1\xEE\xCD\xB7\xF8\x3E\x4D\x63\xF4\x69\xCE\x83\x24\xCA\x87\xE9\x38\x4E\x79\xFA\x55\xD0\x80\x0B\xEE\xA3\xCA\xED\x75\x6C\xC9\xF2\xDD\x9C\x4E\x02\x22\xC7\x51\xAA\x26\x88\xE8\xC1\x8B\xFC\x49\x58\xC9\xCA\x20\xA3\xD3\x29\x86\xBA\xC7\xCD\xAB\xD4\xF6\x50\x16\x34\xE9\x7A\x6D\xE9\xE9\x81\x10\xE9\x20\x45\xE6\x52\xAE\x1E\x52\xF4\xFC\x34\xED\xF4\x02\x27\xF7\xE4\xF8\x3A\x57\x53\x4B\xC4\xD3\x5E\x9D\xED\xD4\x83\x23\xEA\x3B\xE9\xEF\xF0\xAC\x7D\xF7\x40\x0D\xFF\xF3\x43\x74\x52\x56\x33\x19\x62\xF0\x82\x2F\x03\xDF\xDC\x45\xDA\xB2\x5E\x55\xE0\xFB\xCA\x20\x3E\x45\xFB\x3C\x96\xD2\xEE\x41\x51\x5A\xFA\x0E\x56\x4B\xCE\xD7\xFE\x77",
			"\xE7\x5F\xF6\x20\xE2\xF4\xF4\x5A\xD6\x59\x60\xF9\x83\x2D\xF9\xF0\xFA\x33\xDB\xB2\x4B\xDF\xF4\x89\x2B\xFC\x81\x16\xFF\xFC\xE9\x2F\xDD\xF7\x82\x23\xDD\xFD\xC6\x52\xEB\xB9\x6E\x7C\xB3\x33\x80\x01\x10\x80\x03\x1C\x74\x87\x2A\x2B\xF3\x6D\x7A\x1C\x23\x78\x01\x46\x80\x02\x19\x7A\x09\x8B\x1E\xEA\x2C\x80\x4C\x22\x7B\x0F\x86\x5D\xB4\x1A\x2B\xF8\x27\x7B\x09\x1F\x30\x16\x81\x10\xCB\x71\x10\x5B\x42\x76\x06\x18\x80\x37\x7B\x1E\x1D\x31\x82\x87\x26\x82\x32\x73\x10\x2E\x81\x81\x02\x86\x28\x29\x3C\x82\xE3\x11\x77\x2F\x82\x10\x31\x8D\x74\xEE\x7C\x1B\x31\x3E\x81\x06\x1A\x33\x2C\x80\x78\xDC\x3A\x10\x6B\x70\x7E\xF8\x78\x1F\x44\x33\x7F\xF8\x17\x84\xE5\x73\x83\x87\x2A\x34\x2C\x82\x35\x4C\x83\x10\x4E\x8C\x7E\x50\x83\x1E\x5A\x3C\x82\x68\x35\x85\x02\x17\x85\xF6\x79\x85\xE6\x1C\x36\x2C\x80\x37\x5E\x81\x10\x38\x8F\x85\x62\x85\x3A\xAC\x39\x86\x01\x1B\x83\x13\x83\x70\xAC\x38\x77\xBE\x7D\x83\xB4\x1A\x37\x67\x87\x28\x74\x83\x7C\x6B\x8C\x1B\x7D\x3C\x82\x86\x39\x87\x7B\x8C\x7C\x7D\x84\x1B\x89\x3C\x82\x8C\x32\x88\xD5\x75\x88\xB8\x14\x39\x2C\x81",
			"\x60\xFE\x77\x28\x44\x88\x67\x8C\x8D\x1D\xA1\x39\x87\xE3\x13\x89\x02\x16\x7E\x7E\x78\x1F\xA3\x3C\x82\xAF\x39\x87\x9A\x87\x6D\x95\x8B\x1C\xB1\x3C\x82\xB5\x32\x8A\x8B\x86\x87\xB8\x17\x3B\x2C\x8B\x3B\x79\x8C\x89\x02\x10\x81\xAA\x7B\x73\xB9\x33\x12\xED\x76\x10\x83\x85\x8B\x72\x8F\x39\xF7\x73\x10\xA3\x81\x87\xC0\x7F\x39\xB7\x65\x87\x49\x8C\x21\xC1\x38\x89\xE6\x15\x8C\x7C\x8C\x8A\xDD\x13\x3C\x2C\x88\x3C\x79\x8C\x8C\x84\x8E\x8C\xCB\x16\x6F\x2C\x84\x07\x19\x34\x8D\x01\x1F\x8B\x86\x7C\x21\x75\x0E\x45\x77\x09\x31\x96\x76\x8C\x9D\x8C\x21\x78\x0D\x38\xE5\x8D\x8C\xC7\x8C\x24\x79\x0E\x45\x7B\x04\x8E\x0A\x19\x8B\xE7\x8C\x24\x7C\x0E\x45\x7E\x02\x8F\x09\x1E\x8D\xBC\x88\x1F\x7F\x0E\x45\x81\x09\x31\x83\x26\x10\x92\x79\x82\xE9\x12\x08\x1A\x88\x1B\xFC\x8C\x45\x09\x13\x90\x39\x8D\x8F\x1C\x24\x08\xEC\x37\x08\x5E\x4C\x8D\xB3\x73\x10\x25\x0A\x10\x8C\x26\x8D\x27\x7A\x2B\x8F\x29\x10\x1B\x9D\x8E\xB7\x86\x8B\x00\x09\x79\x03\x11\x92\xF5\x86\x28\x89\x0D\x38\xAA\x66\x10\x28\x9F\x8D\x4C\x2A\x08\x8D\x31\x7A\x04\x95\x8A\x23\x1B\x08\xEC\x33\x1E",
			"\x0E\x9B\x7B\x02\x14\x93\x0F\x92\x8C\x1C\x2E\x08\x8E\x72\x09\x5E\x49\x91\x40\x83\x10\xAC\x75\x93\x1C\x9A\x10\x94\x0E\x78\xE3\x1D\x92\x97\x49\x10\x49\x93\x10\xB6\x72\x92\x88\x73\x70\x53\x9C\x93\x10\x9C\x24\x98\x05\x70\x02\x1D\x09\x5E\x40\x2A\x97\x71\x10\x62\x9A\x94\x56\x93\x1E\x9F\x0E\x94\xE6\x11\x2B\x66\x66\x10\x65\x9F\x93\x06\x98\x1F\xA3\x0E\x95\x01\x18\x0A\x5E\x42\x7D\x4D\x66\x10\x55\x93\x10\x2A\x06\x93\x0A\x1A\x0A\x8D\x3B\x97\x02\x1F\x02\x7E\x99\x10\xAB\x0E\x45\xAD\x09\x31\xCF\x64\x95\x85\x93\x8C\xBA\x1B\x98\x02\x1F\x96\x30\x93\x92\x03\x74\x98\x52\x9D\x98\x90\x37\x28\x9D\x69\x10\x7D\x9B\x94\x09\x1E\x0A\x8D\x3B\x99\x06\x16\x99\x67\x96\x1E\xAF\x0E\x45\xB1\x09\x31\x6C\x9B\x66\x9E\x96\x10\xB2\x0A\x96\xEF\x7C\x3E\xAB\x9A\x95\x40\x9C\x24\xB6\x04\x97\x00\x0B\x0B\x5E\x4D\x7F\x51\x96\x10\xC9\x72\x66\x98\x92\x10\xBD\x09\x93\xE6\x1F\x2E\x47\x92\x10\xBF\x9A\x79\xAD\x93\x10\xC0\x0E\x78\xC4\x0E\x45\x08\x39\x65\x06\x10\x7D\x06\x17\x7C\xA5\x9A\x1B\xC6\x0D\x38\xD4\x93\x10\x78\x99\x92\x87\x27\x0C\x5E\x49\x0C\x19\x3D\x9D\xC8",
			"\x91\x9C\x94\x98\x1F\xD9\x73\x10\xD6\x9E\x9D\xE3\x1A\x0C\x8D\x39\x9E\x02\x14\x9E\x5B\x96\x28\xCB\x0E\x45\xCD\x09\x31\xDC\x7C\x9A\xD7\x9C\x1B\xCE\x09\x31\x27\x32\x2B\xF9\x92\x10\x28\x86\x1E\xBA\x2F\x0C\x19\x35\x83\x91\x81\xA0\xA8\x76\x9E\x00\x00\x0D\x19\x3D\x32\x00\xA9\x90\xDD\x1A\x2B\xD1\x0E\x45\xD3\x0E\x45\x3F\x8A\x9C\x06\x17\x6E\x06\x15\x2D\xCB\x94\x80\x87\x20\x7F\x1D\xAC\xA0\xBF\x36\x1E\x22\xA8\x94\x0C\xA5\x0D\x46\x69\x10\xDC\x0A\x21\x38\x37\x9C\x01\x17\xA2\xE5\x9F\xA1\x01\x1D\x0D\x9B\x71\x10\xE6\x03\x34\x5E\x42\x7F\x23\xA4\xA3\x57\x98\x1F\xFA\x73\x10\x1E\xAB\x9F\xBD\x35\x3A\xBC\x92\x10\x43\xAC\x9E\xE2\x76\xA4\x0A\x14\x8B\xB5\x96\x28\xE7\x0C\x3E\xEA\x0A\x21\x50\x3C\x82\x47\xA1\x10\x59\x93\x9F\x87\x2B\x0E\x2B\xA6\x10\xF2\x0A\x21\x5B\x85\x84\x09\x17\xA5\x00\x01\x8C\x71\x9C\x21\xF3\x0C\x3E\xF6\x0A\x21\x64\x8A\xA1\x03\x14\xA6\xBB\x8F\xA4\x87\x27\x0F\xEC\x3A\x0F\x6F\x3B\x9B\x0A\x19\x9C\x4A\xAA\x1B\xFB\x07\xA3\x00\x04\x00\xAE\x6F\x87\x6E\xA2\x10\x0B\x8D\xA3\x44\xA2\x39\x3F\xA3\x10\xDF\x69\x10\x49\xA3\x99\x89\xA0",
			"\xA2\x8B\xA6\x10\x4E\xA7\xA6\x4C\x25\x00\x11\x4B\x45\x08\x0E\x6A\x81\x83\xA8\x01\x11\xA9\xC0\x8C\xA0\x09\x07\xA9\x31\x6E\x6A\x5F\x0E\x45\x9E\xA2\x10\x71\xA4\xA9\x86\x2D\x00\xA2\xA3\x65\xAE\x6E\x88\x9C\xA0\x00\x15\x82\x60\x37\x7E\x3F\xD6\x62\x10\x04\x6B\x6F\x36\x64\x60\x19\x7C\x12\xBD\xAF\x0F\xB9\xA2\xA1\x2C\x12\x71\x8B\x46\x68\xFF\x64\x9B\x36\x17\xAC\x24\x8A\x16\x25\x72\x4F\xF0\x62\x54\x88\x50\x9B\x30\x17\x47\x26\x46\x13\xD5\xA3\x12\x1C\x72\x9D\x9B\x6E\x78\x51\x5F\xA7\xB8\x9E\xAD\xDA\xAD\x9B\x75\x18\xAD\xDF\xA6\x42\xD5\xA6\x42\x39\x55\x76\x8E\x71\x40\x00\x01\x5F\xED\xAA\x3E\x51\x5C\xAE\xF1\xA3\x12\x51\x54\x60\xDD\xA7\x19\x6A\x1E\x4A\x0A\x78\xAF\xB2\x20\x00\xFB\xA3\x64\xFD\xAF\xAF\xC3\x46\x63\x36\x7A\x13\x05\xBB\x12\x26\x64\x60\x09\xB3\x12\x0B\xBD\xA5\x02\x6F\x5F\x26\x10\xB1\xBA\x5E\x45\x00\x02\x5B\xEC\xAE\x67\xC1\x16\x68\x18\xBA\x10\xB2\x54\x60\x1D\xB7\xAB\x00\x00",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]!_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> )",
			L"[58][Module]!_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> )",
			L"[59][Module]!_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> )",
			L"[60][Module]!_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> )",
			L"[61][Module]!_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> )",
			L"[62][Module]!_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> )",
			L"[63][Module]!_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> )",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubsetTokens, ModuleParserStates, PrefixSubsetAstInsReceiver>(&PrefixSubsetTokenDeleter, &PrefixSubsetLexerData, &PrefixSubsetModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
