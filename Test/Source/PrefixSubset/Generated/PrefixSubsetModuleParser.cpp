/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubsetModuleParser.h"

namespace prefixsubset
{
	void PrefixSubsetModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3614; // 32704 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 30;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 15;
		static const char* compressed[] = {
			"\xC0\x7F\x00\x00\x16\x0E\x00\x00\x08\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x80\x42\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x92\x85\x00\x33\xAB\xB1\x89\x99\x9E\x95\x9E\x98\x3F\xB2\x9E\x9A\x91\xA4\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x9B\x90\x9C\x09\xD0\x86\x9D\x81\xAD\xA2\x90\xAB\x35\xCB\x86\xAD\xA4\xA2\xAF\xAA\xAF\x59\xDC\x88\xA2\xBA\xA4\xB0\xA7\x81\x4E\xD8\xBB\x9F\xA6\xB3\xAC\xB5\xAE\x6D\xEC\xAF\xA3\xB3\x83\x03\x9A\xB5\x0A\x84\x37\xA9\x85\x03\xBD\xB9\xB0\x73\xE5\x81\xC7\xB2\x81\xB4\xB1\xB5\x80\x85\xF0\xA3\xCE\xB2\xC4\xBA\xC7\x82\x90\xC4\xC1\x86\xC7\xBF\x90\x86\x55\x87\xF8\xBA\xCC\xCE\xCB\xCC\xCF\x9D\x8C\xF2\xB2\xCD\xC4\xCB\xC4\xD2\xA3\x81\x87\x1E\xB2\xD1\xC6\xD3\xC7\xAF\x91\xF1\xD3\xC4\x97\xD3\xD9\xD2\xB5\xB0\xF9\xD2\xDB\xDC\xD9\xCB\xD6\x23\x80\x99\xC0\xD4\xE0\xE3\xCE\xE3\xA1\xA8\xEE\xDD\xD8\xDF\xDE\xE4\xC4\xD0\xC7\xCF\xF2\xE1\x86\x87\x80\xAA\xC5\xD3\xC9\xF7",
			"\xD9\xD4\xE5\xEE\xE7\xDC\xCB\xE0\xFE\xE2\xF6\xD8\xF3\xE8\xDB\xE7\xD4\xEA\xF9\xF3\xF2\xF6\xF3\xE3\x8B\x2C\xDA\xE9\xE9\xF0\xF5\xFA\xEC\xF8\xCC\x0A\x88\xE8\xE4\xFD\xF1\x0E\x33\x76\x7F\x7A\xEF\x7A\x65\x80\x6F\x07\xBE\x66\x78\x44\xC3\x7E\x7E\x80\x7D\x0F\x83\x8D\x78\x7C\x14\x86\x85\x84\x6F\x10\x02\x89\x7D\x84\x1B\x90\x8E\x86\x84\xFF\x57\x8A\x82\x85\x24\x88\x82\x89\x73\x27\x9F\x76\x79\x04\x1A\x89\x88\x89\x89\x23\xA6\x80\x8F\x8B\x32\xB5\x81\x8F\x8D\xB8\x52\x0D\x89\x8A\xE5\x73\x8A\x8A\x8F\x3D\xB6\x88\x6F\x04\x3B\x80\x97\x7C\x87\xE3\x52\x4D\x83\x87\x1D\xA0\x88\x90\x8F\x47\x82\x45\x04\x7F\xEB\x57\x05\x92\x90\x3F\x98\x91\x90\x8E\x59\x9C\x9B\x94\x8D\x5E\xA3\x48\x06\x86\x19\x0A\x46\x5F\x84\x46\x84\x80\x96\x9A\xBA\x5C\x0A\x85\x07\x66\xAC\x9A\x95\x94\x4E\x8C\x9E\x89\x97\x60\xB9\x9D\x74\x08\x57\xA1\x9A\x41\x08\x54\xA9\x74\x47\x92\x75\x85\xAD\x93\xA1\x77\x9F\x9D\x74\x09\x81\xB8\x76\x09\x9F\xB8\x67\x0A\x84\x0A\x71\xA8\x93\x9E\x9C\x7E\x96\xA9\xA5\x88\xBA\x6B\x0A\x84\x0B\x90\xB8\x92\xAA\xA2\xA4\xA3\x4D\x0A\x86\x2E\x15\xAC\xA7\xA5",
			"\x9A\xBA\x95\xAB\x7A\x18\x44\xA0\x02\x0C\xAA\x8F\x99\x99\xAB\xA3\xB4\x98\xA3\x9A\x09\x75\x01\xAB\xAB\xB8\x80\xBB\xAB\xA6\xB6\xAC\xA3\xB2\xAB\x23\x76\x0F\xAE\xAE\x89\x8C\xBC\xAC\x7E\x1A\x72\xAD\xB3\x7A\x38\x1A\x89\x0D\xAD\x76\x8F\xB5\xB0\xB1\xD9\xBA\x6C\x0E\x86\x3D\x18\xB6\xA3\xB4\xC1\x8E\xB7\xAF\xB1\xDD\x40\x1B\xB0\xA6\xC8\xAB\x71\x13\xBA\xE5\xAC\xB9\xAE\xBC\xC2\x9B\xB8\x6E\x10\xF0\xA8\xB5\xBD\xB7\xC6\xB6\xBD\x77\x10\xF9\xBE\xBB\xBF\xB8\xDA\xBC\xB4\x6C\x11\x01\xC6\xCD\xB9\xBC\x0C\xF8\x75\x11\xC2\x04\xE7\xB2\xC2\xB9\xFD\x8A\xCD\x76\x11\x10\xFB\xA2\xC4\x93\x47\x19\xC4\xBA\xBE\x14\xDC\xB1\xC5\xC5\x23\xF4\x68\x12\x86\x49\x1E\xC5\xC2\xA1\x4A\x2A\xCB\xC5\x40\x4B\x2E\xC4\xCA\xC6\xBC\x4C\x19\xC5\x13\x1A\x8E\x12\xCE\xC8\x34\xFC\xCF\xC7\xC4\xEB\x4F\x1A\x84\x14\x3B\xCB\xC0\xC8\xBD\x23\x51\x15\xD3\xBC\x0D\xC0\xD9\x42\x14\x1A\x93\x1B\xD3\xC0\x3D\xC6\xDE\xD3\xD1\x09\x54\x13\xD5\xC8\x56\xC2\x45\x17\xD6\x48\xE1\xDD\xD2\xC5\x54\xFF\xC2\x42\x15\x60\xE3\xD6\xA3\x15\x19\xD8\x1A\x85\x16\x69\xD8\xD2\xDF\xD5\x74\xE4\xDC\xD4\xD3\x06",
			"\x5A\x11\xDF\x40\x5B\x1A\x8C\x17\xDE\x76\xE2\xD3\xDD\xE0\x09\x5D\x10\xE2\xA1\x5E\x0D\xAC\x84\x18\x87\xD5\xD8\xDD\xDD\x25\xDD\xD6\xA1\x18\x8D\xE6\xD1\xE7\xE3\x84\xC6\x42\x19\xC6\x63\x15\xEB\xC8\x00\x64\x0D\xE5\x1A\xE7\x2F\xCE\xE5\xDB\xE7\x66\x24\xE3\xCE\xE5\xA6\xFA\xA7\x19\xC6\x68\x0A\xE9\xE4\x87\x6A\x1A\x8B\x1A\xEC\x97\xCB\x7D\x1A\xEA\x3E\xDF\xEC\xEB\x78\x6E\x19\xCF\x18\xEF\xB8\x70\x1A\x85\x1C\x8D\xFC\x02\x56\x40\xFD\x42\x4D\x5D\xB0\x34\x4A\x0D\x40\x56\x98\x7F\x54\x4D\xF5\xAD\x74\x47\x9A\x41\xDB\xED\x62\xF5\x42\xD8\xE4\xD1\xF6\x42\xCF\xFF\x51\xF9\x78\xD7\xD8\x5A\xF6\xB8\xE4\x5F\xF6\x43\xF9\xE4\x7A\x50\x58\x4D\xCD\xC1\x45\xFA\xC0\xE3\xC9\x46\x76\x72\xF0\xF4\x44\xFF\xAF\xF5\x60\x03\xF2\x4A\x32\x7E\xEB\x6B\x21\x80\xF7\x62\x7F\x4A\x6E\x73\x21\xFD\x61\x39\x80\x03\x8F\x83\xAF\x7D\x7E\x7E\x94\x14\x85\x82\x21\x25\x81\xF6\x2B\x27\x82\x0C\x9F\x22\x83\xCA\x34\x24\x08\xE8\x7B\x25\x11\xA4\x3A\x84\xEA\x65\x85\x0A\xA8\x26\x84\x0F\x99\x83\x85\x25\x2D\x86\x0B\x9F\x28\x80\x7A\x79\x7E\x20\x0E\x91\x7C\x0C\xA1\x20\x82\xAC\x32\x83",
			"\x86\x3D\x80\x2F\x0F\xAE\x83\x88\x0F\xB5\x80\x7A\x0B\x93\x78\x58\x5D\x7C\x78\xAC\x0C\x82\x20\x45\x80\x24\x13\x81\x2D\x83\x90\x0F\x89\x20\x57\x84\x3F\x14\x82\x8E\x88\xDC\x5A\x8E\x8B\x37\x83\x21\x14\x9F\x2B\x8B\x2A\xA0\x21\x8B\x59\x8B\x7E\xB4\x49\x89\x21\x00\xA8\x83\x7E\x07\x9F\x57\x18\xFE\x71\x89\xBF\x33\x8F\x8D\x06\x88\x27\x11\xFA\x51\x8D\x83\x3E\x83\x87\x20\x35\x8D\x6B\x77\x81\x8F\x35\xAC\x80\x90\x1F\x88\x93\x3F\x7B\x88\x7E\x36\xB8\x84\x7A\x8A\x86\x8D\x05\xDB\x8E\x8C\x47\xA2\x88\x92\x70\x88\x25\x19\xDD\x89\x21\x34\x9C\x82\x91\x5B\x91\x81\xFB\x60\x8F\x93\x4C\xA5\x22\x92\xFE\x74\x90\x27\x86\x23\x8E\x54\xAA\x8F\x7D\xAB\x83\x22\x27\x96\x80\x95\x5F\x59\x8D\x92\xB4\x86\x95\x48\x2E\x9B\x24\x55\xA0\x29\x8B\xAD\x95\x94\xF8\x31\x92\x21\x59\xA7\x92\x98\x06\x22\x95\x1F\x81\x28\x97\x63\xBA\x90\x24\xBC\x9A\x90\x29\xA8\x20\x98\x4C\xB9\x8D\x24\x9B\x9F\x96\x42\x46\x9B\x96\x64\x83\x22\x99\x96\x8D\x88\x58\x51\x9E\x99\x6B\xA1\x26\x97\x7F\x35\x9B\x38\xDE\x9B\x20\x62\x98\x8E\x9A\x1B\x92\x9A\x21\xA5\x27\x97\x3F\x8F\x99\x91\xF7\x9F",
			"\x1C\x21\x87\x99\x9E\x46\x8A\x84\x9A\x4A\x86\x7D\x24\x8A\x9B\x9F\x18\x84\xA7\xA0\xF9\x85\xA3\x0B\xFD\x94\x7C\x1B\xA1\x9D\x3A\xF6\x86\x9C\x48\x0A\xA3\xA2\x84\x92\xA0\x9F\x17\xBA\x9E\x45\xF1\x96\xA0\x86\xBC\x2E\xA1\x00\xBA\x7D\x44\x9C\xAB\xA1\x8C\x94\xA0\xA3\x24\xB5\xA1\x42\x9B\xA1\x84\x15\x9E\xA6\x20\x09\x99\x77\x32\x84\x20\x9F\x96\xB9\x91\xA3\x5B\x88\x31\x16\xE0\x97\xA7\x94\x9F\x24\x9C\xE7\x96\x26\x36\xF3\x95\xA4\x9F\x9A\xA3\xA5\x48\xA6\xA4\x4B\xA4\x8C\x9E\xA5\xAF\xA3\x20\x31\xA6\x77\x4C\xB9\x88\x8E\xA3\xA7\xA7\xA8\x4E\xB9\xAA\x55\x8A\x9E\x9E\x99\x8F\xA4\xA6\xEB\x99\x9C\x50\xD2\x89\x2E\x77\x80\x03\x35\x61\xB9\xA3\x58\xE4\x85\xAD\xA1\x86\x20\xAD\x76\x8B\xAB\x09\xAE\xA9\xA2\x41\x84\x84\xAB\x72\x92\xAF\x0C\xB4\x8D\xA0\x24\xA1\xA7\x91\x69\xA6\xA9\x54\xFB\xAF\x1F\xB5\xBF\x1A\x38\x5A\xB6\xA5\x47\x89\xBC\xA9\x92\x14\xAB\xAF\x83\xBB\xAE\x61\xB9\xA6\xAC\x9E\xA5\x20\xB1\x5B\xA9\xA9\x66\x99\xAF\xB1\x19\x91\xB3\x86\x86\xBF\xB2\x0B\x93\xBD\xAD\x74\x8A\x20\xAE\xAD\x26\xB1\x68\x83\xA9\x9E\xCC\x8A\xB5\xA8\xAF\xA0\x25\x67\xAE",
			"\x88\x9C\xEF\x65\xB5\x35\xAE\xAD\xB0\x6C\xBA\xBA\xA4\xC6\xB3\xA8\x25\xB3\xBE\x82\x68\x9E\x84\xB4\xA1\xB6\xB4\xA8\x20\x39\xB7\x6F\x8B\xB6\xA9\xE0\x98\x81\x94\x66\xAD\x99\x48\x4A\xB4\xB1\xAB\x8E\xBB\x92\x0A\x28\x94\x1A\xD8\x24\xBB\xBD\x97\xAF\xBB\x8A\x97\xBA\xFF\x43\xB8\x83\xD5\xA2\xAC\x9D\x01\x33\x8D\x16\xA8\xBC\x7E\x45\xA4\xBD\x82\x86\xBD\xBB\x0C\xD6\xB8\xBC\x00\x12\xBF\x8C\xB7\xAA\x3A\x7C\xC4\x81\xBD\xFA\x96\xB6\x8A\xD3\x97\xB2\x5E\xFB\xA2\xBD\x57\x83\x22\xBB\xDB\x98\x2B\x7B\xFE\x75\x9E\xB7\x97\x3A\xC1\xEE\xB1\xC1\x3E\x8B\xC4\x26\x0A\xEB\x26\xC2\x28\x38\xC0\x3D\xEC\x73\xA7\x2D\xB3\xA2\xA7\xC6\xA7\xBA\x41\x7B\xB1\x24\x0D\xE5\xC2\xC2\x19\xA6\xC4\x6E\x70\x61\xC5\x80\x22\x93\x24\x01\x81\x83\x16\xA6\x81\xAA\xF8\x73\xC5\xAF\x6F\xAD\xC5\x40\x4A\xBA\xB9\x1C\xA3\x21\x8B\xCA\xA0\xC9\x82\xA2\xAA\xC6\xF9\x09\x22\xB9\x46\xC3\xC6\x42\x49\xCD\x80\x1D\xC0\x00\x7E\xEC\xA2\xA9\x8D\xB8\xC3\x21\x28\xF6\x23\x3F\x09\x34\xC5\x76\x8A\x28\xCA\x56\x94\xCA\x20\x56\xC3\x25\x03\x79\xB6\x7F\x2D\xC9\x23\xCC\x59\xDF\xCA\x6A\x4E\xCA\xCB\x61",
			"\xA9\xCF\xA3\x09\x21\xCE\x42\x01\x40\xCE\x58\x89\x24\xCE\x30\xA7\xB6\x93\x8C\x46\x21\x0C\x49\x26\xCF\x06\x2C\x46\x8E\xBA\x4F\xCC\x83\x04\xD6\x20\x44\x49\x22\x92\x5E\xC9\x21\x44\xC8\xD1\x22\x0A\x33\x49\x42\x12\xD6\x20\x4A\xC3\x26\x02\x4E\xCA\xBB\x48\x5B\x89\x05\x08\xA2\x92\x94\x68\xCE\xC9\x42\x2A\x0E\xD2\x2F\xB8\xCA\xD4\x03\x2B\x05\xA9\xF1\xCA\x21\x43\xE1\xC3\x8B\x2C\x0B\xD6\x9D\x86\x2A\x58\x1D\xDB\x8D\x05\xB2\xD0\xAA\x42\x30\x0E\xC9\x2D\xAE\x01\xD7\x02\x3B\x8A\xA4\x36\xDA\x21\x17\x00\xDE\xC5\x0A\x34\x50\xB1\x89\x20\x07\x63\xF6\xBA\x21\x22\x1D\xD7\x45\x4E\xD2\x94\x40\x4B\xDE\x20\x32\x0E\xDA\x09\x9B\x08\xD5\x84\x33\x02\xDB\x0A\x3C\xD9\xB7\x83\x24\x06\x67\xD6\xC9\x55\xE3\xC2\x21\x0D\x66\xDA\x20\x74\xE9\xD8\x00\x36\x0E\xD8\xFC\x34\x0F\xDD\x80\x37\x06\xD9\x5B\x9A\x06\xB4\xE9\x31\x81\x1F\x3B\xD8\x3F\xA2\x81\x5F\xB5\x9C\x46\xCB\x6B\x43\xE2\x20\x38\x00\xDD\x42\x3B\x0F\xDF\x81\x39\x04\xDD\x09\x3F\x5B\xC1\x81\x2A\x06\x85\xC6\x26\x07\x0D\xE2\x23\x0E\x4E\xD2\x0E\x27\xF7\xBD\x3B\xBA\x4F\x2A\x86\x1F\xEB\x38\xBB\x86\x52\x57",
			"\xD0\xAA\x6F\xB3\xF5\xCC\x42\x5D\x66\x81\x80\xF0\x7F\xBC\x6E\x37\xC9\x3D\xBB\x4B\x3E\xCA\x24\xE3\x26\x09\xB2\xE0\xE5\xF5\x39\x84\xE7\x54\x6D\xCC\x7E\x3A\x5D\xC0\x83\x1D\xCF\x9B\xEB\x31\xAA\x87\xE6\x36\xE7\xA6\xE6\xCB\x2A\xEB\x3A\x55\xA8\x8F\xC9\x20\x3E\xD4\xED\xC5\xA2\x8A\xBA\x95\xE3\x3A\x56\x41\xC9\x9A\x70\x4D\xC9\x20\x93\xCC\x4A\x56\x57\xC2\x20\xE8\xBA\x59\x87\xD1\xE4\xEB\x3C\x47\xC8\xEA\xE5\x63\xEC\x99\xD4\xEB\x3B\xD1\xAB\xD7\xD6\x8B\xA2\x81\x83\xDA\x81\x21\xEF\x43\x7A\x53\x4C\xC8\xBD\x39\xCA\xC6\xEC\xCB\xB9\xE9\x3D\x4C\x81\xEB\x3B\xCE\x8A\x23\xEB\x62\x86\xF0\x3F\x1A\x0D\x73\xA9\x8E\xF5\xE7\xF5\x22\xDF\xEB\x2A\xF6\xEA\x40\x6E\xEC\xED\xF4\x2E\x49\xF1\x5D\xEA\x20\xA0\xAD\xEB\x3C\x38\x60\xF3\x3D\x66\xE1\x22\xD7\xA4\xFA\xE4\xD6\x5C\xF1\x20\xAF\xFE\xEF\x7A\x1E\x04\xCD\x43\x51\xAE\x84\xB1\xF9\xE6\x93\xE3\x31\xDA\x96\xC2\x23\xD8\x50\xE4\xC9\x9E\x8A\xDB\xC9\xC7\xDC\x46\x22\x6D\x8B\x3F\xE4\xC8\xD4\xF9\x84\x3B\xEA\xF6\xE9\x3E\x51\xF2\xE9\x3A\xF2\xE6\xC6\x25\xEE\xE2\x83\xEB\x7A\x27\x59\x21\x2D\xBC\xD3\xFA\x7D\xDE\x88",
			"\xA6\x93\xD6\xF9\xD9\x66\xF9\x20\xE3\xE6\x20\xED\x95\xF9\x3C\x5A\x72\x53\x06\x19\x69\xFF\x40\x1F\x05\xFC\x43\x74\xDA\x56\xBE\x47\xF5\x42\x72\xF2\x20\x3E\x6C\xF8\x3F\xB5\x68\x79\x06\x11\x2D\x02\x8C\x21\x56\x24\x7E\xFF\x70\x39\xAD\x3A\x10\x07\x8A\x7E\xF5\x77\x28\xD5\x22\x2B\x06\x75\x80\x4C\x2D\x80\xF3\x7F\x80\xE3\x1A\x6F\xB2\x2C\x70\xFA\x76\x10\x16\x8D\x7F\x18\x86\x1E\x12\x74\x81\x01\x12\x70\x24\x87\x28\x80\x76\x10\x91\x79\x80\xE7\x7B\x80\x09\x19\x82\x03\x1D\x77\x5C\x7B\x1E\x18\x70\x7E\x1C\x29\x7A\x2B\x76\x10\x30\x82\x10\xCF\x73\x83\xE9\x1A\x2E\x36\x8C\x24\xD8\x72\x77\x2F\x81\x60\xB4\x1A\x2B\xF8\x2D\x7D\x0A\x1F\x30\x41\x88\x7E\xEC\x38\x78\x06\x12\x83\x4C\x7B\x1E\x1D\x3D\x84\x87\x20\x85\x76\x72\x10\x58\x8C\x83\x21\x8A\x1B\x29\x36\x85\xE3\x17\x79\x59\x81\x10\x5B\x84\x84\xDA\x79\x1E\x31\x3A\x84\x09\x1A\x33\x56\x86\x7A\xDC\x3A\x10\x2B\x85\x69\x5D\x8C\x1B\x44\x3D\x81\x1C\x21\x87\x03\x1B\x7E\x67\x88\x1F\x4A\x36\x85\x52\x36\x87\x02\x18\x87\x02\x14\x7F\x2C\x86\x28\x5A\x36\x85\x68\x30\x88\x01\x12\x88\x01\x1E\x7F\x7B\x8C",
			"\x21\x6C\x36\x85\x2C\x67\x82\x61\x80\x87\x73\x8D\x3B\xA5\x32\x86\x5A\x87\x89\x92\x3E\x82\x06\x1F\x79\x72\x85\x88\x87\x2A\x37\x8A\x87\x28\xA0\x89\x87\x9C\x8D\x1D\x7D\x36\x85\x86\x35\x8A\xA7\x83\x88\xA9\x8B\x1C\x89\x36\x85\x8C\x3E\x8A\x0A\x1E\x88\xAC\x78\x1F\x94\x36\x85\x9D\x35\x8A\x6E\x83\x10\x96\x6D\x79\xF8\x11\x3A\xA5\x83\x1E\xBF\x82\x10\x7A\x89\x8B\x1C\x23\x3A\x56\x8F\x3A\xBE\x8A\x10\x84\x8F\x88\x4C\x21\x3B\x56\x85\x3B\xCF\x89\x10\xB8\x82\x8C\x1C\x27\x3B\x56\x8B\x3B\xA5\x89\x8C\x02\x1B\x83\x27\x70\x76\x2D\x81\x8D\x03\x1F\x8A\xE3\x8D\x7A\x9F\x39\x8D\x01\x17\x8C\xE9\x83\x38\xB9\x33\x12\xD6\x61\x8A\xD2\x86\x28\xC1\x35\x8C\xE6\x13\x8F\xA8\x82\x8A\xE3\x13\x3C\x56\x88\x3C\xA5\x8A\x8F\xB0\x8C\x8F\xE6\x1D\x71\x56\x84\x07\x19\x32\x90\x8D\x81\x8B\x23\x15\x07\x5E\x47\x07\x19\x3D\x7B\xF4\x8A\x8C\x4C\x28\x07\x8D\x32\x91\xFB\x85\x8F\x87\x29\x07\x5E\x4B\x07\x11\x90\x8D\x0C\x9A\x10\x7C\x0E\x45\x7E\x0F\x91\xD8\x81\x92\x09\x1F\x07\x5E\x41\x08\x19\x33\x28\x8F\x64\x90\xBA\x12\x08\x46\x88\x1B\xEC\x8C\x45\x09\x1E\x92\x63\x80\x7D",
			"\xF8\x14\x08\xEC\x37\x08\x5E\x4A\x90\x39\x83\x10\x25\x0A\x10\x8C\x20\x93\xAB\x3F\x39\x8F\x29\x10\x45\x9A\x91\xBF\x3F\x39\xC0\x73\x10\x4B\x94\x91\x86\x29\x08\x8D\x3A\x6C\x06\x11\x95\xDA\x8C\x24\x8A\x0D\x38\xC8\x7F\x92\x4C\x96\x1E\x8B\x0C\x61\xE6\x18\x93\xD9\x73\x10\x5D\x99\x93\x3E\x88\x1F\x8E\x05\x7B\x92\x0E\x45\x43\x9A\x86\x06\x12\x7D\x5E\x92\x95\x87\x24\x09\xB5\x73\x1E\x56\x97\x49\x09\x12\x97\x03\x1C\x7D\x5F\x95\x3A\xAC\x3C\x97\x65\x99\x95\x86\x28\x09\x6A\x60\x00\x9D\x0E\x45\xA0\x2E\x7B\x01\x1B\x98\x73\x94\x98\x87\x2F\x09\x77\x96\x1E\xB1\x2C\x68\x06\x1E\x98\x68\x93\x85\xE9\x13\x0A\x87\x98\x0A\x5E\x49\x7F\xC3\x76\x10\x7E\x93\x10\x2A\x08\x92\x06\x1A\x0A\x8D\x33\x9A\x02\x1F\x02\xA6\x93\x10\xAB\x0E\x45\xAD\x09\x31\xEE\x6D\x97\xAD\x9D\x82\xE3\x13\x9B\x02\x18\x99\x90\x9D\x94\xA5\x3C\x9A\x7B\x95\x9B\xF1\x8B\x1E\xDF\x76\x10\xA5\x96\x94\xB4\x1E\x0A\x8D\x33\x9C\x03\x1E\x9B\x7F\x9C\x1B\xAF\x0E\x45\xB1\x09\x31\x95\x93\x10\xB1\x79\x96\x1C\x22\x0B\x93\x9A\x1B\x1A\x8F\x86\x09\x13\x9D\x83\x9F\x8E\x1C\x26\x0B\x87\x9B\x0B\x5E",
			"\x46\x82\x7A\x96\x10\xF0\x7D\x68\xC0\x90\x00\xBD\x02\x96\xBA\x1F\x2E\x70\x93\x10\xE9\x91\x7C\xCD\x94\x1B\xC0\x05\x7B\xC4\x0E\x45\x08\x35\x68\xE4\x6A\x10\xEE\x75\x9F\xB8\x16\x0C\x8D\x37\x7F\x06\x10\x9A\x74\x93\x1E\xC7\x0E\x45\xC9\x09\x31\x06\xA2\x10\xF3\x97\xA0\xBE\x3F\x39\x01\x83\x10\xFF\x90\xA1\xBA\x1A\x0C\x8D\x33\xA1\xEA\x6B\x9E\xCB\x0E\x45\xCD\x09\x31\x04\x84\x9D\xEB\x9E\x0C\x33\x9D\x1D\x27\x32\x2B\x21\xA2\x10\x52\x8A\x1B\xBA\x20\x0D\x25\xAB\x1C\x5F\x87\x82\x29\xA1\x10\x3D\x8A\x99\xF8\x12\x0D\x2F\xA3\x12\x2D\x38\xA2\x39\xAB\x7B\xE6\x14\x0D\xEC\x37\x0D\x5E\x49\x86\xF4\x9E\x70\x0A\x11\x81\x00\xAD\x1D\xD9\x0D\x38\xDB\x93\x10\x48\xA6\xA1\xBC\x1A\x0D\x3D\xA9\x1E\x4D\xA2\x10\x82\x90\x9E\x4C\x2C\x0D\x0A\x1A\x5C\xE4\x0A\x21\x38\x36\x85\x55\xA1\x10\x0F\xAB\x9B\xE6\x15\x0E\x43\x66\x10\xEF\x0A\x21\x42\x3B\x81\x47\xAB\x9E\xF0\x09\x3C\x6D\xA6\x9C\xB8\x11\x0F\x8D\x36\x9E\x08\x7B\x9E\xF2\x03\xA5\xF8\x16\xA7\x01\x12\x8E\x3A\x9C\x21\xF4\x05\x7B\xF8\x03\x34\xE0\x2A\x10\x57\xAF\xA7\x4C\x29\x0F\x5B\xA7\x13\xCE\x6D\x87\x45\xA2",
			"\x10\x7C\xA0\x00\xEE\x88\xA8\x86\x22\x00\x11\x46\x42\x06\x0E\x6C\x7F\x87\x82\x91\xA8\x8E\x94\xA7\x28\x07\x07\xA9\x4B\x6E\x6C\x87\x8C\xA9\x0A\x13\xA6\x58\xA6\x28\x0C\x01\x41\x59\x46\x01\xCE\x6F\x35\xB2\x25\x83\x06\x1F\xA4\x64\xAA\x1B\x17\x0E\x6C\xAC\x3E\x6F\x09\x14\xAB\xA9\xA8\x82\x11\x4A\x7B\xE9\x1A\xAB\x3A\x8B\x9E\x1A\x02\xAA\x09\x1E\x01\xCE\x69\x88\x27\x82\xAC\x03\x13\xA9\xD6\x9C\x24\x1F\x06\xAC\x06\x13\x02\xCE\x61\x89\xCB\xAA\x10\x9E\xAF\xAC\x86\x24\x02\xD2\xA3\x10\x28\x0E\x6C\x6E\x32\x2B\x40\x8D\x62\x5C\x7E\x3F\xF5\x67\x76\xA2\x6F\x62\x22\x7B\x2C\x40\x7F\x0F\xEA\xA9\xA3\x24\x7B\x48\xA2\x66\x72\x66\x8D\x62\xF4\xA0\x00\x4B\x7E\x12\xF9\xA2\x4F\x13\x72\x54\x94\x59\x9D\x30\x17\x47\x26\x46\x13\x03\xBA\x73\x87\x90\x00\x42\x76\x99\xBA\x65\x7B\x51\x58\xB0\xB5\x7E\xB0\xF1\x97\x9E\x0B\xBC\x9F\x50\x46\xB0\x11\xB5\xB1\xB2\x20\xB1\x8F\xAE\x3C\x6A\x14\x61\x51\x51\x40\x00\x0F\xB1\x23\x11\x55\x2F\x6D\xB0\x97\x1A\x16\xAE\x41\x73\x27\xB9\xB1\x2A\xBF\x74\x6F\x7E\x66\x27\x8F\x64\xA2\x6B\x75\x3A\x14\xB3\x2B\x16\x65\x2F\x68\xB3",
			"\x23\x1A\xB3\x7A\x69\x69\x6A\x14\x62\xD3\x5E\x45\x00\x0A\x5C\x20\xBA\x69\xC1\x12\x6A\x46\xBB\xA8\x19\xBA\x5C\xEF\xAA\x63",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ | lri:<skip> ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr | lri:<skip> ) >>",
			L"[59][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr | lri:<skip> ) >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ | lri:<skip> ) >>",
			L"[61][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr | lri:<skip> ) >>",
			L"[62][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ | lri:<skip> ) >>",
			L"[63][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType | lri:<skip> ) >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubsetTokens, ModuleParserStates, PrefixSubsetAstInsReceiver>(&PrefixSubsetTokenDeleter, &PrefixSubsetLexerData, &PrefixSubsetModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
