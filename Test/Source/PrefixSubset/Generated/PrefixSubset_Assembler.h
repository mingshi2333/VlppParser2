/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#ifndef VCZH_PARSER2_UNITTEST_PREFIXSUBSET_AST_ASSEMBLER
#define VCZH_PARSER2_UNITTEST_PREFIXSUBSET_AST_ASSEMBLER

#include "PrefixSubsetTypeOrExpr.h"

namespace prefixsubset
{
	enum class PrefixSubsetClasses : vl::vint32_t
	{
		CallExpr = 0,
		ConstType = 1,
		FunctionType = 2,
		MemberName = 3,
		Name = 4,
		PointerType = 5,
		QualifiedName = 6,
		TypeOrExpr = 7,
		TypeOrExprToResolve = 8,
	};

	enum class PrefixSubsetFields : vl::vint32_t
	{
		CallExpr_args = 0,
		CallExpr_func = 1,
		ConstType_type = 2,
		FunctionType_args = 3,
		FunctionType_returnType = 4,
		MemberName_member = 5,
		MemberName_parent = 6,
		Name_name = 7,
		PointerType_type = 8,
		TypeOrExprToResolve_candidates = 9,
	};

	extern const wchar_t* PrefixSubsetTypeName(PrefixSubsetClasses type);
	extern const wchar_t* PrefixSubsetCppTypeName(PrefixSubsetClasses type);
	extern const wchar_t* PrefixSubsetFieldName(PrefixSubsetFields field);
	extern const wchar_t* PrefixSubsetCppFieldName(PrefixSubsetFields field);

	class PrefixSubsetAstInsReceiver : public vl::glr::AstInsReceiverBase
	{
	protected:
		vl::Ptr<vl::glr::ParsingAstBase> CreateAstNode(vl::vint32_t type) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::Ptr<vl::glr::ParsingAstBase> value) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, const vl::regex::RegexToken& token, vl::vint32_t tokenIndex) override;
		void SetField(vl::glr::ParsingAstBase* object, vl::vint32_t field, vl::vint32_t enumItem, bool weakAssignment) override;
		vl::Ptr<vl::glr::ParsingAstBase> ResolveAmbiguity(vl::vint32_t type, vl::collections::Array<vl::Ptr<vl::glr::ParsingAstBase>>& candidates) override;
	};
}
#endif