/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset3
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubset3ModuleParser.h"

namespace prefixsubset3
{
	void PrefixSubset3ModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3754; // 36003 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 170;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 15;
		static const char* compressed[] = {
			"\xA3\x8C\x00\x00\xA2\x0E\x00\x00\x0A\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x84\x13\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x9B\x95\x98\x29\xA3\x8A\x81\x06\x9E\x95\x9E\x98\x3F\xB2\x9E\x97\x91\xA1\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x98\x9C\x91\x45\xD0\x8B\xA6\xAD\xA4\xA1\x84\x9E\x57\x8A\x82\x1B\x91\xAD\x9B\xA8\xA9\x55\xC8\xA1\xAA\xA3\xB4\xA7\x80\xA7\x5D\xCF\x9E\xA5\xB4\xAF\xB2\xAA\xB6\x60\xEE\xA2\xB2\xB4\xB4\xBA\xB2\x81\x68\xDF\xAB\xB6\xBD\xB0\xBF\xB6\xBE\x71\xFE\xB3\xA2\x8D\x89\xAE\xBD\x91\x04\x5C\x89\x85\x0A\xC0\xBB\xBC\xC1\x75\x90\xF7\xA1\x89\xBE\xC6\xB5\xCB\x69\x99\xC7\xDA\xC6\xCC\xCC\xC1\xC7\x94\xFF\x92\xDD\xB1\xD3\xC1\x80\x86\x86\x9D\xDB\xCB\xDA\xD5\xD7\xCE\xCC\xAC\xAF\xDE\xC3\xD1\xC5\xD1\xC8\xDB\x93\xA4\xA2\xC1\x87\x05\xC6\xD9\xD8\xB4\xA0\xFA\xC6\xD3\xE7\xD9\xE3\xDC\x95\xBF\xEE\xC1\xE0\xDB\xE4\xDC\xD2\x00\x08\x3E\xCC\xE3\xDF\xE5\xDB\xE3\xD0\xC9\xD4\xE0",
			"\xE6\xEA\xE2\xED\xEE\xCD\xCA\xE2\xFB\xEE\xE0\xEF\xEB\xEF\xE6\xDE\xFB\xC4\x8A\xAD\xE9\xF5\xF0\xE4\xE3\xE0\xEE\xF8\xF5\xFB\xF4\xFB\xC4\xF8\xC6\xFA\xF8\xE7\xFA\xFF\xFC\xFF\x7B\x71\x81\x7F\x00\x84\x7B\x03\x74\xF3\x5C\x7F\x78\x7D\x03\x99\x7D\x83\x79\xEB\x4C\x0D\x7A\x82\xFC\x50\x7E\x00\x82\x0B\x94\x8F\x82\x7A\x05\x82\x8D\x84\x81\x1E\xA1\x89\x6C\x44\xA9\x72\x79\x85\x79\x15\x90\x8F\x86\x83\x2B\xAA\x82\x88\x8B\x2F\x97\x70\x04\x86\x29\x9C\x81\x8E\x8D\x20\xB9\x80\x8E\x8E\x2E\xBC\x88\x8F\x8E\x40\xBD\x81\x93\x8F\x42\x85\x94\x93\x91\x23\x51\x04\x8F\x86\xF0\x49\x88\x88\x93\x0C\xAD\x88\x91\x94\x37\xA3\x42\x07\x92\x52\x8D\x97\x8A\x89\x35\x9A\x9D\x96\x42\x13\x18\x95\x94\x95\x3E\x9E\x9B\x7A\x44\x25\xB1\x7A\x9A\x93\x5C\x90\x9A\x85\x96\x0A\x55\x03\x85\x79\x17\x22\x95\x98\x99\x43\xA6\x90\x9F\x9B\x63\xBC\x99\x6C\x06\x18\x99\x0A\x41\x61\x4F\xBB\x95\xA1\x9F\x87\xB7\x9A\x80\x07\x18\x9D\x03\xA0\x9E\x46\xBA\x98\xA1\x9B\x86\x94\xA3\xA7\x9A\x00\x20\x06\x9D\x9E\x90\x82\x71\x0B\x9C\x26\x94\x49\x98\x9B\x98\x9F\x9E\x9C\xA7\xA7\x97\x74\x08\xA8",
			"\x98\xA6\x0B\xA7\x75\x27\x18\x88\x0B\xA3\xA9\x93\x95\xAE\xA4\x8A\x89\xA8\xAA\xAE\xD7\x6B\x0F\xAA\xAD\x06\x6C\x0F\xAC\xAE\xBB\xA6\x8D\x08\x86\x2E\x34\xAC\xAC\xB0\x96\xB9\xAD\xB1\xB1\x98\x98\x43\xA8\x00\x32\x0A\xBF\xB1\xA4\x9D\x84\xB8\xB7\xAD\xD9\x8A\x45\x0F\xB0\xDD\x9C\xB2\xBB\xB2\xDA\x8C\xB5\xAA\x9B\xE4\xAE\x76\x0C\xB8\xE3\x97\xB6\xB8\xA9\xF0\x9B\x98\xA6\x46\xD3\xA6\xA5\x78\x0E\x18\xB9\x06\xB7\xB9\x95\xBC\xB7\xA5\xBC\xF6\xA6\x8C\x0C\x86\x3D\x3B\xB0\xC0\xBA\xEE\xA5\xBA\xC1\xB8\xE5\x40\x1C\xB9\xBA\xED\xBE\xB9\x6D\x10\x0F\xC9\xCC\xC2\xC5\x11\xC7\xCD\xBD\xBC\x42\x15\xC2\xC4\xB4\x1A\xFF\xB2\xBD\xC8\xCE\x82\x43\x12\xC7\x24\xE0\xC3\xCB\xCA\x01\xDF\xCB\xB6\x41\x44\x28\xCC\xC8\xC2\x2E\xEF\xB3\xCF\xC6\x2B\xC5\x12\xCD\xCB\x29\xEF\xC8\xC4\xC4\x40\xE6\x86\x13\xCE\x34\xFD\xC6\xCC\x7A\x47\x04\xD8\xCC\xCF\x37\xE2\xCC\xD3\xD3\x45\xEB\xC8\x10\x86\x49\x0A\xDE\xD1\xD4\xE8\x4A\x16\xD5\xC9\x01\x4B\x1B\xD6\xCA\x50\xF8\xCC\x12\xCC\x4D\x18\x8E\x13\xD7\x3E\xF5\xCB\xC1\xC6\x4D\xDC\xDB\xCB\x13\x68\xC2\x70\x15\xDC\x6B\xC1\xD8\xA5\x14\x74",
			"\xD7\xCA\xDA\xDE\xF1\x92\x18\x87\x14\x79\xEC\xD1\xDB\xD5\x4B\xD1\xD4\x15\xE0\x76\xC6\xDA\x95\x15\x88\xFF\xCE\xE3\xDE\x82\xD8\xD2\xE4\x71\x56\x0D\xE0\xE5\xE2\x2B\xD7\x12\xCC\x16\x18\x99\x16\xE6\xE2\x7C\xED\xD0\xDB\xE4\x84\xE5\xEE\xD8\xD3\x5A\x1F\xE0\x03\x16\x18\x9C\x1A\xEB\xE0\xA7\xE4\xE1\xEC\xCE\x5D\x2F\xE2\xEC\x74\x5E\x2C\xA1\xBC\x18\xB6\xC5\xEE\xEE\xE9\xA3\xFF\xE9\x6D\x18\xBD\xC0\xF9\xD8\xE8\x91\xC2\xF0\x76\x18\xC5\xF3\xE2\xCB\x18\xAA\xE4\x18\x85\x19\xCD\xC1\xF6\xF3\xD1\x51\xE6\x15\xF7\xF1\xA2\xDC\xF0\xEE\xCA\x67\x1B\xF8\xF6\xF2\xDE\xF7\xE5\xF8\x71\x68\x3A\xED\xF7\xF8\x22\xEA\x18\x87\x1A\xEA\xCC\xDD\x18\x86\x6E\x22\xF5\xDF\xE3\xC8\xE5\x7F\x1A\xFD\xA1\xDF\xF7\xFB\xF5\x5A\x50\x0C\xFF\x6C\x61\x0E\x0C\x72\x0A\x75\x73\x18\x40\x1D\x03\x88\x72\xFF\x6C\x79\x37\x49\x18\x2B\x40\x5B\x29\x20\xD4\x0B\x5C\x26\x00\x29\x23\x81\x7A\x26\x83\xCF\x34\x25\x83\xC1\x34\x24\xA1\x03\x29\x30\xBD\x19\x86\x20\xD2\x35\x54\x06\x8A\x2D\x36\x0E\x9D\x2F\x83\x2F\x8B\x27\x08\x82\x25\x84\xC7\x27\x83\x20\x29\x8E\x31\x0D\x9E\x8B\x24\x0A\x86\x20",
			"\x84\x46\x6B\x86\x06\xDD\x2C\x30\xBD\x30\x86\x88\x3D\x9F\x56\x0F\x83\x22\x83\xCF\x3B\x81\x84\x49\x95\x81\xA7\x42\x86\x21\x0D\x8E\x33\x89\x02\x2D\x89\x70\x58\x81\x20\x2D\x9D\x38\x88\xE9\x27\x8A\x63\x34\x2F\x89\xEE\x22\x8C\x87\x28\x25\x8D\x18\xAB\x2A\x8C\x9A\x24\x89\x86\x69\x90\x8D\x49\x6D\x8E\x8D\x38\x88\x8E\x8E\x63\x8C\x8E\x1C\xA1\x2C\x8A\x00\x20\x8D\x46\x54\x83\x22\x15\xCE\x8B\x8E\x90\x3D\x8E\x8B\xE9\x34\x8D\x1D\xFC\x8F\x56\x45\x8B\x97\x23\x8E\x8F\x91\x1F\xFF\x8B\x43\x40\x82\x23\x90\xC1\x33\x85\x40\x1A\x99\x3D\x1B\x8B\x25\x2B\x9C\x8D\x86\x0D\x8A\x22\x42\xBD\x1C\x90\x91\x96\x81\x21\x1F\xA2\x86\x61\x4E\x8A\x24\x92\x28\x21\x95\x57\x1E\x91\x21\x52\x8E\x37\x94\xB3\x91\x7E\x1E\xF7\x85\x25\x43\x9D\x29\x92\x8B\x9E\x96\x5E\x40\x95\x8E\x62\xAE\x8B\x92\x53\x8B\x24\x2D\x80\x08\x93\xEE\x06\x9C\x26\xC2\x9A\x85\x21\x9F\x21\x9A\x42\xBC\x91\x24\xCF\x91\x8B\x0F\xC9\x98\x25\x65\x8D\x99\x3D\xB0\x8F\x93\x3F\x61\x9F\x90\x4E\x9C\x91\x95\x7E\x9D\x28\x39\x8B\x92\x96\x13\xA4\x92\x9D\xD3\x9F\x1C\x2E\xEE\x99\x21\x55\xAB\x23\x9D\x75\x98",
			"\x9E\x1B\xE6\x99\x96\x29\xAE\x87\x9A\x20\x2D\x9F\x28\x89\x26\x97\xCF\x3A\x9C\x95\xF5\x4A\x9A\x2E\xA8\x27\xA1\x7B\xB1\x9C\x9F\xF4\x9B\x9B\x3F\xF9\x81\x96\x16\xBD\x9E\x20\x05\xA1\x39\x43\x95\xA9\xA1\x6E\x8B\xA5\x24\x1B\xA0\xA7\x43\xAD\x98\x9C\x7D\xA1\xA1\x24\x02\xBF\x33\x32\x99\xAF\x8B\x91\x9D\xA5\x24\xCB\x96\x9C\x43\xF1\x97\xA5\x80\xA4\xA2\xA1\xFE\x8E\x31\x4D\x9F\x29\xA5\xE0\x2B\xA0\x9E\x00\xBC\xA7\xAF\x31\xAF\x97\x78\x99\x98\x8F\x68\x93\x8D\x3C\xC8\x9A\x84\x9C\x95\x8C\x88\x34\xB1\x9D\x11\x94\xA2\xA5\xA0\xBF\x1F\xA8\x4A\xB6\xA8\x56\xD8\x96\xA9\xAE\x96\xAC\xA9\x17\x8E\xAA\x20\xC5\xAA\xAA\xAF\x94\xAC\xAB\x65\xA9\xAF\x59\xA0\x2B\xAA\xB6\x8B\xAF\x95\xDC\x90\xA6\x42\x5F\x9F\x8C\xB5\x89\xA8\xAD\x6B\xB0\x92\x59\xF7\xAE\xAC\xBB\x90\x88\xA9\x7F\xBD\x94\x5C\xCD\xAE\xA3\x21\x93\xA4\xAF\x1F\x3B\xA6\x3C\xBA\x21\xA2\x26\x80\xA9\xAF\xE3\x8E\xA4\x63\xBE\xAD\x91\xBD\x81\xB0\xAF\x88\xB7\xAA\x65\xE6\x8B\x96\xC8\xAD\xAA\xAF\x5F\xA3\xB1\x58\x85\xBF\xA9\x61\x9B\xB3\x8D\x80\xBC\xB1\x6A\xA8\xB9\xAA\xCF\xAF\xA9\xA7\xEE\x48\x9C\x5D\x8E",
			"\xA6\xAA\xC5\x9C\x93\xAA\x2A\xAD\x23\x63\x99\xB6\xB6\x85\x38\xB4\xB2\x09\x2E\x22\x35\xAE\xBE\xAE\xD5\x82\xB7\xA5\x98\xB7\xB2\x21\x95\xB5\xB8\xD6\x8C\x90\xB6\x35\x72\xB7\x6E\xCA\xB9\xB1\x78\xB9\x81\xB3\x9F\xBA\xB1\x73\xE2\x90\x24\xE1\x94\xBF\x1F\xBF\xA6\xB9\x48\x3D\xB3\xB2\xE0\x86\x20\x95\xB4\xB0\xB3\x75\xDF\xB9\xBB\xF6\xB1\x9E\xBB\xE2\xA0\x25\x78\xCE\xB0\x24\xC5\xB3\xBC\xBB\xD5\xB6\xAB\x6D\x97\xA3\x20\xF8\xA9\x3F\xBE\xF8\xB6\xBD\x54\xB5\xB3\xC0\xF5\xA7\xB0\xBF\xFF\x1E\xBC\x82\x90\xA3\xA0\x89\xBA\xA6\xBA\x07\xD8\xBE\x7B\xD6\xAA\xC0\xFC\x80\xC4\xBB\xE4\xA5\xBE\x2B\xC8\xB5\xBE\x08\xDB\xB8\xBF\x15\xDC\xBB\x3C\x8D\xC3\x83\xE9\xB1\xBF\x23\xEB\xA7\xC6\x76\x90\xB1\xC4\x71\xBD\xA5\x3B\x3F\xA7\xB3\x77\xA9\xC4\xBE\xD0\x84\xBF\xC6\x99\xAD\xC7\x23\x97\xC2\x9C\x01\xC4\xC2\xBF\xBE\xBC\xBF\x41\x50\xAF\xC6\xC8\xBC\xC7\x91\x8A\xAA\xB0\x8D\x88\xC9\xBA\x1D\xEC\x9F\xA6\xA4\xA3\x22\x49\x9E\xC8\xC7\xEF\x8E\xCD\x8E\x23\xD9\xB5\x3D\xA6\xC5\xC7\x7F\x0B\xCA\xC2\xEF\xB2\xB3\x40\x22\x9A\xCA\x8C\x84\xC8\xB2\x3E\xD0\xB0\x51\x8D\xB2\x20\x99",
			"\xA5\x27\xC8\x8B\x90\xCD\x1D\xF2\xCE\x8C\x3A\xF4\x26\xCE\x62\xA2\x20\x9D\xCB\x9B\xCE\x0D\xF0\xC6\xCF\x1B\xC6\x23\x32\xF7\xC2\xAB\x42\xD6\xA8\xCF\xC4\x3E\x72\x9F\x88\x93\x25\x3E\xBD\x8C\x93\x6A\x93\xBC\x18\x90\xD1\xC9\x84\x24\xCB\xB2\x34\xD4\xC6\x7F\xA3\x2B\x98\x1A\xDD\xD2\x21\xCB\x9B\xD3\x5C\x8A\x24\xC7\x6F\xA5\xD2\xB7\x7E\xC0\x8F\xA5\x8C\xB2\xD3\x4A\xC6\x23\xD5\x3A\x2C\xA4\x00\x11\xD2\xB5\x81\x32\xD4\xD6\x96\xC0\xD1\x03\x0A\x28\xD6\x07\xC3\x23\xD7\x09\x3D\xD7\x98\x80\xD2\xD9\x4F\x81\xDE\xD5\xC3\xDE\xCF\x85\x0B\x35\xD6\x81\x0B\xDE\x20\xF3\xB0\xD7\x48\x24\x46\x21\x19\x49\x26\xDA\x06\x2A\x4A\x9F\xD7\x47\xD9\x84\x1C\xDE\x20\x61\x49\x20\x9A\x06\x2A\x8D\x70\xE0\xD9\x22\x71\x49\xDD\x42\x72\x49\x20\x0B\x00\xD4\xC6\x23\x27\x9F\x7A\x08\x90\xD8\x40\xC9\x21\x07\x5E\x88\x91\x1F\xCF\xD6\xDF\x81\x3A\x01\xDF\x16\xBE\xD8\xA0\x9C\x9B\x06\x80\xD0\xB9\x20\xEB\x5E\xCC\x27\xBC\x06\xE0\x68\xCA\x20\x06\x03\xEA\x21\x0F\x0D\xE3\x20\x4E\xB1\x52\xE1\xEE\x28\x93\xAC\x18\xEA\x41\x3E\xA2\x01\xE2\x09\x3E\x04\xC5\xD9\x8A\x21\x4F\x5C\xE6\x20",
			"\x3F\x03\xE5\x40\x6A\x8B\x03\x7E\xC9\x20\x08\x2A\xF3\xD6\x42\x2D\xEE\xE5\x81\x01\x09\xE6\xB0\xC9\x59\xCD\x82\x22\x08\x9C\xCA\x22\xE7\x3B\xE0\x03\x10\x31\xE0\x8C\x1A\x01\xE9\x20\x44\x11\xE4\xC1\xA0\xE5\x3D\x3E\x9D\x67\xE4\x26\x48\x93\x0F\x4C\xE6\x44\x58\xFA\x58\xEA\x02\x25\x09\xCC\xEA\x83\x60\xAC\xC1\x26\x08\x3E\xE9\x21\xC1\x5E\xE0\x01\x23\x1B\xEA\x21\x0E\x64\xEC\x12\x31\xE5\x0E\x40\xEE\xC9\x37\x5A\x43\x24\x22\xFA\xDE\x3D\x6A\x98\x52\x4B\x59\xD7\x71\x89\xCC\xDA\x40\x2D\x6A\x88\xAC\x8E\xAA\x40\xA5\xFD\xE1\x74\x58\xEF\xE8\x3A\x6A\x88\xBC\x71\x5A\x4E\xBE\xC5\xE2\x65\xD8\xF1\x5A\x4B\x9A\xE6\xCC\xC3\xEB\x33\xBA\xDE\x8B\xFD\x7D\xD4\x60\x87\xF1\xEB\x1A\x4D\xDE\x7B\xEF\x22\xFA\x72\xE4\xD5\x80\xE5\x3A\x4B\xDA\xC6\x21\xE7\xB6\x6E\xBF\xD9\x99\xF2\x41\xE6\xC1\xF0\xE6\x7E\xB2\xD6\xF4\x1A\x4B\xDC\xB2\xF8\x7C\x33\x9F\xA0\xEE\xF7\x2C\xDA\xF5\x0A\x35\x4F\x96\xD3\x5D\x8E\x59\xEE\xF6\x38\x5A\x42\x51\xE5\xC2\x39\xEF\x5A\xAF\x9C\xF0\x0A\x5A\x02\xCC\x09\xFA\x20\xD0\xC2\x23\xD0\xEB\x3A\x48\xCD\xE7\xB1\x74\x7E\xD7\xFE\x3D\x5A\x4C\x53",
			"\xF2\xDA\x44\xDB\x81\x31\xF7\xEE\xEE\x2E\x53\xF8\xEE\x39\xF5\x81\x18\xDE\x44\x5A\x5E\x02\xEA\x5F\xD3\x21\xF6\xE8\xF9\x79\x22\x67\xFD\x40\x7A\xFB\x64\x2D\x5F\x04\xD7\xEE\x13\x5F\xE5\x6C\x7B\xD0\x1A\x25\xA2\x2E\x70\x09\x1B\x71\xC0\x71\x5C\xC8\x62\x10\xB8\x77\x49\xE0\x7E\x1E\x2A\x04\x80\xD7\x1E\x7D\x5D\x48\x6E\x04\x51\x81\x0A\x22\x2C\xC3\x75\x1E\xE5\x74\x72\xE2\x64\x81\xC2\x1A\x25\x40\x75\x71\x17\x1A\x3E\xEF\x7D\x66\x0A\x1E\x6E\xEB\x6A\x81\x0D\x41\x35\x2C\x86\x10\xF2\x70\x7D\xE5\x13\x03\x18\x26\x74\xEB\x7D\x6E\x0A\x1F\x7F\x34\x86\x22\xDF\x23\x2D\x09\x7C\x7D\x0A\x21\x83\x03\x1A\x29\x3D\x83\x2F\x18\x28\x2F\x39\x86\x10\xC2\x76\x10\xBF\x70\x7F\x9A\x78\x33\x4D\x83\x10\x33\x87\x7A\xEE\x17\x75\x42\x86\x10\x3A\x02\x33\x53\x82\x10\x3C\x86\x85\x0A\x2B\x03\x18\x2D\x75\x59\x86\x22\x5D\x81\x10\x46\x80\x86\xE5\x13\x76\x65\x82\x10\x3E\x02\x33\x80\x29\x10\xD2\x77\x84\xF9\x3A\x7B\x71\x85\x5A\x6A\x86\x22\x53\x7D\x81\x26\x24\x7F\x2A\x89\x10\x77\x86\x6B\x2E\x86\x22\x14\x3C\x87\x98\x2F\x80\xAA\x4A\x10\x81\x8F\x87\x79\x88\x29\x27\x39",
			"\x10\x9C\x43\x34\x86\x81\x10\x44\x84\x18\x0A\x1A\x7C\x78\x80\x85\x0A\x23\x35\x93\x8B\x32\x98\x81\x7A\x03\x1F\x89\x02\x15\x7B\xD9\x7E\x1E\x5A\x3D\x89\xE8\x1B\x7D\xA0\x82\x10\xA2\x89\x88\x74\x8B\x32\x63\x30\x89\x0A\x10\x37\x9D\x8A\x7E\x06\x1C\x49\x73\x8E\x84\x83\x87\x37\xAA\x39\x8B\x54\x8B\x8B\x7D\x3A\x3E\x87\x3B\x84\x03\x1E\x8B\x5E\x80\x8C\x2B\x3C\x38\x9D\x8A\x39\xC4\x82\x10\xC6\x88\x86\xC8\x88\x1E\x9C\x3D\x89\xA9\x3D\x8C\x01\x1A\x8A\xCE\x81\x8D\xE6\x36\x33\xD8\x81\x10\xAD\x8D\x7F\x51\x82\x32\xE2\x7A\x8B\xAF\x88\x1E\xAC\x36\x8D\x2B\x33\x8E\xBF\x85\x8E\xEB\x1E\x3A\x9D\x89\x3B\xE8\x8A\x8E\xC7\x8C\x8E\xC4\x1F\x05\xEA\x34\x3C\xF1\x8A\x10\x69\x8A\x89\xE5\x1C\x3C\x9D\x82\x3D\xE8\x86\x8B\x03\x1F\x84\xF7\x75\x1E\xD4\x38\x8E\xE8\x12\x90\x02\x15\x85\xFC\x86\x22\xDA\x3D\x89\xE9\x31\x90\x3B\x8A\x8D\xC4\x19\x06\xEA\x30\x3F\x12\x99\x10\xFB\x85\x90\x26\x2C\x06\xEA\x35\x3F\xE8\x8C\x90\x02\x1B\x88\x91\x71\x8E\x6E\x3F\x85\x03\x12\x8F\x25\x98\x7F\x6E\x3B\x91\x01\x1A\x90\x2B\x9F\x82\x38\x36\x72\xE4\x8D\x88\xF1\x2B\x3F\x08\x9B\x1E",
			"\x34\x9B\x8E\x36\x9B\x32\x02\x4D\x89\x07\x48\x8E\x3B\x93\x8F\x3D\x98\x1E\x09\x4D\x89\x6D\x72\x94\xFA\x84\x91\xC6\x16\x07\xEA\x38\x07\x32\x3F\x71\x2D\x84\x8F\xC6\x19\x07\xAA\x32\x95\x32\x8C\x94\xB9\x1A\x07\xEA\x3C\x07\x51\x93\x91\x54\x99\x1B\x7D\x0A\x3E\x7F\x0F\x95\x1A\x9A\x95\xD0\x10\x08\xEA\x32\x08\x32\x37\x80\xE6\x78\x96\xD7\x13\x08\x22\x83\x12\x2E\x90\x00\x88\x4E\x96\x8C\x8D\x90\x98\x25\x08\xAD\x48\x08\xEA\x33\x94\xAE\x86\x10\x25\x0B\x11\x70\x9F\x40\x2A\x3E\x2A\x09\x1B\x2A\x61\x96\x3D\x6E\x37\x71\x06\x1A\x98\x45\x9B\x1E\x8A\x03\x97\xEE\x1A\x80\x03\x10\x99\x7A\x91\x2F\x8C\x04\x99\x0A\x26\x11\x09\x1C\x7F\xB6\x7E\x1E\x8E\x00\x65\xC6\x18\x97\x81\x93\x10\x9E\x9B\x80\x91\x94\x1C\x91\x00\x80\x09\x15\x09\xEA\x33\x98\xB2\x89\x10\xBE\x2F\x99\x85\x93\x12\x97\x0E\x9A\xE5\x16\x99\x34\x4A\x10\xB5\x96\x10\xC7\x2B\x98\xFF\x3E\x36\xBF\x9B\x8A\x31\x96\x22\x9B\x0D\x80\x01\x10\x0A\xEA\x3C\x81\x08\x81\x2C\x60\x27\x9B\x0A\x12\x0A\xBA\x96\x22\xD2\x24\x6E\x0A\x1E\x9C\xC6\x90\x8E\x0A\x26\x0A\xCA\x90\x00\xAB\x0A\x3E\x3F\x8F\x9C\x03",
			"\x11\x9C\x06\x13\x81\xC2\x92\x1C\xAD\x0A\x3A\xE6\x93\x10\x2F\x02\x9D\x09\x1E\x0A\xEA\x30\x0B\x32\x35\x82\x02\x1D\x9E\x1C\x9A\x77\xFA\x91\x10\xF6\x91\x10\xDA\x99\x9F\x75\x8B\x9F\x00\x0F\x9E\xB4\x90\x9F\x32\x96\x1C\x10\x79\x10\xE8\x9B\x9A\xC6\x11\x0B\xAA\x39\xA0\x06\x14\xA0\x0C\xA9\x1B\xB2\x0A\x3E\xB4\x02\x33\xD7\x9F\x96\xE9\x93\x12\xB5\x05\x9D\x98\x2B\x85\xB3\x96\x10\x19\xA9\x97\x00\xAB\x32\xB9\x0F\x9D\xBE\x0A\x3E\x6C\x84\x42\x0A\x16\x83\xB6\x9B\xA1\x0A\x10\x0C\xA4\x93\x31\xAD\x4E\xA2\xAA\x99\x99\x2B\x33\x0C\x1E\xA1\x10\xC7\x0A\x3E\x31\x3D\x6D\x06\x18\x83\x06\x15\x2D\x30\xA9\x10\xC9\x0A\x3A\x42\xA3\x10\xE3\x98\xA3\xE8\x1A\x0C\xEA\x3C\x0C\x32\x3B\xA4\x02\x16\xA3\x4C\xAB\x8D\x5A\x21\x84\x03\x14\xA4\x13\xA0\x1D\xCD\x0A\x3A\x58\xA2\x10\x52\xA7\x9C\x98\x2E\x0C\xEA\x30\x0D\x32\x34\x2F\xE7\x65\xA4\x06\x11\x0D\x9C\x96\x10\x9C\x8D\x86\x01\x18\xA6\x63\x5A\xA6\x03\x13\x0D\x6D\xA3\x10\x55\x33\x2D\x72\xA3\x8A\x06\xA3\x10\xD5\x07\xA7\x02\x17\x8A\x70\xA0\x00\x7B\xA7\x9A\x25\xA8\x1E\xD7\x0D\x4A\xDA\x0A\x3E\x5E\x3D\x89\x58\x83",
			"\x10\x4A\x8B\xA5\xD7\x1C\x0D\xAA\x30\xA2\x06\x15\x9C\x87\xAB\x1E\xDD\x00\x6A\xEE\x15\x36\x9D\x86\xA9\x03\x14\xA5\x99\xA4\x1C\xE7\x0F\x7C\xE5\x14\x8B\x83\xA2\x86\x09\x11\xA9\x55\xA4\x1C\xF3\x00\xA8\xF1\x2A\xAA\x5A\x8D\xA7\x98\x25\x0F\x32\x34\x86\x90\xA4\xAB\x01\x16\x0F\xAA\x3B\xA2\x02\x1C\xAA\xA3\xA6\x1C\xF7\x0A\x3A\x6F\x80\x88\xBA\xA0\x00\xF8\x0D\x6C\xF1\x23\x37\xD3\x25\xAC\x97\xA7\xAC\xFE\x0C\xA9\x0A\x28\x37\x9D\x8E\xAC\x03\x10\x93\xDC\x95\x1E\x08\x0E\x45\xFA\x43\x12\x80\x3D\xAC\x0A\x1A\x92\xD9\xA6\x22\x0E\x0C\xAD\xEE\x13\x8C\x83\xA6\xAD\x53\xA7\xAC\x14\x0E\x45\xA4\x84\x1C\xCA\x83\xA8\x7B\x86\x10\xC0\xA2\xA6\xF1\x20\x02\x5E\x4B\x7A\x5A\x23\xAF\x03\x1A\xAE\xF6\xAB\x3E\x23\x12\x02\x31\x78\x1E\x69\x74\xAF\xC7\xA3\x02\x03\xB1\x35\x85\x86\x10\x24\x93\xAE\x98\x24\x02\xE6\xAA\x20\x95\x33\x2D\x0B\xB7\xAD\xC7\xAA\x02\x11\xB5\x1E\xCC\x83\xA8\x15\xB2\x10\xE2\xA1\x9A\x0A\x20\x03\x19\xB6\x22\xD3\x83\xA8\x4F\x76\xB0\x74\xA2\x10\x36\x09\xAF\xA1\x37\xB2\x36\x77\xAC\xE8\x18\x03\x09\xB4\x1C\x8F\x8A\x61\xB6\x7E\x46\x47\x70\x82",
			"\x8B\x66\x6F\x8C\x6E\x78\x26\x1E\xB3\x21\x1C\x68\x8D\x69\x16\xAB\x7F\x0F\x7D\x4A\x13\x76\x74\xA2\x93\x59\xB4\x9B\x49\x16\x98\x7C\x51\x64\x7A\x13\x9C\x4A\x13\xC6\x42\x73\x46\x4A\x46\x54\xB6\x6F\x90\x7B\x72\xDF\x96\xB5\xE4\x9C\xA2\x7C\x70\xA4\x60\xB2\xB6\x96\x8B\xA3\x00\x03\x5F\x5E\xB3\xB6\xD8\x91\xA2\x6B\xB3\xA8\x69\xBA\xB4\x01\x14\x67\x67\xBF\x42\xF3\x57\xB4\x75\xB3\x12\xF3\x5C\x68\x68\xB3\x12\xDD\xA7\x50\x60\x4C\x68\x7F\xBC\xB7\x18\x29\x4E\xD3\x24\xB8\x6E\xB0\x46\x3A\x10\x6B\x4E\x1A\xB8\x34\x10\x6B\x8C\x6E\xB8\x23\x10\xB9\xA6\x7A\x61\x5F\x6E\x12\x95\xB8\x12\x34\x68\xB6\x99\xB3\x12\x34\x67\xB4\x34\x63\xB5\x9F\xBC\xB9\xAD\x41\x1D\xF6\x64\x63\x58\xB6\xBA\xA2\xB5\xB8\xF6\x60",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr ) >>",
			L"[59][Module]<< !_PrimitiveExprOnly @ >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr ) >>",
			L"[61][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ ) >>",
			L"[62][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr ) >>",
			L"[63][Module]<< !_PrimitiveShared @ >>",
			L"[64][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ ) >>",
			L"[65][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType ) >>",
			L"[66][Module]<< !_PrimitiveTypeOnly @ >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubset3Tokens, ModuleParserStates, PrefixSubset3AstInsReceiver>(&PrefixSubset3TokenDeleter, &PrefixSubset3LexerData, &PrefixSubset3ModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[11][11] = {
			{0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, },
			{9, 1, 9, 9, 9, 9, 9, 9, 9, 9, 9, },
			{9, 9, 2, 9, 9, 9, 9, 9, 9, 9, 9, },
			{9, 9, 9, 3, 9, 9, 9, 9, 9, 9, 9, },
			{9, 9, 9, 9, 4, 9, 8, 9, 8, 9, 9, },
			{9, 9, 9, 9, 9, 5, 9, 9, 9, 9, 9, },
			{9, 9, 9, 9, 8, 9, 6, 9, 8, 9, 9, },
			{9, 9, 9, 9, 9, 9, 9, 7, 9, 9, 9, },
			{9, 9, 9, 9, 8, 9, 8, 9, 8, 9, 9, },
			{9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, },
			{9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset3::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset3::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset3::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset3::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
