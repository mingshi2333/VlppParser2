/***********************************************************************
This file is generated by: Vczh Parser Generator
From parser definition:PrefixSubset3
Licensed under https://github.com/vczh-libraries/License
***********************************************************************/

#include "PrefixSubset3ModuleParser.h"

namespace prefixsubset3
{
	void PrefixSubset3ModuleParserData(vl::stream::IStream& outputStream)
	{
		static const vl::vint dataLength = 3764; // 36003 bytes before compressing
		static const vl::vint dataBlock = 256;
		static const vl::vint dataRemain = 180;
		static const vl::vint dataSolidRows = 14;
		static const vl::vint dataRows = 15;
		static const char* compressed[] = {
			"\xA3\x8C\x00\x00\xAC\x0E\x00\x00\x0A\x00\x01\x82\x80\x09\x03\x82\x81\x82\x06\x89\x82\x86\x0A\x80\x86\x83\x07\x0A\x94\x0A\x83\x1A\x81\x16\x85\x18\x0A\xB7\x0A\x84\x13\x01\x87\x7F\x8F\x20\x9F\x8A\x80\x01\x91\x93\x91\x92\x20\xA7\xA8\x9F\x7A\x90\x95\x97\x92\x2F\xA6\x8A\x8B\x9C\x93\x9B\x95\x98\x29\xA3\x8A\x81\x06\x9E\x95\x9E\x98\x3F\xB2\x9E\x97\x91\xA1\x9F\xA0\x9F\x47\xC0\x89\xA2\xA6\x84\x98\x9C\x91\x45\xD0\x8B\xA6\xAD\xA4\xA1\x84\x9E\x57\x8A\x82\x1B\x91\xAD\x9B\xA8\xA9\x55\xC8\xA1\xAA\xA3\xB4\xA7\x80\xA7\x5D\xCF\x9E\xA5\xB4\xAF\xB2\xAA\xB6\x60\xEE\xA2\xB2\xB4\xB4\xBA\xB2\x81\x68\xDF\xAB\xB6\xBD\xB0\xBF\xB6\xBE\x71\xFE\xB3\xA2\x8D\x89\xAE\xBD\x91\x04\x5C\x89\x85\x0A\xC0\xBB\xBC\xC1\x75\x90\xF7\xA1\x89\xBE\xC6\xB5\xCB\x69\x99\xC7\xDA\xC6\xCC\xCC\xC1\xC7\x94\xFF\x92\xDD\xB1\xD3\xC1\x80\x86\x86\x9D\xDB\xCB\xDA\xD5\xD7\xCE\xCC\xAC\xAF\xDE\xC3\xD1\xC5\xD1\xC8\xDB\x93\xA4\xA2\xC1\x87\x05\xC6\xD9\xD8\xB4\xA0\xFA\xC6\xD3\xE7\xD9\xE3\xDC\x95\xBF\xEE\xC1\xE0\xDB\xE4\xDC\xD2\x00\x08\x3E\xCC\xE3\xDF\xE5\xDB\xE3\xD0\xC9\xD4\xE0",
			"\xE6\xEA\xE2\xED\xEE\xCD\xCA\xE2\xFB\xEE\xE0\xEF\xEB\xEF\xE6\xDE\xFB\xC4\x8A\xAD\xE9\xF5\xF0\xE4\xE3\xE0\xEE\xF8\xF5\xFB\xF4\xFB\xC4\xF8\xC6\xFA\xF8\xE7\xFA\xFF\xFC\xFF\x7B\x71\x81\x7F\x00\x84\x7B\x03\x74\xF3\x5C\x7F\x78\x7D\x03\x99\x7D\x83\x79\xEB\x4C\x0D\x7A\x82\xFC\x50\x7E\x00\x82\x0B\x94\x8F\x82\x7A\x05\x82\x8D\x84\x81\x1E\xA1\x89\x6C\x44\xA9\x72\x79\x85\x79\x15\x90\x8F\x86\x83\x2B\xAA\x82\x88\x8B\x2F\x97\x70\x04\x86\x29\x9C\x81\x8E\x8D\x20\xB9\x80\x8E\x8E\x2E\xBC\x88\x8F\x8E\x40\xBD\x81\x93\x8F\x42\x85\x94\x93\x91\x23\x51\x04\x8F\x86\xF0\x49\x88\x88\x93\x0C\xAD\x88\x91\x94\x37\xA3\x42\x07\x92\x52\x8D\x97\x8A\x89\x35\x9A\x9D\x96\x42\x13\x18\x95\x94\x95\x3E\x9E\x9B\x7A\x44\x25\xB1\x7A\x9A\x93\x5C\x90\x9A\x85\x96\x0A\x55\x03\x85\x79\x17\x22\x95\x98\x99\x43\xA6\x90\x9F\x9B\x63\xBC\x99\x6C\x06\x18\x99\x0A\x41\x61\x4F\xBB\x95\xA1\x9F\x87\xB7\x9A\x80\x07\x18\x9D\x03\xA0\x9E\x46\xBA\x98\xA1\x9B\x86\x94\xA3\xA7\x9A\x00\x20\x06\x9D\x9E\x90\x82\x71\x0B\x9C\x26\x94\x49\x98\x9B\x98\x9F\x9E\x9C\xA7\xA7\x97\x74\x08\xA8",
			"\x98\xA6\x0B\xA7\x75\x27\x18\x88\x0B\xA3\xA9\x93\x95\xAE\xA4\x8A\x89\xA8\xAA\xAE\xD7\x6B\x0F\xAA\xAD\x06\x6C\x0F\xAC\xAE\xBB\xA6\x8D\x08\x86\x2E\x34\xAC\xAC\xB0\x96\xB9\xAD\xB1\xB1\x98\x98\x43\xA8\x00\x32\x0A\xBF\xB1\xA4\x9D\x84\xB8\xB7\xAD\xD9\x8A\x45\x0F\xB0\xDD\x9C\xB2\xBB\xB2\xDA\x8C\xB5\xAA\x9B\xE4\xAE\x76\x0C\xB8\xE3\x97\xB6\xB8\xA9\xF0\x9B\x98\xA6\x46\xD3\xA6\xA5\x78\x0E\x18\xB9\x06\xB7\xB9\x95\xBC\xB7\xA5\xBC\xF6\xA6\x8C\x0C\x86\x3D\x3B\xB0\xC0\xBA\xEE\xA5\xBA\xC1\xB8\xE5\x40\x1C\xB9\xBA\xED\xBE\xB9\x6D\x10\x0F\xC9\xCC\xC2\xC5\x11\xC7\xCD\xBD\xBC\x42\x15\xC2\xC4\xB4\x1A\xFF\xB2\xBD\xC8\xCE\x82\x43\x12\xC7\x24\xE0\xC3\xCB\xCA\x01\xDF\xCB\xB6\x41\x44\x28\xCC\xC8\xC2\x2E\xEF\xB3\xCF\xC6\x2B\xC5\x12\xCD\xCB\x29\xEF\xC8\xC4\xC4\x40\xE6\x86\x13\xCE\x34\xFD\xC6\xCC\x7A\x47\x04\xD8\xCC\xCF\x37\xE2\xCC\xD3\xD3\x45\xEB\xC8\x10\x86\x49\x0A\xDE\xD1\xD4\xE8\x4A\x16\xD5\xC9\x01\x4B\x1B\xD6\xCA\x50\xF8\xCC\x12\xCC\x4D\x18\x8E\x13\xD7\x3E\xF5\xCB\xC1\xC6\x4D\xDC\xDB\xCB\x13\x68\xC2\x70\x15\xDC\x6B\xC1\xD8\xA5\x14\x74",
			"\xD7\xCA\xDA\xDE\xF1\x92\x18\x87\x14\x79\xEC\xD1\xDB\xD5\x4B\xD1\xD4\x15\xE0\x76\xC6\xDA\x95\x15\x88\xFF\xCE\xE3\xDE\x82\xD8\xD2\xE4\x71\x56\x0D\xE0\xE5\xE2\x2B\xD7\x12\xCC\x16\x18\x99\x16\xE6\xE2\x7C\xED\xD0\xDB\xE4\x84\xE5\xEE\xD8\xD3\x5A\x1F\xE0\x03\x16\x18\x9C\x1A\xEB\xE0\xA7\xE4\xE1\xEC\xCE\x5D\x2F\xE2\xEC\x74\x5E\x2C\xA1\xBC\x18\xB6\xC5\xEE\xEE\xE9\xA3\xFF\xE9\x6D\x18\xBD\xC0\xF9\xD8\xE8\x91\xC2\xF0\x76\x18\xC5\xF3\xE2\xCB\x18\xAA\xE4\x18\x85\x19\xCD\xC1\xF6\xF3\xD1\x51\xE6\x15\xF7\xF1\xA2\xDC\xF0\xEE\xCA\x67\x1B\xF8\xF6\xF2\xDE\xF7\xE5\xF8\x71\x68\x3A\xED\xF7\xF8\x22\xEA\x18\x87\x1A\xEA\xCC\xDD\x18\x86\x6E\x22\xF5\xDF\xE3\xC8\xE5\x7F\x1A\xFD\xA1\xDF\xF7\xFB\xF5\x5A\x50\x0C\xFF\x6C\x61\x0E\x0C\x72\x0A\x75\x73\x18\x40\x1D\x03\x88\x72\xFF\x6C\x79\x37\x49\x18\x2B\x40\x5B\x2B\x31\x4E\x74\x20\x20\x09\x2E\x23\x67\x28\x3E\x30\x9A\x1C\x87\x33\x34\x24\x53\x40\x22\x81\x38\x0C\x86\x27\x83\x35\x77\x82\x42\x0C\x3A\x2E\x14\x9D\x3E\x83\x5D\x21\x86\xC1\x69\x36\x85\x81\x2E\x81\x3D\x89\x3A\x2C\x4D\x14\x86\x20\x16\x8B\x5A",
			"\x85\x19\x9D\x2A\x0F\xA0\x8B\x25\x1B\xB4\x23\x87\xBF\x5C\x87\x40\x12\x8F\x33\x1C\x9D\x83\x25\x4A\x82\x23\x10\xA9\x8B\x25\x1A\x87\x25\x2B\x51\x81\x20\x13\xC1\x39\x8A\x00\x1B\x8D\x3B\x46\x87\x88\x4A\x61\x82\x8D\x90\x0E\x8C\x88\x63\x91\x87\x4A\x67\x81\x38\x9A\x2C\x8F\x85\x6B\x8A\x8C\x4A\x6F\x89\x3C\x37\xB2\x8D\x24\x74\x85\x8C\x1E\xF7\x86\x8C\x3E\xA0\x25\x8B\x53\x86\x68\x10\x86\x2A\x83\xE0\x39\x8A\x8F\x7F\x9F\x57\x21\x88\x9F\x1F\x2E\x9F\x88\x87\x7E\x9F\x23\x22\x88\x90\x90\x0B\x95\x8D\x21\x5D\x24\x85\x40\x5D\x83\x91\x81\x13\x91\x24\x9A\x80\x00\x19\xA5\x26\x8B\x80\x25\x91\x3D\xA1\x8F\x91\x27\x82\x2C\x93\x95\x21\x95\x95\x28\x27\x97\x27\xA0\x21\x95\x51\xA1\x27\x94\xA7\x92\x85\xBD\x17\x99\x20\x58\xBB\x8A\x87\x50\x8A\x91\x24\x8D\x92\x98\x60\xB3\x8B\x98\x95\x95\x57\x2A\x81\x25\x91\xEE\x33\x92\x8C\x8E\x9D\x2B\x33\xC7\x81\x9A\xBD\x13\x9E\x8E\xC6\x85\x25\x32\xBF\x8C\x96\x42\x9D\x2E\x96\x65\x80\x9E\x18\xAF\x9D\x2A\x59\x9F\x9B\x98\xB5\x85\x9E\x42\x39\x95\x88\x74\xBF\x57\x94\xBE\x81\x26\x38\xC7\x83\x9E\x5D\x86\x21\x9E\x20\x26",
			"\x9D\x0B\xEE\x99\x21\x79\xB8\x97\x9C\xD9\x80\x97\x3B\xF1\x7D\x9D\x80\xA0\x25\x9E\xAE\x84\xA1\x2C\x8A\x23\x9A\x84\xA8\x21\x9D\x7A\x3F\x9F\x3E\x86\xAF\x23\x54\xAA\x9D\x97\x00\xAF\x89\x1A\x94\xAF\x1E\x72\x91\xA4\xA1\x19\xA8\x8D\x49\x10\xAE\x30\x89\x8E\x36\xA1\x23\xA3\xA0\x46\x93\xAA\xA3\x92\x28\xA2\xA0\x2B\xA5\xA4\x48\xAC\xA2\xA4\x98\xA7\x87\xA2\x06\x2C\x9F\x46\xAD\xA6\xA7\x25\xB8\xA3\x82\xD2\x83\x9B\x35\xF1\x8C\xA3\xA1\xA8\x23\x9B\xEE\x4B\x98\x7B\x7A\x21\x91\x3A\x85\xA4\xA7\x20\x2D\xA8\x23\x9F\x2F\xA4\x90\x06\xAF\x97\x50\xB2\x92\x50\xDB\xA5\xA8\x64\xAB\x86\x92\x0B\xA1\x8A\x35\xDC\xA9\xAB\x7F\x17\xAD\x8F\x5D\xA9\xAD\x59\xE7\xA6\xAA\xAF\x95\x82\x99\xDD\x83\x21\x33\x90\x9A\xAD\x9A\xAD\xAD\xAE\x6D\x84\xAB\x5A\xE4\xA6\xAE\xAD\x9C\xA0\xA9\x54\x81\xAE\x37\xB4\xA9\xAF\x9D\xBD\xAD\xA3\x3A\x3F\xA3\x2E\x86\xB5\xB0\x97\xBC\x99\xB1\x25\x85\x9B\x5E\xF8\xA0\x8F\x63\x94\xB6\xA9\x96\xB3\xB2\x66\x87\xB0\xB0\x41\xB1\xAF\x8A\x63\xB7\xB3\x54\xE6\xAC\xAF\xC6\xA8\xAB\xB3\xA6\xA9\x93\x5B\xDC\x92\xB0\xB9\xA1\xA1\xB5\x54\xAF\xB2\x27\xBF",
			"\xA2\x21\xDE\x04\xB5\xB2\x8E\xBC\xA1\x28\xD3\x97\x94\xDB\x8E\x34\xAD\x7E\xA8\xB4\x6E\xA1\x25\x9B\xDF\xAE\xAE\x20\xAA\x9A\xAF\x61\xC0\xB4\x99\xD5\x89\xAF\xB3\xCC\x8F\xB7\x70\x87\xA3\x98\xE9\x22\xB3\xAA\xCC\xAC\xBB\x5C\xA3\xB2\xAB\xA9\x95\xAD\xA2\x90\xBF\x33\x29\xC9\xBC\xB1\xE9\x9F\x26\xBA\xC2\xB8\xB0\x56\xCB\xB3\x99\xED\x93\xAD\xBB\x8C\x9F\xBB\x3F\x70\xB8\x90\xF9\xBB\xB4\xB6\xBC\x22\x8B\x30\xF2\xB4\xBE\x3D\xB2\xBF\xBF\xD5\xA5\xB6\x79\xFF\x1E\xBC\x46\x9E\xA2\xA6\x09\x2D\xA1\x80\xD7\xBC\x91\xEC\xAD\xBB\x98\xFD\xA1\x9E\x6C\x90\xBA\xA8\xF2\xB9\xB5\xAC\xE8\xAC\xBC\x47\x85\xC8\x90\x8B\x8A\xB7\x9E\xD2\xAA\xBD\x48\x19\xC0\xB6\xD2\x9B\xC3\xC2\xA7\x38\xBC\x00\x3A\xA7\xC3\xC3\xA4\xC3\xC0\x0E\xCC\xC0\x22\x9C\xCA\x8F\x08\xE2\x8C\xBF\xFB\xA8\xC4\x00\x3C\xBA\x20\xDF\x9F\x36\xC6\xF4\x90\xC1\x8E\x9C\xA2\xBF\x17\xE2\xC7\xAE\x65\xB4\xC5\x19\x87\xC2\xBD\x99\xA7\xA3\xC1\xE9\xA3\xB6\x92\xE3\x9A\xA4\x10\xF7\xB7\xC8\xE7\xA2\xC0\x96\x84\xCA\xC6\x7F\xAB\x9A\xBF\x44\xC2\xC8\x47\xF0\x9A\xC4\x7C\x9F\x20\xC8\x34\x28\xCF\x4A\x6A\xC8\x24\x36",
			"\xE5\x26\xCD\xB7\x93\x86\x52\xA1\x9A\xA8\xB5\x27\x96\xCE\x0A\x26\xC9\x9A\xE2\xC5\xAC\x38\xD1\xAB\x98\x23\x3E\x71\x78\xDA\x83\xD1\x4D\xAA\x7F\xBE\xCE\xAB\x23\x0C\xF4\x8D\xA8\x1F\xD0\xB6\xC8\x46\xD3\xAF\x48\x27\x96\xC8\x4A\xDF\xCA\xAC\x83\xC7\x41\x42\x46\xCA\xD2\x83\x1C\xD0\x93\x85\xD7\x86\xA3\x89\xBD\xA9\x1B\x8D\xD5\xD0\x00\x12\x41\x82\xDF\xAD\x9E\x85\x2A\xD6\x20\x8C\xDD\xC4\xAA\x8D\x0E\xC9\x81\x25\xD2\x21\xB4\xCB\xD5\xA2\xF9\xB5\xD1\x58\xED\xD2\xD7\x3D\x92\xD5\xA1\x97\x4B\xD6\x51\x8A\x24\xD8\xC1\xC9\x23\xA8\xBA\x24\x44\x83\x33\x41\x21\xCF\xC6\x22\x92\x05\xD7\x4A\x60\xC3\x25\xDA\x06\x21\x4D\x42\x68\x40\xD6\x30\x5E\xDB\xDB\x71\x41\xDD\x42\x72\x49\x20\x0B\x28\xD6\xC8\x23\x34\xCF\x7A\x0F\x99\xD6\x54\xC9\x21\x07\x5F\x8F\x91\x17\xC8\xDE\xDD\x81\x3A\x01\xDE\xC2\xC6\x20\xB6\xE1\xB1\x95\x1D\x38\xDF\xD7\x06\x2B\x5D\xA1\xA1\x9C\x07\x7F\xC9\xDE\x20\x30\x08\xD5\x28\xBD\x06\xE1\x11\x8A\x21\x56\x03\xEE\x3F\x23\xB3\x51\xE2\x05\x5D\x8A\x04\x0A\xEA\x22\x0F\x0D\xE2\x21\x47\x9F\x55\xE2\x06\x3F\x04\xC7\x81\x24\x8F\x0D\x35\xD9\x21",
			"\x40\x03\xE7\x8E\x8A\x26\xE5\x93\xC3\x21\x08\x2A\xEB\xD9\xB2\x2E\xE2\x20\x21\x31\xE2\x21\x33\xF4\xE4\x00\x43\x0A\xE5\x1B\xB4\x02\xE7\x01\x24\x0A\xCA\xFD\xD9\xE2\x8B\xCA\x25\x63\x20\xE6\x47\x23\xBF\x05\xE9\xF2\x0B\xDA\x5F\x49\xE2\x21\x11\x2A\xE4\x8F\x81\x51\xE9\x20\x46\x17\xE5\x42\x05\x67\xEA\x00\x07\x0C\xEA\x0A\x2E\x61\xD7\xC8\x0A\xE5\x3A\x28\xD6\xCC\xC2\x3A\x4B\x48\x0F\x92\xDE\xF7\x05\xBE\x44\x5A\x5E\xC0\xE6\x1D\xBB\x64\x2D\x74\x8D\x8B\x37\x96\xC1\x6E\x08\xD5\x3D\xFB\x75\xB2\xA1\xC6\x34\x8E\xDE\xD0\x3A\x4B\xB9\x83\xF4\x7B\xBE\xDD\xEE\x7B\x64\xC9\x21\x57\xFE\xA2\x41\x4D\xAA\xDC\x71\x7E\xE9\x7E\x1B\x80\xF1\x37\x5A\x4D\xDC\x50\x89\x2D\xD9\xCD\xC3\xD7\x91\x46\xCB\xD8\x7A\x5A\x43\xDA\x2B\xD8\x73\xAE\x9D\xD0\xEE\x7B\x5A\xD8\xB9\xD0\x73\xAE\xF1\x98\x5A\x48\xB7\x8F\xF8\x73\xD4\xEC\x96\x3D\x5A\x44\xDE\xE9\x83\x25\x4F\x98\xB4\xF6\xF3\x03\x30\xF5\x40\x36\xF1\x5E\x2D\x42\x53\xB1\xC6\x32\xED\xF0\xAE\xD8\xF6\xF7\x1A\x02\x66\x82\xF8\xD7\xA5\x8A\xFA\x41\x96\xED\xF4\x6D\xF4\xC2\x20\x8B\x98\xFE\x3C\x46\x48\xFE\x6D\x9D\xE2\x20",
			"\xEB\xAA\xFA\x40\x47\x5F\xFA\x65\xA5\xE3\x21\xB4\xE4\xF5\x3C\x0F\x2A\x73\xDF\x02\x29\xFD\xEC\xFD\x71\x6B\xF1\xE2\xFD\xF9\x0A\x5F\x01\xAD\x98\x5D\xA8\x3A\xB6\xFE\xD0\x0A\x2A\x25\xA2\x27\x70\x03\x14\x71\xBB\x70\x5A\x04\x82\x10\xB3\x72\x10\xC4\x75\x77\xEE\x1A\x02\x97\x76\x21\x18\x2B\x80\x01\x12\x7C\x0E\x8A\x20\xC2\x2E\x7B\x98\x21\x7E\x84\x60\x6E\x1A\x85\x7C\xEE\x19\x73\x0E\x79\x10\xD2\x27\x80\x01\x1B\x7E\xB7\x75\x6E\xE2\x64\x7D\x0D\x41\x35\xE6\x69\x10\xEE\x71\x80\xEE\x13\x03\x18\x2F\x73\xE7\x77\x1D\x2F\x86\x10\xFA\x72\x83\x0A\x2F\x2D\xD3\x22\x70\xD7\x75\x1E\x39\x83\x10\x9A\x2C\x83\xE5\x14\x2F\x41\x83\x10\xF8\x27\x83\xC2\x1D\x7B\x06\x1A\x7B\xEC\x78\x3F\xEB\x33\x12\x4E\x83\x10\x31\x8C\x82\x26\x20\x75\x49\x82\x10\x3A\x02\x33\x55\x82\x10\x3B\x88\x85\x98\x2B\x03\x18\x26\x75\x5B\x81\x2F\x5F\x81\x10\x45\x82\x86\xF1\x2C\x75\x67\x80\x00\x3E\x02\x33\x80\x29\x10\xCF\x76\x84\x52\x8C\x34\x73\x86\x10\x0D\x83\x7A\xEE\x1C\x74\x1F\x8B\x32\xF0\x70\x80\x06\x19\x87\xCB\x76\x87\x98\x24\x31\x7F\x88\x1E\x14\x80\x00\x5D\x44\x88\x29\x8C",
			"\x86\x2B\x37\x32\x09\x11\x4A\x43\x3F\x87\x43\x84\x18\x0A\x17\x7C\x7A\x88\x7F\xE5\x13\x35\x89\x8B\x1E\x9A\x80\x7C\x02\x11\x8A\x02\x16\x81\x7C\x8A\x20\x5A\x3F\x89\xC4\x16\x7D\xA2\x81\x10\xA4\x82\x88\x51\x88\x29\x63\x33\x89\x0A\x10\x37\x7F\x86\x7E\x06\x11\x4A\x75\x8F\x84\x9C\x86\x22\x78\x3C\x84\x5A\x2B\x8B\x56\x8D\x8B\x98\x2E\x37\x7F\x87\x38\xC0\x8A\x10\xC2\x80\x86\xC4\x81\x2F\x8C\x3F\x87\x9A\x39\x8C\x74\x8A\x10\x6B\x81\x8B\xF1\x2C\x39\x7F\x89\x3A\xD2\x86\x10\xAC\x82\x10\xCB\x80\x82\xC9\x32\x32\xDD\x8E\x8A\xCD\x83\x85\xA1\x3E\x7D\xBC\x86\x88\xF1\x2C\x3A\xDB\x86\x22\xE8\x83\x8C\xEA\x8B\x32\xAE\x3F\x87\xB9\x3D\x8E\x02\x1F\x8E\xCC\x81\x8F\xE8\x1F\x05\xEA\x34\x3C\xF6\x81\x10\xF8\x8A\x86\xE5\x88\x1E\xCC\x3F\x87\xD2\x3F\x8F\x00\x08\x8B\x03\x10\x85\xF3\x7A\x20\xD4\x38\x90\xE8\x1A\x90\x02\x17\x85\xD6\x8B\x32\xDA\x3F\x87\xE9\x38\x90\x12\x91\x10\x61\x85\x91\xE8\x19\x06\xEA\x30\x3F\x1A\x94\x8D\x03\x9B\x1E\x6C\x0A\x3E\xF5\x38\x90\x14\x92\x10\x8E\x80\x8E\x2D\x88\x33\x1D\x97\x8F\x25\x94\x3E\x36\x35\x8D\x02\x1B\x91\x17\x8F\x92",
			"\x22\x3F\x71\xE9\x80\x89\xE8\x1B\x3F\x10\x9B\x1E\x3C\x90\x8F\x3E\x9B\x1E\x02\x4F\x87\x07\x48\x90\x43\x99\x8F\x45\x94\x1C\x09\x4F\x87\x66\x7A\x94\x24\x9A\x8F\xEB\x16\x07\xEA\x38\x07\x32\x38\x71\xE3\x63\x93\xC6\x19\x07\xAA\x3A\x95\x06\x1B\x92\x2E\x96\x22\x7A\x0A\x3E\x7C\x09\x95\x0A\x11\x93\x63\x98\x29\x7D\x0A\x3E\x7F\x08\x96\x09\x16\x93\x6B\x91\x2F\x80\x0A\x3E\x82\x02\x33\x03\x83\x10\xFF\x79\x93\x26\x23\x08\x11\x87\x1D\x72\x9E\x45\x13\x1F\x97\x69\x7E\x1E\x85\x03\x43\x88\x0A\x3E\x4B\x90\x8B\x02\x15\x02\x1B\x1C\x95\xCE\x3E\x36\xAE\x29\x10\xAB\x24\x95\x34\x9A\x25\x10\x76\x10\x95\x9D\x94\xC6\x1A\x08\x84\x9A\x25\x06\x83\x10\x9B\x9E\x91\xEB\x1C\x08\x9F\x9E\x1E\x16\x19\x10\x7B\x97\x8A\xE5\x1E\x08\x72\x6B\x1E\x79\x9F\x88\x03\x19\x9A\x26\x8C\x97\x98\x21\x09\xFB\x71\x10\x95\x0A\x3E\x8E\x94\x8B\x09\x1E\x2B\xAA\x90\x99\xD0\x17\x09\xB9\x9B\x32\xA1\x92\x10\x74\x40\x9C\x06\x17\x2C\x96\x90\x40\xEE\x1A\x9C\xAD\x86\x9B\xF1\x2B\x09\xAC\x66\x10\xA0\x0A\x3E\x19\x89\x80\x01\x19\x9D\x7A\x92\x9C\xD7\x12\x0A\xC5\x98\x1E\x25\x83\x5B\x09",
			"\x1C\x9D\xB2\x9D\x90\xE5\x16\x0A\xD5\x93\x10\xAB\x0A\x3E\x3E\x8A\x9D\x00\x0C\x9C\x06\x10\x81\xCD\x99\x1B\xAD\x0A\x3A\xF2\x93\x10\x2F\x0E\x9D\xC2\x1E\x0A\xEA\x30\x0B\x32\x32\x82\x02\x19\x9F\xE8\x97\x87\x51\x32\xA0\xDB\x9C\x9F\x94\x7B\x32\xFB\x9F\x9B\x0A\xA4\x7F\xC4\x19\x70\x09\x14\x9F\x9C\x99\x1B\xB1\x0A\x3A\x12\xA6\x10\x0D\xA5\xA1\xD0\x12\x0B\xEA\x34\x0B\x32\x33\x9E\xF7\x75\x9F\xD0\x15\x0B\xE1\x9B\x1E\x5D\x8E\x9B\x06\x12\xA2\x8C\x93\x97\x2B\x39\x0B\xEB\x92\x10\xBE\x0A\x3E\x6E\x84\x9E\x06\x14\x83\xC1\x94\xA2\xD7\x10\x0C\xAF\x94\x1C\x88\x89\x8B\x0A\x18\xA3\xB5\x9C\x9A\x26\x23\x0C\xC5\x97\x0C\xEA\x31\x33\xD6\x62\x10\x36\x86\x10\xD5\x2A\xA3\xC2\x19\x0C\xAA\x3D\xA4\x03\x1F\x9E\xA4\x94\x1C\xCA\x0A\x3E\xCC\x02\x33\x56\xA2\x10\x42\xA7\xA5\xCE\x9A\x20\x40\x83\x10\x4F\xAC\xA1\xD7\x1D\x0C\xAA\x33\xA6\x02\x1D\xA5\x2E\xA8\x1E\xCE\x0A\x3E\xD0\x02\x33\x48\x8D\x9D\x50\xA3\x12\xD1\x07\x9A\x09\x1E\x89\x6F\x83\xA7\x0C\x8F\xA0\x09\x13\x0D\x78\xA6\x10\x55\x33\x2D\x7C\xA5\x81\x7E\xA6\x10\xD5\x01\xA8\x03\x19\x8A\x7B\xAA\xA8\x14\x6B",
			"\x1E\xD7\x03\x43\xDA\x0A\x3E\x5E\x3F\x87\x5A\x8A\x84\x87\xA3\x10\xDC\x0A\x3A\x29\xA6\x10\xD0\x95\xA0\x98\x2D\x0D\xD3\x76\x22\x65\x3F\x87\x9D\xA3\x10\x5F\xA0\xAA\xF1\x27\x0E\xCC\x7A\x20\xB6\x8F\x86\x64\x89\x10\x4B\x86\xA6\xC2\x13\x0F\x8E\xA1\x2F\xB1\xA6\x10\xA7\xAA\xAA\xE6\x89\x10\xF5\x02\x33\x66\x88\xA9\x75\xAA\x10\xF6\x0A\x3A\x35\xA2\x10\xB3\xA0\xA6\xB9\x17\x0F\xAA\x31\x87\x09\x1D\x92\xD2\x9B\x32\xF8\x0A\x10\xF3\x43\x12\x73\x33\x2D\xCE\xAE\xA9\x99\xA2\x10\xFE\x03\xAA\x77\x3A\x3E\xD9\xA3\x10\x38\x94\xA4\x98\x28\x00\x5F\x45\xAD\x0A\x10\x38\xD8\xAA\x10\x01\x91\xAD\xE8\x1E\x00\xE7\xAE\x1E\xC8\x8F\x86\xE1\xAE\xA5\xDB\xA1\x10\x14\x0F\x45\xA6\x8B\x1E\xCF\x8F\x86\x7E\x86\x10\xC9\xAC\xAB\xE8\x10\x02\x5F\x48\x76\x5A\x2F\xAF\x03\x15\xAF\x6D\xA1\x35\x22\x0A\x72\xE8\x12\x76\x00\xB7\xAF\x00\x03\x02\x0E\xB1\x35\x3F\xA3\x10\xD0\xA4\xAE\xF1\x24\x02\xF1\xAA\x20\x95\x33\x2D\x17\xB7\x93\x12\xBA\x02\x1D\xB5\x1E\xD1\x8F\x86\x21\xB0\x90\x12\xB0\x03\x25\xB6\x22\xD8\x8F\x86\x48\x71\xB1\xC3\xA9\x10\x36\x05\xB0\xA1\x31\xB3\x2F\x72\xB1",
			"\xE8\x18\x03\x15\xB4\x1C\x92\x83\x68\xA3\x77\x44\x40\x7D\x71\xEE\x6F\x48\x3A\x16\xB4\x87\x7C\x12\x49\xBF\x0F\x46\xB3\x12\x06\xB8\x76\xCD\x55\x68\x6F\x71\x9D\x3A\x13\xB5\x98\x87\x18\x92\x7F\x50\xEE\x61\x4A\x3A\x1C\xB5\x88\x19\x16\xD7\x44\x47\x3A\x12\xB6\x5F\xB5\x6C\x2B\x76\xB6\x89\x7D\x6D\x68\xB5\x9C\x67\xB0\xA4\xC5\x9D\x54\x6D\xB6\xA3\x6A\xBE\xB6\x4B\xAD\x81\x75\xBC\x88\x23\x10\x64\x00\x08\x66\x4D\x5D\x45\x7B\xBA\x3E\x7F\xB3\x2D\x81\xB1\x6A\x69\x15\x4F\x79\x73\x12\x87\xB4\xAD\x18\x26\x6C\x82\xB9\xB8\x00\x73\x68\xA2\x77\x13\x91\xBB\x12\xCB\x66\xB4\x95\xB3\x12\x97\xB9\x6F\x83\x6A\x67\x37\x1C\xB9\x2B\x16\x64\x70\xB0\xBA\x23\x16\x64\x7E\xB6\x64\x5C\xB6\xBA\xA3\xB3\x43\xD1\x1E\x6E\x46\x62\xB6\xAD\xB9\xBA\x82\xBE\x6E",
		};
		vl::glr::DecompressSerializedData(compressed, true, dataSolidRows, dataRows, dataBlock, dataRemain, outputStream);
	}

	const wchar_t* ModuleParserRuleName(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"_Name",
			L"_PrimitiveShared",
			L"_PrimitiveTypeOnly",
			L"_PrimitiveExprOnly",
			L"_LongType",
			L"_Expr0",
			L"_Expr1",
			L"_Expr",
			L"Module",
		};
		return results[index];
	}

	const wchar_t* ModuleParserStateLabel(vl::vint index)
	{
		static const wchar_t* results[] = {
			L"[0][_Name] BEGIN ",
			L"[1][_Name] END [ENDING]",
			L"[2][_Name]< ID @ >",
			L"[3][_Name]< _Name \".\" @ ID >",
			L"[4][_Name]< _Name \".\" ID @ >",
			L"[5][_Name]< _Name @ \".\" ID >",
			L"[6][_PrimitiveShared] BEGIN ",
			L"[7][_PrimitiveShared] END [ENDING]",
			L"[8][_PrimitiveShared]<< !_Name @ >>",
			L"[9][_PrimitiveTypeOnly] BEGIN ",
			L"[10][_PrimitiveTypeOnly] END [ENDING]",
			L"[11][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveShared >",
			L"[12][_PrimitiveTypeOnly]< \"const\" @ _PrimitiveTypeOnly >",
			L"[13][_PrimitiveTypeOnly]< \"const\" _PrimitiveShared @ >",
			L"[14][_PrimitiveTypeOnly]< \"const\" _PrimitiveTypeOnly @ >",
			L"[15][_PrimitiveExprOnly] BEGIN ",
			L"[16][_PrimitiveExprOnly] END [ENDING]",
			L"[17][_PrimitiveExprOnly]<< \"(\" !_Expr \")\" @ >>",
			L"[18][_PrimitiveExprOnly]<< \"(\" !_Expr @ \")\" >>",
			L"[19][_PrimitiveExprOnly]<< \"(\" @ !_Expr \")\" >>",
			L"[20][_LongType] BEGIN ",
			L"[21][_LongType] END [ENDING]",
			L"[22][_LongType]( lrp:Shared @ | lrp:Type )",
			L"[23][_LongType]( lrp:Shared | lrp:Type @ )",
			L"[24][_LongType]< _LongType \"(\" @ { _LongType ; \",\" } \")\" >",
			L"[25][_LongType]< _LongType \"(\" { _LongType ; \",\" @ } \")\" >",
			L"[26][_LongType]< _LongType \"(\" { _LongType ; \",\" } \")\" @ >",
			L"[27][_LongType]< _LongType \"(\" { _LongType @ ; \",\" } \")\" >",
			L"[28][_LongType]< _LongType \"*\" @ >",
			L"[29][_LongType]< _LongType \"const\" @ >",
			L"[30][_LongType]< _LongType @ \"(\" { _LongType ; \",\" } \")\" >",
			L"[31][_LongType]< _LongType @ \"*\" >",
			L"[32][_LongType]< _LongType @ \"const\" >",
			L"[33][_LongType]<< !_PrimitiveShared @ >>",
			L"[34][_LongType]<< !_PrimitiveTypeOnly @ >>",
			L"[35][_Expr0] BEGIN ",
			L"[36][_Expr0] END [ENDING]",
			L"[37][_Expr0]( lrp:Shared @ | lrp:Expr )",
			L"[38][_Expr0]( lrp:Shared | lrp:Expr @ )",
			L"[39][_Expr0]<< !_PrimitiveExprOnly @ >>",
			L"[40][_Expr0]<< !_PrimitiveShared @ >>",
			L"[41][_Expr1] BEGIN ",
			L"[42][_Expr1] END [ENDING]",
			L"[43][_Expr1]< _Expr1 \"(\" @ { _Expr ; \",\" } \")\" >",
			L"[44][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" @ } \")\" >",
			L"[45][_Expr1]< _Expr1 \"(\" { _Expr ; \",\" } \")\" @ >",
			L"[46][_Expr1]< _Expr1 \"(\" { _Expr @ ; \",\" } \")\" >",
			L"[47][_Expr1]< _Expr1 @ \"(\" { _Expr ; \",\" } \")\" >",
			L"[48][_Expr1]<< !_Expr0 @ >>",
			L"[49][_Expr] BEGIN ",
			L"[50][_Expr] END [ENDING]",
			L"[51][_Expr]< _Expr \"*\" @ _Expr1 >",
			L"[52][_Expr]< _Expr \"*\" _Expr1 @ >",
			L"[53][_Expr]< _Expr @ \"*\" _Expr1 >",
			L"[54][_Expr]<< !_Expr1 @ >>",
			L"[55][Module] BEGIN ",
			L"[56][Module] END [ENDING]",
			L"[57][Module]<< !_PrimitiveExprOnly ( lri:_Expr @ ) >>",
			L"[58][Module]<< !_PrimitiveExprOnly @ ( lri:_Expr ) >>",
			L"[59][Module]<< !_PrimitiveExprOnly @ >>",
			L"[60][Module]<< !_PrimitiveShared ( lri:_LongType @ | lri:_Expr ) >>",
			L"[61][Module]<< !_PrimitiveShared ( lri:_LongType | lri:_Expr @ ) >>",
			L"[62][Module]<< !_PrimitiveShared @ ( lri:_LongType | lri:_Expr ) >>",
			L"[63][Module]<< !_PrimitiveShared @ >>",
			L"[64][Module]<< !_PrimitiveTypeOnly ( lri:_LongType @ ) >>",
			L"[65][Module]<< !_PrimitiveTypeOnly @ ( lri:_LongType ) >>",
			L"[66][Module]<< !_PrimitiveTypeOnly @ >>",
		};
		return results[index];
	}

	const wchar_t* ModuleParserSwitchName(vl::vint index)
	{
		return nullptr;
	}

	ModuleParser::ModuleParser()
		: vl::glr::ParserBase<PrefixSubset3Tokens, ModuleParserStates, PrefixSubset3AstInsReceiver>(&PrefixSubset3TokenDeleter, &PrefixSubset3LexerData, &PrefixSubset3ModuleParserData)
	{
	};

	vl::vint32_t ModuleParser::FindCommonBaseClass(vl::vint32_t class1, vl::vint32_t class2) const
	{
		static vl::vint32_t results[10][10] = {
			{0, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 1, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 2, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 3, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 4, 8, 8, 8, 8, 8, },
			{8, 8, 8, 7, 8, 5, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 6, 8, 8, 8, },
			{8, 8, 8, 7, 8, 7, 8, 7, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, },
			{8, 8, 8, 8, 8, 8, 8, 8, 8, 9, },
		};
		return vl::glr::AssemblerFindCommonBaseClass(class1, class2, results);
	};

	vl::Ptr<prefixsubset3::TypeOrExpr> ModuleParser::ParseModule(const vl::WString& input, vl::vint codeIndex) const
	{
		 return ParseWithString<prefixsubset3::TypeOrExpr, ModuleParserStates::Module>(input, this, codeIndex);
	};

	vl::Ptr<prefixsubset3::TypeOrExpr> ModuleParser::ParseModule(vl::collections::List<vl::regex::RegexToken>& tokens, vl::vint codeIndex) const
	{
		 return ParseWithTokens<prefixsubset3::TypeOrExpr, ModuleParserStates::Module>(tokens, this, codeIndex);
	};
}
